shadow$provide.module$node_modules$viem$_cjs$utils$transaction$serializeTransaction=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.serializeTransaction=void 0;const transaction_js_1=require("module$node_modules$viem$_cjs$errors$transaction"),concat_js_1=require("module$node_modules$viem$_cjs$utils$data$concat"),trim_js_1=require("module$node_modules$viem$_cjs$utils$data$trim"),toHex_js_1=require("module$node_modules$viem$_cjs$utils$encoding$toHex"),
toRlp_js_1=require("module$node_modules$viem$_cjs$utils$encoding$toRlp"),assertTransaction_js_1=require("module$node_modules$viem$_cjs$utils$transaction$assertTransaction"),getTransactionType_js_1=require("module$node_modules$viem$_cjs$utils$transaction$getTransactionType"),serializeAccessList_js_1=require("module$node_modules$viem$_cjs$utils$transaction$serializeAccessList");exports.serializeTransaction=function(transaction,signature){var type=(0,getTransactionType_js_1.getTransactionType)(transaction);
if("eip1559"===type){const {chainId,gas,nonce,to,value,maxFeePerGas,maxPriorityFeePerGas,accessList,data}=transaction;(0,assertTransaction_js_1.assertTransactionEIP1559)(transaction);transaction=(0,serializeAccessList_js_1.serializeAccessList)(accessList);transaction=[(0,toHex_js_1.toHex)(chainId),nonce?(0,toHex_js_1.toHex)(nonce):"0x",maxPriorityFeePerGas?(0,toHex_js_1.toHex)(maxPriorityFeePerGas):"0x",maxFeePerGas?(0,toHex_js_1.toHex)(maxFeePerGas):"0x",gas?(0,toHex_js_1.toHex)(gas):"0x",to??"0x",
value?(0,toHex_js_1.toHex)(value):"0x",data??"0x",transaction];signature&&transaction.push(27n===signature.v?"0x":(0,toHex_js_1.toHex)(1),(0,trim_js_1.trim)(signature.r),(0,trim_js_1.trim)(signature.s));return(0,concat_js_1.concatHex)(["0x02",(0,toRlp_js_1.toRlp)(transaction)])}if("eip2930"===type){const {chainId,gas,data,nonce,to,value,accessList,gasPrice}=transaction;(0,assertTransaction_js_1.assertTransactionEIP2930)(transaction);transaction=(0,serializeAccessList_js_1.serializeAccessList)(accessList);
transaction=[(0,toHex_js_1.toHex)(chainId),nonce?(0,toHex_js_1.toHex)(nonce):"0x",gasPrice?(0,toHex_js_1.toHex)(gasPrice):"0x",gas?(0,toHex_js_1.toHex)(gas):"0x",to??"0x",value?(0,toHex_js_1.toHex)(value):"0x",data??"0x",transaction];signature&&transaction.push(27n===signature.v?"0x":(0,toHex_js_1.toHex)(1),signature.r,signature.s);return(0,concat_js_1.concatHex)(["0x01",(0,toRlp_js_1.toRlp)(transaction)])}const {chainId:chainId$jscomp$0=0,gas:gas$jscomp$0,data:data$jscomp$0,nonce:nonce$jscomp$0,
to:to$jscomp$0,value:value$jscomp$0,gasPrice:gasPrice$jscomp$0}=transaction;(0,assertTransaction_js_1.assertTransactionLegacy)(transaction);transaction=[nonce$jscomp$0?(0,toHex_js_1.toHex)(nonce$jscomp$0):"0x",gasPrice$jscomp$0?(0,toHex_js_1.toHex)(gasPrice$jscomp$0):"0x",gas$jscomp$0?(0,toHex_js_1.toHex)(gas$jscomp$0):"0x",to$jscomp$0??"0x",value$jscomp$0?(0,toHex_js_1.toHex)(value$jscomp$0):"0x",data$jscomp$0??"0x"];if(signature){type=27n+(27n===signature.v?0n:1n);if(0<chainId$jscomp$0)type=BigInt(2*
chainId$jscomp$0)+BigInt(35n+signature.v-27n);else if(signature.v!==type)throw new transaction_js_1.InvalidLegacyVError({v:signature.v});transaction=[...transaction,(0,toHex_js_1.toHex)(type),signature.r,signature.s]}else 0<chainId$jscomp$0&&(transaction=[...transaction,(0,toHex_js_1.toHex)(chainId$jscomp$0),"0x","0x"]);return(0,toRlp_js_1.toRlp)(transaction)}}
//# sourceMappingURL=module$node_modules$viem$_cjs$utils$transaction$serializeTransaction.js.map
