["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/viem/_cjs/actions/public/estimateMaxPriorityFeePerGas.js"],"~:js","shadow$provide.module$node_modules$viem$_cjs$actions$public$estimateMaxPriorityFeePerGas=function(global,require,module,exports){async function internal_estimateMaxPriorityFeePerGas(client,args){const {block:block_,chain=client.chain,request}=args||{};if(\"function\"===typeof chain?.fees?.defaultPriorityFee)return args=block_||await (0,getBlock_js_1.getBlock)(client),chain.fees.defaultPriorityFee({block:args,client,request});if(chain?.fees?.defaultPriorityFee)return chain?.fees?.defaultPriorityFee;\ntry{const maxPriorityFeePerGasHex=await client.request({method:\"eth_maxPriorityFeePerGas\"});return(0,fromHex_js_1.hexToBigInt)(maxPriorityFeePerGasHex)}catch{const [block,gasPrice]=await Promise.all([block_?Promise.resolve(block_):(0,getBlock_js_1.getBlock)(client),(0,getGasPrice_js_1.getGasPrice)(client)]);if(\"bigint\"!==typeof block.baseFeePerGas)throw new fee_js_1.Eip1559FeesNotSupportedError;client=gasPrice-block.baseFeePerGas;return 0n>client?0n:client}}Object.defineProperty(exports,\"__esModule\",\n{value:!0});exports.internal_estimateMaxPriorityFeePerGas=exports.estimateMaxPriorityFeePerGas=void 0;const fee_js_1=require(\"module$node_modules$viem$_cjs$errors$fee\"),fromHex_js_1=require(\"module$node_modules$viem$_cjs$utils$encoding$fromHex\"),getBlock_js_1=require(\"module$node_modules$viem$_cjs$actions$public$getBlock\"),getGasPrice_js_1=require(\"module$node_modules$viem$_cjs$actions$public$getGasPrice\");exports.estimateMaxPriorityFeePerGas=async function(client,args){return internal_estimateMaxPriorityFeePerGas(client,\nargs)};exports.internal_estimateMaxPriorityFeePerGas=internal_estimateMaxPriorityFeePerGas}","~:source","shadow$provide[\"module$node_modules$viem$_cjs$actions$public$estimateMaxPriorityFeePerGas\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.internal_estimateMaxPriorityFeePerGas = exports.estimateMaxPriorityFeePerGas = void 0;\nconst fee_js_1 = require(\"../../errors/fee.js\");\nconst fromHex_js_1 = require(\"../../utils/encoding/fromHex.js\");\nconst getBlock_js_1 = require(\"./getBlock.js\");\nconst getGasPrice_js_1 = require(\"./getGasPrice.js\");\nasync function estimateMaxPriorityFeePerGas(client, args) {\n    return internal_estimateMaxPriorityFeePerGas(client, args);\n}\nexports.estimateMaxPriorityFeePerGas = estimateMaxPriorityFeePerGas;\nasync function internal_estimateMaxPriorityFeePerGas(client, args) {\n    const { block: block_, chain = client.chain, request } = args || {};\n    if (typeof chain?.fees?.defaultPriorityFee === 'function') {\n        const block = block_ || (await (0, getBlock_js_1.getBlock)(client));\n        return chain.fees.defaultPriorityFee({\n            block,\n            client,\n            request,\n        });\n    }\n    else if (chain?.fees?.defaultPriorityFee)\n        return chain?.fees?.defaultPriorityFee;\n    try {\n        const maxPriorityFeePerGasHex = await client.request({\n            method: 'eth_maxPriorityFeePerGas',\n        });\n        return (0, fromHex_js_1.hexToBigInt)(maxPriorityFeePerGasHex);\n    }\n    catch {\n        const [block, gasPrice] = await Promise.all([\n            block_ ? Promise.resolve(block_) : (0, getBlock_js_1.getBlock)(client),\n            (0, getGasPrice_js_1.getGasPrice)(client),\n        ]);\n        if (typeof block.baseFeePerGas !== 'bigint')\n            throw new fee_js_1.Eip1559FeesNotSupportedError();\n        const maxPriorityFeePerGas = gasPrice - block.baseFeePerGas;\n        if (maxPriorityFeePerGas < 0n)\n            return 0n;\n        return maxPriorityFeePerGas;\n    }\n}\nexports.internal_estimateMaxPriorityFeePerGas = internal_estimateMaxPriorityFeePerGas;\n//# sourceMappingURL=estimateMaxPriorityFeePerGas.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$viem$_cjs$errors$fee","~$module$node_modules$viem$_cjs$actions$public$getBlock","~$shadow.js","~$module$node_modules$viem$_cjs$utils$encoding$fromHex","~$module$node_modules$viem$_cjs$actions$public$getGasPrice"]],"~:properties",["^5",["estimateMaxPriorityFeePerGas","method","__esModule","block","value","request","internal_estimateMaxPriorityFeePerGas","client"]],"~:compiled-at",1695111490254,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$viem$_cjs$actions$public$estimateMaxPriorityFeePerGas.js\",\n\"lineCount\":4,\n\"mappings\":\"AAAAA,cAAA,CAAA,yEAAA,CAA8F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYtIC,cAAeA,sCAAqC,CAACC,MAAD,CAASC,IAAT,CAAe,CAC/D,MAAM,CAAE,MAAOC,MAAT,CAAiBC,KAAA,CAAQH,MAAOG,CAAAA,KAAhC,CAAuCC,OAAvC,CAAA,CAAmDH,IAAnD,EAA2D,EACjE,IAA+C,UAA/C,GAAI,MAAOE,MAAOE,EAAAA,IAAMC,EAAAA,kBAAxB,CAEI,MADMC,KACC,CADOL,MACP,EADkB,MAAM,GAAIM,aAAcC,CAAAA,QAAlB,EAA4BT,MAA5B,CACxB,CAAAG,KAAME,CAAAA,IAAKC,CAAAA,kBAAX,CAA8B,CACjCC,MAAAA,IADiC,CAEjCP,MAFiC,CAGjCI,OAHiC,CAA9B,CAMN,IAAID,KAAOE,EAAAA,IAAMC,EAAAA,kBAAjB,CACD,MAAOH,MAAOE,EAAAA,IAAMC,EAAAA,kBACxB;GAAI,CACA,MAAMI,wBAA0B,MAAMV,MAAOI,CAAAA,OAAP,CAAe,CACjDO,OAAQ,0BADyC,CAAf,CAGtC,OAAO,GAAIC,YAAaC,CAAAA,WAAjB,EAA8BH,uBAA9B,CAJP,CAMJ,KAAM,CACF,MAAM,CAACH,KAAD,CAAQO,QAAR,CAAA,CAAoB,MAAMC,OAAQC,CAAAA,GAAR,CAAY,CACxCd,MAAA,CAASa,OAAQE,CAAAA,OAAR,CAAgBf,MAAhB,CAAT,CAAmC,GAAIM,aAAcC,CAAAA,QAAlB,EAA4BT,MAA5B,CADK,CAExC,GAAIkB,gBAAiBC,CAAAA,WAArB,EAAkCnB,MAAlC,CAFwC,CAAZ,CAIhC,IAAmC,QAAnC,GAAI,MAAOO,MAAMa,CAAAA,aAAjB,CACI,KAAM,KAAIC,QAASC,CAAAA,4BAAnB,CACEC,MAAAA,CAAuBT,QAAvBS,CAAkChB,KAAMa,CAAAA,aAC9C,OAA2B,GAA3B,CAAIG,MAAJ,CACW,EADX,CAEOA,MAVL,CAlByD,CAVnEC,MAAOC,CAAAA,cAAP,CAAsB3B,OAAtB,CAA+B,YAA/B;AAA6C,CAAE4B,MAAO,CAAA,CAAT,CAA7C,CACA5B,QAAQC,CAAAA,qCAAR,CAAgDD,OAAQ6B,CAAAA,4BAAxD,CAAuF,IAAK,EAC5F,OAAMN,SAAWzB,OAAA,CAAQ,0CAAR,CAAjB,CACMgB,aAAehB,OAAA,CAAQ,sDAAR,CADrB,CAEMY,cAAgBZ,OAAA,CAAQ,uDAAR,CAFtB,CAGMsB,iBAAmBtB,OAAA,CAAQ,0DAAR,CAIzBE,QAAQ6B,CAAAA,4BAAR,CAHAA,cAA2C,CAAC3B,MAAD,CAASC,IAAT,CAAe,CACtD,MAAOF,sCAAA,CAAsCC,MAAtC;AAA8CC,IAA9C,CAD+C,CAmC1DH,QAAQC,CAAAA,qCAAR,CAAgDA,qCA3CsF;\",\n\"sources\":[\"node_modules/viem/_cjs/actions/public/estimateMaxPriorityFeePerGas.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$viem$_cjs$actions$public$estimateMaxPriorityFeePerGas\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.internal_estimateMaxPriorityFeePerGas = exports.estimateMaxPriorityFeePerGas = void 0;\\nconst fee_js_1 = require(\\\"../../errors/fee.js\\\");\\nconst fromHex_js_1 = require(\\\"../../utils/encoding/fromHex.js\\\");\\nconst getBlock_js_1 = require(\\\"./getBlock.js\\\");\\nconst getGasPrice_js_1 = require(\\\"./getGasPrice.js\\\");\\nasync function estimateMaxPriorityFeePerGas(client, args) {\\n    return internal_estimateMaxPriorityFeePerGas(client, args);\\n}\\nexports.estimateMaxPriorityFeePerGas = estimateMaxPriorityFeePerGas;\\nasync function internal_estimateMaxPriorityFeePerGas(client, args) {\\n    const { block: block_, chain = client.chain, request } = args || {};\\n    if (typeof chain?.fees?.defaultPriorityFee === 'function') {\\n        const block = block_ || (await (0, getBlock_js_1.getBlock)(client));\\n        return chain.fees.defaultPriorityFee({\\n            block,\\n            client,\\n            request,\\n        });\\n    }\\n    else if (chain?.fees?.defaultPriorityFee)\\n        return chain?.fees?.defaultPriorityFee;\\n    try {\\n        const maxPriorityFeePerGasHex = await client.request({\\n            method: 'eth_maxPriorityFeePerGas',\\n        });\\n        return (0, fromHex_js_1.hexToBigInt)(maxPriorityFeePerGasHex);\\n    }\\n    catch {\\n        const [block, gasPrice] = await Promise.all([\\n            block_ ? Promise.resolve(block_) : (0, getBlock_js_1.getBlock)(client),\\n            (0, getGasPrice_js_1.getGasPrice)(client),\\n        ]);\\n        if (typeof block.baseFeePerGas !== 'bigint')\\n            throw new fee_js_1.Eip1559FeesNotSupportedError();\\n        const maxPriorityFeePerGas = gasPrice - block.baseFeePerGas;\\n        if (maxPriorityFeePerGas < 0n)\\n            return 0n;\\n        return maxPriorityFeePerGas;\\n    }\\n}\\nexports.internal_estimateMaxPriorityFeePerGas = internal_estimateMaxPriorityFeePerGas;\\n//# sourceMappingURL=estimateMaxPriorityFeePerGas.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"internal_estimateMaxPriorityFeePerGas\",\"client\",\"args\",\"block_\",\"chain\",\"request\",\"fees\",\"defaultPriorityFee\",\"block\",\"getBlock_js_1\",\"getBlock\",\"maxPriorityFeePerGasHex\",\"method\",\"fromHex_js_1\",\"hexToBigInt\",\"gasPrice\",\"Promise\",\"all\",\"resolve\",\"getGasPrice_js_1\",\"getGasPrice\",\"baseFeePerGas\",\"fee_js_1\",\"Eip1559FeesNotSupportedError\",\"maxPriorityFeePerGas\",\"Object\",\"defineProperty\",\"value\",\"estimateMaxPriorityFeePerGas\"]\n}\n"]