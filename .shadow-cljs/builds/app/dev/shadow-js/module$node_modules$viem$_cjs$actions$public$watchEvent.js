["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/viem/_cjs/actions/public/watchEvent.js"],"~:js","shadow$provide.module$node_modules$viem$_cjs$actions$public$watchEvent=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.watchEvent=void 0;const observe_js_1=require(\"module$node_modules$viem$_cjs$utils$observe\"),poll_js_1=require(\"module$node_modules$viem$_cjs$utils$poll\"),stringify_js_1=require(\"module$node_modules$viem$_cjs$utils$stringify\"),abi_js_1=require(\"module$node_modules$viem$_cjs$errors$abi\"),rpc_js_1=require(\"module$node_modules$viem$_cjs$errors$rpc\"),\nindex_js_1=require(\"module$node_modules$viem$_cjs$utils$index\"),createEventFilter_js_1=require(\"module$node_modules$viem$_cjs$actions$public$createEventFilter\"),getBlockNumber_js_1=require(\"module$node_modules$viem$_cjs$actions$public$getBlockNumber\"),getFilterChanges_js_1=require(\"module$node_modules$viem$_cjs$actions$public$getFilterChanges\"),getLogs_js_1=require(\"module$node_modules$viem$_cjs$actions$public$getLogs\"),uninstallFilter_js_1=require(\"module$node_modules$viem$_cjs$actions$public$uninstallFilter\");\nexports.watchEvent=function(client,{address,args:args$jscomp$0,batch=!0,event:event$jscomp$0,events,onError,onLogs,poll:poll_,pollingInterval=client.pollingInterval,strict:strict_}){const strict=strict_??!1,pollEvent=()=>{const observerId=(0,stringify_js_1.stringify)([\"watchEvent\",address,args$jscomp$0,batch,client.uid,event$jscomp$0,pollingInterval]);return(0,observe_js_1.observe)(observerId,{onLogs,onError},emit=>{let previousBlockNumber,filter,initialized=!1;const unwatch=(0,poll_js_1.poll)(async()=>\n{if(initialized)try{let logs;if(filter)logs=await (0,getFilterChanges_js_1.getFilterChanges)(client,{filter});else{const blockNumber=await (0,getBlockNumber_js_1.getBlockNumber)(client);logs=previousBlockNumber&&previousBlockNumber!==blockNumber?await (0,getLogs_js_1.getLogs)(client,{address,args:args$jscomp$0,event:event$jscomp$0,events,fromBlock:previousBlockNumber+1n,toBlock:blockNumber}):[];previousBlockNumber=blockNumber}if(0!==logs.length)if(batch)emit.onLogs(logs);else logs.forEach(log=>emit.onLogs([log]))}catch(err){filter&&\nerr instanceof rpc_js_1.InvalidInputRpcError&&(initialized=!1),emit.onError?.(err)}else{try{filter=await (0,createEventFilter_js_1.createEventFilter)(client,{address,args:args$jscomp$0,event:event$jscomp$0,events,strict})}catch{}initialized=!0}},{emitOnBegin:!0,interval:pollingInterval});return async()=>{filter&&await (0,uninstallFilter_js_1.uninstallFilter)(client,{filter});unwatch()}})},subscribeEvent=()=>{let active=!0,unsubscribe=()=>active=!1;(async()=>{try{const events_=events??(event$jscomp$0?\n[event$jscomp$0]:void 0);let topics=[];events_&&(topics=[events_.flatMap(event=>(0,index_js_1.encodeEventTopics)({abi:[event],eventName:event.name,args:args$jscomp$0}))],event$jscomp$0&&(topics=topics[0]));const {unsubscribe:unsubscribe_}=await client.transport.subscribe({params:[\"logs\",{address,topics}],onData(data){if(active){data=data.result;try{const {eventName,args}=(0,index_js_1.decodeEventLog)({abi:events_,data:data.data,topics:data.topics,strict});var formatted=(0,index_js_1.formatLog)(data,\n{args,eventName});onLogs([formatted])}catch(err){let eventName,isUnnamed;if(err instanceof abi_js_1.DecodeLogDataMismatch||err instanceof abi_js_1.DecodeLogTopicsMismatch){if(strict_)return;eventName=err.abiItem.name;isUnnamed=err.abiItem.inputs?.some(x=>!(\"name\"in x&&x.name))}formatted=(0,index_js_1.formatLog)(data,{args:isUnnamed?[]:{},eventName});onLogs([formatted])}}},onError(error){onError?.(error)}});unsubscribe=unsubscribe_;active||unsubscribe()}catch(err){onError?.(err)}})();return unsubscribe};\nreturn(\"undefined\"!==typeof poll_?poll_:\"webSocket\"!==client.transport.type)?pollEvent():subscribeEvent()}}","~:source","shadow$provide[\"module$node_modules$viem$_cjs$actions$public$watchEvent\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.watchEvent = void 0;\nconst observe_js_1 = require(\"../../utils/observe.js\");\nconst poll_js_1 = require(\"../../utils/poll.js\");\nconst stringify_js_1 = require(\"../../utils/stringify.js\");\nconst abi_js_1 = require(\"../../errors/abi.js\");\nconst rpc_js_1 = require(\"../../errors/rpc.js\");\nconst index_js_1 = require(\"../../utils/index.js\");\nconst createEventFilter_js_1 = require(\"./createEventFilter.js\");\nconst getBlockNumber_js_1 = require(\"./getBlockNumber.js\");\nconst getFilterChanges_js_1 = require(\"./getFilterChanges.js\");\nconst getLogs_js_1 = require(\"./getLogs.js\");\nconst uninstallFilter_js_1 = require(\"./uninstallFilter.js\");\nfunction watchEvent(client, { address, args, batch = true, event, events, onError, onLogs, poll: poll_, pollingInterval = client.pollingInterval, strict: strict_, }) {\n    const enablePolling = typeof poll_ !== 'undefined' ? poll_ : client.transport.type !== 'webSocket';\n    const strict = strict_ ?? false;\n    const pollEvent = () => {\n        const observerId = (0, stringify_js_1.stringify)([\n            'watchEvent',\n            address,\n            args,\n            batch,\n            client.uid,\n            event,\n            pollingInterval,\n        ]);\n        return (0, observe_js_1.observe)(observerId, { onLogs, onError }, (emit) => {\n            let previousBlockNumber;\n            let filter;\n            let initialized = false;\n            const unwatch = (0, poll_js_1.poll)(async () => {\n                if (!initialized) {\n                    try {\n                        filter = (await (0, createEventFilter_js_1.createEventFilter)(client, {\n                            address,\n                            args,\n                            event: event,\n                            events,\n                            strict,\n                        }));\n                    }\n                    catch { }\n                    initialized = true;\n                    return;\n                }\n                try {\n                    let logs;\n                    if (filter) {\n                        logs = await (0, getFilterChanges_js_1.getFilterChanges)(client, { filter });\n                    }\n                    else {\n                        const blockNumber = await (0, getBlockNumber_js_1.getBlockNumber)(client);\n                        if (previousBlockNumber && previousBlockNumber !== blockNumber) {\n                            logs = await (0, getLogs_js_1.getLogs)(client, {\n                                address,\n                                args,\n                                event: event,\n                                events,\n                                fromBlock: previousBlockNumber + 1n,\n                                toBlock: blockNumber,\n                            });\n                        }\n                        else {\n                            logs = [];\n                        }\n                        previousBlockNumber = blockNumber;\n                    }\n                    if (logs.length === 0)\n                        return;\n                    if (batch)\n                        emit.onLogs(logs);\n                    else\n                        logs.forEach((log) => emit.onLogs([log]));\n                }\n                catch (err) {\n                    if (filter && err instanceof rpc_js_1.InvalidInputRpcError)\n                        initialized = false;\n                    emit.onError?.(err);\n                }\n            }, {\n                emitOnBegin: true,\n                interval: pollingInterval,\n            });\n            return async () => {\n                if (filter)\n                    await (0, uninstallFilter_js_1.uninstallFilter)(client, { filter });\n                unwatch();\n            };\n        });\n    };\n    const subscribeEvent = () => {\n        let active = true;\n        let unsubscribe = () => (active = false);\n        (async () => {\n            try {\n                const events_ = events ?? (event ? [event] : undefined);\n                let topics = [];\n                if (events_) {\n                    topics = [\n                        events_.flatMap((event) => (0, index_js_1.encodeEventTopics)({\n                            abi: [event],\n                            eventName: event.name,\n                            args,\n                        })),\n                    ];\n                    if (event)\n                        topics = topics[0];\n                }\n                const { unsubscribe: unsubscribe_ } = await client.transport.subscribe({\n                    params: ['logs', { address, topics }],\n                    onData(data) {\n                        if (!active)\n                            return;\n                        const log = data.result;\n                        try {\n                            const { eventName, args } = (0, index_js_1.decodeEventLog)({\n                                abi: events_,\n                                data: log.data,\n                                topics: log.topics,\n                                strict,\n                            });\n                            const formatted = (0, index_js_1.formatLog)(log, {\n                                args,\n                                eventName: eventName,\n                            });\n                            onLogs([formatted]);\n                        }\n                        catch (err) {\n                            let eventName;\n                            let isUnnamed;\n                            if (err instanceof abi_js_1.DecodeLogDataMismatch ||\n                                err instanceof abi_js_1.DecodeLogTopicsMismatch) {\n                                if (strict_)\n                                    return;\n                                eventName = err.abiItem.name;\n                                isUnnamed = err.abiItem.inputs?.some((x) => !('name' in x && x.name));\n                            }\n                            const formatted = (0, index_js_1.formatLog)(log, {\n                                args: isUnnamed ? [] : {},\n                                eventName,\n                            });\n                            onLogs([formatted]);\n                        }\n                    },\n                    onError(error) {\n                        onError?.(error);\n                    },\n                });\n                unsubscribe = unsubscribe_;\n                if (!active)\n                    unsubscribe();\n            }\n            catch (err) {\n                onError?.(err);\n            }\n        })();\n        return unsubscribe;\n    };\n    return enablePolling ? pollEvent() : subscribeEvent();\n}\nexports.watchEvent = watchEvent;\n//# sourceMappingURL=watchEvent.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$viem$_cjs$actions$public$uninstallFilter","~$module$node_modules$viem$_cjs$actions$public$createEventFilter","~$shadow.js","~$module$node_modules$viem$_cjs$utils$stringify","~$module$node_modules$viem$_cjs$utils$observe","~$module$node_modules$viem$_cjs$actions$public$getFilterChanges","~$module$node_modules$viem$_cjs$errors$abi","~$module$node_modules$viem$_cjs$actions$public$getLogs","~$module$node_modules$viem$_cjs$actions$public$getBlockNumber","~$module$node_modules$viem$_cjs$errors$rpc","~$module$node_modules$viem$_cjs$utils$index","~$module$node_modules$viem$_cjs$utils$poll"]],"~:properties",["^5",["topics","abi","params","args","__esModule","onError","toBlock","event","emitOnBegin","eventName","fromBlock","value","interval","address","filter","events","watchEvent","onLogs","strict","data"]],"~:compiled-at",1695111490355,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$viem$_cjs$actions$public$watchEvent.js\",\n\"lineCount\":8,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/viem/_cjs/actions/public/watchEvent.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$viem$_cjs$actions$public$watchEvent\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.watchEvent = void 0;\\nconst observe_js_1 = require(\\\"../../utils/observe.js\\\");\\nconst poll_js_1 = require(\\\"../../utils/poll.js\\\");\\nconst stringify_js_1 = require(\\\"../../utils/stringify.js\\\");\\nconst abi_js_1 = require(\\\"../../errors/abi.js\\\");\\nconst rpc_js_1 = require(\\\"../../errors/rpc.js\\\");\\nconst index_js_1 = require(\\\"../../utils/index.js\\\");\\nconst createEventFilter_js_1 = require(\\\"./createEventFilter.js\\\");\\nconst getBlockNumber_js_1 = require(\\\"./getBlockNumber.js\\\");\\nconst getFilterChanges_js_1 = require(\\\"./getFilterChanges.js\\\");\\nconst getLogs_js_1 = require(\\\"./getLogs.js\\\");\\nconst uninstallFilter_js_1 = require(\\\"./uninstallFilter.js\\\");\\nfunction watchEvent(client, { address, args, batch = true, event, events, onError, onLogs, poll: poll_, pollingInterval = client.pollingInterval, strict: strict_, }) {\\n    const enablePolling = typeof poll_ !== 'undefined' ? poll_ : client.transport.type !== 'webSocket';\\n    const strict = strict_ ?? false;\\n    const pollEvent = () => {\\n        const observerId = (0, stringify_js_1.stringify)([\\n            'watchEvent',\\n            address,\\n            args,\\n            batch,\\n            client.uid,\\n            event,\\n            pollingInterval,\\n        ]);\\n        return (0, observe_js_1.observe)(observerId, { onLogs, onError }, (emit) => {\\n            let previousBlockNumber;\\n            let filter;\\n            let initialized = false;\\n            const unwatch = (0, poll_js_1.poll)(async () => {\\n                if (!initialized) {\\n                    try {\\n                        filter = (await (0, createEventFilter_js_1.createEventFilter)(client, {\\n                            address,\\n                            args,\\n                            event: event,\\n                            events,\\n                            strict,\\n                        }));\\n                    }\\n                    catch { }\\n                    initialized = true;\\n                    return;\\n                }\\n                try {\\n                    let logs;\\n                    if (filter) {\\n                        logs = await (0, getFilterChanges_js_1.getFilterChanges)(client, { filter });\\n                    }\\n                    else {\\n                        const blockNumber = await (0, getBlockNumber_js_1.getBlockNumber)(client);\\n                        if (previousBlockNumber && previousBlockNumber !== blockNumber) {\\n                            logs = await (0, getLogs_js_1.getLogs)(client, {\\n                                address,\\n                                args,\\n                                event: event,\\n                                events,\\n                                fromBlock: previousBlockNumber + 1n,\\n                                toBlock: blockNumber,\\n                            });\\n                        }\\n                        else {\\n                            logs = [];\\n                        }\\n                        previousBlockNumber = blockNumber;\\n                    }\\n                    if (logs.length === 0)\\n                        return;\\n                    if (batch)\\n                        emit.onLogs(logs);\\n                    else\\n                        logs.forEach((log) => emit.onLogs([log]));\\n                }\\n                catch (err) {\\n                    if (filter && err instanceof rpc_js_1.InvalidInputRpcError)\\n                        initialized = false;\\n                    emit.onError?.(err);\\n                }\\n            }, {\\n                emitOnBegin: true,\\n                interval: pollingInterval,\\n            });\\n            return async () => {\\n                if (filter)\\n                    await (0, uninstallFilter_js_1.uninstallFilter)(client, { filter });\\n                unwatch();\\n            };\\n        });\\n    };\\n    const subscribeEvent = () => {\\n        let active = true;\\n        let unsubscribe = () => (active = false);\\n        (async () => {\\n            try {\\n                const events_ = events ?? (event ? [event] : undefined);\\n                let topics = [];\\n                if (events_) {\\n                    topics = [\\n                        events_.flatMap((event) => (0, index_js_1.encodeEventTopics)({\\n                            abi: [event],\\n                            eventName: event.name,\\n                            args,\\n                        })),\\n                    ];\\n                    if (event)\\n                        topics = topics[0];\\n                }\\n                const { unsubscribe: unsubscribe_ } = await client.transport.subscribe({\\n                    params: ['logs', { address, topics }],\\n                    onData(data) {\\n                        if (!active)\\n                            return;\\n                        const log = data.result;\\n                        try {\\n                            const { eventName, args } = (0, index_js_1.decodeEventLog)({\\n                                abi: events_,\\n                                data: log.data,\\n                                topics: log.topics,\\n                                strict,\\n                            });\\n                            const formatted = (0, index_js_1.formatLog)(log, {\\n                                args,\\n                                eventName: eventName,\\n                            });\\n                            onLogs([formatted]);\\n                        }\\n                        catch (err) {\\n                            let eventName;\\n                            let isUnnamed;\\n                            if (err instanceof abi_js_1.DecodeLogDataMismatch ||\\n                                err instanceof abi_js_1.DecodeLogTopicsMismatch) {\\n                                if (strict_)\\n                                    return;\\n                                eventName = err.abiItem.name;\\n                                isUnnamed = err.abiItem.inputs?.some((x) => !('name' in x && x.name));\\n                            }\\n                            const formatted = (0, index_js_1.formatLog)(log, {\\n                                args: isUnnamed ? [] : {},\\n                                eventName,\\n                            });\\n                            onLogs([formatted]);\\n                        }\\n                    },\\n                    onError(error) {\\n                        onError?.(error);\\n                    },\\n                });\\n                unsubscribe = unsubscribe_;\\n                if (!active)\\n                    unsubscribe();\\n            }\\n            catch (err) {\\n                onError?.(err);\\n            }\\n        })();\\n        return unsubscribe;\\n    };\\n    return enablePolling ? pollEvent() : subscribeEvent();\\n}\\nexports.watchEvent = watchEvent;\\n//# sourceMappingURL=watchEvent.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"watchEvent\",\"observe_js_1\",\"poll_js_1\",\"stringify_js_1\",\"abi_js_1\",\"rpc_js_1\",\"index_js_1\",\"createEventFilter_js_1\",\"getBlockNumber_js_1\",\"getFilterChanges_js_1\",\"getLogs_js_1\",\"uninstallFilter_js_1\",\"client\",\"address\",\"args\",\"batch\",\"event\",\"events\",\"onError\",\"onLogs\",\"poll_\",\"pollingInterval\",\"strict_\",\"strict\",\"pollEvent\",\"observerId\",\"stringify\",\"uid\",\"observe\",\"emit\",\"previousBlockNumber\",\"filter\",\"initialized\",\"unwatch\",\"poll\",\"logs\",\"getFilterChanges\",\"blockNumber\",\"getBlockNumber\",\"getLogs\",\"fromBlock\",\"toBlock\",\"length\",\"forEach\",\"log\",\"err\",\"InvalidInputRpcError\",\"createEventFilter\",\"emitOnBegin\",\"interval\",\"uninstallFilter\",\"subscribeEvent\",\"active\",\"unsubscribe\",\"events_\",\"undefined\",\"topics\",\"flatMap\",\"encodeEventTopics\",\"abi\",\"eventName\",\"name\",\"unsubscribe_\",\"transport\",\"subscribe\",\"params\",\"onData\",\"data\",\"result\",\"decodeEventLog\",\"formatted\",\"formatLog\",\"isUnnamed\",\"DecodeLogDataMismatch\",\"DecodeLogTopicsMismatch\",\"abiItem\",\"inputs\",\"some\",\"x\",\"error\",\"enablePolling\",\"type\"]\n}\n"]