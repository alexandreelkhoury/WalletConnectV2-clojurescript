["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/viem/_cjs/constants/number.js"],"~:js","shadow$provide.module$node_modules$viem$_cjs$constants$number=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.minInt144=exports.minInt136=exports.minInt128=exports.minInt120=exports.minInt112=exports.minInt104=exports.minInt96=exports.minInt88=exports.minInt80=exports.minInt72=exports.minInt64=exports.minInt56=exports.minInt48=exports.minInt40=exports.minInt32=exports.minInt24=exports.minInt16=exports.minInt8=exports.maxInt256=exports.maxInt248=\nexports.maxInt240=exports.maxInt232=exports.maxInt224=exports.maxInt216=exports.maxInt208=exports.maxInt200=exports.maxInt192=exports.maxInt184=exports.maxInt176=exports.maxInt168=exports.maxInt160=exports.maxInt152=exports.maxInt144=exports.maxInt136=exports.maxInt128=exports.maxInt120=exports.maxInt112=exports.maxInt104=exports.maxInt96=exports.maxInt88=exports.maxInt80=exports.maxInt72=exports.maxInt64=exports.maxInt56=exports.maxInt48=exports.maxInt40=exports.maxInt32=exports.maxInt24=exports.maxInt16=\nexports.maxInt8=void 0;exports.maxUint256=exports.maxUint248=exports.maxUint240=exports.maxUint232=exports.maxUint224=exports.maxUint216=exports.maxUint208=exports.maxUint200=exports.maxUint192=exports.maxUint184=exports.maxUint176=exports.maxUint168=exports.maxUint160=exports.maxUint152=exports.maxUint144=exports.maxUint136=exports.maxUint128=exports.maxUint120=exports.maxUint112=exports.maxUint104=exports.maxUint96=exports.maxUint88=exports.maxUint80=exports.maxUint72=exports.maxUint64=exports.maxUint56=\nexports.maxUint48=exports.maxUint40=exports.maxUint32=exports.maxUint24=exports.maxUint16=exports.maxUint8=exports.minInt256=exports.minInt248=exports.minInt240=exports.minInt232=exports.minInt224=exports.minInt216=exports.minInt208=exports.minInt200=exports.minInt192=exports.minInt184=exports.minInt176=exports.minInt168=exports.minInt160=exports.minInt152=void 0;exports.maxInt8=127n;exports.maxInt16=32767n;exports.maxInt24=8388607n;exports.maxInt32=2147483647n;exports.maxInt40=549755813887n;exports.maxInt48=\n140737488355327n;exports.maxInt56=36028797018963967n;exports.maxInt64=9223372036854775807n;exports.maxInt72=2361183241434822606847n;exports.maxInt80=604462909807314587353087n;exports.maxInt88=154742504910672534362390527n;exports.maxInt96=39614081257132168796771975167n;exports.maxInt104=10141204801825835211973625643007n;exports.maxInt112=2596148429267413814265248164610047n;exports.maxInt120=664613997892457936451903530140172287n;exports.maxInt128=170141183460469231731687303715884105727n;exports.maxInt136=\n43556142965880123323311949751266331066367n;exports.maxInt144=11150372599265311570767859136324180752990207n;exports.maxInt152=2854495385411919762116571938898990272765493247n;exports.maxInt160=730750818665451459101842416358141509827966271487n;exports.maxInt168=187072209578355573530071658587684226515959365500927n;exports.maxInt176=47890485652059026823698344598447161988085597568237567n;exports.maxInt184=12259964326927110866866776217202473468949912977468817407n;exports.maxInt192=3138550867693340381917894711603833208051177722232017256447n;\nexports.maxInt200=803469022129495137770981046170581301261101496891396417650687n;exports.maxInt208=205688069665150755269371147819668813122841983204197482918576127n;exports.maxInt216=52656145834278593348959013841835216159447547700274555627155488767n;exports.maxInt224=13479973333575319897333507543509815336818572211270286240551805124607n;exports.maxInt232=3450873173395281893717377931138512726225554486085193277581262111899647n;exports.maxInt240=883423532389192164791648750371459257913741948437809479060803100646309887n;\nexports.maxInt248=226156424291633194186662080095093570025917938800079226639565593765455331327n;exports.maxInt256=57896044618658097711785492504343953926634992332820282019728792003956564819967n;exports.minInt8=-128n;exports.minInt16=-32768n;exports.minInt24=-8388608n;exports.minInt32=-2147483648n;exports.minInt40=-549755813888n;exports.minInt48=-140737488355328n;exports.minInt56=-36028797018963968n;exports.minInt64=-9223372036854775808n;exports.minInt72=-2361183241434822606848n;exports.minInt80=-604462909807314587353088n;\nexports.minInt88=-154742504910672534362390528n;exports.minInt96=-39614081257132168796771975168n;exports.minInt104=-10141204801825835211973625643008n;exports.minInt112=-2596148429267413814265248164610048n;exports.minInt120=-664613997892457936451903530140172288n;exports.minInt128=-170141183460469231731687303715884105728n;exports.minInt136=-43556142965880123323311949751266331066368n;exports.minInt144=-11150372599265311570767859136324180752990208n;exports.minInt152=-2854495385411919762116571938898990272765493248n;\nexports.minInt160=-730750818665451459101842416358141509827966271488n;exports.minInt168=-187072209578355573530071658587684226515959365500928n;exports.minInt176=-47890485652059026823698344598447161988085597568237568n;exports.minInt184=-12259964326927110866866776217202473468949912977468817408n;exports.minInt192=-3138550867693340381917894711603833208051177722232017256448n;exports.minInt200=-803469022129495137770981046170581301261101496891396417650688n;exports.minInt208=-205688069665150755269371147819668813122841983204197482918576128n;\nexports.minInt216=-52656145834278593348959013841835216159447547700274555627155488768n;exports.minInt224=-13479973333575319897333507543509815336818572211270286240551805124608n;exports.minInt232=-3450873173395281893717377931138512726225554486085193277581262111899648n;exports.minInt240=-883423532389192164791648750371459257913741948437809479060803100646309888n;exports.minInt248=-226156424291633194186662080095093570025917938800079226639565593765455331328n;exports.minInt256=-57896044618658097711785492504343953926634992332820282019728792003956564819968n;\nexports.maxUint8=255n;exports.maxUint16=65535n;exports.maxUint24=16777215n;exports.maxUint32=4294967295n;exports.maxUint40=1099511627775n;exports.maxUint48=281474976710655n;exports.maxUint56=72057594037927935n;exports.maxUint64=18446744073709551615n;exports.maxUint72=4722366482869645213695n;exports.maxUint80=1208925819614629174706175n;exports.maxUint88=309485009821345068724781055n;exports.maxUint96=79228162514264337593543950335n;exports.maxUint104=20282409603651670423947251286015n;exports.maxUint112=\n5192296858534827628530496329220095n;exports.maxUint120=1329227995784915872903807060280344575n;exports.maxUint128=340282366920938463463374607431768211455n;exports.maxUint136=87112285931760246646623899502532662132735n;exports.maxUint144=22300745198530623141535718272648361505980415n;exports.maxUint152=5708990770823839524233143877797980545530986495n;exports.maxUint160=1461501637330902918203684832716283019655932542975n;exports.maxUint168=374144419156711147060143317175368453031918731001855n;exports.maxUint176=\n95780971304118053647396689196894323976171195136475135n;exports.maxUint184=24519928653854221733733552434404946937899825954937634815n;exports.maxUint192=6277101735386680763835789423207666416102355444464034512895n;exports.maxUint200=1606938044258990275541962092341162602522202993782792835301375n;exports.maxUint208=411376139330301510538742295639337626245683966408394965837152255n;exports.maxUint216=105312291668557186697918027683670432318895095400549111254310977535n;exports.maxUint224=26959946667150639794667015087019630673637144422540572481103610249215n;\nexports.maxUint232=6901746346790563787434755862277025452451108972170386555162524223799295n;exports.maxUint240=1766847064778384329583297500742918515827483896875618958121606201292619775n;exports.maxUint248=452312848583266388373324160190187140051835877600158453279131187530910662655n;exports.maxUint256=115792089237316195423570985008687907853269984665640564039457584007913129639935n}","~:source","shadow$provide[\"module$node_modules$viem$_cjs$constants$number\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.minInt144 = exports.minInt136 = exports.minInt128 = exports.minInt120 = exports.minInt112 = exports.minInt104 = exports.minInt96 = exports.minInt88 = exports.minInt80 = exports.minInt72 = exports.minInt64 = exports.minInt56 = exports.minInt48 = exports.minInt40 = exports.minInt32 = exports.minInt24 = exports.minInt16 = exports.minInt8 = exports.maxInt256 = exports.maxInt248 = exports.maxInt240 = exports.maxInt232 = exports.maxInt224 = exports.maxInt216 = exports.maxInt208 = exports.maxInt200 = exports.maxInt192 = exports.maxInt184 = exports.maxInt176 = exports.maxInt168 = exports.maxInt160 = exports.maxInt152 = exports.maxInt144 = exports.maxInt136 = exports.maxInt128 = exports.maxInt120 = exports.maxInt112 = exports.maxInt104 = exports.maxInt96 = exports.maxInt88 = exports.maxInt80 = exports.maxInt72 = exports.maxInt64 = exports.maxInt56 = exports.maxInt48 = exports.maxInt40 = exports.maxInt32 = exports.maxInt24 = exports.maxInt16 = exports.maxInt8 = void 0;\nexports.maxUint256 = exports.maxUint248 = exports.maxUint240 = exports.maxUint232 = exports.maxUint224 = exports.maxUint216 = exports.maxUint208 = exports.maxUint200 = exports.maxUint192 = exports.maxUint184 = exports.maxUint176 = exports.maxUint168 = exports.maxUint160 = exports.maxUint152 = exports.maxUint144 = exports.maxUint136 = exports.maxUint128 = exports.maxUint120 = exports.maxUint112 = exports.maxUint104 = exports.maxUint96 = exports.maxUint88 = exports.maxUint80 = exports.maxUint72 = exports.maxUint64 = exports.maxUint56 = exports.maxUint48 = exports.maxUint40 = exports.maxUint32 = exports.maxUint24 = exports.maxUint16 = exports.maxUint8 = exports.minInt256 = exports.minInt248 = exports.minInt240 = exports.minInt232 = exports.minInt224 = exports.minInt216 = exports.minInt208 = exports.minInt200 = exports.minInt192 = exports.minInt184 = exports.minInt176 = exports.minInt168 = exports.minInt160 = exports.minInt152 = void 0;\nexports.maxInt8 = 2n ** (8n - 1n) - 1n;\nexports.maxInt16 = 2n ** (16n - 1n) - 1n;\nexports.maxInt24 = 2n ** (24n - 1n) - 1n;\nexports.maxInt32 = 2n ** (32n - 1n) - 1n;\nexports.maxInt40 = 2n ** (40n - 1n) - 1n;\nexports.maxInt48 = 2n ** (48n - 1n) - 1n;\nexports.maxInt56 = 2n ** (56n - 1n) - 1n;\nexports.maxInt64 = 2n ** (64n - 1n) - 1n;\nexports.maxInt72 = 2n ** (72n - 1n) - 1n;\nexports.maxInt80 = 2n ** (80n - 1n) - 1n;\nexports.maxInt88 = 2n ** (88n - 1n) - 1n;\nexports.maxInt96 = 2n ** (96n - 1n) - 1n;\nexports.maxInt104 = 2n ** (104n - 1n) - 1n;\nexports.maxInt112 = 2n ** (112n - 1n) - 1n;\nexports.maxInt120 = 2n ** (120n - 1n) - 1n;\nexports.maxInt128 = 2n ** (128n - 1n) - 1n;\nexports.maxInt136 = 2n ** (136n - 1n) - 1n;\nexports.maxInt144 = 2n ** (144n - 1n) - 1n;\nexports.maxInt152 = 2n ** (152n - 1n) - 1n;\nexports.maxInt160 = 2n ** (160n - 1n) - 1n;\nexports.maxInt168 = 2n ** (168n - 1n) - 1n;\nexports.maxInt176 = 2n ** (176n - 1n) - 1n;\nexports.maxInt184 = 2n ** (184n - 1n) - 1n;\nexports.maxInt192 = 2n ** (192n - 1n) - 1n;\nexports.maxInt200 = 2n ** (200n - 1n) - 1n;\nexports.maxInt208 = 2n ** (208n - 1n) - 1n;\nexports.maxInt216 = 2n ** (216n - 1n) - 1n;\nexports.maxInt224 = 2n ** (224n - 1n) - 1n;\nexports.maxInt232 = 2n ** (232n - 1n) - 1n;\nexports.maxInt240 = 2n ** (240n - 1n) - 1n;\nexports.maxInt248 = 2n ** (248n - 1n) - 1n;\nexports.maxInt256 = 2n ** (256n - 1n) - 1n;\nexports.minInt8 = -(2n ** (8n - 1n));\nexports.minInt16 = -(2n ** (16n - 1n));\nexports.minInt24 = -(2n ** (24n - 1n));\nexports.minInt32 = -(2n ** (32n - 1n));\nexports.minInt40 = -(2n ** (40n - 1n));\nexports.minInt48 = -(2n ** (48n - 1n));\nexports.minInt56 = -(2n ** (56n - 1n));\nexports.minInt64 = -(2n ** (64n - 1n));\nexports.minInt72 = -(2n ** (72n - 1n));\nexports.minInt80 = -(2n ** (80n - 1n));\nexports.minInt88 = -(2n ** (88n - 1n));\nexports.minInt96 = -(2n ** (96n - 1n));\nexports.minInt104 = -(2n ** (104n - 1n));\nexports.minInt112 = -(2n ** (112n - 1n));\nexports.minInt120 = -(2n ** (120n - 1n));\nexports.minInt128 = -(2n ** (128n - 1n));\nexports.minInt136 = -(2n ** (136n - 1n));\nexports.minInt144 = -(2n ** (144n - 1n));\nexports.minInt152 = -(2n ** (152n - 1n));\nexports.minInt160 = -(2n ** (160n - 1n));\nexports.minInt168 = -(2n ** (168n - 1n));\nexports.minInt176 = -(2n ** (176n - 1n));\nexports.minInt184 = -(2n ** (184n - 1n));\nexports.minInt192 = -(2n ** (192n - 1n));\nexports.minInt200 = -(2n ** (200n - 1n));\nexports.minInt208 = -(2n ** (208n - 1n));\nexports.minInt216 = -(2n ** (216n - 1n));\nexports.minInt224 = -(2n ** (224n - 1n));\nexports.minInt232 = -(2n ** (232n - 1n));\nexports.minInt240 = -(2n ** (240n - 1n));\nexports.minInt248 = -(2n ** (248n - 1n));\nexports.minInt256 = -(2n ** (256n - 1n));\nexports.maxUint8 = 2n ** 8n - 1n;\nexports.maxUint16 = 2n ** 16n - 1n;\nexports.maxUint24 = 2n ** 24n - 1n;\nexports.maxUint32 = 2n ** 32n - 1n;\nexports.maxUint40 = 2n ** 40n - 1n;\nexports.maxUint48 = 2n ** 48n - 1n;\nexports.maxUint56 = 2n ** 56n - 1n;\nexports.maxUint64 = 2n ** 64n - 1n;\nexports.maxUint72 = 2n ** 72n - 1n;\nexports.maxUint80 = 2n ** 80n - 1n;\nexports.maxUint88 = 2n ** 88n - 1n;\nexports.maxUint96 = 2n ** 96n - 1n;\nexports.maxUint104 = 2n ** 104n - 1n;\nexports.maxUint112 = 2n ** 112n - 1n;\nexports.maxUint120 = 2n ** 120n - 1n;\nexports.maxUint128 = 2n ** 128n - 1n;\nexports.maxUint136 = 2n ** 136n - 1n;\nexports.maxUint144 = 2n ** 144n - 1n;\nexports.maxUint152 = 2n ** 152n - 1n;\nexports.maxUint160 = 2n ** 160n - 1n;\nexports.maxUint168 = 2n ** 168n - 1n;\nexports.maxUint176 = 2n ** 176n - 1n;\nexports.maxUint184 = 2n ** 184n - 1n;\nexports.maxUint192 = 2n ** 192n - 1n;\nexports.maxUint200 = 2n ** 200n - 1n;\nexports.maxUint208 = 2n ** 208n - 1n;\nexports.maxUint216 = 2n ** 216n - 1n;\nexports.maxUint224 = 2n ** 224n - 1n;\nexports.maxUint232 = 2n ** 232n - 1n;\nexports.maxUint240 = 2n ** 240n - 1n;\nexports.maxUint248 = 2n ** 248n - 1n;\nexports.maxUint256 = 2n ** 256n - 1n;\n//# sourceMappingURL=number.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["minInt128","minInt56","maxInt144","maxUint96","minInt176","minInt192","maxUint32","maxInt216","minInt184","minInt96","minInt8","maxInt168","maxInt208","minInt208","minInt48","maxUint56","minInt216","maxInt88","minInt88","maxInt64","__esModule","minInt112","maxUint136","maxInt8","minInt160","maxUint128","minInt104","maxUint160","maxInt256","maxUint64","maxUint168","maxUint24","minInt240","maxInt120","maxInt184","minInt24","minInt152","maxUint208","maxInt72","maxInt24","maxUint200","value","minInt120","maxInt152","minInt168","maxInt16","maxUint248","maxUint216","maxInt56","maxUint80","minInt64","maxUint40","maxInt136","minInt136","maxInt128","maxUint240","minInt80","minInt40","maxInt40","maxInt200","minInt144","maxUint48","maxUint16","minInt16","maxInt232","maxInt112","maxUint144","maxUint184","maxInt104","minInt232","maxInt176","maxUint192","minInt200","maxInt248","maxUint152","maxUint112","maxInt160","maxUint104","maxUint8","minInt32","maxUint224","maxInt224","maxUint120","maxInt48","minInt72","maxInt192","maxInt96","maxUint256","maxUint232","maxUint176","maxUint72","minInt256","maxInt240","maxInt32","minInt248","minInt224","maxUint88","maxInt80"]],"~:compiled-at",1695111490370,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$viem$_cjs$constants$number.js\",\n\"lineCount\":15,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/viem/_cjs/constants/number.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$viem$_cjs$constants$number\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.minInt144 = exports.minInt136 = exports.minInt128 = exports.minInt120 = exports.minInt112 = exports.minInt104 = exports.minInt96 = exports.minInt88 = exports.minInt80 = exports.minInt72 = exports.minInt64 = exports.minInt56 = exports.minInt48 = exports.minInt40 = exports.minInt32 = exports.minInt24 = exports.minInt16 = exports.minInt8 = exports.maxInt256 = exports.maxInt248 = exports.maxInt240 = exports.maxInt232 = exports.maxInt224 = exports.maxInt216 = exports.maxInt208 = exports.maxInt200 = exports.maxInt192 = exports.maxInt184 = exports.maxInt176 = exports.maxInt168 = exports.maxInt160 = exports.maxInt152 = exports.maxInt144 = exports.maxInt136 = exports.maxInt128 = exports.maxInt120 = exports.maxInt112 = exports.maxInt104 = exports.maxInt96 = exports.maxInt88 = exports.maxInt80 = exports.maxInt72 = exports.maxInt64 = exports.maxInt56 = exports.maxInt48 = exports.maxInt40 = exports.maxInt32 = exports.maxInt24 = exports.maxInt16 = exports.maxInt8 = void 0;\\nexports.maxUint256 = exports.maxUint248 = exports.maxUint240 = exports.maxUint232 = exports.maxUint224 = exports.maxUint216 = exports.maxUint208 = exports.maxUint200 = exports.maxUint192 = exports.maxUint184 = exports.maxUint176 = exports.maxUint168 = exports.maxUint160 = exports.maxUint152 = exports.maxUint144 = exports.maxUint136 = exports.maxUint128 = exports.maxUint120 = exports.maxUint112 = exports.maxUint104 = exports.maxUint96 = exports.maxUint88 = exports.maxUint80 = exports.maxUint72 = exports.maxUint64 = exports.maxUint56 = exports.maxUint48 = exports.maxUint40 = exports.maxUint32 = exports.maxUint24 = exports.maxUint16 = exports.maxUint8 = exports.minInt256 = exports.minInt248 = exports.minInt240 = exports.minInt232 = exports.minInt224 = exports.minInt216 = exports.minInt208 = exports.minInt200 = exports.minInt192 = exports.minInt184 = exports.minInt176 = exports.minInt168 = exports.minInt160 = exports.minInt152 = void 0;\\nexports.maxInt8 = 2n ** (8n - 1n) - 1n;\\nexports.maxInt16 = 2n ** (16n - 1n) - 1n;\\nexports.maxInt24 = 2n ** (24n - 1n) - 1n;\\nexports.maxInt32 = 2n ** (32n - 1n) - 1n;\\nexports.maxInt40 = 2n ** (40n - 1n) - 1n;\\nexports.maxInt48 = 2n ** (48n - 1n) - 1n;\\nexports.maxInt56 = 2n ** (56n - 1n) - 1n;\\nexports.maxInt64 = 2n ** (64n - 1n) - 1n;\\nexports.maxInt72 = 2n ** (72n - 1n) - 1n;\\nexports.maxInt80 = 2n ** (80n - 1n) - 1n;\\nexports.maxInt88 = 2n ** (88n - 1n) - 1n;\\nexports.maxInt96 = 2n ** (96n - 1n) - 1n;\\nexports.maxInt104 = 2n ** (104n - 1n) - 1n;\\nexports.maxInt112 = 2n ** (112n - 1n) - 1n;\\nexports.maxInt120 = 2n ** (120n - 1n) - 1n;\\nexports.maxInt128 = 2n ** (128n - 1n) - 1n;\\nexports.maxInt136 = 2n ** (136n - 1n) - 1n;\\nexports.maxInt144 = 2n ** (144n - 1n) - 1n;\\nexports.maxInt152 = 2n ** (152n - 1n) - 1n;\\nexports.maxInt160 = 2n ** (160n - 1n) - 1n;\\nexports.maxInt168 = 2n ** (168n - 1n) - 1n;\\nexports.maxInt176 = 2n ** (176n - 1n) - 1n;\\nexports.maxInt184 = 2n ** (184n - 1n) - 1n;\\nexports.maxInt192 = 2n ** (192n - 1n) - 1n;\\nexports.maxInt200 = 2n ** (200n - 1n) - 1n;\\nexports.maxInt208 = 2n ** (208n - 1n) - 1n;\\nexports.maxInt216 = 2n ** (216n - 1n) - 1n;\\nexports.maxInt224 = 2n ** (224n - 1n) - 1n;\\nexports.maxInt232 = 2n ** (232n - 1n) - 1n;\\nexports.maxInt240 = 2n ** (240n - 1n) - 1n;\\nexports.maxInt248 = 2n ** (248n - 1n) - 1n;\\nexports.maxInt256 = 2n ** (256n - 1n) - 1n;\\nexports.minInt8 = -(2n ** (8n - 1n));\\nexports.minInt16 = -(2n ** (16n - 1n));\\nexports.minInt24 = -(2n ** (24n - 1n));\\nexports.minInt32 = -(2n ** (32n - 1n));\\nexports.minInt40 = -(2n ** (40n - 1n));\\nexports.minInt48 = -(2n ** (48n - 1n));\\nexports.minInt56 = -(2n ** (56n - 1n));\\nexports.minInt64 = -(2n ** (64n - 1n));\\nexports.minInt72 = -(2n ** (72n - 1n));\\nexports.minInt80 = -(2n ** (80n - 1n));\\nexports.minInt88 = -(2n ** (88n - 1n));\\nexports.minInt96 = -(2n ** (96n - 1n));\\nexports.minInt104 = -(2n ** (104n - 1n));\\nexports.minInt112 = -(2n ** (112n - 1n));\\nexports.minInt120 = -(2n ** (120n - 1n));\\nexports.minInt128 = -(2n ** (128n - 1n));\\nexports.minInt136 = -(2n ** (136n - 1n));\\nexports.minInt144 = -(2n ** (144n - 1n));\\nexports.minInt152 = -(2n ** (152n - 1n));\\nexports.minInt160 = -(2n ** (160n - 1n));\\nexports.minInt168 = -(2n ** (168n - 1n));\\nexports.minInt176 = -(2n ** (176n - 1n));\\nexports.minInt184 = -(2n ** (184n - 1n));\\nexports.minInt192 = -(2n ** (192n - 1n));\\nexports.minInt200 = -(2n ** (200n - 1n));\\nexports.minInt208 = -(2n ** (208n - 1n));\\nexports.minInt216 = -(2n ** (216n - 1n));\\nexports.minInt224 = -(2n ** (224n - 1n));\\nexports.minInt232 = -(2n ** (232n - 1n));\\nexports.minInt240 = -(2n ** (240n - 1n));\\nexports.minInt248 = -(2n ** (248n - 1n));\\nexports.minInt256 = -(2n ** (256n - 1n));\\nexports.maxUint8 = 2n ** 8n - 1n;\\nexports.maxUint16 = 2n ** 16n - 1n;\\nexports.maxUint24 = 2n ** 24n - 1n;\\nexports.maxUint32 = 2n ** 32n - 1n;\\nexports.maxUint40 = 2n ** 40n - 1n;\\nexports.maxUint48 = 2n ** 48n - 1n;\\nexports.maxUint56 = 2n ** 56n - 1n;\\nexports.maxUint64 = 2n ** 64n - 1n;\\nexports.maxUint72 = 2n ** 72n - 1n;\\nexports.maxUint80 = 2n ** 80n - 1n;\\nexports.maxUint88 = 2n ** 88n - 1n;\\nexports.maxUint96 = 2n ** 96n - 1n;\\nexports.maxUint104 = 2n ** 104n - 1n;\\nexports.maxUint112 = 2n ** 112n - 1n;\\nexports.maxUint120 = 2n ** 120n - 1n;\\nexports.maxUint128 = 2n ** 128n - 1n;\\nexports.maxUint136 = 2n ** 136n - 1n;\\nexports.maxUint144 = 2n ** 144n - 1n;\\nexports.maxUint152 = 2n ** 152n - 1n;\\nexports.maxUint160 = 2n ** 160n - 1n;\\nexports.maxUint168 = 2n ** 168n - 1n;\\nexports.maxUint176 = 2n ** 176n - 1n;\\nexports.maxUint184 = 2n ** 184n - 1n;\\nexports.maxUint192 = 2n ** 192n - 1n;\\nexports.maxUint200 = 2n ** 200n - 1n;\\nexports.maxUint208 = 2n ** 208n - 1n;\\nexports.maxUint216 = 2n ** 216n - 1n;\\nexports.maxUint224 = 2n ** 224n - 1n;\\nexports.maxUint232 = 2n ** 232n - 1n;\\nexports.maxUint240 = 2n ** 240n - 1n;\\nexports.maxUint248 = 2n ** 248n - 1n;\\nexports.maxUint256 = 2n ** 256n - 1n;\\n//# sourceMappingURL=number.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"minInt144\",\"minInt136\",\"minInt128\",\"minInt120\",\"minInt112\",\"minInt104\",\"minInt96\",\"minInt88\",\"minInt80\",\"minInt72\",\"minInt64\",\"minInt56\",\"minInt48\",\"minInt40\",\"minInt32\",\"minInt24\",\"minInt16\",\"minInt8\",\"maxInt256\",\"maxInt248\",\"maxInt240\",\"maxInt232\",\"maxInt224\",\"maxInt216\",\"maxInt208\",\"maxInt200\",\"maxInt192\",\"maxInt184\",\"maxInt176\",\"maxInt168\",\"maxInt160\",\"maxInt152\",\"maxInt144\",\"maxInt136\",\"maxInt128\",\"maxInt120\",\"maxInt112\",\"maxInt104\",\"maxInt96\",\"maxInt88\",\"maxInt80\",\"maxInt72\",\"maxInt64\",\"maxInt56\",\"maxInt48\",\"maxInt40\",\"maxInt32\",\"maxInt24\",\"maxInt16\",\"maxInt8\",\"maxUint256\",\"maxUint248\",\"maxUint240\",\"maxUint232\",\"maxUint224\",\"maxUint216\",\"maxUint208\",\"maxUint200\",\"maxUint192\",\"maxUint184\",\"maxUint176\",\"maxUint168\",\"maxUint160\",\"maxUint152\",\"maxUint144\",\"maxUint136\",\"maxUint128\",\"maxUint120\",\"maxUint112\",\"maxUint104\",\"maxUint96\",\"maxUint88\",\"maxUint80\",\"maxUint72\",\"maxUint64\",\"maxUint56\",\"maxUint48\",\"maxUint40\",\"maxUint32\",\"maxUint24\",\"maxUint16\",\"maxUint8\",\"minInt256\",\"minInt248\",\"minInt240\",\"minInt232\",\"minInt224\",\"minInt216\",\"minInt208\",\"minInt200\",\"minInt192\",\"minInt184\",\"minInt176\",\"minInt168\",\"minInt160\",\"minInt152\"]\n}\n"]