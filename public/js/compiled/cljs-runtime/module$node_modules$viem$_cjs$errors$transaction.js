shadow$provide.module$node_modules$viem$_cjs$errors$transaction=function(global,require,module,exports){function prettyPrint(args){args=Object.entries(args).map(([key,value])=>void 0===value||!1===value?null:[key,value]).filter(Boolean);const maxLength=args.reduce((acc,[key])=>Math.max(acc,key.length),0);return args.map(([key,value])=>`  ${`${key}:`.padEnd(maxLength+1)}  ${value}`).join("\n")}Object.defineProperty(exports,"__esModule",{value:!0});exports.WaitForTransactionReceiptTimeoutError=exports.TransactionReceiptNotFoundError=
exports.TransactionNotFoundError=exports.TransactionExecutionError=exports.InvalidStorageKeySizeError=exports.InvalidSerializedTransactionError=exports.InvalidSerializedTransactionTypeError=exports.InvalidSerializableTransactionError=exports.InvalidLegacyVError=exports.FeeConflictError=exports.prettyPrint=void 0;const formatEther_js_1=require("module$node_modules$viem$_cjs$utils$unit$formatEther"),formatGwei_js_1=require("module$node_modules$viem$_cjs$utils$unit$formatGwei");global=require("module$node_modules$viem$_cjs$errors$base");
exports.prettyPrint=prettyPrint;class FeeConflictError extends global.BaseError{constructor(){super("Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.\nUse `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others.");Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"FeeConflictError"})}}exports.FeeConflictError=FeeConflictError;class InvalidLegacyVError extends global.BaseError{constructor({v}){super(`Invalid \`v\` value "${v}". Expected 27 or 28.`);
Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"InvalidLegacyVError"})}}exports.InvalidLegacyVError=InvalidLegacyVError;class InvalidSerializableTransactionError extends global.BaseError{constructor({transaction}){super("Cannot infer a transaction type from provided transaction.",{metaMessages:["Provided Transaction:","{",prettyPrint(transaction),"}","","To infer the type, either provide:","- a `type` to the Transaction, or","- an EIP-1559 Transaction with `maxFeePerGas`, or",
"- an EIP-2930 Transaction with `gasPrice` \x26 `accessList`, or","- a Legacy Transaction with `gasPrice`"]});Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"InvalidSerializableTransactionError"})}}exports.InvalidSerializableTransactionError=InvalidSerializableTransactionError;class InvalidSerializedTransactionTypeError extends global.BaseError{constructor({serializedType}){super(`Serialized transaction type "${serializedType}" is invalid.`);Object.defineProperty(this,
"name",{enumerable:!0,configurable:!0,writable:!0,value:"InvalidSerializedTransactionType"});Object.defineProperty(this,"serializedType",{enumerable:!0,configurable:!0,writable:!0,value:void 0});this.serializedType=serializedType}}exports.InvalidSerializedTransactionTypeError=InvalidSerializedTransactionTypeError;class InvalidSerializedTransactionError extends global.BaseError{constructor({attributes,serializedTransaction,type}){attributes=Object.entries(attributes).map(([key,value])=>"undefined"===
typeof value?key:void 0).filter(Boolean);super(`Invalid serialized transaction of type "${type}" was provided.`,{metaMessages:[`Serialized Transaction: "${serializedTransaction}"`,0<attributes.length?`Missing Attributes: ${attributes.join(", ")}`:""].filter(Boolean)});Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"InvalidSerializedTransactionError"});Object.defineProperty(this,"serializedTransaction",{enumerable:!0,configurable:!0,writable:!0,value:void 0});Object.defineProperty(this,
"type",{enumerable:!0,configurable:!0,writable:!0,value:void 0});this.serializedTransaction=serializedTransaction;this.type=type}}exports.InvalidSerializedTransactionError=InvalidSerializedTransactionError;class InvalidStorageKeySizeError extends global.BaseError{constructor({storageKey}){super(`Size for storage key "${storageKey}" is invalid. Expected 32 bytes. Got ${Math.floor((storageKey.length-2)/2)} bytes.`);Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"InvalidStorageKeySizeError"})}}
exports.InvalidStorageKeySizeError=InvalidStorageKeySizeError;class TransactionExecutionError extends global.BaseError{constructor(cause,{account,docsPath,chain,data,gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,nonce,to,value}){account=prettyPrint({chain:chain&&`${chain?.name} (id: ${chain?.id})`,from:account?.address,to,value:"undefined"!==typeof value&&`${(0,formatEther_js_1.formatEther)(value)} ${chain?.nativeCurrency.symbol||"ETH"}`,data,gas,gasPrice:"undefined"!==typeof gasPrice&&`${(0,formatGwei_js_1.formatGwei)(gasPrice)} gwei`,
maxFeePerGas:"undefined"!==typeof maxFeePerGas&&`${(0,formatGwei_js_1.formatGwei)(maxFeePerGas)} gwei`,maxPriorityFeePerGas:"undefined"!==typeof maxPriorityFeePerGas&&`${(0,formatGwei_js_1.formatGwei)(maxPriorityFeePerGas)} gwei`,nonce});super(cause.shortMessage,{cause,docsPath,metaMessages:[...(cause.metaMessages?[...cause.metaMessages," "]:[]),"Request Arguments:",account].filter(Boolean)});Object.defineProperty(this,"cause",{enumerable:!0,configurable:!0,writable:!0,value:void 0});Object.defineProperty(this,
"name",{enumerable:!0,configurable:!0,writable:!0,value:"TransactionExecutionError"});this.cause=cause}}exports.TransactionExecutionError=TransactionExecutionError;class TransactionNotFoundError extends global.BaseError{constructor({blockHash,blockNumber,blockTag,hash,index}){let identifier="Transaction";blockTag&&void 0!==index&&(identifier=`Transaction at block time "${blockTag}" at index "${index}"`);blockHash&&void 0!==index&&(identifier=`Transaction at block hash "${blockHash}" at index "${index}"`);
blockNumber&&void 0!==index&&(identifier=`Transaction at block number "${blockNumber}" at index "${index}"`);hash&&(identifier=`Transaction with hash "${hash}"`);super(`${identifier} could not be found.`);Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"TransactionNotFoundError"})}}exports.TransactionNotFoundError=TransactionNotFoundError;class TransactionReceiptNotFoundError extends global.BaseError{constructor({hash}){super(`Transaction receipt with hash "${hash}" could not be found. The Transaction may not be processed on a block yet.`);
Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"TransactionReceiptNotFoundError"})}}exports.TransactionReceiptNotFoundError=TransactionReceiptNotFoundError;class WaitForTransactionReceiptTimeoutError extends global.BaseError{constructor({hash}){super(`Timed out while waiting for transaction with hash "${hash}" to be confirmed.`);Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"WaitForTransactionReceiptTimeoutError"})}}exports.WaitForTransactionReceiptTimeoutError=
WaitForTransactionReceiptTimeoutError}
//# sourceMappingURL=module$node_modules$viem$_cjs$errors$transaction.js.map
