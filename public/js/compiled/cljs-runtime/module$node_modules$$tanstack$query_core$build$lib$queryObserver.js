shadow$provide.module$node_modules$$tanstack$query_core$build$lib$queryObserver=function(global,require,module,exports){function shouldFetchOnMount(query,options){return!1!==options.enabled&&!query.state.dataUpdatedAt&&!("error"===query.state.status&&!1===options.retryOnMount)||0<query.state.dataUpdatedAt&&shouldFetchOn(query,options,options.refetchOnMount)}function shouldFetchOn(query,options,field){return!1!==options.enabled?(field="function"===typeof field?field(query):field,"always"===field||
!1!==field&&query.isStaleByTime(options.staleTime)):!1}function shouldFetchOptionally(query,prevQuery,options,prevOptions){return!1!==options.enabled&&(query!==prevQuery||!1===prevOptions.enabled)&&(!options.suspense||"error"!==query.state.status)&&query.isStaleByTime(options.staleTime)}Object.defineProperty(exports,"__esModule",{value:!0});var utils=require("module$node_modules$$tanstack$query_core$build$lib$utils"),notifyManager=require("module$node_modules$$tanstack$query_core$build$lib$notifyManager"),
focusManager=require("module$node_modules$$tanstack$query_core$build$lib$focusManager");global=require("module$node_modules$$tanstack$query_core$build$lib$subscribable");var retryer=require("module$node_modules$$tanstack$query_core$build$lib$retryer");class QueryObserver extends global.Subscribable{constructor(client,options){super();this.client=client;this.options=options;this.trackedProps=new Set;this.selectError=null;this.bindMethods();this.setOptions(options)}bindMethods(){this.remove=this.remove.bind(this);
this.refetch=this.refetch.bind(this)}onSubscribe(){1===this.listeners.size&&(this.currentQuery.addObserver(this),shouldFetchOnMount(this.currentQuery,this.options)&&this.executeFetch(),this.updateTimers())}onUnsubscribe(){this.hasListeners()||this.destroy()}shouldFetchOnReconnect(){return shouldFetchOn(this.currentQuery,this.options,this.options.refetchOnReconnect)}shouldFetchOnWindowFocus(){return shouldFetchOn(this.currentQuery,this.options,this.options.refetchOnWindowFocus)}destroy(){this.listeners=
new Set;this.clearStaleTimeout();this.clearRefetchInterval();this.currentQuery.removeObserver(this)}setOptions(options,notifyOptions){const prevOptions=this.options,prevQuery=this.currentQuery;this.options=this.client.defaultQueryOptions(options);"undefined"!==typeof(null==options?void 0:options.isDataEqual)&&this.client.getLogger().error("The isDataEqual option has been deprecated and will be removed in the next major version. You can achieve the same functionality by passing a function as the structuralSharing option");
utils.shallowEqualObjects(prevOptions,this.options)||this.client.getQueryCache().notify({type:"observerOptionsUpdated",query:this.currentQuery,observer:this});if("undefined"!==typeof this.options.enabled&&"boolean"!==typeof this.options.enabled)throw Error("Expected enabled to be a boolean");this.options.queryKey||(this.options.queryKey=prevOptions.queryKey);this.updateQuery();(options=this.hasListeners())&&shouldFetchOptionally(this.currentQuery,prevQuery,this.options,prevOptions)&&this.executeFetch();
this.updateResult(notifyOptions);!options||this.currentQuery===prevQuery&&this.options.enabled===prevOptions.enabled&&this.options.staleTime===prevOptions.staleTime||this.updateStaleTimeout();notifyOptions=this.computeRefetchInterval();!options||this.currentQuery===prevQuery&&this.options.enabled===prevOptions.enabled&&notifyOptions===this.currentRefetchInterval||this.updateRefetchInterval(notifyOptions)}getOptimisticResult(options){var query=this.client.getQueryCache().build(this.client,options);
query=this.createResult(query,options);options=options.keepPreviousData?!1:void 0!==options.placeholderData?query.isPlaceholderData:utils.shallowEqualObjects(this.getCurrentResult(),query)?!1:!0;options&&(this.currentResult=query,this.currentResultOptions=this.options,this.currentResultState=this.currentQuery.state);return query}getCurrentResult(){return this.currentResult}trackResult(result){const trackedResult={};Object.keys(result).forEach(key=>{Object.defineProperty(trackedResult,key,{configurable:!1,
enumerable:!0,get:()=>{this.trackedProps.add(key);return result[key]}})});return trackedResult}getCurrentQuery(){return this.currentQuery}remove(){this.client.getQueryCache().remove(this.currentQuery)}refetch({refetchPage,...options}={}){return this.fetch({...options,meta:{refetchPage}})}fetchOptimistic(options){const defaultedOptions=this.client.defaultQueryOptions(options),query=this.client.getQueryCache().build(this.client,defaultedOptions);query.isFetchingOptimistic=!0;return query.fetch().then(()=>
this.createResult(query,defaultedOptions))}fetch(fetchOptions){var _fetchOptions$cancelR;return this.executeFetch({...fetchOptions,cancelRefetch:null!=(_fetchOptions$cancelR=fetchOptions.cancelRefetch)?_fetchOptions$cancelR:!0}).then(()=>{this.updateResult();return this.currentResult})}executeFetch(fetchOptions){this.updateQuery();let promise=this.currentQuery.fetch(this.options,fetchOptions);null!=fetchOptions&&fetchOptions.throwOnError||(promise=promise.catch(utils.noop));return promise}updateStaleTimeout(){this.clearStaleTimeout();
if(!utils.isServer&&!this.currentResult.isStale&&utils.isValidTimeout(this.options.staleTime)){var time=utils.timeUntilStale(this.currentResult.dataUpdatedAt,this.options.staleTime);this.staleTimeoutId=setTimeout(()=>{this.currentResult.isStale||this.updateResult()},time+1)}}computeRefetchInterval(){var _this$options$refetch;return"function"===typeof this.options.refetchInterval?this.options.refetchInterval(this.currentResult.data,this.currentQuery):null!=(_this$options$refetch=this.options.refetchInterval)?
_this$options$refetch:!1}updateRefetchInterval(nextInterval){this.clearRefetchInterval();this.currentRefetchInterval=nextInterval;!utils.isServer&&!1!==this.options.enabled&&utils.isValidTimeout(this.currentRefetchInterval)&&0!==this.currentRefetchInterval&&(this.refetchIntervalId=setInterval(()=>{(this.options.refetchIntervalInBackground||focusManager.focusManager.isFocused())&&this.executeFetch()},this.currentRefetchInterval))}updateTimers(){this.updateStaleTimeout();this.updateRefetchInterval(this.computeRefetchInterval())}clearStaleTimeout(){this.staleTimeoutId&&
(clearTimeout(this.staleTimeoutId),this.staleTimeoutId=void 0)}clearRefetchInterval(){this.refetchIntervalId&&(clearInterval(this.refetchIntervalId),this.refetchIntervalId=void 0)}createResult(query,options){var prevQuery=this.currentQuery;const prevOptions=this.options;var prevResult=this.currentResult,prevResultState=this.currentResultState,prevResultOptions=this.currentResultOptions,queryChange=query!==prevQuery;const queryInitialState=queryChange?query.state:this.currentQueryInitialState,prevQueryResult=
queryChange?this.currentResult:this.previousQueryResult;({state:queryChange}=query);let {dataUpdatedAt,error,errorUpdatedAt,fetchStatus,status}=queryChange,isPreviousData=!1,isPlaceholderData=!1,data;if(options._optimisticResults){const mounted=this.hasListeners(),fetchOnMount=!mounted&&shouldFetchOnMount(query,options);prevQuery=mounted&&shouldFetchOptionally(query,prevQuery,options,prevOptions);if(fetchOnMount||prevQuery)fetchStatus=retryer.canFetch(query.options.networkMode)?"fetching":"paused",
dataUpdatedAt||(status="loading");"isRestoring"===options._optimisticResults&&(fetchStatus="idle")}if(options.keepPreviousData&&!queryChange.dataUpdatedAt&&null!=prevQueryResult&&prevQueryResult.isSuccess&&"error"!==status)data=prevQueryResult.data,dataUpdatedAt=prevQueryResult.dataUpdatedAt,status=prevQueryResult.status,isPreviousData=!0;else if(options.select&&"undefined"!==typeof queryChange.data)if(prevResult&&queryChange.data===(null==prevResultState?void 0:prevResultState.data)&&options.select===
this.selectFn)data=this.selectResult;else try{this.selectFn=options.select,data=options.select(queryChange.data),this.selectResult=data=utils.replaceData(null==prevResult?void 0:prevResult.data,data,options),this.selectError=null}catch(selectError){this.client.getLogger().error(selectError),this.selectError=selectError}else data=queryChange.data;if("undefined"!==typeof options.placeholderData&&"undefined"===typeof data&&"loading"===status){if(null!=prevResult&&prevResult.isPlaceholderData&&options.placeholderData===
(null==prevResultOptions?void 0:prevResultOptions.placeholderData))prevResultState=prevResult.data;else if(prevResultState="function"===typeof options.placeholderData?options.placeholderData():options.placeholderData,options.select&&"undefined"!==typeof prevResultState)try{prevResultState=options.select(prevResultState),this.selectError=null}catch(selectError){this.client.getLogger().error(selectError),this.selectError=selectError}"undefined"!==typeof prevResultState&&(status="success",data=utils.replaceData(null==
prevResult?void 0:prevResult.data,prevResultState,options),isPlaceholderData=!0)}this.selectError&&(error=this.selectError,data=this.selectResult,errorUpdatedAt=Date.now(),status="error");prevResult="fetching"===fetchStatus;prevResultState="loading"===status;prevResultOptions="error"===status;return{status,fetchStatus,isLoading:prevResultState,isSuccess:"success"===status,isError:prevResultOptions,isInitialLoading:prevResultState&&prevResult,data,dataUpdatedAt,error,errorUpdatedAt,failureCount:queryChange.fetchFailureCount,
failureReason:queryChange.fetchFailureReason,errorUpdateCount:queryChange.errorUpdateCount,isFetched:0<queryChange.dataUpdateCount||0<queryChange.errorUpdateCount,isFetchedAfterMount:queryChange.dataUpdateCount>queryInitialState.dataUpdateCount||queryChange.errorUpdateCount>queryInitialState.errorUpdateCount,isFetching:prevResult,isRefetching:prevResult&&!prevResultState,isLoadingError:prevResultOptions&&0===queryChange.dataUpdatedAt,isPaused:"paused"===fetchStatus,isPlaceholderData,isPreviousData,
isRefetchError:prevResultOptions&&0!==queryChange.dataUpdatedAt,isStale:query.isStaleByTime(options.staleTime),refetch:this.refetch,remove:this.remove}}updateResult(notifyOptions){const prevResult=this.currentResult;var nextResult=this.createResult(this.currentQuery,this.options);this.currentResultState=this.currentQuery.state;this.currentResultOptions=this.options;if(!utils.shallowEqualObjects(nextResult,prevResult)){this.currentResult=nextResult;nextResult={cache:!0};var shouldNotifyListeners=()=>
{if(!prevResult)return!0;var {notifyOnChangeProps}=this.options;notifyOnChangeProps="function"===typeof notifyOnChangeProps?notifyOnChangeProps():notifyOnChangeProps;if("all"===notifyOnChangeProps||!notifyOnChangeProps&&!this.trackedProps.size)return!0;const includedProps=new Set(null!=notifyOnChangeProps?notifyOnChangeProps:this.trackedProps);this.options.useErrorBoundary&&includedProps.add("error");return Object.keys(this.currentResult).some(key=>this.currentResult[key]!==prevResult[key]&&includedProps.has(key))};
!1!==(null==notifyOptions?void 0:notifyOptions.listeners)&&shouldNotifyListeners()&&(nextResult.listeners=!0);this.notify({...nextResult,...notifyOptions})}}updateQuery(){const query=this.client.getQueryCache().build(this.client,this.options);if(query!==this.currentQuery){var prevQuery=this.currentQuery;this.currentQuery=query;this.currentQueryInitialState=query.state;this.previousQueryResult=this.currentResult;this.hasListeners()&&(null==prevQuery?void 0:prevQuery.removeObserver(this),query.addObserver(this))}}onQueryUpdate(action){const notifyOptions=
{};"success"===action.type?notifyOptions.onSuccess=!action.manual:"error"!==action.type||retryer.isCancelledError(action.error)||(notifyOptions.onError=!0);this.updateResult(notifyOptions);this.hasListeners()&&this.updateTimers()}notify(notifyOptions){notifyManager.notifyManager.batch(()=>{if(notifyOptions.onSuccess){var _this$options$onSucce,_this$options,_this$options$onSettl,_this$options2;null==(_this$options$onSucce=(_this$options=this.options).onSuccess)?void 0:_this$options$onSucce.call(_this$options,
this.currentResult.data);null==(_this$options$onSettl=(_this$options2=this.options).onSettled)?void 0:_this$options$onSettl.call(_this$options2,this.currentResult.data,null)}else if(notifyOptions.onError){var _this$options$onError,_this$options3,_this$options$onSettl2,_this$options4;null==(_this$options$onError=(_this$options3=this.options).onError)?void 0:_this$options$onError.call(_this$options3,this.currentResult.error);null==(_this$options$onSettl2=(_this$options4=this.options).onSettled)?void 0:
_this$options$onSettl2.call(_this$options4,void 0,this.currentResult.error)}notifyOptions.listeners&&this.listeners.forEach(({listener})=>{listener(this.currentResult)});notifyOptions.cache&&this.client.getQueryCache().notify({query:this.currentQuery,type:"observerResultsUpdated"})})}}exports.QueryObserver=QueryObserver}
//# sourceMappingURL=module$node_modules$$tanstack$query_core$build$lib$queryObserver.js.map
