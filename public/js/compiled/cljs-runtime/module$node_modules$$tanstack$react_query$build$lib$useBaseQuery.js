shadow$provide.module$node_modules$$tanstack$react_query$build$lib$useBaseQuery=function(global,require,module,exports){"use client";"use strict";Object.defineProperty(exports,"__esModule",{value:!0});global=require("module$node_modules$react$index");var queryCore=require("module$node_modules$$tanstack$query_core$build$lib$index"),useSyncExternalStore=require("module$node_modules$$tanstack$react_query$build$lib$useSyncExternalStore"),QueryErrorResetBoundary=require("module$node_modules$$tanstack$react_query$build$lib$QueryErrorResetBoundary"),
QueryClientProvider=require("module$node_modules$$tanstack$react_query$build$lib$QueryClientProvider"),isRestoring=require("module$node_modules$$tanstack$react_query$build$lib$isRestoring"),errorBoundaryUtils=require("module$node_modules$$tanstack$react_query$build$lib$errorBoundaryUtils"),suspense=require("module$node_modules$$tanstack$react_query$build$lib$suspense"),React__namespace=function(e){if(e&&e.__esModule)return e;var n=Object.create(null);e&&Object.keys(e).forEach(function(k){if("default"!==
k){var d=Object.getOwnPropertyDescriptor(e,k);Object.defineProperty(n,k,d.get?d:{enumerable:!0,get:function(){return e[k]}})}});n["default"]=e;return Object.freeze(n)}(global);exports.useBaseQuery=function(options,Observer){const queryClient=QueryClientProvider.useQueryClient({context:options.context}),isRestoring$1=isRestoring.useIsRestoring(),errorResetBoundary=QueryErrorResetBoundary.useQueryErrorResetBoundary(),defaultedOptions=queryClient.defaultQueryOptions(options);defaultedOptions._optimisticResults=
isRestoring$1?"isRestoring":"optimistic";defaultedOptions.onError&&(defaultedOptions.onError=queryCore.notifyManager.batchCalls(defaultedOptions.onError));defaultedOptions.onSuccess&&(defaultedOptions.onSuccess=queryCore.notifyManager.batchCalls(defaultedOptions.onSuccess));defaultedOptions.onSettled&&(defaultedOptions.onSettled=queryCore.notifyManager.batchCalls(defaultedOptions.onSettled));suspense.ensureStaleTime(defaultedOptions);errorBoundaryUtils.ensurePreventErrorBoundaryRetry(defaultedOptions,
errorResetBoundary);errorBoundaryUtils.useClearResetErrorBoundary(errorResetBoundary);const [observer]=React__namespace.useState(()=>new Observer(queryClient,defaultedOptions));options=observer.getOptimisticResult(defaultedOptions);useSyncExternalStore.useSyncExternalStore(React__namespace.useCallback(onStoreChange=>{onStoreChange=isRestoring$1?()=>{}:observer.subscribe(queryCore.notifyManager.batchCalls(onStoreChange));observer.updateResult();return onStoreChange},[observer,isRestoring$1]),()=>observer.getCurrentResult(),
()=>observer.getCurrentResult());React__namespace.useEffect(()=>{observer.setOptions(defaultedOptions,{listeners:!1})},[defaultedOptions,observer]);if(suspense.shouldSuspend(defaultedOptions,options,isRestoring$1))throw suspense.fetchOptimistic(defaultedOptions,observer,errorResetBoundary);if(errorBoundaryUtils.getHasError({result:options,errorResetBoundary,useErrorBoundary:defaultedOptions.useErrorBoundary,query:observer.getCurrentQuery()}))throw options.error;return defaultedOptions.notifyOnChangeProps?
options:observer.trackResult(options)}}
//# sourceMappingURL=module$node_modules$$tanstack$react_query$build$lib$useBaseQuery.js.map
