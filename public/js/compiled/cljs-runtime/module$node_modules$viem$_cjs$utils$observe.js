shadow$provide.module$node_modules$viem$_cjs$utils$observe=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.observe=exports.cleanupCache=exports.listenersCache=void 0;exports.listenersCache=new Map;exports.cleanupCache=new Map;let callbackCount=0;exports.observe=function(observerId,callbacks,fn){const callbackId=++callbackCount,unsubscribe=()=>{const listeners=exports.listenersCache.get(observerId)||[];exports.listenersCache.set(observerId,listeners.filter(cb=>
cb.id!==callbackId))},unwatch=()=>{const cleanup=exports.cleanupCache.get(observerId);1===(exports.listenersCache.get(observerId)||[]).length&&cleanup&&cleanup();unsubscribe()};var listeners$jscomp$0=exports.listenersCache.get(observerId)||[];exports.listenersCache.set(observerId,[...listeners$jscomp$0,{id:callbackId,fns:callbacks}]);if(listeners$jscomp$0&&0<listeners$jscomp$0.length)return unwatch;listeners$jscomp$0={};for(const key in callbacks)listeners$jscomp$0[key]=(...args)=>{const listeners=
exports.listenersCache.get(observerId)||[];0!==listeners.length&&listeners.forEach(listener=>listener.fns[key]?.(...args))};callbacks=fn(listeners$jscomp$0);"function"===typeof callbacks&&exports.cleanupCache.set(observerId,callbacks);return unwatch}}
//# sourceMappingURL=module$node_modules$viem$_cjs$utils$observe.js.map
