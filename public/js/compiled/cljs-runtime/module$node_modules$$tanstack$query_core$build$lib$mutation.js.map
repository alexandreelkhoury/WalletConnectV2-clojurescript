{
"version":3,
"file":"module$node_modules$$tanstack$query_core$build$lib$mutation.js",
"lineCount":12,
"mappings":"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",
"sources":["node_modules/@tanstack/query-core/build/lib/mutation.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$tanstack$query_core$build$lib$mutation\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar logger = require('./logger');\nvar notifyManager = require('./notifyManager.js');\nvar removable = require('./removable.js');\nvar retryer = require('./retryer.js');\n\n// CLASS\nclass Mutation extends removable.Removable {\n  constructor(config) {\n    super();\n    this.defaultOptions = config.defaultOptions;\n    this.mutationId = config.mutationId;\n    this.mutationCache = config.mutationCache;\n    this.logger = config.logger || logger.defaultLogger;\n    this.observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n\n  setOptions(options) {\n    this.options = { ...this.defaultOptions,\n      ...options\n    };\n    this.updateCacheTime(this.options.cacheTime);\n  }\n\n  get meta() {\n    return this.options.meta;\n  }\n\n  setState(state) {\n    this.dispatch({\n      type: 'setState',\n      state\n    });\n  }\n\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer); // Stop the mutation from being garbage collected\n\n      this.clearGcTimeout();\n      this.mutationCache.notify({\n        type: 'observerAdded',\n        mutation: this,\n        observer\n      });\n    }\n  }\n\n  removeObserver(observer) {\n    this.observers = this.observers.filter(x => x !== observer);\n    this.scheduleGc();\n    this.mutationCache.notify({\n      type: 'observerRemoved',\n      mutation: this,\n      observer\n    });\n  }\n\n  optionalRemove() {\n    if (!this.observers.length) {\n      if (this.state.status === 'loading') {\n        this.scheduleGc();\n      } else {\n        this.mutationCache.remove(this);\n      }\n    }\n  }\n\n  continue() {\n    var _this$retryer$continu, _this$retryer;\n\n    return (_this$retryer$continu = (_this$retryer = this.retryer) == null ? void 0 : _this$retryer.continue()) != null ? _this$retryer$continu : this.execute();\n  }\n\n  async execute() {\n    const executeMutation = () => {\n      var _this$options$retry;\n\n      this.retryer = retryer.createRetryer({\n        fn: () => {\n          if (!this.options.mutationFn) {\n            return Promise.reject('No mutationFn found');\n          }\n\n          return this.options.mutationFn(this.state.variables);\n        },\n        onFail: (failureCount, error) => {\n          this.dispatch({\n            type: 'failed',\n            failureCount,\n            error\n          });\n        },\n        onPause: () => {\n          this.dispatch({\n            type: 'pause'\n          });\n        },\n        onContinue: () => {\n          this.dispatch({\n            type: 'continue'\n          });\n        },\n        retry: (_this$options$retry = this.options.retry) != null ? _this$options$retry : 0,\n        retryDelay: this.options.retryDelay,\n        networkMode: this.options.networkMode\n      });\n      return this.retryer.promise;\n    };\n\n    const restored = this.state.status === 'loading';\n\n    try {\n      var _this$mutationCache$c3, _this$mutationCache$c4, _this$options$onSucce, _this$options2, _this$mutationCache$c5, _this$mutationCache$c6, _this$options$onSettl, _this$options3;\n\n      if (!restored) {\n        var _this$mutationCache$c, _this$mutationCache$c2, _this$options$onMutat, _this$options;\n\n        this.dispatch({\n          type: 'loading',\n          variables: this.options.variables\n        }); // Notify cache callback\n\n        await ((_this$mutationCache$c = (_this$mutationCache$c2 = this.mutationCache.config).onMutate) == null ? void 0 : _this$mutationCache$c.call(_this$mutationCache$c2, this.state.variables, this));\n        const context = await ((_this$options$onMutat = (_this$options = this.options).onMutate) == null ? void 0 : _this$options$onMutat.call(_this$options, this.state.variables));\n\n        if (context !== this.state.context) {\n          this.dispatch({\n            type: 'loading',\n            context,\n            variables: this.state.variables\n          });\n        }\n      }\n\n      const data = await executeMutation(); // Notify cache callback\n\n      await ((_this$mutationCache$c3 = (_this$mutationCache$c4 = this.mutationCache.config).onSuccess) == null ? void 0 : _this$mutationCache$c3.call(_this$mutationCache$c4, data, this.state.variables, this.state.context, this));\n      await ((_this$options$onSucce = (_this$options2 = this.options).onSuccess) == null ? void 0 : _this$options$onSucce.call(_this$options2, data, this.state.variables, this.state.context)); // Notify cache callback\n\n      await ((_this$mutationCache$c5 = (_this$mutationCache$c6 = this.mutationCache.config).onSettled) == null ? void 0 : _this$mutationCache$c5.call(_this$mutationCache$c6, data, null, this.state.variables, this.state.context, this));\n      await ((_this$options$onSettl = (_this$options3 = this.options).onSettled) == null ? void 0 : _this$options$onSettl.call(_this$options3, data, null, this.state.variables, this.state.context));\n      this.dispatch({\n        type: 'success',\n        data\n      });\n      return data;\n    } catch (error) {\n      try {\n        var _this$mutationCache$c7, _this$mutationCache$c8, _this$options$onError, _this$options4, _this$mutationCache$c9, _this$mutationCache$c10, _this$options$onSettl2, _this$options5;\n\n        // Notify cache callback\n        await ((_this$mutationCache$c7 = (_this$mutationCache$c8 = this.mutationCache.config).onError) == null ? void 0 : _this$mutationCache$c7.call(_this$mutationCache$c8, error, this.state.variables, this.state.context, this));\n\n        if (process.env.NODE_ENV !== 'production') {\n          this.logger.error(error);\n        }\n\n        await ((_this$options$onError = (_this$options4 = this.options).onError) == null ? void 0 : _this$options$onError.call(_this$options4, error, this.state.variables, this.state.context)); // Notify cache callback\n\n        await ((_this$mutationCache$c9 = (_this$mutationCache$c10 = this.mutationCache.config).onSettled) == null ? void 0 : _this$mutationCache$c9.call(_this$mutationCache$c10, undefined, error, this.state.variables, this.state.context, this));\n        await ((_this$options$onSettl2 = (_this$options5 = this.options).onSettled) == null ? void 0 : _this$options$onSettl2.call(_this$options5, undefined, error, this.state.variables, this.state.context));\n        throw error;\n      } finally {\n        this.dispatch({\n          type: 'error',\n          error: error\n        });\n      }\n    }\n  }\n\n  dispatch(action) {\n    const reducer = state => {\n      switch (action.type) {\n        case 'failed':\n          return { ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n\n        case 'pause':\n          return { ...state,\n            isPaused: true\n          };\n\n        case 'continue':\n          return { ...state,\n            isPaused: false\n          };\n\n        case 'loading':\n          return { ...state,\n            context: action.context,\n            data: undefined,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: !retryer.canFetch(this.options.networkMode),\n            status: 'loading',\n            variables: action.variables\n          };\n\n        case 'success':\n          return { ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: 'success',\n            isPaused: false\n          };\n\n        case 'error':\n          return { ...state,\n            data: undefined,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: 'error'\n          };\n\n        case 'setState':\n          return { ...state,\n            ...action.state\n          };\n      }\n    };\n\n    this.state = reducer(this.state);\n    notifyManager.notifyManager.batch(() => {\n      this.observers.forEach(observer => {\n        observer.onMutationUpdate(action);\n      });\n      this.mutationCache.notify({\n        mutation: this,\n        type: 'updated',\n        action\n      });\n    });\n  }\n\n}\nfunction getDefaultState() {\n  return {\n    context: undefined,\n    data: undefined,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: 'idle',\n    variables: undefined\n  };\n}\n\nexports.Mutation = Mutation;\nexports.getDefaultState = getDefaultState;\n//# sourceMappingURL=mutation.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","getDefaultState","context","undefined","data","error","failureCount","failureReason","isPaused","status","variables","Object","defineProperty","value","logger","notifyManager","removable","retryer","Mutation","Removable","constructor","config","defaultOptions","mutationId","mutationCache","defaultLogger","observers","state","setOptions","options","scheduleGc","updateCacheTime","cacheTime","meta","setState","dispatch","type","addObserver","observer","includes","push","clearGcTimeout","notify","mutation","removeObserver","filter","x","optionalRemove","length","remove","continue","_this$retryer$continu","_this$retryer","execute","executeMutation","_this$options$retry","createRetryer","fn","mutationFn","Promise","reject","onFail","onPause","onContinue","retry","retryDelay","networkMode","promise","restored","_this$mutationCache$c3","_this$mutationCache$c4","_this$options$onSucce","_this$options2","_this$mutationCache$c5","_this$mutationCache$c6","_this$options$onSettl","_this$options3","_this$mutationCache$c","_this$mutationCache$c2","_this$options$onMutat","_this$options","onMutate","call","onSuccess","onSettled","_this$mutationCache$c7","_this$mutationCache$c8","_this$options$onError","_this$options4","_this$mutationCache$c9","_this$mutationCache$c10","_this$options$onSettl2","_this$options5","onError","action","reducer","canFetch","batch","forEach","onMutationUpdate"]
}
