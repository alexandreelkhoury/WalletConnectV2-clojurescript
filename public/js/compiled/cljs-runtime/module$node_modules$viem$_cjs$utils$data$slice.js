shadow$provide.module$node_modules$viem$_cjs$utils$data$slice=function(global,require,module,exports){function assertStartOffset(value,start){if("number"===typeof start&&0<start&&start>(0,size_js_1.size)(value)-1)throw new data_js_1.SliceOffsetOutOfBoundsError({offset:start,position:"start",size:(0,size_js_1.size)(value)});}function assertEndOffset(value,start,end){if("number"===typeof start&&"number"===typeof end&&(0,size_js_1.size)(value)!==end-start)throw new data_js_1.SliceOffsetOutOfBoundsError({offset:end,
position:"end",size:(0,size_js_1.size)(value)});}function sliceBytes(value_,start,end,{strict}={}){assertStartOffset(value_,start);value_=value_.slice(start,end);strict&&assertEndOffset(value_,start,end);return value_}function sliceHex(value_,start,end,{strict}={}){assertStartOffset(value_,start);value_=`0x${value_.replace("0x","").slice(2*(start??0),2*(end??value_.length))}`;strict&&assertEndOffset(value_,start,end);return value_}Object.defineProperty(exports,"__esModule",{value:!0});exports.sliceHex=
exports.sliceBytes=exports.slice=void 0;const data_js_1=require("module$node_modules$viem$_cjs$errors$data"),isHex_js_1=require("module$node_modules$viem$_cjs$utils$data$isHex"),size_js_1=require("module$node_modules$viem$_cjs$utils$data$size");exports.slice=function(value,start,end,{strict}={}){return(0,isHex_js_1.isHex)(value,{strict:!1})?sliceHex(value,start,end,{strict}):sliceBytes(value,start,end,{strict})};exports.sliceBytes=sliceBytes;exports.sliceHex=sliceHex}
//# sourceMappingURL=module$node_modules$viem$_cjs$utils$data$slice.js.map
