["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/viem/_cjs/utils/promise/withCache.js"],"~:js","shadow$provide.module$node_modules$viem$_cjs$utils$promise$withCache=function(global,require,module,exports){function getCache(cacheKey){const buildCache=(cacheKey,cache)=>({clear:()=>cache.delete(cacheKey),get:()=>cache.get(cacheKey),set:data=>cache.set(cacheKey,data)}),promise=buildCache(cacheKey,exports.promiseCache),response=buildCache(cacheKey,exports.responseCache);return{clear:()=>{promise.clear();response.clear()},promise,response}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.withCache=\nexports.getCache=exports.responseCache=exports.promiseCache=void 0;exports.promiseCache=new Map;exports.responseCache=new Map;exports.getCache=getCache;exports.withCache=async function(fn,{cacheKey,cacheTime=Infinity}){cacheKey=getCache(cacheKey);const response=cacheKey.response.get();if(response&&0<cacheTime&&(new Date).getTime()-response.created.getTime()<cacheTime)return response.data;cacheTime=cacheKey.promise.get();cacheTime||(cacheTime=fn(),cacheKey.promise.set(cacheTime));try{const data=await cacheTime;\ncacheKey.response.set({created:new Date,data});return data}finally{cacheKey.promise.clear()}}}","~:source","shadow$provide[\"module$node_modules$viem$_cjs$utils$promise$withCache\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.withCache = exports.getCache = exports.responseCache = exports.promiseCache = void 0;\nexports.promiseCache = new Map();\nexports.responseCache = new Map();\nfunction getCache(cacheKey) {\n    const buildCache = (cacheKey, cache) => ({\n        clear: () => cache.delete(cacheKey),\n        get: () => cache.get(cacheKey),\n        set: (data) => cache.set(cacheKey, data),\n    });\n    const promise = buildCache(cacheKey, exports.promiseCache);\n    const response = buildCache(cacheKey, exports.responseCache);\n    return {\n        clear: () => {\n            promise.clear();\n            response.clear();\n        },\n        promise,\n        response,\n    };\n}\nexports.getCache = getCache;\nasync function withCache(fn, { cacheKey, cacheTime = Infinity }) {\n    const cache = getCache(cacheKey);\n    const response = cache.response.get();\n    if (response && cacheTime > 0) {\n        const age = new Date().getTime() - response.created.getTime();\n        if (age < cacheTime)\n            return response.data;\n    }\n    let promise = cache.promise.get();\n    if (!promise) {\n        promise = fn();\n        cache.promise.set(promise);\n    }\n    try {\n        const data = await promise;\n        cache.response.set({ created: new Date(), data });\n        return data;\n    }\n    finally {\n        cache.promise.clear();\n    }\n}\nexports.withCache = withCache;\n//# sourceMappingURL=withCache.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["promise","created","promiseCache","__esModule","responseCache","value","response","set","withCache","clear","getCache","data","get"]],"~:compiled-at",1695111490268,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$viem$_cjs$utils$promise$withCache.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,qDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAMlHC,QAASA,SAAQ,CAACC,QAAD,CAAW,CACxB,MAAMC,WAAa,CAACD,QAAD,CAAWE,KAAX,CAAAD,EAAsB,EACrCE,MAAO,EAAAA,EAAMD,KAAME,CAAAA,MAAN,CAAaJ,QAAb,CADwB,CAErCK,IAAK,EAAAA,EAAMH,KAAMG,CAAAA,GAAN,CAAUL,QAAV,CAF0B,CAGrCM,IAAMC,IAADD,EAAUJ,KAAMI,CAAAA,GAAN,CAAUN,QAAV,CAAoBO,IAApB,CAHsB,EAAzC,CAKMC,QAAUP,UAAA,CAAWD,QAAX,CAAqBF,OAAQW,CAAAA,YAA7B,CALhB,CAMMC,SAAWT,UAAA,CAAWD,QAAX,CAAqBF,OAAQa,CAAAA,aAA7B,CACjB,OAAO,CACHR,MAAO,EAAAA,EAAM,CACTK,OAAQL,CAAAA,KAAR,EACAO,SAASP,CAAAA,KAAT,EAFS,CADV,CAKHK,OALG,CAMHE,QANG,CARiB,CAJ5BE,MAAOC,CAAAA,cAAP,CAAsBf,OAAtB,CAA+B,YAA/B,CAA6C,CAAEgB,MAAO,CAAA,CAAT,CAA7C,CACAhB,QAAQiB,CAAAA,SAAR;AAAoBjB,OAAQC,CAAAA,QAA5B,CAAuCD,OAAQa,CAAAA,aAA/C,CAA+Db,OAAQW,CAAAA,YAAvE,CAAsF,IAAK,EAC3FX,QAAQW,CAAAA,YAAR,CAAuB,IAAIO,GAC3BlB,QAAQa,CAAAA,aAAR,CAAwB,IAAIK,GAkB5BlB,QAAQC,CAAAA,QAAR,CAAmBA,QAuBnBD,QAAQiB,CAAAA,SAAR,CAtBAA,cAAwB,CAACE,EAAD,CAAK,CAAEjB,QAAF,CAAYkB,SAAA,CAAYC,QAAxB,CAAL,CAAyC,CACvDjB,QAAAA,CAAQH,QAAA,CAASC,QAAT,CACd,OAAMU,SAAWR,QAAMQ,CAAAA,QAASL,CAAAA,GAAf,EACjB,IAAIK,QAAJ,EAA4B,CAA5B,CAAgBQ,SAAhB,EAC2BE,CAAX,IAAIC,IAAOD,EAAAA,OAAX,EADhB,CACuCV,QAASY,CAAAA,OAAQF,CAAAA,OAAjB,EADvC,CAEcF,SAFd,CAGQ,MAAOR,SAASH,CAAAA,IAEpBC,UAAAA,CAAUN,QAAMM,CAAAA,OAAQH,CAAAA,GAAd,EACTG,UAAL,GACIA,SACA,CADUS,EAAA,EACV,CAAAf,QAAMM,CAAAA,OAAQF,CAAAA,GAAd,CAAkBE,SAAlB,CAFJ,CAIA,IAAI,CACA,MAAMD,KAAO,MAAMC,SACnBN;QAAMQ,CAAAA,QAASJ,CAAAA,GAAf,CAAmB,CAAEgB,QAAS,IAAID,IAAf,CAAuBd,IAAvB,CAAnB,CACA,OAAOA,KAHP,CAAJ,OAKQ,CACJL,QAAMM,CAAAA,OAAQL,CAAAA,KAAd,EADI,CAlBqD,CAxBiD;\",\n\"sources\":[\"node_modules/viem/_cjs/utils/promise/withCache.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$viem$_cjs$utils$promise$withCache\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.withCache = exports.getCache = exports.responseCache = exports.promiseCache = void 0;\\nexports.promiseCache = new Map();\\nexports.responseCache = new Map();\\nfunction getCache(cacheKey) {\\n    const buildCache = (cacheKey, cache) => ({\\n        clear: () => cache.delete(cacheKey),\\n        get: () => cache.get(cacheKey),\\n        set: (data) => cache.set(cacheKey, data),\\n    });\\n    const promise = buildCache(cacheKey, exports.promiseCache);\\n    const response = buildCache(cacheKey, exports.responseCache);\\n    return {\\n        clear: () => {\\n            promise.clear();\\n            response.clear();\\n        },\\n        promise,\\n        response,\\n    };\\n}\\nexports.getCache = getCache;\\nasync function withCache(fn, { cacheKey, cacheTime = Infinity }) {\\n    const cache = getCache(cacheKey);\\n    const response = cache.response.get();\\n    if (response && cacheTime > 0) {\\n        const age = new Date().getTime() - response.created.getTime();\\n        if (age < cacheTime)\\n            return response.data;\\n    }\\n    let promise = cache.promise.get();\\n    if (!promise) {\\n        promise = fn();\\n        cache.promise.set(promise);\\n    }\\n    try {\\n        const data = await promise;\\n        cache.response.set({ created: new Date(), data });\\n        return data;\\n    }\\n    finally {\\n        cache.promise.clear();\\n    }\\n}\\nexports.withCache = withCache;\\n//# sourceMappingURL=withCache.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"getCache\",\"cacheKey\",\"buildCache\",\"cache\",\"clear\",\"delete\",\"get\",\"set\",\"data\",\"promise\",\"promiseCache\",\"response\",\"responseCache\",\"Object\",\"defineProperty\",\"value\",\"withCache\",\"Map\",\"fn\",\"cacheTime\",\"Infinity\",\"getTime\",\"Date\",\"created\"]\n}\n"]