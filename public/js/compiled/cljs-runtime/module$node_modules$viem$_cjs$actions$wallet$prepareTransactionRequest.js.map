{
"version":3,
"file":"module$node_modules$viem$_cjs$actions$wallet$prepareTransactionRequest.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/viem/_cjs/actions/wallet/prepareTransactionRequest.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$viem$_cjs$actions$wallet$prepareTransactionRequest\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.prepareTransactionRequest = void 0;\nconst parseAccount_js_1 = require(\"../../accounts/utils/parseAccount.js\");\nconst estimateFeesPerGas_js_1 = require(\"../../actions/public/estimateFeesPerGas.js\");\nconst estimateGas_js_1 = require(\"../../actions/public/estimateGas.js\");\nconst getBlock_js_1 = require(\"../../actions/public/getBlock.js\");\nconst getTransactionCount_js_1 = require(\"../../actions/public/getTransactionCount.js\");\nconst account_js_1 = require(\"../../errors/account.js\");\nconst fee_js_1 = require(\"../../errors/fee.js\");\nconst assertRequest_js_1 = require(\"../../utils/transaction/assertRequest.js\");\nconst getTransactionType_js_1 = require(\"../../utils/transaction/getTransactionType.js\");\nasync function prepareTransactionRequest(client, args) {\n    const { account: account_ = client.account, chain, gas, nonce, type } = args;\n    if (!account_)\n        throw new account_js_1.AccountNotFoundError();\n    const account = (0, parseAccount_js_1.parseAccount)(account_);\n    const block = await (0, getBlock_js_1.getBlock)(client, { blockTag: 'latest' });\n    const request = { ...args, from: account.address };\n    if (typeof nonce === 'undefined')\n        request.nonce = await (0, getTransactionCount_js_1.getTransactionCount)(client, {\n            address: account.address,\n            blockTag: 'pending',\n        });\n    if (typeof type === 'undefined') {\n        try {\n            request.type = (0, getTransactionType_js_1.getTransactionType)(request);\n        }\n        catch {\n            request.type =\n                typeof block.baseFeePerGas === 'bigint' ? 'eip1559' : 'legacy';\n        }\n    }\n    if (request.type === 'eip1559') {\n        const { maxFeePerGas, maxPriorityFeePerGas } = await (0, estimateFeesPerGas_js_1.internal_estimateFeesPerGas)(client, {\n            block,\n            chain,\n            request: request,\n        });\n        if (typeof args.maxPriorityFeePerGas === 'undefined' &&\n            args.maxFeePerGas &&\n            args.maxFeePerGas < maxPriorityFeePerGas)\n            throw new fee_js_1.MaxFeePerGasTooLowError({\n                maxPriorityFeePerGas,\n            });\n        request.maxPriorityFeePerGas = maxPriorityFeePerGas;\n        request.maxFeePerGas = maxFeePerGas;\n    }\n    else {\n        if (typeof args.maxFeePerGas !== 'undefined' ||\n            typeof args.maxPriorityFeePerGas !== 'undefined')\n            throw new fee_js_1.Eip1559FeesNotSupportedError();\n        const { gasPrice: gasPrice_ } = await (0, estimateFeesPerGas_js_1.internal_estimateFeesPerGas)(client, {\n            block,\n            chain,\n            request: request,\n            type: 'legacy',\n        });\n        request.gasPrice = gasPrice_;\n    }\n    if (typeof gas === 'undefined')\n        request.gas = await (0, estimateGas_js_1.estimateGas)(client, {\n            ...request,\n            account: { address: account.address, type: 'json-rpc' },\n        });\n    (0, assertRequest_js_1.assertRequest)(request);\n    return request;\n}\nexports.prepareTransactionRequest = prepareTransactionRequest;\n//# sourceMappingURL=prepareTransactionRequest.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","prepareTransactionRequest","parseAccount_js_1","estimateFeesPerGas_js_1","estimateGas_js_1","getBlock_js_1","getTransactionCount_js_1","account_js_1","fee_js_1","assertRequest_js_1","getTransactionType_js_1","client","args","account_","account","chain","gas","nonce","type","AccountNotFoundError","parseAccount","block","getBlock","blockTag","request","from","address","getTransactionCount","getTransactionType","baseFeePerGas","maxFeePerGas","maxPriorityFeePerGas","internal_estimateFeesPerGas","MaxFeePerGasTooLowError","Eip1559FeesNotSupportedError","gasPrice_","gasPrice","estimateGas","assertRequest"]
}
