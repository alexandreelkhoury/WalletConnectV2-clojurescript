shadow$provide.module$node_modules$viem$_cjs$utils$address$getAddress=function(global,require,module,exports){function checksumAddress(address_,chainId){var hexAddress=chainId?`${chainId}${address_.toLowerCase()}`:address_.substring(2).toLowerCase();address_=(0,keccak256_js_1.keccak256)((0,toBytes_js_1.stringToBytes)(hexAddress),"bytes");chainId=(chainId?hexAddress.substring(`${chainId}0x`.length):hexAddress).split("");for(hexAddress=0;40>hexAddress;hexAddress+=2)8<=address_[hexAddress>>1]>>4&&chainId[hexAddress]&&
(chainId[hexAddress]=chainId[hexAddress].toUpperCase()),8<=(address_[hexAddress>>1]&15)&&chainId[hexAddress+1]&&(chainId[hexAddress+1]=chainId[hexAddress+1].toUpperCase());return`0x${chainId.join("")}`}Object.defineProperty(exports,"__esModule",{value:!0});exports.getAddress=exports.checksumAddress=void 0;const address_js_1=require("module$node_modules$viem$_cjs$errors$address"),toBytes_js_1=require("module$node_modules$viem$_cjs$utils$encoding$toBytes"),keccak256_js_1=require("module$node_modules$viem$_cjs$utils$hash$keccak256"),
isAddress_js_1=require("module$node_modules$viem$_cjs$utils$address$isAddress");exports.checksumAddress=checksumAddress;exports.getAddress=function(address,chainId){if(!(0,isAddress_js_1.isAddress)(address))throw new address_js_1.InvalidAddressError({address});return checksumAddress(address,chainId)}}
//# sourceMappingURL=module$node_modules$viem$_cjs$utils$address$getAddress.js.map
