["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@ethersproject/networks/lib/index.js"],"~:js","shadow$provide[296]=function(S,A,V,q){function F(e){var u=function(p,n){null==n&&(n={});var l=[];if(p.InfuraProvider&&\"-\"!==n.infura)try{l.push(new p.InfuraProvider(e,n.infura))}catch(t){}if(p.EtherscanProvider&&\"-\"!==n.etherscan)try{l.push(new p.EtherscanProvider(e,n.etherscan))}catch(t){}if(p.AlchemyProvider&&\"-\"!==n.alchemy)try{l.push(new p.AlchemyProvider(e,n.alchemy))}catch(t){}if(p.PocketProvider&&\"-\"!==n.pocket){var h=[\"goerli\",\"ropsten\",\"rinkeby\",\"sepolia\"];try{var k=new p.PocketProvider(e,\nn.pocket);k.network&&-1===h.indexOf(k.network.name)&&l.push(k)}catch(t){}}if(p.CloudflareProvider&&\"-\"!==n.cloudflare)try{l.push(new p.CloudflareProvider(e))}catch(t){}if(p.AnkrProvider&&\"-\"!==n.ankr)try{h=[\"ropsten\"],k=new p.AnkrProvider(e,n.ankr),k.network&&-1===h.indexOf(k.network.name)&&l.push(k)}catch(t){}return 0===l.length?null:p.FallbackProvider?(h=1,null!=n.quorum?h=n.quorum:\"homestead\"===e&&(h=2),new p.FallbackProvider(l,h)):l[0]};u.renetwork=function(p){return F(p)};return u}function G(e,\nu){var p=function(n,l){return n.JsonRpcProvider?new n.JsonRpcProvider(e,u):null};p.renetwork=function(n){return G(e,n)};return p}Object.defineProperty(q,\"__esModule\",{value:!0});q.getNetwork=void 0;S=A(9);A=A(295);var r=new S.Logger(A.version);A={chainId:1,ensAddress:\"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",name:\"homestead\",_defaultProvider:F(\"homestead\")};S={chainId:3,ensAddress:\"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",name:\"ropsten\",_defaultProvider:F(\"ropsten\")};V={chainId:63,name:\"classicMordor\",\n_defaultProvider:G(\"https://www.ethercluster.com/mordor\",\"classicMordor\")};var y={unspecified:{chainId:0,name:\"unspecified\"},homestead:A,mainnet:A,morden:{chainId:2,name:\"morden\"},ropsten:S,testnet:S,rinkeby:{chainId:4,ensAddress:\"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",name:\"rinkeby\",_defaultProvider:F(\"rinkeby\")},kovan:{chainId:42,name:\"kovan\",_defaultProvider:F(\"kovan\")},goerli:{chainId:5,ensAddress:\"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",name:\"goerli\",_defaultProvider:F(\"goerli\")},kintsugi:{chainId:1337702,\nname:\"kintsugi\"},sepolia:{chainId:11155111,name:\"sepolia\",_defaultProvider:F(\"sepolia\")},classic:{chainId:61,name:\"classic\",_defaultProvider:G(\"https://www.ethercluster.com/etc\",\"classic\")},classicMorden:{chainId:62,name:\"classicMorden\"},classicMordor:V,classicTestnet:V,classicKotti:{chainId:6,name:\"classicKotti\",_defaultProvider:G(\"https://www.ethercluster.com/kotti\",\"classicKotti\")},xdai:{chainId:100,name:\"xdai\"},matic:{chainId:137,name:\"matic\",_defaultProvider:F(\"matic\")},maticmum:{chainId:80001,\nname:\"maticmum\"},optimism:{chainId:10,name:\"optimism\",_defaultProvider:F(\"optimism\")},\"optimism-kovan\":{chainId:69,name:\"optimism-kovan\"},\"optimism-goerli\":{chainId:420,name:\"optimism-goerli\"},arbitrum:{chainId:42161,name:\"arbitrum\"},\"arbitrum-rinkeby\":{chainId:421611,name:\"arbitrum-rinkeby\"},\"arbitrum-goerli\":{chainId:421613,name:\"arbitrum-goerli\"},bnb:{chainId:56,name:\"bnb\"},bnbt:{chainId:97,name:\"bnbt\"}};q.getNetwork=function(e){if(null==e)return null;if(\"number\"===typeof e){for(var u in y){var p=\ny[u];if(p.chainId===e)return{name:p.name,chainId:p.chainId,ensAddress:p.ensAddress||null,_defaultProvider:p._defaultProvider||null}}return{chainId:e,name:\"unknown\"}}if(\"string\"===typeof e)return e=y[e],null==e?null:{name:e.name,chainId:e.chainId,ensAddress:e.ensAddress,_defaultProvider:e._defaultProvider||null};u=y[e.name];if(!u)return\"number\"!==typeof e.chainId&&r.throwArgumentError(\"invalid network chainId\",\"network\",e),e;0!==e.chainId&&e.chainId!==u.chainId&&r.throwArgumentError(\"network chainId mismatch\",\n\"network\",e);p=e._defaultProvider||null;null==p&&u._defaultProvider&&(p=(p=u._defaultProvider)&&\"function\"===typeof p.renetwork?u._defaultProvider.renetwork(e):u._defaultProvider);return{name:e.name,chainId:u.chainId,ensAddress:e.ensAddress||u.ensAddress||null,_defaultProvider:p}}}","~:source","shadow$provide[296] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getNetwork = void 0;\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\n;\nfunction isRenetworkable(value) {\n    return (value && typeof (value.renetwork) === \"function\");\n}\nfunction ethDefaultProvider(network) {\n    var func = function (providers, options) {\n        if (options == null) {\n            options = {};\n        }\n        var providerList = [];\n        if (providers.InfuraProvider && options.infura !== \"-\") {\n            try {\n                providerList.push(new providers.InfuraProvider(network, options.infura));\n            }\n            catch (error) { }\n        }\n        if (providers.EtherscanProvider && options.etherscan !== \"-\") {\n            try {\n                providerList.push(new providers.EtherscanProvider(network, options.etherscan));\n            }\n            catch (error) { }\n        }\n        if (providers.AlchemyProvider && options.alchemy !== \"-\") {\n            try {\n                providerList.push(new providers.AlchemyProvider(network, options.alchemy));\n            }\n            catch (error) { }\n        }\n        if (providers.PocketProvider && options.pocket !== \"-\") {\n            // These networks are currently faulty on Pocket as their\n            // network does not handle the Berlin hardfork, which is\n            // live on these ones.\n            // @TODO: This goes away once Pocket has upgraded their nodes\n            var skip = [\"goerli\", \"ropsten\", \"rinkeby\", \"sepolia\"];\n            try {\n                var provider = new providers.PocketProvider(network, options.pocket);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            }\n            catch (error) { }\n        }\n        if (providers.CloudflareProvider && options.cloudflare !== \"-\") {\n            try {\n                providerList.push(new providers.CloudflareProvider(network));\n            }\n            catch (error) { }\n        }\n        if (providers.AnkrProvider && options.ankr !== \"-\") {\n            try {\n                var skip = [\"ropsten\"];\n                var provider = new providers.AnkrProvider(network, options.ankr);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            }\n            catch (error) { }\n        }\n        if (providerList.length === 0) {\n            return null;\n        }\n        if (providers.FallbackProvider) {\n            var quorum = 1;\n            if (options.quorum != null) {\n                quorum = options.quorum;\n            }\n            else if (network === \"homestead\") {\n                quorum = 2;\n            }\n            return new providers.FallbackProvider(providerList, quorum);\n        }\n        return providerList[0];\n    };\n    func.renetwork = function (network) {\n        return ethDefaultProvider(network);\n    };\n    return func;\n}\nfunction etcDefaultProvider(url, network) {\n    var func = function (providers, options) {\n        if (providers.JsonRpcProvider) {\n            return new providers.JsonRpcProvider(url, network);\n        }\n        return null;\n    };\n    func.renetwork = function (network) {\n        return etcDefaultProvider(url, network);\n    };\n    return func;\n}\nvar homestead = {\n    chainId: 1,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"homestead\",\n    _defaultProvider: ethDefaultProvider(\"homestead\")\n};\nvar ropsten = {\n    chainId: 3,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"ropsten\",\n    _defaultProvider: ethDefaultProvider(\"ropsten\")\n};\nvar classicMordor = {\n    chainId: 63,\n    name: \"classicMordor\",\n    _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/mordor\", \"classicMordor\")\n};\n// See: https://chainlist.org\nvar networks = {\n    unspecified: { chainId: 0, name: \"unspecified\" },\n    homestead: homestead,\n    mainnet: homestead,\n    morden: { chainId: 2, name: \"morden\" },\n    ropsten: ropsten,\n    testnet: ropsten,\n    rinkeby: {\n        chainId: 4,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"rinkeby\",\n        _defaultProvider: ethDefaultProvider(\"rinkeby\")\n    },\n    kovan: {\n        chainId: 42,\n        name: \"kovan\",\n        _defaultProvider: ethDefaultProvider(\"kovan\")\n    },\n    goerli: {\n        chainId: 5,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"goerli\",\n        _defaultProvider: ethDefaultProvider(\"goerli\")\n    },\n    kintsugi: { chainId: 1337702, name: \"kintsugi\" },\n    sepolia: {\n        chainId: 11155111,\n        name: \"sepolia\",\n        _defaultProvider: ethDefaultProvider(\"sepolia\")\n    },\n    // ETC (See: #351)\n    classic: {\n        chainId: 61,\n        name: \"classic\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/etc\", \"classic\")\n    },\n    classicMorden: { chainId: 62, name: \"classicMorden\" },\n    classicMordor: classicMordor,\n    classicTestnet: classicMordor,\n    classicKotti: {\n        chainId: 6,\n        name: \"classicKotti\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/kotti\", \"classicKotti\")\n    },\n    xdai: { chainId: 100, name: \"xdai\" },\n    matic: {\n        chainId: 137,\n        name: \"matic\",\n        _defaultProvider: ethDefaultProvider(\"matic\")\n    },\n    maticmum: { chainId: 80001, name: \"maticmum\" },\n    optimism: {\n        chainId: 10,\n        name: \"optimism\",\n        _defaultProvider: ethDefaultProvider(\"optimism\")\n    },\n    \"optimism-kovan\": { chainId: 69, name: \"optimism-kovan\" },\n    \"optimism-goerli\": { chainId: 420, name: \"optimism-goerli\" },\n    arbitrum: { chainId: 42161, name: \"arbitrum\" },\n    \"arbitrum-rinkeby\": { chainId: 421611, name: \"arbitrum-rinkeby\" },\n    \"arbitrum-goerli\": { chainId: 421613, name: \"arbitrum-goerli\" },\n    bnb: { chainId: 56, name: \"bnb\" },\n    bnbt: { chainId: 97, name: \"bnbt\" },\n};\n/**\n *  getNetwork\n *\n *  Converts a named common networks or chain ID (network ID) to a Network\n *  and verifies a network is a valid Network..\n */\nfunction getNetwork(network) {\n    // No network (null)\n    if (network == null) {\n        return null;\n    }\n    if (typeof (network) === \"number\") {\n        for (var name_1 in networks) {\n            var standard_1 = networks[name_1];\n            if (standard_1.chainId === network) {\n                return {\n                    name: standard_1.name,\n                    chainId: standard_1.chainId,\n                    ensAddress: (standard_1.ensAddress || null),\n                    _defaultProvider: (standard_1._defaultProvider || null)\n                };\n            }\n        }\n        return {\n            chainId: network,\n            name: \"unknown\"\n        };\n    }\n    if (typeof (network) === \"string\") {\n        var standard_2 = networks[network];\n        if (standard_2 == null) {\n            return null;\n        }\n        return {\n            name: standard_2.name,\n            chainId: standard_2.chainId,\n            ensAddress: standard_2.ensAddress,\n            _defaultProvider: (standard_2._defaultProvider || null)\n        };\n    }\n    var standard = networks[network.name];\n    // Not a standard network; check that it is a valid network in general\n    if (!standard) {\n        if (typeof (network.chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid network chainId\", \"network\", network);\n        }\n        return network;\n    }\n    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)\n    if (network.chainId !== 0 && network.chainId !== standard.chainId) {\n        logger.throwArgumentError(\"network chainId mismatch\", \"network\", network);\n    }\n    // @TODO: In the next major version add an attach function to a defaultProvider\n    // class and move the _defaultProvider internal to this file (extend Network)\n    var defaultProvider = network._defaultProvider || null;\n    if (defaultProvider == null && standard._defaultProvider) {\n        if (isRenetworkable(standard._defaultProvider)) {\n            defaultProvider = standard._defaultProvider.renetwork(network);\n        }\n        else {\n            defaultProvider = standard._defaultProvider;\n        }\n    }\n    // Standard Network (allow overriding the ENS address)\n    return {\n        name: network.name,\n        chainId: standard.chainId,\n        ensAddress: (network.ensAddress || standard.ensAddress || null),\n        _defaultProvider: defaultProvider\n    };\n}\nexports.getNetwork = getNetwork;\n//# sourceMappingURL=index.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$$ethersproject$networks$lib$_version","~$module$node_modules$$ethersproject$logger$lib$index"]],"~:properties",["^5",["ropsten","unspecified","bnb","morden","optimism","chainId","homestead","classicMordor","__esModule","goerli","classic","name","value","bnbt","mainnet","maticmum","kintsugi","xdai","classicTestnet","renetwork","testnet","rinkeby","classicMorden","classicKotti","getNetwork","_defaultProvider","kovan","matic","ensAddress","arbitrum","sepolia"]],"~:compiled-at",1695041440890,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$ethersproject$networks$lib$index.js\",\n\"lineCount\":8,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAW9DC,QAASA,EAAkB,CAACC,CAAD,CAAU,CACjC,IAAIC,EAAOA,QAAS,CAACC,CAAD,CAAYC,CAAZ,CAAqB,CACtB,IAAf,EAAIA,CAAJ,GACIA,CADJ,CACc,EADd,CAGA,KAAIC,EAAe,EACnB,IAAIF,CAAUG,CAAAA,cAAd,EAAmD,GAAnD,GAAgCF,CAAQG,CAAAA,MAAxC,CACI,GAAI,CACAF,CAAaG,CAAAA,IAAb,CAAkB,IAAIL,CAAUG,CAAAA,cAAd,CAA6BL,CAA7B,CAAsCG,CAAQG,CAAAA,MAA9C,CAAlB,CADA,CAGJ,MAAOE,CAAP,CAAc,EAElB,GAAIN,CAAUO,CAAAA,iBAAd,EAAyD,GAAzD,GAAmCN,CAAQO,CAAAA,SAA3C,CACI,GAAI,CACAN,CAAaG,CAAAA,IAAb,CAAkB,IAAIL,CAAUO,CAAAA,iBAAd,CAAgCT,CAAhC,CAAyCG,CAAQO,CAAAA,SAAjD,CAAlB,CADA,CAGJ,MAAOF,CAAP,CAAc,EAElB,GAAIN,CAAUS,CAAAA,eAAd,EAAqD,GAArD,GAAiCR,CAAQS,CAAAA,OAAzC,CACI,GAAI,CACAR,CAAaG,CAAAA,IAAb,CAAkB,IAAIL,CAAUS,CAAAA,eAAd,CAA8BX,CAA9B,CAAuCG,CAAQS,CAAAA,OAA/C,CAAlB,CADA,CAGJ,MAAOJ,CAAP,CAAc,EAElB,GAAIN,CAAUW,CAAAA,cAAd,EAAmD,GAAnD,GAAgCV,CAAQW,CAAAA,MAAxC,CAAwD,CAKpD,IAAIC,EAAO,CAAC,QAAD,CAAW,SAAX,CAAsB,SAAtB,CAAiC,SAAjC,CACX,IAAI,CACA,IAAIC,EAAW,IAAId,CAAUW,CAAAA,cAAd,CAA6Bb,CAA7B;AAAsCG,CAAQW,CAAAA,MAA9C,CACXE,EAAShB,CAAAA,OAAb,EAAgE,CAAC,CAAjE,GAAwBe,CAAKE,CAAAA,OAAL,CAAaD,CAAShB,CAAAA,OAAQkB,CAAAA,IAA9B,CAAxB,EACId,CAAaG,CAAAA,IAAb,CAAkBS,CAAlB,CAHJ,CAMJ,MAAOR,CAAP,CAAc,EAZsC,CAcxD,GAAIN,CAAUiB,CAAAA,kBAAd,EAA2D,GAA3D,GAAoChB,CAAQiB,CAAAA,UAA5C,CACI,GAAI,CACAhB,CAAaG,CAAAA,IAAb,CAAkB,IAAIL,CAAUiB,CAAAA,kBAAd,CAAiCnB,CAAjC,CAAlB,CADA,CAGJ,MAAOQ,CAAP,CAAc,EAElB,GAAIN,CAAUmB,CAAAA,YAAd,EAA+C,GAA/C,GAA8BlB,CAAQmB,CAAAA,IAAtC,CACI,GAAI,CACIP,CAEJ,CAFW,CAAC,SAAD,CAEX,CADIC,CACJ,CADe,IAAId,CAAUmB,CAAAA,YAAd,CAA2BrB,CAA3B,CAAoCG,CAAQmB,CAAAA,IAA5C,CACf,CAAIN,CAAShB,CAAAA,OAAb,EAAgE,CAAC,CAAjE,GAAwBe,CAAKE,CAAAA,OAAL,CAAaD,CAAShB,CAAAA,OAAQkB,CAAAA,IAA9B,CAAxB,EACId,CAAaG,CAAAA,IAAb,CAAkBS,CAAlB,CAJJ,CAOJ,MAAOR,CAAP,CAAc,EAElB,MAA4B,EAA5B,GAAIJ,CAAamB,CAAAA,MAAjB,CACW,IADX,CAGIrB,CAAUsB,CAAAA,gBAAd,EACQC,CAOG,CAPM,CAON,CANe,IAAtB,EAAItB,CAAQsB,CAAAA,MAAZ,CACIA,CADJ,CACatB,CAAQsB,CAAAA,MADrB,CAGqB,WAHrB,GAGSzB,CAHT,GAIIyB,CAJJ,CAIa,CAJb,CAMO,CAAA,IAAIvB,CAAUsB,CAAAA,gBAAd,CAA+BpB,CAA/B,CAA6CqB,CAA7C,CARX,EAUOrB,CAAA,CAAa,CAAb,CAlE8B,CAoEzCH,EAAKyB,CAAAA,SAAL,CAAiBC,QAAS,CAAC3B,CAAD,CAAU,CAChC,MAAOD,EAAA,CAAmBC,CAAnB,CADyB,CAGpC,OAAOC,EAxE0B,CA0ErC2B,QAASA,EAAkB,CAACC,CAAD;AAAM7B,CAAN,CAAe,CACtC,IAAIC,EAAOA,QAAS,CAACC,CAAD,CAAYC,CAAZ,CAAqB,CACrC,MAAID,EAAU4B,CAAAA,eAAd,CACW,IAAI5B,CAAU4B,CAAAA,eAAd,CAA8BD,CAA9B,CAAmC7B,CAAnC,CADX,CAGO,IAJ8B,CAMzCC,EAAKyB,CAAAA,SAAL,CAAiBC,QAAS,CAAC3B,CAAD,CAAU,CAChC,MAAO4B,EAAA,CAAmBC,CAAnB,CAAwB7B,CAAxB,CADyB,CAGpC,OAAOC,EAV+B,CAnF1C8B,MAAOC,CAAAA,cAAP,CAAsBlC,CAAtB,CAA+B,YAA/B,CAA6C,CAAEmC,MAAO,CAAA,CAAT,CAA7C,CACAnC,EAAQoC,CAAAA,UAAR,CAAqB,IAAK,EACtBC,EAAAA,CAAWvC,CAAA,CAAQ,CAAR,CACXwC,EAAAA,CAAaxC,CAAA,CAAQ,GAAR,CACjB,KAAIyC,EAAS,IAAIF,CAASG,CAAAA,MAAb,CAAoBF,CAAWG,CAAAA,OAA/B,CA2FTC,EAAAA,CAAY,CACZC,QAAS,CADG,CAEZC,WAAY,4CAFA,CAGZxB,KAAM,WAHM,CAIZyB,iBAAkB5C,CAAA,CAAmB,WAAnB,CAJN,CAMZ6C,EAAAA,CAAU,CACVH,QAAS,CADC,CAEVC,WAAY,4CAFF,CAGVxB,KAAM,SAHI,CAIVyB,iBAAkB5C,CAAA,CAAmB,SAAnB,CAJR,CAMV8C,EAAAA,CAAgB,CAChBJ,QAAS,EADO,CAEhBvB,KAAM,eAFU;AAGhByB,iBAAkBf,CAAA,CAAmB,qCAAnB,CAA0D,eAA1D,CAHF,CAMpB,KAAIkB,EAAW,CACXC,YAAa,CAAEN,QAAS,CAAX,CAAcvB,KAAM,aAApB,CADF,CAEXsB,UAAWA,CAFA,CAGXQ,QAASR,CAHE,CAIXS,OAAQ,CAAER,QAAS,CAAX,CAAcvB,KAAM,QAApB,CAJG,CAKX0B,QAASA,CALE,CAMXM,QAASN,CANE,CAOXO,QAAS,CACLV,QAAS,CADJ,CAELC,WAAY,4CAFP,CAGLxB,KAAM,SAHD,CAILyB,iBAAkB5C,CAAA,CAAmB,SAAnB,CAJb,CAPE,CAaXqD,MAAO,CACHX,QAAS,EADN,CAEHvB,KAAM,OAFH,CAGHyB,iBAAkB5C,CAAA,CAAmB,OAAnB,CAHf,CAbI,CAkBXsD,OAAQ,CACJZ,QAAS,CADL,CAEJC,WAAY,4CAFR,CAGJxB,KAAM,QAHF,CAIJyB,iBAAkB5C,CAAA,CAAmB,QAAnB,CAJd,CAlBG,CAwBXuD,SAAU,CAAEb,QAAS,OAAX;AAAoBvB,KAAM,UAA1B,CAxBC,CAyBXqC,QAAS,CACLd,QAAS,QADJ,CAELvB,KAAM,SAFD,CAGLyB,iBAAkB5C,CAAA,CAAmB,SAAnB,CAHb,CAzBE,CA+BXyD,QAAS,CACLf,QAAS,EADJ,CAELvB,KAAM,SAFD,CAGLyB,iBAAkBf,CAAA,CAAmB,kCAAnB,CAAwD,SAAxD,CAHb,CA/BE,CAoCX6B,cAAe,CAAEhB,QAAS,EAAX,CAAevB,KAAM,eAArB,CApCJ,CAqCX2B,cAAeA,CArCJ,CAsCXa,eAAgBb,CAtCL,CAuCXc,aAAc,CACVlB,QAAS,CADC,CAEVvB,KAAM,cAFI,CAGVyB,iBAAkBf,CAAA,CAAmB,oCAAnB,CAA0D,cAA1D,CAHR,CAvCH,CA4CXgC,KAAM,CAAEnB,QAAS,GAAX,CAAgBvB,KAAM,MAAtB,CA5CK,CA6CX2C,MAAO,CACHpB,QAAS,GADN,CAEHvB,KAAM,OAFH,CAGHyB,iBAAkB5C,CAAA,CAAmB,OAAnB,CAHf,CA7CI,CAkDX+D,SAAU,CAAErB,QAAS,KAAX;AAAkBvB,KAAM,UAAxB,CAlDC,CAmDX6C,SAAU,CACNtB,QAAS,EADH,CAENvB,KAAM,UAFA,CAGNyB,iBAAkB5C,CAAA,CAAmB,UAAnB,CAHZ,CAnDC,CAwDX,iBAAkB,CAAE0C,QAAS,EAAX,CAAevB,KAAM,gBAArB,CAxDP,CAyDX,kBAAmB,CAAEuB,QAAS,GAAX,CAAgBvB,KAAM,iBAAtB,CAzDR,CA0DX8C,SAAU,CAAEvB,QAAS,KAAX,CAAkBvB,KAAM,UAAxB,CA1DC,CA2DX,mBAAoB,CAAEuB,QAAS,MAAX,CAAmBvB,KAAM,kBAAzB,CA3DT,CA4DX,kBAAmB,CAAEuB,QAAS,MAAX,CAAmBvB,KAAM,iBAAzB,CA5DR,CA6DX+C,IAAK,CAAExB,QAAS,EAAX,CAAevB,KAAM,KAArB,CA7DM,CA8DXgD,KAAM,CAAEzB,QAAS,EAAX,CAAevB,KAAM,MAArB,CA9DK,CAuIfpB,EAAQoC,CAAAA,UAAR,CAjEAA,QAAmB,CAAClC,CAAD,CAAU,CAEzB,GAAe,IAAf,EAAIA,CAAJ,CACI,MAAO,KAEX,IAAyB,QAAzB,GAAI,MAAQA,EAAZ,CAAmC,CAC/B,IAAKmE,IAAIA,CAAT,GAAmBrB,EAAnB,CAA6B,CACzB,IAAIsB;AAAatB,CAAA,CAASqB,CAAT,CACjB,IAAIC,CAAW3B,CAAAA,OAAf,GAA2BzC,CAA3B,CACI,MAAO,CACHkB,KAAMkD,CAAWlD,CAAAA,IADd,CAEHuB,QAAS2B,CAAW3B,CAAAA,OAFjB,CAGHC,WAAa0B,CAAW1B,CAAAA,UAAxBA,EAAsC,IAHnC,CAIHC,iBAAmByB,CAAWzB,CAAAA,gBAA9BA,EAAkD,IAJ/C,CAHc,CAW7B,MAAO,CACHF,QAASzC,CADN,CAEHkB,KAAM,SAFH,CAZwB,CAiBnC,GAAyB,QAAzB,GAAI,MAAQlB,EAAZ,CAEI,MADIqE,EACJ,CADiBvB,CAAA,CAAS9C,CAAT,CACjB,CAAkB,IAAlB,EAAIqE,CAAJ,CACW,IADX,CAGO,CACHnD,KAAMmD,CAAWnD,CAAAA,IADd,CAEHuB,QAAS4B,CAAW5B,CAAAA,OAFjB,CAGHC,WAAY2B,CAAW3B,CAAAA,UAHpB,CAIHC,iBAAmB0B,CAAW1B,CAAAA,gBAA9BA,EAAkD,IAJ/C,CAOP2B,EAAAA,CAAWxB,CAAA,CAAS9C,CAAQkB,CAAAA,IAAjB,CAEf,IAAI,CAACoD,CAAL,CAII,MAHiC,QAG1BtE,GAHH,MAAQA,EAAQyC,CAAAA,OAGbzC,EAFHqC,CAAOkC,CAAAA,kBAAP,CAA0B,yBAA1B,CAAqD,SAArD,CAAgEvE,CAAhE,CAEGA,CAAAA,CAGa,EAAxB,GAAIA,CAAQyC,CAAAA,OAAZ,EAA6BzC,CAAQyC,CAAAA,OAArC,GAAiD6B,CAAS7B,CAAAA,OAA1D,EACIJ,CAAOkC,CAAAA,kBAAP,CAA0B,0BAA1B;AAAsD,SAAtD,CAAiEvE,CAAjE,CAIAwE,EAAAA,CAAkBxE,CAAQ2C,CAAAA,gBAA1B6B,EAA8C,IAC3B,KAAvB,EAAIA,CAAJ,EAA+BF,CAAS3B,CAAAA,gBAAxC,GAEQ6B,CAFR,CACI,CAA6B7B,CAA7B,CAAoB2B,CAAS3B,CAAAA,gBAA7B,GAlO0C,UAkO1C,GAlOa,MAAQV,EAAMP,CAAAA,SAkO3B,CACsB4C,CAAS3B,CAAAA,gBAAiBjB,CAAAA,SAA1B,CAAoC1B,CAApC,CADtB,CAIsBsE,CAAS3B,CAAAA,gBALnC,CASA,OAAO,CACHzB,KAAMlB,CAAQkB,CAAAA,IADX,CAEHuB,QAAS6B,CAAS7B,CAAAA,OAFf,CAGHC,WAAa1C,CAAQ0C,CAAAA,UAArBA,EAAmC4B,CAAS5B,CAAAA,UAA5CA,EAA0D,IAHvD,CAIHC,iBAAkB6B,CAJf,CA1DkB,CAzLiC;\",\n\"sources\":[\"node_modules/@ethersproject/networks/lib/index.js\"],\n\"sourcesContent\":[\"shadow$provide[296] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.getNetwork = void 0;\\nvar logger_1 = require(\\\"@ethersproject/logger\\\");\\nvar _version_1 = require(\\\"./_version\\\");\\nvar logger = new logger_1.Logger(_version_1.version);\\n;\\nfunction isRenetworkable(value) {\\n    return (value && typeof (value.renetwork) === \\\"function\\\");\\n}\\nfunction ethDefaultProvider(network) {\\n    var func = function (providers, options) {\\n        if (options == null) {\\n            options = {};\\n        }\\n        var providerList = [];\\n        if (providers.InfuraProvider && options.infura !== \\\"-\\\") {\\n            try {\\n                providerList.push(new providers.InfuraProvider(network, options.infura));\\n            }\\n            catch (error) { }\\n        }\\n        if (providers.EtherscanProvider && options.etherscan !== \\\"-\\\") {\\n            try {\\n                providerList.push(new providers.EtherscanProvider(network, options.etherscan));\\n            }\\n            catch (error) { }\\n        }\\n        if (providers.AlchemyProvider && options.alchemy !== \\\"-\\\") {\\n            try {\\n                providerList.push(new providers.AlchemyProvider(network, options.alchemy));\\n            }\\n            catch (error) { }\\n        }\\n        if (providers.PocketProvider && options.pocket !== \\\"-\\\") {\\n            // These networks are currently faulty on Pocket as their\\n            // network does not handle the Berlin hardfork, which is\\n            // live on these ones.\\n            // @TODO: This goes away once Pocket has upgraded their nodes\\n            var skip = [\\\"goerli\\\", \\\"ropsten\\\", \\\"rinkeby\\\", \\\"sepolia\\\"];\\n            try {\\n                var provider = new providers.PocketProvider(network, options.pocket);\\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\\n                    providerList.push(provider);\\n                }\\n            }\\n            catch (error) { }\\n        }\\n        if (providers.CloudflareProvider && options.cloudflare !== \\\"-\\\") {\\n            try {\\n                providerList.push(new providers.CloudflareProvider(network));\\n            }\\n            catch (error) { }\\n        }\\n        if (providers.AnkrProvider && options.ankr !== \\\"-\\\") {\\n            try {\\n                var skip = [\\\"ropsten\\\"];\\n                var provider = new providers.AnkrProvider(network, options.ankr);\\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\\n                    providerList.push(provider);\\n                }\\n            }\\n            catch (error) { }\\n        }\\n        if (providerList.length === 0) {\\n            return null;\\n        }\\n        if (providers.FallbackProvider) {\\n            var quorum = 1;\\n            if (options.quorum != null) {\\n                quorum = options.quorum;\\n            }\\n            else if (network === \\\"homestead\\\") {\\n                quorum = 2;\\n            }\\n            return new providers.FallbackProvider(providerList, quorum);\\n        }\\n        return providerList[0];\\n    };\\n    func.renetwork = function (network) {\\n        return ethDefaultProvider(network);\\n    };\\n    return func;\\n}\\nfunction etcDefaultProvider(url, network) {\\n    var func = function (providers, options) {\\n        if (providers.JsonRpcProvider) {\\n            return new providers.JsonRpcProvider(url, network);\\n        }\\n        return null;\\n    };\\n    func.renetwork = function (network) {\\n        return etcDefaultProvider(url, network);\\n    };\\n    return func;\\n}\\nvar homestead = {\\n    chainId: 1,\\n    ensAddress: \\\"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\\\",\\n    name: \\\"homestead\\\",\\n    _defaultProvider: ethDefaultProvider(\\\"homestead\\\")\\n};\\nvar ropsten = {\\n    chainId: 3,\\n    ensAddress: \\\"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\\\",\\n    name: \\\"ropsten\\\",\\n    _defaultProvider: ethDefaultProvider(\\\"ropsten\\\")\\n};\\nvar classicMordor = {\\n    chainId: 63,\\n    name: \\\"classicMordor\\\",\\n    _defaultProvider: etcDefaultProvider(\\\"https://www.ethercluster.com/mordor\\\", \\\"classicMordor\\\")\\n};\\n// See: https://chainlist.org\\nvar networks = {\\n    unspecified: { chainId: 0, name: \\\"unspecified\\\" },\\n    homestead: homestead,\\n    mainnet: homestead,\\n    morden: { chainId: 2, name: \\\"morden\\\" },\\n    ropsten: ropsten,\\n    testnet: ropsten,\\n    rinkeby: {\\n        chainId: 4,\\n        ensAddress: \\\"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\\\",\\n        name: \\\"rinkeby\\\",\\n        _defaultProvider: ethDefaultProvider(\\\"rinkeby\\\")\\n    },\\n    kovan: {\\n        chainId: 42,\\n        name: \\\"kovan\\\",\\n        _defaultProvider: ethDefaultProvider(\\\"kovan\\\")\\n    },\\n    goerli: {\\n        chainId: 5,\\n        ensAddress: \\\"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\\\",\\n        name: \\\"goerli\\\",\\n        _defaultProvider: ethDefaultProvider(\\\"goerli\\\")\\n    },\\n    kintsugi: { chainId: 1337702, name: \\\"kintsugi\\\" },\\n    sepolia: {\\n        chainId: 11155111,\\n        name: \\\"sepolia\\\",\\n        _defaultProvider: ethDefaultProvider(\\\"sepolia\\\")\\n    },\\n    // ETC (See: #351)\\n    classic: {\\n        chainId: 61,\\n        name: \\\"classic\\\",\\n        _defaultProvider: etcDefaultProvider(\\\"https:/\\\\/www.ethercluster.com/etc\\\", \\\"classic\\\")\\n    },\\n    classicMorden: { chainId: 62, name: \\\"classicMorden\\\" },\\n    classicMordor: classicMordor,\\n    classicTestnet: classicMordor,\\n    classicKotti: {\\n        chainId: 6,\\n        name: \\\"classicKotti\\\",\\n        _defaultProvider: etcDefaultProvider(\\\"https:/\\\\/www.ethercluster.com/kotti\\\", \\\"classicKotti\\\")\\n    },\\n    xdai: { chainId: 100, name: \\\"xdai\\\" },\\n    matic: {\\n        chainId: 137,\\n        name: \\\"matic\\\",\\n        _defaultProvider: ethDefaultProvider(\\\"matic\\\")\\n    },\\n    maticmum: { chainId: 80001, name: \\\"maticmum\\\" },\\n    optimism: {\\n        chainId: 10,\\n        name: \\\"optimism\\\",\\n        _defaultProvider: ethDefaultProvider(\\\"optimism\\\")\\n    },\\n    \\\"optimism-kovan\\\": { chainId: 69, name: \\\"optimism-kovan\\\" },\\n    \\\"optimism-goerli\\\": { chainId: 420, name: \\\"optimism-goerli\\\" },\\n    arbitrum: { chainId: 42161, name: \\\"arbitrum\\\" },\\n    \\\"arbitrum-rinkeby\\\": { chainId: 421611, name: \\\"arbitrum-rinkeby\\\" },\\n    \\\"arbitrum-goerli\\\": { chainId: 421613, name: \\\"arbitrum-goerli\\\" },\\n    bnb: { chainId: 56, name: \\\"bnb\\\" },\\n    bnbt: { chainId: 97, name: \\\"bnbt\\\" },\\n};\\n/**\\n *  getNetwork\\n *\\n *  Converts a named common networks or chain ID (network ID) to a Network\\n *  and verifies a network is a valid Network..\\n */\\nfunction getNetwork(network) {\\n    // No network (null)\\n    if (network == null) {\\n        return null;\\n    }\\n    if (typeof (network) === \\\"number\\\") {\\n        for (var name_1 in networks) {\\n            var standard_1 = networks[name_1];\\n            if (standard_1.chainId === network) {\\n                return {\\n                    name: standard_1.name,\\n                    chainId: standard_1.chainId,\\n                    ensAddress: (standard_1.ensAddress || null),\\n                    _defaultProvider: (standard_1._defaultProvider || null)\\n                };\\n            }\\n        }\\n        return {\\n            chainId: network,\\n            name: \\\"unknown\\\"\\n        };\\n    }\\n    if (typeof (network) === \\\"string\\\") {\\n        var standard_2 = networks[network];\\n        if (standard_2 == null) {\\n            return null;\\n        }\\n        return {\\n            name: standard_2.name,\\n            chainId: standard_2.chainId,\\n            ensAddress: standard_2.ensAddress,\\n            _defaultProvider: (standard_2._defaultProvider || null)\\n        };\\n    }\\n    var standard = networks[network.name];\\n    // Not a standard network; check that it is a valid network in general\\n    if (!standard) {\\n        if (typeof (network.chainId) !== \\\"number\\\") {\\n            logger.throwArgumentError(\\\"invalid network chainId\\\", \\\"network\\\", network);\\n        }\\n        return network;\\n    }\\n    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)\\n    if (network.chainId !== 0 && network.chainId !== standard.chainId) {\\n        logger.throwArgumentError(\\\"network chainId mismatch\\\", \\\"network\\\", network);\\n    }\\n    // @TODO: In the next major version add an attach function to a defaultProvider\\n    // class and move the _defaultProvider internal to this file (extend Network)\\n    var defaultProvider = network._defaultProvider || null;\\n    if (defaultProvider == null && standard._defaultProvider) {\\n        if (isRenetworkable(standard._defaultProvider)) {\\n            defaultProvider = standard._defaultProvider.renetwork(network);\\n        }\\n        else {\\n            defaultProvider = standard._defaultProvider;\\n        }\\n    }\\n    // Standard Network (allow overriding the ENS address)\\n    return {\\n        name: network.name,\\n        chainId: standard.chainId,\\n        ensAddress: (network.ensAddress || standard.ensAddress || null),\\n        _defaultProvider: defaultProvider\\n    };\\n}\\nexports.getNetwork = getNetwork;\\n//# sourceMappingURL=index.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"ethDefaultProvider\",\"network\",\"func\",\"providers\",\"options\",\"providerList\",\"InfuraProvider\",\"infura\",\"push\",\"error\",\"EtherscanProvider\",\"etherscan\",\"AlchemyProvider\",\"alchemy\",\"PocketProvider\",\"pocket\",\"skip\",\"provider\",\"indexOf\",\"name\",\"CloudflareProvider\",\"cloudflare\",\"AnkrProvider\",\"ankr\",\"length\",\"FallbackProvider\",\"quorum\",\"renetwork\",\"func.renetwork\",\"etcDefaultProvider\",\"url\",\"JsonRpcProvider\",\"Object\",\"defineProperty\",\"value\",\"getNetwork\",\"logger_1\",\"_version_1\",\"logger\",\"Logger\",\"version\",\"homestead\",\"chainId\",\"ensAddress\",\"_defaultProvider\",\"ropsten\",\"classicMordor\",\"networks\",\"unspecified\",\"mainnet\",\"morden\",\"testnet\",\"rinkeby\",\"kovan\",\"goerli\",\"kintsugi\",\"sepolia\",\"classic\",\"classicMorden\",\"classicTestnet\",\"classicKotti\",\"xdai\",\"matic\",\"maticmum\",\"optimism\",\"arbitrum\",\"bnb\",\"bnbt\",\"name_1\",\"standard_1\",\"standard_2\",\"standard\",\"throwArgumentError\",\"defaultProvider\"]\n}\n"]