["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@ethersproject/providers/lib/formatter.js"],"~:js","shadow$provide.module$node_modules$$ethersproject$providers$lib$formatter=function(global,require,module,exports){function isCommunityResourcable(value){return value&&\"function\"===typeof value.isCommunityResource}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.showThrottleMessage=exports.isCommunityResource=exports.isCommunityResourcable=exports.Formatter=void 0;var address_1=require(\"module$node_modules$$ethersproject$address$lib$index\"),bignumber_1=require(\"module$node_modules$$ethersproject$bignumber$lib$index\"),\nbytes_1=require(\"module$node_modules$$ethersproject$bytes$lib$index\"),constants_1=require(\"module$node_modules$$ethersproject$constants$lib$index\"),properties_1=require(\"module$node_modules$$ethersproject$properties$lib$index\"),transactions_1=require(\"module$node_modules$$ethersproject$transactions$lib$index\");global=require(\"module$node_modules$$ethersproject$logger$lib$index\");require=require(\"module$node_modules$$ethersproject$providers$lib$_version\");var logger=new global.Logger(require.version);\nrequire=function(){function Formatter(){this.formats=this.getDefaultFormats()}Formatter.prototype.getDefaultFormats=function(){var _this=this,formats={},address=this.address.bind(this),bigNumber=this.bigNumber.bind(this),blockTag=this.blockTag.bind(this),data=this.data.bind(this),hash=this.hash.bind(this),hex=this.hex.bind(this),number=this.number.bind(this),type=this.type.bind(this);formats.transaction={hash,type,accessList:Formatter.allowNull(this.accessList.bind(this),null),blockHash:Formatter.allowNull(hash,\nnull),blockNumber:Formatter.allowNull(number,null),transactionIndex:Formatter.allowNull(number,null),confirmations:Formatter.allowNull(number,null),from:address,gasPrice:Formatter.allowNull(bigNumber),maxPriorityFeePerGas:Formatter.allowNull(bigNumber),maxFeePerGas:Formatter.allowNull(bigNumber),gasLimit:bigNumber,to:Formatter.allowNull(address,null),value:bigNumber,nonce:number,data,r:Formatter.allowNull(this.uint256),s:Formatter.allowNull(this.uint256),v:Formatter.allowNull(number),creates:Formatter.allowNull(address,\nnull),raw:Formatter.allowNull(data)};formats.transactionRequest={from:Formatter.allowNull(address),nonce:Formatter.allowNull(number),gasLimit:Formatter.allowNull(bigNumber),gasPrice:Formatter.allowNull(bigNumber),maxPriorityFeePerGas:Formatter.allowNull(bigNumber),maxFeePerGas:Formatter.allowNull(bigNumber),to:Formatter.allowNull(address),value:Formatter.allowNull(bigNumber),data:Formatter.allowNull(function(v){return _this.data(v,!0)}),type:Formatter.allowNull(number),accessList:Formatter.allowNull(this.accessList.bind(this),\nnull)};formats.receiptLog={transactionIndex:number,blockNumber:number,transactionHash:hash,address,topics:Formatter.arrayOf(hash),data,logIndex:number,blockHash:hash};formats.receipt={to:Formatter.allowNull(this.address,null),from:Formatter.allowNull(this.address,null),contractAddress:Formatter.allowNull(address,null),transactionIndex:number,root:Formatter.allowNull(hex),gasUsed:bigNumber,logsBloom:Formatter.allowNull(data),blockHash:hash,transactionHash:hash,logs:Formatter.arrayOf(this.receiptLog.bind(this)),\nblockNumber:number,confirmations:Formatter.allowNull(number,null),cumulativeGasUsed:bigNumber,effectiveGasPrice:Formatter.allowNull(bigNumber),status:Formatter.allowNull(number),type};formats.block={hash:Formatter.allowNull(hash),parentHash:hash,number,timestamp:number,nonce:Formatter.allowNull(hex),difficulty:this.difficulty.bind(this),gasLimit:bigNumber,gasUsed:bigNumber,miner:Formatter.allowNull(address),extraData:data,transactions:Formatter.allowNull(Formatter.arrayOf(hash)),baseFeePerGas:Formatter.allowNull(bigNumber)};\nformats.blockWithTransactions=(0,properties_1.shallowCopy)(formats.block);formats.blockWithTransactions.transactions=Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));formats.filter={fromBlock:Formatter.allowNull(blockTag,void 0),toBlock:Formatter.allowNull(blockTag,void 0),blockHash:Formatter.allowNull(hash,void 0),address:Formatter.allowNull(address,void 0),topics:Formatter.allowNull(this.topics.bind(this),void 0)};formats.filterLog={blockNumber:Formatter.allowNull(number),\nblockHash:Formatter.allowNull(hash),transactionIndex:number,removed:Formatter.allowNull(this.boolean.bind(this)),address,data:Formatter.allowFalsish(data,\"0x\"),topics:Formatter.arrayOf(hash),transactionHash:hash,logIndex:number};return formats};Formatter.prototype.accessList=function(accessList){return(0,transactions_1.accessListify)(accessList||[])};Formatter.prototype.number=function(number){return\"0x\"===number?0:bignumber_1.BigNumber.from(number).toNumber()};Formatter.prototype.type=function(number){return\"0x\"===\nnumber||null==number?0:bignumber_1.BigNumber.from(number).toNumber()};Formatter.prototype.bigNumber=function(value){return bignumber_1.BigNumber.from(value)};Formatter.prototype.boolean=function(value){if(\"boolean\"===typeof value)return value;if(\"string\"===typeof value){value=value.toLowerCase();if(\"true\"===value)return!0;if(\"false\"===value)return!1}throw Error(\"invalid boolean - \"+value);};Formatter.prototype.hex=function(value,strict){return\"string\"===typeof value&&(strict||\"0x\"===value.substring(0,\n2)||(value=\"0x\"+value),(0,bytes_1.isHexString)(value))?value.toLowerCase():logger.throwArgumentError(\"invalid hash\",\"value\",value)};Formatter.prototype.data=function(value,strict){strict=this.hex(value,strict);if(0!==strict.length%2)throw Error(\"invalid data; odd-length - \"+value);return strict};Formatter.prototype.address=function(value){return(0,address_1.getAddress)(value)};Formatter.prototype.callAddress=function(value){if(!(0,bytes_1.isHexString)(value,32))return null;value=(0,address_1.getAddress)((0,bytes_1.hexDataSlice)(value,\n12));return value===constants_1.AddressZero?null:value};Formatter.prototype.contractAddress=function(value){return(0,address_1.getContractAddress)(value)};Formatter.prototype.blockTag=function(blockTag){if(null==blockTag)return\"latest\";if(\"earliest\"===blockTag)return\"0x0\";switch(blockTag){case \"earliest\":return\"0x0\";case \"latest\":case \"pending\":case \"safe\":case \"finalized\":return blockTag}if(\"number\"===typeof blockTag||(0,bytes_1.isHexString)(blockTag))return(0,bytes_1.hexValue)(blockTag);throw Error(\"invalid blockTag\");\n};Formatter.prototype.hash=function(value,strict){strict=this.hex(value,strict);return 32!==(0,bytes_1.hexDataLength)(strict)?logger.throwArgumentError(\"invalid hash\",\"value\",value):strict};Formatter.prototype.difficulty=function(value){if(null==value)return null;value=bignumber_1.BigNumber.from(value);try{return value.toNumber()}catch(error){}return null};Formatter.prototype.uint256=function(value){if(!(0,bytes_1.isHexString)(value))throw Error(\"invalid uint256\");return(0,bytes_1.hexZeroPad)(value,\n32)};Formatter.prototype._block=function(value,format){null!=value.author&&null==value.miner&&(value.miner=value.author);var difficulty=null!=value._difficulty?value._difficulty:value.difficulty;value=Formatter.check(format,value);value._difficulty=null==difficulty?null:bignumber_1.BigNumber.from(difficulty);return value};Formatter.prototype.block=function(value){return this._block(value,this.formats.block)};Formatter.prototype.blockWithTransactions=function(value){return this._block(value,this.formats.blockWithTransactions)};\nFormatter.prototype.transactionRequest=function(value){return Formatter.check(this.formats.transactionRequest,value)};Formatter.prototype.transactionResponse=function(transaction){null!=transaction.gas&&null==transaction.gasLimit&&(transaction.gasLimit=transaction.gas);transaction.to&&bignumber_1.BigNumber.from(transaction.to).isZero()&&(transaction.to=\"0x0000000000000000000000000000000000000000\");null!=transaction.input&&null==transaction.data&&(transaction.data=transaction.input);null==transaction.to&&\nnull==transaction.creates&&(transaction.creates=this.contractAddress(transaction));1!==transaction.type&&2!==transaction.type||null!=transaction.accessList||(transaction.accessList=[]);var result=Formatter.check(this.formats.transaction,transaction);if(null!=transaction.chainId){var chainId=transaction.chainId;(0,bytes_1.isHexString)(chainId)&&(chainId=bignumber_1.BigNumber.from(chainId).toNumber())}else chainId=transaction.networkId,null==chainId&&null==result.v&&(chainId=transaction.chainId),(0,bytes_1.isHexString)(chainId)&&\n(chainId=bignumber_1.BigNumber.from(chainId).toNumber()),\"number\"!==typeof chainId&&null!=result.v&&(chainId=(result.v-35)/2,0>chainId&&(chainId=0),chainId=parseInt(chainId)),\"number\"!==typeof chainId&&(chainId=0);result.chainId=chainId;result.blockHash&&\"x\"===result.blockHash.replace(/0/g,\"\")&&(result.blockHash=null);return result};Formatter.prototype.transaction=function(value){return(0,transactions_1.parse)(value)};Formatter.prototype.receiptLog=function(value){return Formatter.check(this.formats.receiptLog,\nvalue)};Formatter.prototype.receipt=function(value){value=Formatter.check(this.formats.receipt,value);if(null!=value.root)if(4>=value.root.length){var value_1=bignumber_1.BigNumber.from(value.root).toNumber();0===value_1||1===value_1?(null!=value.status&&value.status!==value_1&&logger.throwArgumentError(\"alt-root-status/status mismatch\",\"value\",{root:value.root,status:value.status}),value.status=value_1,delete value.root):logger.throwArgumentError(\"invalid alt-root-status\",\"value.root\",value.root)}else 66!==\nvalue.root.length&&logger.throwArgumentError(\"invalid root hash\",\"value.root\",value.root);null!=value.status&&(value.byzantium=!0);return value};Formatter.prototype.topics=function(value){var _this=this;return Array.isArray(value)?value.map(function(v){return _this.topics(v)}):null!=value?this.hash(value,!0):null};Formatter.prototype.filter=function(value){return Formatter.check(this.formats.filter,value)};Formatter.prototype.filterLog=function(value){return Formatter.check(this.formats.filterLog,\nvalue)};Formatter.check=function(format,object){var result={},key;for(key in format)try{var value=format[key](object[key]);void 0!==value&&(result[key]=value)}catch(error){throw error.checkKey=key,error.checkValue=object[key],error;}return result};Formatter.allowNull=function(format,nullValue){return function(value){return null==value?nullValue:format(value)}};Formatter.allowFalsish=function(format,replaceValue){return function(value){return value?format(value):replaceValue}};Formatter.arrayOf=function(format){return function(array){if(!Array.isArray(array))throw Error(\"not an array\");\nvar result=[];array.forEach(function(value){result.push(format(value))});return result}};return Formatter}();exports.Formatter=require;exports.isCommunityResourcable=isCommunityResourcable;exports.isCommunityResource=function(value){return isCommunityResourcable(value)&&value.isCommunityResource()};var throttleMessage=!1;exports.showThrottleMessage=function(){throttleMessage||(throttleMessage=!0,console.log(\"\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d NOTICE \\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\"),console.log(\"Request-Rate Exceeded  (this message will not be repeated)\"),\nconsole.log(\"\"),console.log(\"The default API keys for each service are provided as a highly-throttled,\"),console.log(\"community resource for low-traffic projects and early prototyping.\"),console.log(\"\"),console.log(\"While your application will continue to function, we highly recommended\"),console.log(\"signing up for your own API keys to improve performance, increase your\"),console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\"),console.log(\"\"),console.log(\"For more details: https://docs.ethers.io/api-keys/\"),\nconsole.log(\"\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\"))}}","~:source","shadow$provide[\"module$node_modules$$ethersproject$providers$lib$formatter\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.showThrottleMessage = exports.isCommunityResource = exports.isCommunityResourcable = exports.Formatter = void 0;\nvar address_1 = require(\"@ethersproject/address\");\nvar bignumber_1 = require(\"@ethersproject/bignumber\");\nvar bytes_1 = require(\"@ethersproject/bytes\");\nvar constants_1 = require(\"@ethersproject/constants\");\nvar properties_1 = require(\"@ethersproject/properties\");\nvar transactions_1 = require(\"@ethersproject/transactions\");\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\nvar Formatter = /** @class */ (function () {\n    function Formatter() {\n        this.formats = this.getDefaultFormats();\n    }\n    Formatter.prototype.getDefaultFormats = function () {\n        var _this = this;\n        var formats = ({});\n        var address = this.address.bind(this);\n        var bigNumber = this.bigNumber.bind(this);\n        var blockTag = this.blockTag.bind(this);\n        var data = this.data.bind(this);\n        var hash = this.hash.bind(this);\n        var hex = this.hex.bind(this);\n        var number = this.number.bind(this);\n        var type = this.type.bind(this);\n        var strictData = function (v) { return _this.data(v, true); };\n        formats.transaction = {\n            hash: hash,\n            type: type,\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n            blockHash: Formatter.allowNull(hash, null),\n            blockNumber: Formatter.allowNull(number, null),\n            transactionIndex: Formatter.allowNull(number, null),\n            confirmations: Formatter.allowNull(number, null),\n            from: address,\n            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\n            // must be set\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            gasLimit: bigNumber,\n            to: Formatter.allowNull(address, null),\n            value: bigNumber,\n            nonce: number,\n            data: data,\n            r: Formatter.allowNull(this.uint256),\n            s: Formatter.allowNull(this.uint256),\n            v: Formatter.allowNull(number),\n            creates: Formatter.allowNull(address, null),\n            raw: Formatter.allowNull(data),\n        };\n        formats.transactionRequest = {\n            from: Formatter.allowNull(address),\n            nonce: Formatter.allowNull(number),\n            gasLimit: Formatter.allowNull(bigNumber),\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            to: Formatter.allowNull(address),\n            value: Formatter.allowNull(bigNumber),\n            data: Formatter.allowNull(strictData),\n            type: Formatter.allowNull(number),\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n        };\n        formats.receiptLog = {\n            transactionIndex: number,\n            blockNumber: number,\n            transactionHash: hash,\n            address: address,\n            topics: Formatter.arrayOf(hash),\n            data: data,\n            logIndex: number,\n            blockHash: hash,\n        };\n        formats.receipt = {\n            to: Formatter.allowNull(this.address, null),\n            from: Formatter.allowNull(this.address, null),\n            contractAddress: Formatter.allowNull(address, null),\n            transactionIndex: number,\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n            root: Formatter.allowNull(hex),\n            gasUsed: bigNumber,\n            logsBloom: Formatter.allowNull(data),\n            blockHash: hash,\n            transactionHash: hash,\n            logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n            blockNumber: number,\n            confirmations: Formatter.allowNull(number, null),\n            cumulativeGasUsed: bigNumber,\n            effectiveGasPrice: Formatter.allowNull(bigNumber),\n            status: Formatter.allowNull(number),\n            type: type\n        };\n        formats.block = {\n            hash: Formatter.allowNull(hash),\n            parentHash: hash,\n            number: number,\n            timestamp: number,\n            nonce: Formatter.allowNull(hex),\n            difficulty: this.difficulty.bind(this),\n            gasLimit: bigNumber,\n            gasUsed: bigNumber,\n            miner: Formatter.allowNull(address),\n            extraData: data,\n            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\n            baseFeePerGas: Formatter.allowNull(bigNumber)\n        };\n        formats.blockWithTransactions = (0, properties_1.shallowCopy)(formats.block);\n        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n        formats.filter = {\n            fromBlock: Formatter.allowNull(blockTag, undefined),\n            toBlock: Formatter.allowNull(blockTag, undefined),\n            blockHash: Formatter.allowNull(hash, undefined),\n            address: Formatter.allowNull(address, undefined),\n            topics: Formatter.allowNull(this.topics.bind(this), undefined),\n        };\n        formats.filterLog = {\n            blockNumber: Formatter.allowNull(number),\n            blockHash: Formatter.allowNull(hash),\n            transactionIndex: number,\n            removed: Formatter.allowNull(this.boolean.bind(this)),\n            address: address,\n            data: Formatter.allowFalsish(data, \"0x\"),\n            topics: Formatter.arrayOf(hash),\n            transactionHash: hash,\n            logIndex: number,\n        };\n        return formats;\n    };\n    Formatter.prototype.accessList = function (accessList) {\n        return (0, transactions_1.accessListify)(accessList || []);\n    };\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n    // Strict! Used on input.\n    Formatter.prototype.number = function (number) {\n        if (number === \"0x\") {\n            return 0;\n        }\n        return bignumber_1.BigNumber.from(number).toNumber();\n    };\n    Formatter.prototype.type = function (number) {\n        if (number === \"0x\" || number == null) {\n            return 0;\n        }\n        return bignumber_1.BigNumber.from(number).toNumber();\n    };\n    // Strict! Used on input.\n    Formatter.prototype.bigNumber = function (value) {\n        return bignumber_1.BigNumber.from(value);\n    };\n    // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n    Formatter.prototype.boolean = function (value) {\n        if (typeof (value) === \"boolean\") {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            value = value.toLowerCase();\n            if (value === \"true\") {\n                return true;\n            }\n            if (value === \"false\") {\n                return false;\n            }\n        }\n        throw new Error(\"invalid boolean - \" + value);\n    };\n    Formatter.prototype.hex = function (value, strict) {\n        if (typeof (value) === \"string\") {\n            if (!strict && value.substring(0, 2) !== \"0x\") {\n                value = \"0x\" + value;\n            }\n            if ((0, bytes_1.isHexString)(value)) {\n                return value.toLowerCase();\n            }\n        }\n        return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n    };\n    Formatter.prototype.data = function (value, strict) {\n        var result = this.hex(value, strict);\n        if ((result.length % 2) !== 0) {\n            throw new Error(\"invalid data; odd-length - \" + value);\n        }\n        return result;\n    };\n    // Requires an address\n    // Strict! Used on input.\n    Formatter.prototype.address = function (value) {\n        return (0, address_1.getAddress)(value);\n    };\n    Formatter.prototype.callAddress = function (value) {\n        if (!(0, bytes_1.isHexString)(value, 32)) {\n            return null;\n        }\n        var address = (0, address_1.getAddress)((0, bytes_1.hexDataSlice)(value, 12));\n        return (address === constants_1.AddressZero) ? null : address;\n    };\n    Formatter.prototype.contractAddress = function (value) {\n        return (0, address_1.getContractAddress)(value);\n    };\n    // Strict! Used on input.\n    Formatter.prototype.blockTag = function (blockTag) {\n        if (blockTag == null) {\n            return \"latest\";\n        }\n        if (blockTag === \"earliest\") {\n            return \"0x0\";\n        }\n        switch (blockTag) {\n            case \"earliest\": return \"0x0\";\n            case \"latest\":\n            case \"pending\":\n            case \"safe\":\n            case \"finalized\":\n                return blockTag;\n        }\n        if (typeof (blockTag) === \"number\" || (0, bytes_1.isHexString)(blockTag)) {\n            return (0, bytes_1.hexValue)(blockTag);\n        }\n        throw new Error(\"invalid blockTag\");\n    };\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n    Formatter.prototype.hash = function (value, strict) {\n        var result = this.hex(value, strict);\n        if ((0, bytes_1.hexDataLength)(result) !== 32) {\n            return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n        }\n        return result;\n    };\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n    Formatter.prototype.difficulty = function (value) {\n        if (value == null) {\n            return null;\n        }\n        var v = bignumber_1.BigNumber.from(value);\n        try {\n            return v.toNumber();\n        }\n        catch (error) { }\n        return null;\n    };\n    Formatter.prototype.uint256 = function (value) {\n        if (!(0, bytes_1.isHexString)(value)) {\n            throw new Error(\"invalid uint256\");\n        }\n        return (0, bytes_1.hexZeroPad)(value, 32);\n    };\n    Formatter.prototype._block = function (value, format) {\n        if (value.author != null && value.miner == null) {\n            value.miner = value.author;\n        }\n        // The difficulty may need to come from _difficulty in recursed blocks\n        var difficulty = (value._difficulty != null) ? value._difficulty : value.difficulty;\n        var result = Formatter.check(format, value);\n        result._difficulty = ((difficulty == null) ? null : bignumber_1.BigNumber.from(difficulty));\n        return result;\n    };\n    Formatter.prototype.block = function (value) {\n        return this._block(value, this.formats.block);\n    };\n    Formatter.prototype.blockWithTransactions = function (value) {\n        return this._block(value, this.formats.blockWithTransactions);\n    };\n    // Strict! Used on input.\n    Formatter.prototype.transactionRequest = function (value) {\n        return Formatter.check(this.formats.transactionRequest, value);\n    };\n    Formatter.prototype.transactionResponse = function (transaction) {\n        // Rename gas to gasLimit\n        if (transaction.gas != null && transaction.gasLimit == null) {\n            transaction.gasLimit = transaction.gas;\n        }\n        // Some clients (TestRPC) do strange things like return 0x0 for the\n        // 0 address; correct this to be a real address\n        if (transaction.to && bignumber_1.BigNumber.from(transaction.to).isZero()) {\n            transaction.to = \"0x0000000000000000000000000000000000000000\";\n        }\n        // Rename input to data\n        if (transaction.input != null && transaction.data == null) {\n            transaction.data = transaction.input;\n        }\n        // If to and creates are empty, populate the creates from the transaction\n        if (transaction.to == null && transaction.creates == null) {\n            transaction.creates = this.contractAddress(transaction);\n        }\n        if ((transaction.type === 1 || transaction.type === 2) && transaction.accessList == null) {\n            transaction.accessList = [];\n        }\n        var result = Formatter.check(this.formats.transaction, transaction);\n        if (transaction.chainId != null) {\n            var chainId = transaction.chainId;\n            if ((0, bytes_1.isHexString)(chainId)) {\n                chainId = bignumber_1.BigNumber.from(chainId).toNumber();\n            }\n            result.chainId = chainId;\n        }\n        else {\n            var chainId = transaction.networkId;\n            // geth-etc returns chainId\n            if (chainId == null && result.v == null) {\n                chainId = transaction.chainId;\n            }\n            if ((0, bytes_1.isHexString)(chainId)) {\n                chainId = bignumber_1.BigNumber.from(chainId).toNumber();\n            }\n            if (typeof (chainId) !== \"number\" && result.v != null) {\n                chainId = (result.v - 35) / 2;\n                if (chainId < 0) {\n                    chainId = 0;\n                }\n                chainId = parseInt(chainId);\n            }\n            if (typeof (chainId) !== \"number\") {\n                chainId = 0;\n            }\n            result.chainId = chainId;\n        }\n        // 0x0000... should actually be null\n        if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n            result.blockHash = null;\n        }\n        return result;\n    };\n    Formatter.prototype.transaction = function (value) {\n        return (0, transactions_1.parse)(value);\n    };\n    Formatter.prototype.receiptLog = function (value) {\n        return Formatter.check(this.formats.receiptLog, value);\n    };\n    Formatter.prototype.receipt = function (value) {\n        var result = Formatter.check(this.formats.receipt, value);\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n        if (result.root != null) {\n            if (result.root.length <= 4) {\n                // Could be 0x00, 0x0, 0x01 or 0x1\n                var value_1 = bignumber_1.BigNumber.from(result.root).toNumber();\n                if (value_1 === 0 || value_1 === 1) {\n                    // Make sure if both are specified, they match\n                    if (result.status != null && (result.status !== value_1)) {\n                        logger.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", { root: result.root, status: result.status });\n                    }\n                    result.status = value_1;\n                    delete result.root;\n                }\n                else {\n                    logger.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n                }\n            }\n            else if (result.root.length !== 66) {\n                // Must be a valid bytes32\n                logger.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n            }\n        }\n        if (result.status != null) {\n            result.byzantium = true;\n        }\n        return result;\n    };\n    Formatter.prototype.topics = function (value) {\n        var _this = this;\n        if (Array.isArray(value)) {\n            return value.map(function (v) { return _this.topics(v); });\n        }\n        else if (value != null) {\n            return this.hash(value, true);\n        }\n        return null;\n    };\n    Formatter.prototype.filter = function (value) {\n        return Formatter.check(this.formats.filter, value);\n    };\n    Formatter.prototype.filterLog = function (value) {\n        return Formatter.check(this.formats.filterLog, value);\n    };\n    Formatter.check = function (format, object) {\n        var result = {};\n        for (var key in format) {\n            try {\n                var value = format[key](object[key]);\n                if (value !== undefined) {\n                    result[key] = value;\n                }\n            }\n            catch (error) {\n                error.checkKey = key;\n                error.checkValue = object[key];\n                throw error;\n            }\n        }\n        return result;\n    };\n    // if value is null-ish, nullValue is returned\n    Formatter.allowNull = function (format, nullValue) {\n        return (function (value) {\n            if (value == null) {\n                return nullValue;\n            }\n            return format(value);\n        });\n    };\n    // If value is false-ish, replaceValue is returned\n    Formatter.allowFalsish = function (format, replaceValue) {\n        return (function (value) {\n            if (!value) {\n                return replaceValue;\n            }\n            return format(value);\n        });\n    };\n    // Requires an Array satisfying check\n    Formatter.arrayOf = function (format) {\n        return (function (array) {\n            if (!Array.isArray(array)) {\n                throw new Error(\"not an array\");\n            }\n            var result = [];\n            array.forEach(function (value) {\n                result.push(format(value));\n            });\n            return result;\n        });\n    };\n    return Formatter;\n}());\nexports.Formatter = Formatter;\nfunction isCommunityResourcable(value) {\n    return (value && typeof (value.isCommunityResource) === \"function\");\n}\nexports.isCommunityResourcable = isCommunityResourcable;\nfunction isCommunityResource(value) {\n    return (isCommunityResourcable(value) && value.isCommunityResource());\n}\nexports.isCommunityResource = isCommunityResource;\n// Show the throttle message only once\nvar throttleMessage = false;\nfunction showThrottleMessage() {\n    if (throttleMessage) {\n        return;\n    }\n    throttleMessage = true;\n    console.log(\"========= NOTICE =========\");\n    console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.io/api-keys/\");\n    console.log(\"==========================\");\n}\nexports.showThrottleMessage = showThrottleMessage;\n//# sourceMappingURL=formatter.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$ethersproject$constants$lib$index","~$shadow.js","~$module$node_modules$$ethersproject$bytes$lib$index","~$module$node_modules$$ethersproject$providers$lib$_version","~$module$node_modules$$ethersproject$bignumber$lib$index","~$module$node_modules$$ethersproject$transactions$lib$index","~$module$node_modules$$ethersproject$address$lib$index","~$module$node_modules$$ethersproject$logger$lib$index","~$module$node_modules$$ethersproject$properties$lib$index"]],"~:properties",["^5",["transactionResponse","miner","transactionIndex","boolean","gasLimit","arrayOf","transactionRequest","topics","s","removed","isCommunityResourcable","chainId","transaction","gasPrice","confirmations","gasUsed","effectiveGasPrice","allowNull","baseFeePerGas","accessList","hex","hash","checkValue","__esModule","v","timestamp","root","block","showThrottleMessage","toBlock","blockNumber","receipt","blockWithTransactions","bigNumber","_difficulty","getDefaultFormats","maxPriorityFeePerGas","fromBlock","maxFeePerGas","value","creates","check","receiptLog","address","status","number","logs","filter","difficulty","blockHash","allowFalsish","cumulativeGasUsed","transactionHash","type","checkKey","r","formats","from","contractAddress","transactions","nonce","isCommunityResource","callAddress","parentHash","logsBloom","logIndex","raw","extraData","to","uint256","blockTag","Formatter","data","byzantium","_block","filterLog"]],"~:compiled-at",1695040653772,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$ethersproject$providers$lib$formatter.js\",\n\"lineCount\":23,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@ethersproject/providers/lib/formatter.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$ethersproject$providers$lib$formatter\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.showThrottleMessage = exports.isCommunityResource = exports.isCommunityResourcable = exports.Formatter = void 0;\\nvar address_1 = require(\\\"@ethersproject/address\\\");\\nvar bignumber_1 = require(\\\"@ethersproject/bignumber\\\");\\nvar bytes_1 = require(\\\"@ethersproject/bytes\\\");\\nvar constants_1 = require(\\\"@ethersproject/constants\\\");\\nvar properties_1 = require(\\\"@ethersproject/properties\\\");\\nvar transactions_1 = require(\\\"@ethersproject/transactions\\\");\\nvar logger_1 = require(\\\"@ethersproject/logger\\\");\\nvar _version_1 = require(\\\"./_version\\\");\\nvar logger = new logger_1.Logger(_version_1.version);\\nvar Formatter = /** @class */ (function () {\\n    function Formatter() {\\n        this.formats = this.getDefaultFormats();\\n    }\\n    Formatter.prototype.getDefaultFormats = function () {\\n        var _this = this;\\n        var formats = ({});\\n        var address = this.address.bind(this);\\n        var bigNumber = this.bigNumber.bind(this);\\n        var blockTag = this.blockTag.bind(this);\\n        var data = this.data.bind(this);\\n        var hash = this.hash.bind(this);\\n        var hex = this.hex.bind(this);\\n        var number = this.number.bind(this);\\n        var type = this.type.bind(this);\\n        var strictData = function (v) { return _this.data(v, true); };\\n        formats.transaction = {\\n            hash: hash,\\n            type: type,\\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\\n            blockHash: Formatter.allowNull(hash, null),\\n            blockNumber: Formatter.allowNull(number, null),\\n            transactionIndex: Formatter.allowNull(number, null),\\n            confirmations: Formatter.allowNull(number, null),\\n            from: address,\\n            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\\n            // must be set\\n            gasPrice: Formatter.allowNull(bigNumber),\\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\\n            maxFeePerGas: Formatter.allowNull(bigNumber),\\n            gasLimit: bigNumber,\\n            to: Formatter.allowNull(address, null),\\n            value: bigNumber,\\n            nonce: number,\\n            data: data,\\n            r: Formatter.allowNull(this.uint256),\\n            s: Formatter.allowNull(this.uint256),\\n            v: Formatter.allowNull(number),\\n            creates: Formatter.allowNull(address, null),\\n            raw: Formatter.allowNull(data),\\n        };\\n        formats.transactionRequest = {\\n            from: Formatter.allowNull(address),\\n            nonce: Formatter.allowNull(number),\\n            gasLimit: Formatter.allowNull(bigNumber),\\n            gasPrice: Formatter.allowNull(bigNumber),\\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\\n            maxFeePerGas: Formatter.allowNull(bigNumber),\\n            to: Formatter.allowNull(address),\\n            value: Formatter.allowNull(bigNumber),\\n            data: Formatter.allowNull(strictData),\\n            type: Formatter.allowNull(number),\\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\\n        };\\n        formats.receiptLog = {\\n            transactionIndex: number,\\n            blockNumber: number,\\n            transactionHash: hash,\\n            address: address,\\n            topics: Formatter.arrayOf(hash),\\n            data: data,\\n            logIndex: number,\\n            blockHash: hash,\\n        };\\n        formats.receipt = {\\n            to: Formatter.allowNull(this.address, null),\\n            from: Formatter.allowNull(this.address, null),\\n            contractAddress: Formatter.allowNull(address, null),\\n            transactionIndex: number,\\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\\n            root: Formatter.allowNull(hex),\\n            gasUsed: bigNumber,\\n            logsBloom: Formatter.allowNull(data),\\n            blockHash: hash,\\n            transactionHash: hash,\\n            logs: Formatter.arrayOf(this.receiptLog.bind(this)),\\n            blockNumber: number,\\n            confirmations: Formatter.allowNull(number, null),\\n            cumulativeGasUsed: bigNumber,\\n            effectiveGasPrice: Formatter.allowNull(bigNumber),\\n            status: Formatter.allowNull(number),\\n            type: type\\n        };\\n        formats.block = {\\n            hash: Formatter.allowNull(hash),\\n            parentHash: hash,\\n            number: number,\\n            timestamp: number,\\n            nonce: Formatter.allowNull(hex),\\n            difficulty: this.difficulty.bind(this),\\n            gasLimit: bigNumber,\\n            gasUsed: bigNumber,\\n            miner: Formatter.allowNull(address),\\n            extraData: data,\\n            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\\n            baseFeePerGas: Formatter.allowNull(bigNumber)\\n        };\\n        formats.blockWithTransactions = (0, properties_1.shallowCopy)(formats.block);\\n        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\\n        formats.filter = {\\n            fromBlock: Formatter.allowNull(blockTag, undefined),\\n            toBlock: Formatter.allowNull(blockTag, undefined),\\n            blockHash: Formatter.allowNull(hash, undefined),\\n            address: Formatter.allowNull(address, undefined),\\n            topics: Formatter.allowNull(this.topics.bind(this), undefined),\\n        };\\n        formats.filterLog = {\\n            blockNumber: Formatter.allowNull(number),\\n            blockHash: Formatter.allowNull(hash),\\n            transactionIndex: number,\\n            removed: Formatter.allowNull(this.boolean.bind(this)),\\n            address: address,\\n            data: Formatter.allowFalsish(data, \\\"0x\\\"),\\n            topics: Formatter.arrayOf(hash),\\n            transactionHash: hash,\\n            logIndex: number,\\n        };\\n        return formats;\\n    };\\n    Formatter.prototype.accessList = function (accessList) {\\n        return (0, transactions_1.accessListify)(accessList || []);\\n    };\\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\\n    // Strict! Used on input.\\n    Formatter.prototype.number = function (number) {\\n        if (number === \\\"0x\\\") {\\n            return 0;\\n        }\\n        return bignumber_1.BigNumber.from(number).toNumber();\\n    };\\n    Formatter.prototype.type = function (number) {\\n        if (number === \\\"0x\\\" || number == null) {\\n            return 0;\\n        }\\n        return bignumber_1.BigNumber.from(number).toNumber();\\n    };\\n    // Strict! Used on input.\\n    Formatter.prototype.bigNumber = function (value) {\\n        return bignumber_1.BigNumber.from(value);\\n    };\\n    // Requires a boolean, \\\"true\\\" or  \\\"false\\\"; returns a boolean\\n    Formatter.prototype.boolean = function (value) {\\n        if (typeof (value) === \\\"boolean\\\") {\\n            return value;\\n        }\\n        if (typeof (value) === \\\"string\\\") {\\n            value = value.toLowerCase();\\n            if (value === \\\"true\\\") {\\n                return true;\\n            }\\n            if (value === \\\"false\\\") {\\n                return false;\\n            }\\n        }\\n        throw new Error(\\\"invalid boolean - \\\" + value);\\n    };\\n    Formatter.prototype.hex = function (value, strict) {\\n        if (typeof (value) === \\\"string\\\") {\\n            if (!strict && value.substring(0, 2) !== \\\"0x\\\") {\\n                value = \\\"0x\\\" + value;\\n            }\\n            if ((0, bytes_1.isHexString)(value)) {\\n                return value.toLowerCase();\\n            }\\n        }\\n        return logger.throwArgumentError(\\\"invalid hash\\\", \\\"value\\\", value);\\n    };\\n    Formatter.prototype.data = function (value, strict) {\\n        var result = this.hex(value, strict);\\n        if ((result.length % 2) !== 0) {\\n            throw new Error(\\\"invalid data; odd-length - \\\" + value);\\n        }\\n        return result;\\n    };\\n    // Requires an address\\n    // Strict! Used on input.\\n    Formatter.prototype.address = function (value) {\\n        return (0, address_1.getAddress)(value);\\n    };\\n    Formatter.prototype.callAddress = function (value) {\\n        if (!(0, bytes_1.isHexString)(value, 32)) {\\n            return null;\\n        }\\n        var address = (0, address_1.getAddress)((0, bytes_1.hexDataSlice)(value, 12));\\n        return (address === constants_1.AddressZero) ? null : address;\\n    };\\n    Formatter.prototype.contractAddress = function (value) {\\n        return (0, address_1.getContractAddress)(value);\\n    };\\n    // Strict! Used on input.\\n    Formatter.prototype.blockTag = function (blockTag) {\\n        if (blockTag == null) {\\n            return \\\"latest\\\";\\n        }\\n        if (blockTag === \\\"earliest\\\") {\\n            return \\\"0x0\\\";\\n        }\\n        switch (blockTag) {\\n            case \\\"earliest\\\": return \\\"0x0\\\";\\n            case \\\"latest\\\":\\n            case \\\"pending\\\":\\n            case \\\"safe\\\":\\n            case \\\"finalized\\\":\\n                return blockTag;\\n        }\\n        if (typeof (blockTag) === \\\"number\\\" || (0, bytes_1.isHexString)(blockTag)) {\\n            return (0, bytes_1.hexValue)(blockTag);\\n        }\\n        throw new Error(\\\"invalid blockTag\\\");\\n    };\\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\\n    Formatter.prototype.hash = function (value, strict) {\\n        var result = this.hex(value, strict);\\n        if ((0, bytes_1.hexDataLength)(result) !== 32) {\\n            return logger.throwArgumentError(\\\"invalid hash\\\", \\\"value\\\", value);\\n        }\\n        return result;\\n    };\\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\\n    Formatter.prototype.difficulty = function (value) {\\n        if (value == null) {\\n            return null;\\n        }\\n        var v = bignumber_1.BigNumber.from(value);\\n        try {\\n            return v.toNumber();\\n        }\\n        catch (error) { }\\n        return null;\\n    };\\n    Formatter.prototype.uint256 = function (value) {\\n        if (!(0, bytes_1.isHexString)(value)) {\\n            throw new Error(\\\"invalid uint256\\\");\\n        }\\n        return (0, bytes_1.hexZeroPad)(value, 32);\\n    };\\n    Formatter.prototype._block = function (value, format) {\\n        if (value.author != null && value.miner == null) {\\n            value.miner = value.author;\\n        }\\n        // The difficulty may need to come from _difficulty in recursed blocks\\n        var difficulty = (value._difficulty != null) ? value._difficulty : value.difficulty;\\n        var result = Formatter.check(format, value);\\n        result._difficulty = ((difficulty == null) ? null : bignumber_1.BigNumber.from(difficulty));\\n        return result;\\n    };\\n    Formatter.prototype.block = function (value) {\\n        return this._block(value, this.formats.block);\\n    };\\n    Formatter.prototype.blockWithTransactions = function (value) {\\n        return this._block(value, this.formats.blockWithTransactions);\\n    };\\n    // Strict! Used on input.\\n    Formatter.prototype.transactionRequest = function (value) {\\n        return Formatter.check(this.formats.transactionRequest, value);\\n    };\\n    Formatter.prototype.transactionResponse = function (transaction) {\\n        // Rename gas to gasLimit\\n        if (transaction.gas != null && transaction.gasLimit == null) {\\n            transaction.gasLimit = transaction.gas;\\n        }\\n        // Some clients (TestRPC) do strange things like return 0x0 for the\\n        // 0 address; correct this to be a real address\\n        if (transaction.to && bignumber_1.BigNumber.from(transaction.to).isZero()) {\\n            transaction.to = \\\"0x0000000000000000000000000000000000000000\\\";\\n        }\\n        // Rename input to data\\n        if (transaction.input != null && transaction.data == null) {\\n            transaction.data = transaction.input;\\n        }\\n        // If to and creates are empty, populate the creates from the transaction\\n        if (transaction.to == null && transaction.creates == null) {\\n            transaction.creates = this.contractAddress(transaction);\\n        }\\n        if ((transaction.type === 1 || transaction.type === 2) && transaction.accessList == null) {\\n            transaction.accessList = [];\\n        }\\n        var result = Formatter.check(this.formats.transaction, transaction);\\n        if (transaction.chainId != null) {\\n            var chainId = transaction.chainId;\\n            if ((0, bytes_1.isHexString)(chainId)) {\\n                chainId = bignumber_1.BigNumber.from(chainId).toNumber();\\n            }\\n            result.chainId = chainId;\\n        }\\n        else {\\n            var chainId = transaction.networkId;\\n            // geth-etc returns chainId\\n            if (chainId == null && result.v == null) {\\n                chainId = transaction.chainId;\\n            }\\n            if ((0, bytes_1.isHexString)(chainId)) {\\n                chainId = bignumber_1.BigNumber.from(chainId).toNumber();\\n            }\\n            if (typeof (chainId) !== \\\"number\\\" && result.v != null) {\\n                chainId = (result.v - 35) / 2;\\n                if (chainId < 0) {\\n                    chainId = 0;\\n                }\\n                chainId = parseInt(chainId);\\n            }\\n            if (typeof (chainId) !== \\\"number\\\") {\\n                chainId = 0;\\n            }\\n            result.chainId = chainId;\\n        }\\n        // 0x0000... should actually be null\\n        if (result.blockHash && result.blockHash.replace(/0/g, \\\"\\\") === \\\"x\\\") {\\n            result.blockHash = null;\\n        }\\n        return result;\\n    };\\n    Formatter.prototype.transaction = function (value) {\\n        return (0, transactions_1.parse)(value);\\n    };\\n    Formatter.prototype.receiptLog = function (value) {\\n        return Formatter.check(this.formats.receiptLog, value);\\n    };\\n    Formatter.prototype.receipt = function (value) {\\n        var result = Formatter.check(this.formats.receipt, value);\\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\\n        if (result.root != null) {\\n            if (result.root.length <= 4) {\\n                // Could be 0x00, 0x0, 0x01 or 0x1\\n                var value_1 = bignumber_1.BigNumber.from(result.root).toNumber();\\n                if (value_1 === 0 || value_1 === 1) {\\n                    // Make sure if both are specified, they match\\n                    if (result.status != null && (result.status !== value_1)) {\\n                        logger.throwArgumentError(\\\"alt-root-status/status mismatch\\\", \\\"value\\\", { root: result.root, status: result.status });\\n                    }\\n                    result.status = value_1;\\n                    delete result.root;\\n                }\\n                else {\\n                    logger.throwArgumentError(\\\"invalid alt-root-status\\\", \\\"value.root\\\", result.root);\\n                }\\n            }\\n            else if (result.root.length !== 66) {\\n                // Must be a valid bytes32\\n                logger.throwArgumentError(\\\"invalid root hash\\\", \\\"value.root\\\", result.root);\\n            }\\n        }\\n        if (result.status != null) {\\n            result.byzantium = true;\\n        }\\n        return result;\\n    };\\n    Formatter.prototype.topics = function (value) {\\n        var _this = this;\\n        if (Array.isArray(value)) {\\n            return value.map(function (v) { return _this.topics(v); });\\n        }\\n        else if (value != null) {\\n            return this.hash(value, true);\\n        }\\n        return null;\\n    };\\n    Formatter.prototype.filter = function (value) {\\n        return Formatter.check(this.formats.filter, value);\\n    };\\n    Formatter.prototype.filterLog = function (value) {\\n        return Formatter.check(this.formats.filterLog, value);\\n    };\\n    Formatter.check = function (format, object) {\\n        var result = {};\\n        for (var key in format) {\\n            try {\\n                var value = format[key](object[key]);\\n                if (value !== undefined) {\\n                    result[key] = value;\\n                }\\n            }\\n            catch (error) {\\n                error.checkKey = key;\\n                error.checkValue = object[key];\\n                throw error;\\n            }\\n        }\\n        return result;\\n    };\\n    // if value is null-ish, nullValue is returned\\n    Formatter.allowNull = function (format, nullValue) {\\n        return (function (value) {\\n            if (value == null) {\\n                return nullValue;\\n            }\\n            return format(value);\\n        });\\n    };\\n    // If value is false-ish, replaceValue is returned\\n    Formatter.allowFalsish = function (format, replaceValue) {\\n        return (function (value) {\\n            if (!value) {\\n                return replaceValue;\\n            }\\n            return format(value);\\n        });\\n    };\\n    // Requires an Array satisfying check\\n    Formatter.arrayOf = function (format) {\\n        return (function (array) {\\n            if (!Array.isArray(array)) {\\n                throw new Error(\\\"not an array\\\");\\n            }\\n            var result = [];\\n            array.forEach(function (value) {\\n                result.push(format(value));\\n            });\\n            return result;\\n        });\\n    };\\n    return Formatter;\\n}());\\nexports.Formatter = Formatter;\\nfunction isCommunityResourcable(value) {\\n    return (value && typeof (value.isCommunityResource) === \\\"function\\\");\\n}\\nexports.isCommunityResourcable = isCommunityResourcable;\\nfunction isCommunityResource(value) {\\n    return (isCommunityResourcable(value) && value.isCommunityResource());\\n}\\nexports.isCommunityResource = isCommunityResource;\\n// Show the throttle message only once\\nvar throttleMessage = false;\\nfunction showThrottleMessage() {\\n    if (throttleMessage) {\\n        return;\\n    }\\n    throttleMessage = true;\\n    console.log(\\\"========= NOTICE =========\\\");\\n    console.log(\\\"Request-Rate Exceeded  (this message will not be repeated)\\\");\\n    console.log(\\\"\\\");\\n    console.log(\\\"The default API keys for each service are provided as a highly-throttled,\\\");\\n    console.log(\\\"community resource for low-traffic projects and early prototyping.\\\");\\n    console.log(\\\"\\\");\\n    console.log(\\\"While your application will continue to function, we highly recommended\\\");\\n    console.log(\\\"signing up for your own API keys to improve performance, increase your\\\");\\n    console.log(\\\"request rate/limit and enable other perks, such as metrics and advanced APIs.\\\");\\n    console.log(\\\"\\\");\\n    console.log(\\\"For more details: https:/\\\\/docs.ethers.io/api-keys/\\\");\\n    console.log(\\\"==========================\\\");\\n}\\nexports.showThrottleMessage = showThrottleMessage;\\n//# sourceMappingURL=formatter.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"isCommunityResourcable\",\"value\",\"isCommunityResource\",\"Object\",\"defineProperty\",\"showThrottleMessage\",\"Formatter\",\"address_1\",\"bignumber_1\",\"bytes_1\",\"constants_1\",\"properties_1\",\"transactions_1\",\"logger_1\",\"_version_1\",\"logger\",\"Logger\",\"version\",\"formats\",\"getDefaultFormats\",\"prototype\",\"Formatter.prototype.getDefaultFormats\",\"_this\",\"address\",\"bind\",\"bigNumber\",\"blockTag\",\"data\",\"hash\",\"hex\",\"number\",\"type\",\"transaction\",\"accessList\",\"allowNull\",\"blockHash\",\"blockNumber\",\"transactionIndex\",\"confirmations\",\"from\",\"gasPrice\",\"maxPriorityFeePerGas\",\"maxFeePerGas\",\"gasLimit\",\"to\",\"nonce\",\"r\",\"uint256\",\"s\",\"v\",\"creates\",\"raw\",\"transactionRequest\",\"strictData\",\"receiptLog\",\"transactionHash\",\"topics\",\"arrayOf\",\"logIndex\",\"receipt\",\"contractAddress\",\"root\",\"gasUsed\",\"logsBloom\",\"logs\",\"cumulativeGasUsed\",\"effectiveGasPrice\",\"status\",\"block\",\"parentHash\",\"timestamp\",\"difficulty\",\"miner\",\"extraData\",\"transactions\",\"baseFeePerGas\",\"blockWithTransactions\",\"shallowCopy\",\"transactionResponse\",\"filter\",\"fromBlock\",\"undefined\",\"toBlock\",\"filterLog\",\"removed\",\"boolean\",\"allowFalsish\",\"Formatter.prototype.accessList\",\"accessListify\",\"Formatter.prototype.number\",\"BigNumber\",\"toNumber\",\"Formatter.prototype.type\",\"Formatter.prototype.bigNumber\",\"Formatter.prototype.boolean\",\"toLowerCase\",\"Error\",\"Formatter.prototype.hex\",\"strict\",\"substring\",\"isHexString\",\"throwArgumentError\",\"Formatter.prototype.data\",\"result\",\"length\",\"Formatter.prototype.address\",\"getAddress\",\"callAddress\",\"Formatter.prototype.callAddress\",\"hexDataSlice\",\"AddressZero\",\"Formatter.prototype.contractAddress\",\"getContractAddress\",\"Formatter.prototype.blockTag\",\"hexValue\",\"Formatter.prototype.hash\",\"hexDataLength\",\"Formatter.prototype.difficulty\",\"error\",\"Formatter.prototype.uint256\",\"hexZeroPad\",\"_block\",\"Formatter.prototype._block\",\"format\",\"author\",\"_difficulty\",\"check\",\"Formatter.prototype.block\",\"Formatter.prototype.blockWithTransactions\",\"Formatter.prototype.transactionRequest\",\"Formatter.prototype.transactionResponse\",\"gas\",\"isZero\",\"input\",\"chainId\",\"networkId\",\"parseInt\",\"replace\",\"Formatter.prototype.transaction\",\"parse\",\"Formatter.prototype.receiptLog\",\"Formatter.prototype.receipt\",\"value_1\",\"byzantium\",\"Formatter.prototype.topics\",\"Array\",\"isArray\",\"map\",\"Formatter.prototype.filter\",\"Formatter.prototype.filterLog\",\"Formatter.check\",\"object\",\"key\",\"checkKey\",\"checkValue\",\"Formatter.allowNull\",\"nullValue\",\"Formatter.allowFalsish\",\"replaceValue\",\"Formatter.arrayOf\",\"array\",\"forEach\",\"push\",\"throttleMessage\",\"console\",\"log\"]\n}\n"]