shadow$provide.module$node_modules$$noble$curves$secp256k1=function(global,require,module,exports){function sqrtMod(y){var P=secp256k1P,_3n=BigInt(3),_6n=BigInt(6),_11n=BigInt(11),_22n=BigInt(22),_23n=BigInt(23),_44n=BigInt(44),_88n=BigInt(88);const b2=y*y*y%P,b3=b2*b2*y%P;var b6=(0,modular_js_1.pow2)(b3,_3n,P)*b3%P;b6=(0,modular_js_1.pow2)(b6,_3n,P)*b3%P;b6=(0,modular_js_1.pow2)(b6,_2n,P)*b2%P;_11n=(0,modular_js_1.pow2)(b6,_11n,P)*b6%P;_22n=(0,modular_js_1.pow2)(_11n,_22n,P)*_11n%P;b6=(0,modular_js_1.pow2)(_22n,
_44n,P)*_22n%P;_88n=(0,modular_js_1.pow2)(b6,_88n,P)*b6%P;_44n=(0,modular_js_1.pow2)(_88n,_44n,P)*_22n%P;_3n=(0,modular_js_1.pow2)(_44n,_3n,P)*b3%P;_23n=(0,modular_js_1.pow2)(_3n,_23n,P)*_11n%P;_6n=(0,modular_js_1.pow2)(_23n,_6n,P)*b2%P;P=(0,modular_js_1.pow2)(_6n,_2n,P);if(!Fp.eql(Fp.sqr(P),y))throw Error("Cannot find square root");return P}function taggedHash(tag,...messages){var tagP=TAGGED_HASH_PREFIXES[tag];void 0===tagP&&(tagP=(0,sha256_1.sha256)(Uint8Array.from(tag,c=>c.charCodeAt(0))),tagP=
(0,utils_js_1.concatBytes)(tagP,tagP),TAGGED_HASH_PREFIXES[tag]=tagP);return(0,sha256_1.sha256)((0,utils_js_1.concatBytes)(tagP,...messages))}function schnorrGetExtPubKey(priv){priv=exports.secp256k1.utils.normPrivateKeyToScalar(priv);let p=Point.fromPrivateKey(priv);return{scalar:p.hasEvenY()?priv:(0,modular_js_1.mod)(-priv,secp256k1N),bytes:p.toRawBytes(!0).slice(1)}}function lift_x(x){if(!("bigint"===typeof x&&_0n<x&&x<secp256k1P))throw Error("bad x: need 0 \x3c x \x3c p");var xx=(0,modular_js_1.mod)(x*
x,secp256k1P);xx=(0,modular_js_1.mod)(xx*x+BigInt(7),secp256k1P);xx=sqrtMod(xx);xx%_2n!==_0n&&(xx=(0,modular_js_1.mod)(-xx,secp256k1P));x=new Point(x,xx,_1n);x.assertValidity();return x}function challenge(...args){return(0,modular_js_1.mod)((0,utils_js_1.bytesToNumberBE)(taggedHash("BIP0340/challenge",...args)),secp256k1N)}function schnorrVerify(signature,message,publicKey){signature=(0,utils_js_1.ensureBytes)("signature",signature,64);message=(0,utils_js_1.ensureBytes)("message",message);publicKey=
(0,utils_js_1.ensureBytes)("publicKey",publicKey,32);try{const P=lift_x((0,utils_js_1.bytesToNumberBE)(publicKey)),r=(0,utils_js_1.bytesToNumberBE)(signature.subarray(0,32));if(!("bigint"===typeof r&&_0n<r&&r<secp256k1P))return!1;const s=(0,utils_js_1.bytesToNumberBE)(signature.subarray(32,64));if(!("bigint"===typeof s&&_0n<s&&s<secp256k1N))return!1;const e=challenge((0,utils_js_1.numberToBytesBE)(r,32),P.toRawBytes(!0).slice(1),message);var JSCompiler_inline_result,b=(0,modular_js_1.mod)(-e,secp256k1N);
return(JSCompiler_inline_result=Point.BASE.multiplyAndAddUnsafe(P,s,b))&&JSCompiler_inline_result.hasEvenY()&&JSCompiler_inline_result.toAffine().x===r?!0:!1}catch(error){return!1}}Object.defineProperty(exports,"__esModule",{value:!0});exports.encodeToCurve=exports.hashToCurve=exports.schnorr=exports.secp256k1=void 0;const sha256_1=require("module$node_modules$$noble$hashes$sha256"),utils_1=require("module$node_modules$$noble$hashes$utils"),modular_js_1=require("module$node_modules$$noble$curves$abstract$modular");
global=require("module$node_modules$$noble$curves$abstract$weierstrass");const utils_js_1=require("module$node_modules$$noble$curves$abstract$utils"),hash_to_curve_js_1=require("module$node_modules$$noble$curves$abstract$hash_to_curve");require=require("module$node_modules$$noble$curves$_shortw_utils");const secp256k1P=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),secp256k1N=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),_1n=BigInt(1),_2n=
BigInt(2),Fp=(0,modular_js_1.Field)(secp256k1P,void 0,void 0,{sqrt:sqrtMod});exports.secp256k1=(0,require.createCurve)({a:BigInt(0),b:BigInt(7),Fp,n:secp256k1N,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),h:BigInt(1),lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:k=>{const n=secp256k1N;var a1=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),
b1=-_1n*BigInt("0xe4437ed6010e88286f547fa90abfe4c3");const POW_2_128=BigInt("0x100000000000000000000000000000000");var c1=(a1*k+n/_2n)/n;const c2=(-b1*k+n/_2n)/n;let k1=(0,modular_js_1.mod)(k-c1*a1-c2*BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),n);a1=(0,modular_js_1.mod)(-c1*b1-c2*a1,n);b1=k1>POW_2_128;c1=a1>POW_2_128;b1&&(k1=n-k1);c1&&(a1=n-a1);if(k1>POW_2_128||a1>POW_2_128)throw Error("splitScalar: Endomorphism failed, k\x3d"+k);return{k1neg:b1,k1,k2neg:c1,k2:a1}}}},sha256_1.sha256);const _0n=
BigInt(0),TAGGED_HASH_PREFIXES={},Point=exports.secp256k1.ProjectivePoint;exports.schnorr={getPublicKey:function(privateKey){return schnorrGetExtPubKey(privateKey).bytes},sign:function(message,privateKey,auxRand=(0,utils_1.randomBytes)(32)){message=(0,utils_js_1.ensureBytes)("message",message);const {bytes:px,scalar:d}=schnorrGetExtPubKey(privateKey);privateKey=(0,utils_js_1.ensureBytes)("auxRand",auxRand,32);privateKey=(0,utils_js_1.numberToBytesBE)(d^(0,utils_js_1.bytesToNumberBE)(taggedHash("BIP0340/aux",
privateKey)),32);privateKey=taggedHash("BIP0340/nonce",privateKey,px,message);privateKey=(0,modular_js_1.mod)((0,utils_js_1.bytesToNumberBE)(privateKey),secp256k1N);if(privateKey===_0n)throw Error("sign failed: k is zero");const {bytes:rx,scalar:k}=schnorrGetExtPubKey(privateKey);privateKey=challenge(rx,px,message);auxRand=new Uint8Array(64);auxRand.set(rx,0);auxRand.set((0,utils_js_1.numberToBytesBE)((0,modular_js_1.mod)(k+privateKey*d,secp256k1N),32),32);if(!schnorrVerify(auxRand,message,px))throw Error("sign: Invalid signature produced");
return auxRand},verify:schnorrVerify,utils:{randomPrivateKey:exports.secp256k1.utils.randomPrivateKey,lift_x,pointToBytes:point=>point.toRawBytes(!0).slice(1),numberToBytesBE:utils_js_1.numberToBytesBE,bytesToNumberBE:utils_js_1.bytesToNumberBE,taggedHash,mod:modular_js_1.mod}};const isoMap=(()=>(0,hash_to_curve_js_1.isogenyMap)(Fp,[["0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7","0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581","0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262",
"0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c"],["0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b","0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14","0x0000000000000000000000000000000000000000000000000000000000000001"],["0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c","0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3","0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931","0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84"],
["0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b","0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573","0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f","0x0000000000000000000000000000000000000000000000000000000000000001"]].map(i=>i.map(j=>BigInt(j)))))(),mapSWU=(0,global.mapToCurveSimpleSWU)(Fp,{A:BigInt("0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533"),B:BigInt("1771"),Z:Fp.create(BigInt("-11"))});require=(()=>(0,hash_to_curve_js_1.createHasher)(exports.secp256k1.ProjectivePoint,
scalars=>{const {x,y}=mapSWU(Fp.create(scalars[0]));return isoMap(x,y)},{DST:"secp256k1_XMD:SHA-256_SSWU_RO_",encodeDST:"secp256k1_XMD:SHA-256_SSWU_NU_",p:Fp.ORDER,m:1,k:128,expand:"xmd",hash:sha256_1.sha256}))();exports.hashToCurve=require.hashToCurve;exports.encodeToCurve=require.encodeToCurve}
//# sourceMappingURL=module$node_modules$$noble$curves$secp256k1.js.map
