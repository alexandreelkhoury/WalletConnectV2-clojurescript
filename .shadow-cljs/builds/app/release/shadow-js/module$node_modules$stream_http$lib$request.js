["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/stream-http/lib/request.js"],"~:js","shadow$provide[301]=function(S,A,V,q){var F=A(1),G=A(53).Buffer,r=A(298);q=A(76);var y=A(299),e=A(156),u=A(300),p=y.IncomingMessage,n=y.readyStates;A=V.exports=function(h){var k=this;e.Writable.call(k);k._opts=h;k._body=[];k._headers={};h.auth&&k.setHeader(\"Authorization\",\"Basic \"+(new G(h.auth)).toString(\"base64\"));Object.keys(h.headers).forEach(function(E){k.setHeader(E,h.headers[E])});var t=!0;if(\"disable-fetch\"===h.mode||\"requestTimeout\"in h&&!r.abortController){t=!1;var B=!0}else if(\"prefer-streaming\"===\nh.mode)B=!1;else if(\"allow-wrong-content-type\"===h.mode)B=!r.overrideMimeType;else{if(h.mode&&\"default\"!==h.mode&&\"prefer-fast\"!==h.mode)throw Error(\"Invalid value for opts.mode\");B=!0}k._mode=r.fetch&&t?\"fetch\":r.mozchunkedarraybuffer?\"moz-chunked-arraybuffer\":r.msstream?\"ms-stream\":r.arraybuffer&&B?\"arraybuffer\":r.vbArray&&B?\"text:vbarray\":\"text\";k._fetchTimer=null;k.on(\"finish\",function(){k._onFinish()})};q(A,e.Writable);A.prototype.setHeader=function(h,k){var t=h.toLowerCase();-1===l.indexOf(t)&&\n(this._headers[t]={name:h,value:k})};A.prototype.getHeader=function(h){return(h=this._headers[h.toLowerCase()])?h.value:null};A.prototype.removeHeader=function(h){delete this._headers[h.toLowerCase()]};A.prototype._onFinish=function(){var h=this;if(!h._destroyed){var k=h._opts,t=h._headers,B=null;\"GET\"!==k.method&&\"HEAD\"!==k.method&&(B=r.arraybuffer?u(G.concat(h._body)):r.blobConstructor?new S.Blob(h._body.map(function(I){return u(I)}),{type:(t[\"content-type\"]||{}).value||\"\"}):G.concat(h._body).toString());\nvar E=[];Object.keys(t).forEach(function(I){var M=t[I].name;I=t[I].value;Array.isArray(I)?I.forEach(function(P){E.push([M,P])}):E.push([M,I])});if(\"fetch\"===h._mode){var H=null;if(r.abortController){var D=new AbortController;H=D.signal;h._fetchAbortController=D;\"requestTimeout\"in k&&0!==k.requestTimeout&&(h._fetchTimer=S.setTimeout(function(){h.emit(\"requestTimeout\");h._fetchAbortController&&h._fetchAbortController.abort()},k.requestTimeout))}S.fetch(h._opts.url,{method:h._opts.method,headers:E,body:B||\nvoid 0,mode:\"cors\",credentials:k.withCredentials?\"include\":\"same-origin\",signal:H}).then(function(I){h._fetchResponse=I;h._connect()},function(I){S.clearTimeout(h._fetchTimer);h._destroyed||h.emit(\"error\",I)})}else{var C=h._xhr=new S.XMLHttpRequest;try{C.open(h._opts.method,h._opts.url,!0)}catch(I){F.nextTick(function(){h.emit(\"error\",I)});return}\"responseType\"in C&&(C.responseType=h._mode.split(\":\")[0]);\"withCredentials\"in C&&(C.withCredentials=!!k.withCredentials);\"text\"===h._mode&&\"overrideMimeType\"in\nC&&C.overrideMimeType(\"text/plain; charset\\x3dx-user-defined\");\"requestTimeout\"in k&&(C.timeout=k.requestTimeout,C.ontimeout=function(){h.emit(\"requestTimeout\")});E.forEach(function(I){C.setRequestHeader(I[0],I[1])});h._response=null;C.onreadystatechange=function(){switch(C.readyState){case n.LOADING:case n.DONE:h._onXHRProgress()}};\"moz-chunked-arraybuffer\"===h._mode&&(C.onprogress=function(){h._onXHRProgress()});C.onerror=function(){h._destroyed||h.emit(\"error\",Error(\"XHR error\"))};try{C.send(B)}catch(I){F.nextTick(function(){h.emit(\"error\",\nI)})}}}};A.prototype._onXHRProgress=function(){try{var h=this._xhr.status;var k=null!==h&&0!==h}catch(t){k=!1}k&&!this._destroyed&&(this._response||this._connect(),this._response._onXHRProgress())};A.prototype._connect=function(){var h=this;h._destroyed||(h._response=new p(h._xhr,h._fetchResponse,h._mode,h._fetchTimer),h._response.on(\"error\",function(k){h.emit(\"error\",k)}),h.emit(\"response\",h._response))};A.prototype._write=function(h,k,t){this._body.push(h);t()};A.prototype.abort=A.prototype.destroy=\nfunction(){this._destroyed=!0;S.clearTimeout(this._fetchTimer);this._response&&(this._response._destroyed=!0);this._xhr?this._xhr.abort():this._fetchAbortController&&this._fetchAbortController.abort()};A.prototype.end=function(h,k,t){\"function\"===typeof h&&(t=h,h=void 0);e.Writable.prototype.end.call(this,h,k,t)};A.prototype.flushHeaders=function(){};A.prototype.setTimeout=function(){};A.prototype.setNoDelay=function(){};A.prototype.setSocketKeepAlive=function(){};var l=\"accept-charset accept-encoding access-control-request-headers access-control-request-method connection content-length cookie cookie2 date dnt expect host keep-alive origin referer te trailer transfer-encoding upgrade via\".split(\" \")}","~:source","shadow$provide[301] = function(global,require,module,exports) {\nvar process = require('process');\nvar Buffer = require('buffer').Buffer;\nvar capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('readable-stream')\nvar toArrayBuffer = require('to-arraybuffer')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else if (capability.vbArray && preferBinary) {\n\t\treturn 'text:vbarray'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + new Buffer(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\tself._fetchTimer = null\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n\t\tif (capability.arraybuffer) {\n\t\t\tbody = toArrayBuffer(Buffer.concat(self._body))\n\t\t} else if (capability.blobConstructor) {\n\t\t\tbody = new global.Blob(self._body.map(function (buffer) {\n\t\t\t\treturn toArrayBuffer(buffer)\n\t\t\t}), {\n\t\t\t\ttype: (headersObj['content-type'] || {}).value || ''\n\t\t\t})\n\t\t} else {\n\t\t\t// get utf8 string\n\t\t\tbody = Buffer.concat(self._body).toString()\n\t\t}\n\t}\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tvar fetchTimer = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tself._fetchTimer = global.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tglobal.clearTimeout(self._fetchTimer)\n\t\t\tif (!self._destroyed)\n\t\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode.split(':')[0]\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress()\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._fetchTimer)\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function () {\n\tvar self = this\n\tself._destroyed = true\n\tglobal.clearTimeout(self._fetchTimer)\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setTimeout = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'via'\n]\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$process$browser","~$module$node_modules$stream_http$lib$capability","~$module$node_modules$stream_http$lib$response","~$shadow.js","~$module$node_modules$inherits$inherits_browser","~$module$node_modules$to_arraybuffer$index","~$module$node_modules$buffer$index","~$module$node_modules$readable_stream$readable_browser"]],"~:properties",["^5",["setHeader","onerror","body","responseType","_xhr","getHeader","method","setNoDelay","_connect","_fetchResponse","_onFinish","mode","signal","_onXHRProgress","name","value","destroy","flushHeaders","removeHeader","onreadystatechange","timeout","withCredentials","_body","_write","ontimeout","_destroyed","_opts","type","abort","setTimeout","credentials","onprogress","end","_fetchAbortController","_fetchTimer","_mode","_headers","setSocketKeepAlive","_response","headers"]],"~:compiled-at",1695041440892,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$stream_http$lib$request.js\",\n\"lineCount\":8,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/stream-http/lib/request.js\"],\n\"sourcesContent\":[\"shadow$provide[301] = function(global,require,module,exports) {\\nvar process = require('process');\\nvar Buffer = require('buffer').Buffer;\\nvar capability = require('./capability')\\nvar inherits = require('inherits')\\nvar response = require('./response')\\nvar stream = require('readable-stream')\\nvar toArrayBuffer = require('to-arraybuffer')\\n\\nvar IncomingMessage = response.IncomingMessage\\nvar rStates = response.readyStates\\n\\nfunction decideMode (preferBinary, useFetch) {\\n\\tif (capability.fetch && useFetch) {\\n\\t\\treturn 'fetch'\\n\\t} else if (capability.mozchunkedarraybuffer) {\\n\\t\\treturn 'moz-chunked-arraybuffer'\\n\\t} else if (capability.msstream) {\\n\\t\\treturn 'ms-stream'\\n\\t} else if (capability.arraybuffer && preferBinary) {\\n\\t\\treturn 'arraybuffer'\\n\\t} else if (capability.vbArray && preferBinary) {\\n\\t\\treturn 'text:vbarray'\\n\\t} else {\\n\\t\\treturn 'text'\\n\\t}\\n}\\n\\nvar ClientRequest = module.exports = function (opts) {\\n\\tvar self = this\\n\\tstream.Writable.call(self)\\n\\n\\tself._opts = opts\\n\\tself._body = []\\n\\tself._headers = {}\\n\\tif (opts.auth)\\n\\t\\tself.setHeader('Authorization', 'Basic ' + new Buffer(opts.auth).toString('base64'))\\n\\tObject.keys(opts.headers).forEach(function (name) {\\n\\t\\tself.setHeader(name, opts.headers[name])\\n\\t})\\n\\n\\tvar preferBinary\\n\\tvar useFetch = true\\n\\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\\n\\t\\t// If the use of XHR should be preferred. Not typically needed.\\n\\t\\tuseFetch = false\\n\\t\\tpreferBinary = true\\n\\t} else if (opts.mode === 'prefer-streaming') {\\n\\t\\t// If streaming is a high priority but binary compatibility and\\n\\t\\t// the accuracy of the 'content-type' header aren't\\n\\t\\tpreferBinary = false\\n\\t} else if (opts.mode === 'allow-wrong-content-type') {\\n\\t\\t// If streaming is more important than preserving the 'content-type' header\\n\\t\\tpreferBinary = !capability.overrideMimeType\\n\\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\\n\\t\\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\\n\\t\\tpreferBinary = true\\n\\t} else {\\n\\t\\tthrow new Error('Invalid value for opts.mode')\\n\\t}\\n\\tself._mode = decideMode(preferBinary, useFetch)\\n\\tself._fetchTimer = null\\n\\n\\tself.on('finish', function () {\\n\\t\\tself._onFinish()\\n\\t})\\n}\\n\\ninherits(ClientRequest, stream.Writable)\\n\\nClientRequest.prototype.setHeader = function (name, value) {\\n\\tvar self = this\\n\\tvar lowerName = name.toLowerCase()\\n\\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\\n\\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\\n\\t// http-browserify did it, so I will too.\\n\\tif (unsafeHeaders.indexOf(lowerName) !== -1)\\n\\t\\treturn\\n\\n\\tself._headers[lowerName] = {\\n\\t\\tname: name,\\n\\t\\tvalue: value\\n\\t}\\n}\\n\\nClientRequest.prototype.getHeader = function (name) {\\n\\tvar header = this._headers[name.toLowerCase()]\\n\\tif (header)\\n\\t\\treturn header.value\\n\\treturn null\\n}\\n\\nClientRequest.prototype.removeHeader = function (name) {\\n\\tvar self = this\\n\\tdelete self._headers[name.toLowerCase()]\\n}\\n\\nClientRequest.prototype._onFinish = function () {\\n\\tvar self = this\\n\\n\\tif (self._destroyed)\\n\\t\\treturn\\n\\tvar opts = self._opts\\n\\n\\tvar headersObj = self._headers\\n\\tvar body = null\\n\\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\\n\\t\\tif (capability.arraybuffer) {\\n\\t\\t\\tbody = toArrayBuffer(Buffer.concat(self._body))\\n\\t\\t} else if (capability.blobConstructor) {\\n\\t\\t\\tbody = new global.Blob(self._body.map(function (buffer) {\\n\\t\\t\\t\\treturn toArrayBuffer(buffer)\\n\\t\\t\\t}), {\\n\\t\\t\\t\\ttype: (headersObj['content-type'] || {}).value || ''\\n\\t\\t\\t})\\n\\t\\t} else {\\n\\t\\t\\t// get utf8 string\\n\\t\\t\\tbody = Buffer.concat(self._body).toString()\\n\\t\\t}\\n\\t}\\n\\n\\t// create flattened list of headers\\n\\tvar headersList = []\\n\\tObject.keys(headersObj).forEach(function (keyName) {\\n\\t\\tvar name = headersObj[keyName].name\\n\\t\\tvar value = headersObj[keyName].value\\n\\t\\tif (Array.isArray(value)) {\\n\\t\\t\\tvalue.forEach(function (v) {\\n\\t\\t\\t\\theadersList.push([name, v])\\n\\t\\t\\t})\\n\\t\\t} else {\\n\\t\\t\\theadersList.push([name, value])\\n\\t\\t}\\n\\t})\\n\\n\\tif (self._mode === 'fetch') {\\n\\t\\tvar signal = null\\n\\t\\tvar fetchTimer = null\\n\\t\\tif (capability.abortController) {\\n\\t\\t\\tvar controller = new AbortController()\\n\\t\\t\\tsignal = controller.signal\\n\\t\\t\\tself._fetchAbortController = controller\\n\\n\\t\\t\\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\\n\\t\\t\\t\\tself._fetchTimer = global.setTimeout(function () {\\n\\t\\t\\t\\t\\tself.emit('requestTimeout')\\n\\t\\t\\t\\t\\tif (self._fetchAbortController)\\n\\t\\t\\t\\t\\t\\tself._fetchAbortController.abort()\\n\\t\\t\\t\\t}, opts.requestTimeout)\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tglobal.fetch(self._opts.url, {\\n\\t\\t\\tmethod: self._opts.method,\\n\\t\\t\\theaders: headersList,\\n\\t\\t\\tbody: body || undefined,\\n\\t\\t\\tmode: 'cors',\\n\\t\\t\\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\\n\\t\\t\\tsignal: signal\\n\\t\\t}).then(function (response) {\\n\\t\\t\\tself._fetchResponse = response\\n\\t\\t\\tself._connect()\\n\\t\\t}, function (reason) {\\n\\t\\t\\tglobal.clearTimeout(self._fetchTimer)\\n\\t\\t\\tif (!self._destroyed)\\n\\t\\t\\t\\tself.emit('error', reason)\\n\\t\\t})\\n\\t} else {\\n\\t\\tvar xhr = self._xhr = new global.XMLHttpRequest()\\n\\t\\ttry {\\n\\t\\t\\txhr.open(self._opts.method, self._opts.url, true)\\n\\t\\t} catch (err) {\\n\\t\\t\\tprocess.nextTick(function () {\\n\\t\\t\\t\\tself.emit('error', err)\\n\\t\\t\\t})\\n\\t\\t\\treturn\\n\\t\\t}\\n\\n\\t\\t// Can't set responseType on really old browsers\\n\\t\\tif ('responseType' in xhr)\\n\\t\\t\\txhr.responseType = self._mode.split(':')[0]\\n\\n\\t\\tif ('withCredentials' in xhr)\\n\\t\\t\\txhr.withCredentials = !!opts.withCredentials\\n\\n\\t\\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\\n\\t\\t\\txhr.overrideMimeType('text/plain; charset=x-user-defined')\\n\\n\\t\\tif ('requestTimeout' in opts) {\\n\\t\\t\\txhr.timeout = opts.requestTimeout\\n\\t\\t\\txhr.ontimeout = function () {\\n\\t\\t\\t\\tself.emit('requestTimeout')\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\theadersList.forEach(function (header) {\\n\\t\\t\\txhr.setRequestHeader(header[0], header[1])\\n\\t\\t})\\n\\n\\t\\tself._response = null\\n\\t\\txhr.onreadystatechange = function () {\\n\\t\\t\\tswitch (xhr.readyState) {\\n\\t\\t\\t\\tcase rStates.LOADING:\\n\\t\\t\\t\\tcase rStates.DONE:\\n\\t\\t\\t\\t\\tself._onXHRProgress()\\n\\t\\t\\t\\t\\tbreak\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\\n\\t\\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\\n\\t\\tif (self._mode === 'moz-chunked-arraybuffer') {\\n\\t\\t\\txhr.onprogress = function () {\\n\\t\\t\\t\\tself._onXHRProgress()\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\txhr.onerror = function () {\\n\\t\\t\\tif (self._destroyed)\\n\\t\\t\\t\\treturn\\n\\t\\t\\tself.emit('error', new Error('XHR error'))\\n\\t\\t}\\n\\n\\t\\ttry {\\n\\t\\t\\txhr.send(body)\\n\\t\\t} catch (err) {\\n\\t\\t\\tprocess.nextTick(function () {\\n\\t\\t\\t\\tself.emit('error', err)\\n\\t\\t\\t})\\n\\t\\t\\treturn\\n\\t\\t}\\n\\t}\\n}\\n\\n/**\\n * Checks if xhr.status is readable and non-zero, indicating no error.\\n * Even though the spec says it should be available in readyState 3,\\n * accessing it throws an exception in IE8\\n */\\nfunction statusValid (xhr) {\\n\\ttry {\\n\\t\\tvar status = xhr.status\\n\\t\\treturn (status !== null && status !== 0)\\n\\t} catch (e) {\\n\\t\\treturn false\\n\\t}\\n}\\n\\nClientRequest.prototype._onXHRProgress = function () {\\n\\tvar self = this\\n\\n\\tif (!statusValid(self._xhr) || self._destroyed)\\n\\t\\treturn\\n\\n\\tif (!self._response)\\n\\t\\tself._connect()\\n\\n\\tself._response._onXHRProgress()\\n}\\n\\nClientRequest.prototype._connect = function () {\\n\\tvar self = this\\n\\n\\tif (self._destroyed)\\n\\t\\treturn\\n\\n\\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._fetchTimer)\\n\\tself._response.on('error', function(err) {\\n\\t\\tself.emit('error', err)\\n\\t})\\n\\n\\tself.emit('response', self._response)\\n}\\n\\nClientRequest.prototype._write = function (chunk, encoding, cb) {\\n\\tvar self = this\\n\\n\\tself._body.push(chunk)\\n\\tcb()\\n}\\n\\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function () {\\n\\tvar self = this\\n\\tself._destroyed = true\\n\\tglobal.clearTimeout(self._fetchTimer)\\n\\tif (self._response)\\n\\t\\tself._response._destroyed = true\\n\\tif (self._xhr)\\n\\t\\tself._xhr.abort()\\n\\telse if (self._fetchAbortController)\\n\\t\\tself._fetchAbortController.abort()\\n}\\n\\nClientRequest.prototype.end = function (data, encoding, cb) {\\n\\tvar self = this\\n\\tif (typeof data === 'function') {\\n\\t\\tcb = data\\n\\t\\tdata = undefined\\n\\t}\\n\\n\\tstream.Writable.prototype.end.call(self, data, encoding, cb)\\n}\\n\\nClientRequest.prototype.flushHeaders = function () {}\\nClientRequest.prototype.setTimeout = function () {}\\nClientRequest.prototype.setNoDelay = function () {}\\nClientRequest.prototype.setSocketKeepAlive = function () {}\\n\\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\\nvar unsafeHeaders = [\\n\\t'accept-charset',\\n\\t'accept-encoding',\\n\\t'access-control-request-headers',\\n\\t'access-control-request-method',\\n\\t'connection',\\n\\t'content-length',\\n\\t'cookie',\\n\\t'cookie2',\\n\\t'date',\\n\\t'dnt',\\n\\t'expect',\\n\\t'host',\\n\\t'keep-alive',\\n\\t'origin',\\n\\t'referer',\\n\\t'te',\\n\\t'trailer',\\n\\t'transfer-encoding',\\n\\t'upgrade',\\n\\t'via'\\n]\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"process\",\"Buffer\",\"capability\",\"inherits\",\"response\",\"stream\",\"toArrayBuffer\",\"IncomingMessage\",\"rStates\",\"readyStates\",\"ClientRequest\",\"module.exports\",\"opts\",\"self\",\"Writable\",\"call\",\"_opts\",\"_body\",\"_headers\",\"auth\",\"setHeader\",\"toString\",\"Object\",\"keys\",\"headers\",\"forEach\",\"name\",\"useFetch\",\"mode\",\"abortController\",\"preferBinary\",\"overrideMimeType\",\"Error\",\"_mode\",\"fetch\",\"mozchunkedarraybuffer\",\"msstream\",\"arraybuffer\",\"vbArray\",\"_fetchTimer\",\"on\",\"_onFinish\",\"prototype\",\"ClientRequest.prototype.setHeader\",\"value\",\"lowerName\",\"toLowerCase\",\"unsafeHeaders\",\"indexOf\",\"getHeader\",\"ClientRequest.prototype.getHeader\",\"header\",\"removeHeader\",\"ClientRequest.prototype.removeHeader\",\"ClientRequest.prototype._onFinish\",\"_destroyed\",\"headersObj\",\"body\",\"method\",\"concat\",\"blobConstructor\",\"Blob\",\"map\",\"buffer\",\"type\",\"headersList\",\"keyName\",\"Array\",\"isArray\",\"v\",\"push\",\"signal\",\"controller\",\"AbortController\",\"_fetchAbortController\",\"requestTimeout\",\"setTimeout\",\"emit\",\"abort\",\"url\",\"undefined\",\"credentials\",\"withCredentials\",\"then\",\"_fetchResponse\",\"_connect\",\"reason\",\"clearTimeout\",\"xhr\",\"_xhr\",\"XMLHttpRequest\",\"open\",\"err\",\"nextTick\",\"responseType\",\"split\",\"timeout\",\"ontimeout\",\"xhr.ontimeout\",\"setRequestHeader\",\"_response\",\"onreadystatechange\",\"xhr.onreadystatechange\",\"readyState\",\"LOADING\",\"DONE\",\"_onXHRProgress\",\"onprogress\",\"xhr.onprogress\",\"onerror\",\"xhr.onerror\",\"send\",\"ClientRequest.prototype._onXHRProgress\",\"status\",\"e\",\"ClientRequest.prototype._connect\",\"_write\",\"ClientRequest.prototype._write\",\"chunk\",\"encoding\",\"cb\",\"destroy\",\"ClientRequest.prototype.destroy\",\"end\",\"ClientRequest.prototype.end\",\"data\",\"flushHeaders\",\"ClientRequest.prototype.flushHeaders\",\"ClientRequest.prototype.setTimeout\",\"setNoDelay\",\"ClientRequest.prototype.setNoDelay\",\"setSocketKeepAlive\",\"ClientRequest.prototype.setSocketKeepAlive\"]\n}\n"]