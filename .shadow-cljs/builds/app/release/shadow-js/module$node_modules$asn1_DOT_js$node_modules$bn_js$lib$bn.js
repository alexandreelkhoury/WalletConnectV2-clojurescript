["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/asn1_DOT_js/node_modules/bn.js/lib/bn.js"],"~:js","shadow$provide[226]=function(S,A,V,q){(function(F,G){function r(a,b){if(!a)throw Error(b||\"Assertion failed\");}function y(a,b){a.super_=b;var c=function(){};c.prototype=b.prototype;a.prototype=new c;a.prototype.constructor=a}function e(a,b,c){if(e.isBN(a))return a;this.negative=0;this.words=null;this.length=0;this.red=null;if(null!==a){if(\"le\"===b||\"be\"===b)c=b,b=10;this._init(a||0,b||10,c||\"be\")}}function u(a,b){a=a.charCodeAt(b);return 65<=a&&70>=a?a-55:97<=a&&102>=a?a-87:a-48&15}function p(a,b,\nc){var d=u(a,c);c-1>=b&&(d|=u(a,c-1)<<4);return d}function n(a,b,c,d){var f=0;for(c=Math.min(a.length,c);b<c;b++){var g=a.charCodeAt(b)-48;f*=d;f=49<=g?f+(g-49+10):17<=g?f+(g-17+10):f+g}return f}function l(a,b,c){c.negative=b.negative^a.negative;var d=a.length+b.length|0;c.length=d;d=d-1|0;var f=a.words[0]|0,g=b.words[0]|0;f*=g;var m=f/67108864|0;c.words[0]=f&67108863;for(var w=1;w<d;w++){var x=m>>>26,z=m&67108863;m=Math.min(w,b.length-1);for(var v=Math.max(0,w-a.length+1);v<=m;v++)f=a.words[w-v|\n0]|0,g=b.words[v]|0,f=f*g+z,x+=f/67108864|0,z=f&67108863;c.words[w]=z|0;m=x|0}0!==m?c.words[w]=m|0:c.length--;return c.strip()}function h(a,b){this.x=a;this.y=b}function k(a,b){this.name=a;this.p=new e(b,16);this.n=this.p.bitLength();this.k=(new e(1)).iushln(this.n).isub(this.p);this.tmp=this._tmp()}function t(){k.call(this,\"k256\",\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\")}function B(){k.call(this,\"p224\",\"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\")}\nfunction E(){k.call(this,\"p192\",\"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\")}function H(){k.call(this,\"25519\",\"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\")}function D(a){\"string\"===typeof a?(a=e._prime(a),this.m=a.p,this.prime=a):(r(a.gtn(1),\"modulus must be greater than 1\"),this.m=a,this.prime=null)}function C(a){D.call(this,a);this.shift=this.m.bitLength();0!==this.shift%26&&(this.shift+=26-this.shift%26);this.r=(new e(1)).iushln(this.shift);this.r2=this.imod(this.r.sqr());\nthis.rinv=this.r._invmp(this.m);this.minv=this.rinv.mul(this.r).isubn(1).div(this.m);this.minv=this.minv.umod(this.r);this.minv=this.r.sub(this.minv)}\"object\"===typeof F?F.exports=e:G.BN=e;e.BN=e;e.wordSize=26;try{var I=\"undefined\"!==typeof window&&\"undefined\"!==typeof window.Buffer?window.Buffer:A(6).Buffer}catch(a){}e.isBN=function(a){return a instanceof e?!0:null!==a&&\"object\"===typeof a&&a.constructor.wordSize===e.wordSize&&Array.isArray(a.words)};e.max=function(a,b){return 0<a.cmp(b)?a:b};e.min=\nfunction(a,b){return 0>a.cmp(b)?a:b};e.prototype._init=function(a,b,c){if(\"number\"===typeof a)return this._initNumber(a,b,c);if(\"object\"===typeof a)return this._initArray(a,b,c);\"hex\"===b&&(b=16);r(b===(b|0)&&2<=b&&36>=b);a=a.toString().replace(/\\s+/g,\"\");var d=0;\"-\"===a[0]&&(d++,this.negative=1);d<a.length&&(16===b?this._parseHex(a,d,c):(this._parseBase(a,b,d),\"le\"===c&&this._initArray(this.toArray(),b,c)))};e.prototype._initNumber=function(a,b,c){0>a&&(this.negative=1,a=-a);67108864>a?(this.words=\n[a&67108863],this.length=1):4503599627370496>a?(this.words=[a&67108863,a/67108864&67108863],this.length=2):(r(9007199254740992>a),this.words=[a&67108863,a/67108864&67108863,1],this.length=3);\"le\"===c&&this._initArray(this.toArray(),b,c)};e.prototype._initArray=function(a,b,c){r(\"number\"===typeof a.length);if(0>=a.length)return this.words=[0],this.length=1,this;this.length=Math.ceil(a.length/3);this.words=Array(this.length);for(b=0;b<this.length;b++)this.words[b]=0;var d=0;if(\"be\"===c)for(b=a.length-\n1,c=0;0<=b;b-=3){var f=a[b]|a[b-1]<<8|a[b-2]<<16;this.words[c]|=f<<d&67108863;this.words[c+1]=f>>>26-d&67108863;d+=24;26<=d&&(d-=26,c++)}else if(\"le\"===c)for(c=b=0;b<a.length;b+=3)f=a[b]|a[b+1]<<8|a[b+2]<<16,this.words[c]|=f<<d&67108863,this.words[c+1]=f>>>26-d&67108863,d+=24,26<=d&&(d-=26,c++);return this.strip()};e.prototype._parseHex=function(a,b,c){this.length=Math.ceil((a.length-b)/6);this.words=Array(this.length);for(var d=0;d<this.length;d++)this.words[d]=0;var f=0,g=0;if(\"be\"===c)for(d=a.length-\n1;d>=b;d-=2)c=p(a,b,d)<<f,this.words[g]|=c&67108863,18<=f?(f-=18,g+=1,this.words[g]|=c>>>26):f+=8;else for(d=0===(a.length-b)%2?b+1:b;d<a.length;d+=2)c=p(a,b,d)<<f,this.words[g]|=c&67108863,18<=f?(f-=18,g+=1,this.words[g]|=c>>>26):f+=8;this.strip()};e.prototype._parseBase=function(a,b,c){this.words=[0];this.length=1;for(var d=0,f=1;67108863>=f;f*=b)d++;d--;f=f/b|0;var g=a.length-c,m=g%d;g=Math.min(g,g-m)+c;for(var w=c;w<g;w+=d)c=n(a,w,w+d,b),this.imuln(f),67108864>this.words[0]+c?this.words[0]+=c:\nthis._iaddn(c);if(0!==m){d=1;c=n(a,w,a.length,b);for(w=0;w<m;w++)d*=b;this.imuln(d);67108864>this.words[0]+c?this.words[0]+=c:this._iaddn(c)}this.strip()};e.prototype.copy=function(a){a.words=Array(this.length);for(var b=0;b<this.length;b++)a.words[b]=this.words[b];a.length=this.length;a.negative=this.negative;a.red=this.red};e.prototype.clone=function(){var a=new e(null);this.copy(a);return a};e.prototype._expand=function(a){for(;this.length<a;)this.words[this.length++]=0;return this};e.prototype.strip=\nfunction(){for(;1<this.length&&0===this.words[this.length-1];)this.length--;return this._normSign()};e.prototype._normSign=function(){1===this.length&&0===this.words[0]&&(this.negative=0);return this};e.prototype.inspect=function(){return(this.red?\"\\x3cBN-R: \":\"\\x3cBN: \")+this.toString(16)+\"\\x3e\"};var M=\" 0 00 000 0000 00000 000000 0000000 00000000 000000000 0000000000 00000000000 000000000000 0000000000000 00000000000000 000000000000000 0000000000000000 00000000000000000 000000000000000000 0000000000000000000 00000000000000000000 000000000000000000000 0000000000000000000000 00000000000000000000000 000000000000000000000000 0000000000000000000000000\".split(\" \"),\nP=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],J=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1E7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64E6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243E5,28629151,33554432,39135393,45435424,52521875,60466176];e.prototype.toString=function(a,b){a=a||10;b=b|0||1;if(16===a||\"hex\"===a){var c=\"\";for(var d=a=0,f=0;f<this.length;f++){var g=\nthis.words[f],m=((g<<a|d)&16777215).toString(16);d=g>>>24-a&16777215;c=0!==d||f!==this.length-1?M[6-m.length]+m+c:m+c;a+=2;26<=a&&(a-=26,f--)}for(0!==d&&(c=d.toString(16)+c);0!==c.length%b;)c=\"0\"+c;0!==this.negative&&(c=\"-\"+c);return c}if(a===(a|0)&&2<=a&&36>=a){d=P[a];f=J[a];c=\"\";g=this.clone();for(g.negative=0;!g.isZero();)m=g.modn(f).toString(a),g=g.idivn(f),c=g.isZero()?m+c:M[d-m.length]+m+c;for(this.isZero()&&(c=\"0\"+c);0!==c.length%b;)c=\"0\"+c;0!==this.negative&&(c=\"-\"+c);return c}r(!1,\"Base should be between 2 and 36\")};\ne.prototype.toNumber=function(){var a=this.words[0];2===this.length?a+=67108864*this.words[1]:3===this.length&&1===this.words[2]?a+=4503599627370496+67108864*this.words[1]:2<this.length&&r(!1,\"Number can only safely store up to 53 bits\");return 0!==this.negative?-a:a};e.prototype.toJSON=function(){return this.toString(16)};e.prototype.toBuffer=function(a,b){r(\"undefined\"!==typeof I);return this.toArrayLike(I,a,b)};e.prototype.toArray=function(a,b){return this.toArrayLike(Array,a,b)};e.prototype.toArrayLike=\nfunction(a,b,c){var d=this.byteLength();c=c||Math.max(1,d);r(d<=c,\"byte array longer than desired length\");r(0<c,\"Requested array length \\x3c\\x3d 0\");this.strip();var f=\"le\"===b;a=new a(c);b=this.clone();if(f){for(f=0;!b.isZero();f++)d=b.andln(255),b.iushrn(8),a[f]=d;for(;f<c;f++)a[f]=0}else{for(f=0;f<c-d;f++)a[f]=0;for(f=0;!b.isZero();f++)d=b.andln(255),b.iushrn(8),a[c-f-1]=d}return a};e.prototype._countBits=Math.clz32?function(a){return 32-Math.clz32(a)}:function(a){var b=0;4096<=a&&(b+=13,a>>>=\n13);64<=a&&(b+=7,a>>>=7);8<=a&&(b+=4,a>>>=4);2<=a&&(b+=2,a>>>=2);return b+a};e.prototype._zeroBits=function(a){if(0===a)return 26;var b=0;0===(a&8191)&&(b+=13,a>>>=13);0===(a&127)&&(b+=7,a>>>=7);0===(a&15)&&(b+=4,a>>>=4);0===(a&3)&&(b+=2,a>>>=2);0===(a&1)&&b++;return b};e.prototype.bitLength=function(){var a=this._countBits(this.words[this.length-1]);return 26*(this.length-1)+a};e.prototype.zeroBits=function(){if(this.isZero())return 0;for(var a=0,b=0;b<this.length;b++){var c=this._zeroBits(this.words[b]);\na+=c;if(26!==c)break}return a};e.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)};e.prototype.toTwos=function(a){return 0!==this.negative?this.abs().inotn(a).iaddn(1):this.clone()};e.prototype.fromTwos=function(a){return this.testn(a-1)?this.notn(a).iaddn(1).ineg():this.clone()};e.prototype.isNeg=function(){return 0!==this.negative};e.prototype.neg=function(){return this.clone().ineg()};e.prototype.ineg=function(){this.isZero()||(this.negative^=1);return this};e.prototype.iuor=\nfunction(a){for(;this.length<a.length;)this.words[this.length++]=0;for(var b=0;b<a.length;b++)this.words[b]|=a.words[b];return this.strip()};e.prototype.ior=function(a){r(0===(this.negative|a.negative));return this.iuor(a)};e.prototype.or=function(a){return this.length>a.length?this.clone().ior(a):a.clone().ior(this)};e.prototype.uor=function(a){return this.length>a.length?this.clone().iuor(a):a.clone().iuor(this)};e.prototype.iuand=function(a){var b=this.length>a.length?a:this;for(var c=0;c<b.length;c++)this.words[c]&=\na.words[c];this.length=b.length;return this.strip()};e.prototype.iand=function(a){r(0===(this.negative|a.negative));return this.iuand(a)};e.prototype.and=function(a){return this.length>a.length?this.clone().iand(a):a.clone().iand(this)};e.prototype.uand=function(a){return this.length>a.length?this.clone().iuand(a):a.clone().iuand(this)};e.prototype.iuxor=function(a){if(this.length>a.length)var b=this;else b=a,a=this;for(var c=0;c<a.length;c++)this.words[c]=b.words[c]^a.words[c];if(this!==b)for(;c<\nb.length;c++)this.words[c]=b.words[c];this.length=b.length;return this.strip()};e.prototype.ixor=function(a){r(0===(this.negative|a.negative));return this.iuxor(a)};e.prototype.xor=function(a){return this.length>a.length?this.clone().ixor(a):a.clone().ixor(this)};e.prototype.uxor=function(a){return this.length>a.length?this.clone().iuxor(a):a.clone().iuxor(this)};e.prototype.inotn=function(a){r(\"number\"===typeof a&&0<=a);var b=Math.ceil(a/26)|0;a%=26;this._expand(b);0<a&&b--;for(var c=0;c<b;c++)this.words[c]=\n~this.words[c]&67108863;0<a&&(this.words[c]=~this.words[c]&67108863>>26-a);return this.strip()};e.prototype.notn=function(a){return this.clone().inotn(a)};e.prototype.setn=function(a,b){r(\"number\"===typeof a&&0<=a);var c=a/26|0;a%=26;this._expand(c+1);this.words[c]=b?this.words[c]|1<<a:this.words[c]&~(1<<a);return this.strip()};e.prototype.iadd=function(a){if(0!==this.negative&&0===a.negative)return this.negative=0,this.isub(a),this.negative^=1,this._normSign();if(0===this.negative&&0!==a.negative){a.negative=\n0;var b=this.isub(a);a.negative=1;return b._normSign()}if(this.length>a.length)var c=this;else c=a,a=this;for(var d=b=0;d<a.length;d++)b=(c.words[d]|0)+(a.words[d]|0)+b,this.words[d]=b&67108863,b>>>=26;for(;0!==b&&d<c.length;d++)b=(c.words[d]|0)+b,this.words[d]=b&67108863,b>>>=26;this.length=c.length;if(0!==b)this.words[this.length]=b,this.length++;else if(c!==this)for(;d<c.length;d++)this.words[d]=c.words[d];return this};e.prototype.add=function(a){if(0!==a.negative&&0===this.negative){a.negative=\n0;var b=this.sub(a);a.negative^=1;return b}return 0===a.negative&&0!==this.negative?(this.negative=0,b=a.sub(this),this.negative=1,b):this.length>a.length?this.clone().iadd(a):a.clone().iadd(this)};e.prototype.isub=function(a){if(0!==a.negative){a.negative=0;var b=this.iadd(a);a.negative=1;return b._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(a),this.negative=1,this._normSign();b=this.cmp(a);if(0===b)return this.negative=0,this.length=1,this.words[0]=0,this;if(0<b)var c=this;\nelse c=a,a=this;for(var d=0,f=0;f<a.length;f++)b=(c.words[f]|0)-(a.words[f]|0)+d,d=b>>26,this.words[f]=b&67108863;for(;0!==d&&f<c.length;f++)b=(c.words[f]|0)+d,d=b>>26,this.words[f]=b&67108863;if(0===d&&f<c.length&&c!==this)for(;f<c.length;f++)this.words[f]=c.words[f];this.length=Math.max(this.length,f);c!==this&&(this.negative=1);return this.strip()};e.prototype.sub=function(a){return this.clone().isub(a)};var T=function(a,b,c){var d=a.words,f=b.words,g=c.words,m=0,w=d[0]|0,x=w&8191,z=w>>>13,v=d[1]|\n0;w=v&8191;var R=v>>>13,O=d[2]|0;v=O&8191;var L=O>>>13,Q=d[3]|0;O=Q&8191;var W=Q>>>13,Z=d[4]|0;Q=Z&8191;var da=Z>>>13,X=d[5]|0;Z=X&8191;var Y=X>>>13,aa=d[6]|0;X=aa&8191;var ca=aa>>>13,ea=d[7]|0;aa=ea&8191;var ja=ea>>>13,ka=d[8]|0;ea=ka&8191;ka>>>=13;var la=d[9]|0;d=la&8191;la>>>=13;var ia=f[0]|0,na=ia&8191,ua=ia>>>13,qa=f[1]|0;ia=qa&8191;var oa=qa>>>13,va=f[2]|0;qa=va&8191;var Fa=va>>>13,xa=f[3]|0;va=xa&8191;var Ja=xa>>>13,Aa=f[4]|0;xa=Aa&8191;var Ia=Aa>>>13,sa=f[5]|0;Aa=sa&8191;var Ka=sa>>>13,Ba=\nf[6]|0;sa=Ba&8191;var Ga=Ba>>>13,ta=f[7]|0;Ba=ta&8191;var Ea=ta>>>13,Ca=f[8]|0;ta=Ca&8191;Ca>>>=13;var Ha=f[9]|0;f=Ha&8191;Ha>>>=13;c.negative=a.negative^b.negative;c.length=19;var K=Math.imul(x,na);a=Math.imul(x,ua);a=a+Math.imul(z,na)|0;b=Math.imul(z,ua);var fa=(m+K|0)+((a&8191)<<13)|0;m=(b+(a>>>13)|0)+(fa>>>26)|0;fa&=67108863;K=Math.imul(w,na);a=Math.imul(w,ua);a=a+Math.imul(R,na)|0;b=Math.imul(R,ua);K=K+Math.imul(x,ia)|0;a=a+Math.imul(x,oa)|0;a=a+Math.imul(z,ia)|0;b=b+Math.imul(z,oa)|0;var ba=\n(m+K|0)+((a&8191)<<13)|0;m=(b+(a>>>13)|0)+(ba>>>26)|0;ba&=67108863;K=Math.imul(v,na);a=Math.imul(v,ua);a=a+Math.imul(L,na)|0;b=Math.imul(L,ua);K=K+Math.imul(w,ia)|0;a=a+Math.imul(w,oa)|0;a=a+Math.imul(R,ia)|0;b=b+Math.imul(R,oa)|0;K=K+Math.imul(x,qa)|0;a=a+Math.imul(x,Fa)|0;a=a+Math.imul(z,qa)|0;b=b+Math.imul(z,Fa)|0;var ma=(m+K|0)+((a&8191)<<13)|0;m=(b+(a>>>13)|0)+(ma>>>26)|0;ma&=67108863;K=Math.imul(O,na);a=Math.imul(O,ua);a=a+Math.imul(W,na)|0;b=Math.imul(W,ua);K=K+Math.imul(v,ia)|0;a=a+Math.imul(v,\noa)|0;a=a+Math.imul(L,ia)|0;b=b+Math.imul(L,oa)|0;K=K+Math.imul(w,qa)|0;a=a+Math.imul(w,Fa)|0;a=a+Math.imul(R,qa)|0;b=b+Math.imul(R,Fa)|0;K=K+Math.imul(x,va)|0;a=a+Math.imul(x,Ja)|0;a=a+Math.imul(z,va)|0;b=b+Math.imul(z,Ja)|0;var ya=(m+K|0)+((a&8191)<<13)|0;m=(b+(a>>>13)|0)+(ya>>>26)|0;ya&=67108863;K=Math.imul(Q,na);a=Math.imul(Q,ua);a=a+Math.imul(da,na)|0;b=Math.imul(da,ua);K=K+Math.imul(O,ia)|0;a=a+Math.imul(O,oa)|0;a=a+Math.imul(W,ia)|0;b=b+Math.imul(W,oa)|0;K=K+Math.imul(v,qa)|0;a=a+Math.imul(v,\nFa)|0;a=a+Math.imul(L,qa)|0;b=b+Math.imul(L,Fa)|0;K=K+Math.imul(w,va)|0;a=a+Math.imul(w,Ja)|0;a=a+Math.imul(R,va)|0;b=b+Math.imul(R,Ja)|0;K=K+Math.imul(x,xa)|0;a=a+Math.imul(x,Ia)|0;a=a+Math.imul(z,xa)|0;b=b+Math.imul(z,Ia)|0;var wa=(m+K|0)+((a&8191)<<13)|0;m=(b+(a>>>13)|0)+(wa>>>26)|0;wa&=67108863;K=Math.imul(Z,na);a=Math.imul(Z,ua);a=a+Math.imul(Y,na)|0;b=Math.imul(Y,ua);K=K+Math.imul(Q,ia)|0;a=a+Math.imul(Q,oa)|0;a=a+Math.imul(da,ia)|0;b=b+Math.imul(da,oa)|0;K=K+Math.imul(O,qa)|0;a=a+Math.imul(O,\nFa)|0;a=a+Math.imul(W,qa)|0;b=b+Math.imul(W,Fa)|0;K=K+Math.imul(v,va)|0;a=a+Math.imul(v,Ja)|0;a=a+Math.imul(L,va)|0;b=b+Math.imul(L,Ja)|0;K=K+Math.imul(w,xa)|0;a=a+Math.imul(w,Ia)|0;a=a+Math.imul(R,xa)|0;b=b+Math.imul(R,Ia)|0;K=K+Math.imul(x,Aa)|0;a=a+Math.imul(x,Ka)|0;a=a+Math.imul(z,Aa)|0;b=b+Math.imul(z,Ka)|0;var ra=(m+K|0)+((a&8191)<<13)|0;m=(b+(a>>>13)|0)+(ra>>>26)|0;ra&=67108863;K=Math.imul(X,na);a=Math.imul(X,ua);a=a+Math.imul(ca,na)|0;b=Math.imul(ca,ua);K=K+Math.imul(Z,ia)|0;a=a+Math.imul(Z,\noa)|0;a=a+Math.imul(Y,ia)|0;b=b+Math.imul(Y,oa)|0;K=K+Math.imul(Q,qa)|0;a=a+Math.imul(Q,Fa)|0;a=a+Math.imul(da,qa)|0;b=b+Math.imul(da,Fa)|0;K=K+Math.imul(O,va)|0;a=a+Math.imul(O,Ja)|0;a=a+Math.imul(W,va)|0;b=b+Math.imul(W,Ja)|0;K=K+Math.imul(v,xa)|0;a=a+Math.imul(v,Ia)|0;a=a+Math.imul(L,xa)|0;b=b+Math.imul(L,Ia)|0;K=K+Math.imul(w,Aa)|0;a=a+Math.imul(w,Ka)|0;a=a+Math.imul(R,Aa)|0;b=b+Math.imul(R,Ka)|0;K=K+Math.imul(x,sa)|0;a=a+Math.imul(x,Ga)|0;a=a+Math.imul(z,sa)|0;b=b+Math.imul(z,Ga)|0;var Ma=(m+\nK|0)+((a&8191)<<13)|0;m=(b+(a>>>13)|0)+(Ma>>>26)|0;Ma&=67108863;K=Math.imul(aa,na);a=Math.imul(aa,ua);a=a+Math.imul(ja,na)|0;b=Math.imul(ja,ua);K=K+Math.imul(X,ia)|0;a=a+Math.imul(X,oa)|0;a=a+Math.imul(ca,ia)|0;b=b+Math.imul(ca,oa)|0;K=K+Math.imul(Z,qa)|0;a=a+Math.imul(Z,Fa)|0;a=a+Math.imul(Y,qa)|0;b=b+Math.imul(Y,Fa)|0;K=K+Math.imul(Q,va)|0;a=a+Math.imul(Q,Ja)|0;a=a+Math.imul(da,va)|0;b=b+Math.imul(da,Ja)|0;K=K+Math.imul(O,xa)|0;a=a+Math.imul(O,Ia)|0;a=a+Math.imul(W,xa)|0;b=b+Math.imul(W,Ia)|0;K=\nK+Math.imul(v,Aa)|0;a=a+Math.imul(v,Ka)|0;a=a+Math.imul(L,Aa)|0;b=b+Math.imul(L,Ka)|0;K=K+Math.imul(w,sa)|0;a=a+Math.imul(w,Ga)|0;a=a+Math.imul(R,sa)|0;b=b+Math.imul(R,Ga)|0;K=K+Math.imul(x,Ba)|0;a=a+Math.imul(x,Ea)|0;a=a+Math.imul(z,Ba)|0;b=b+Math.imul(z,Ea)|0;var La=(m+K|0)+((a&8191)<<13)|0;m=(b+(a>>>13)|0)+(La>>>26)|0;La&=67108863;K=Math.imul(ea,na);a=Math.imul(ea,ua);a=a+Math.imul(ka,na)|0;b=Math.imul(ka,ua);K=K+Math.imul(aa,ia)|0;a=a+Math.imul(aa,oa)|0;a=a+Math.imul(ja,ia)|0;b=b+Math.imul(ja,\noa)|0;K=K+Math.imul(X,qa)|0;a=a+Math.imul(X,Fa)|0;a=a+Math.imul(ca,qa)|0;b=b+Math.imul(ca,Fa)|0;K=K+Math.imul(Z,va)|0;a=a+Math.imul(Z,Ja)|0;a=a+Math.imul(Y,va)|0;b=b+Math.imul(Y,Ja)|0;K=K+Math.imul(Q,xa)|0;a=a+Math.imul(Q,Ia)|0;a=a+Math.imul(da,xa)|0;b=b+Math.imul(da,Ia)|0;K=K+Math.imul(O,Aa)|0;a=a+Math.imul(O,Ka)|0;a=a+Math.imul(W,Aa)|0;b=b+Math.imul(W,Ka)|0;K=K+Math.imul(v,sa)|0;a=a+Math.imul(v,Ga)|0;a=a+Math.imul(L,sa)|0;b=b+Math.imul(L,Ga)|0;K=K+Math.imul(w,Ba)|0;a=a+Math.imul(w,Ea)|0;a=a+Math.imul(R,\nBa)|0;b=b+Math.imul(R,Ea)|0;K=K+Math.imul(x,ta)|0;a=a+Math.imul(x,Ca)|0;a=a+Math.imul(z,ta)|0;b=b+Math.imul(z,Ca)|0;var Oa=(m+K|0)+((a&8191)<<13)|0;m=(b+(a>>>13)|0)+(Oa>>>26)|0;Oa&=67108863;K=Math.imul(d,na);a=Math.imul(d,ua);a=a+Math.imul(la,na)|0;b=Math.imul(la,ua);K=K+Math.imul(ea,ia)|0;a=a+Math.imul(ea,oa)|0;a=a+Math.imul(ka,ia)|0;b=b+Math.imul(ka,oa)|0;K=K+Math.imul(aa,qa)|0;a=a+Math.imul(aa,Fa)|0;a=a+Math.imul(ja,qa)|0;b=b+Math.imul(ja,Fa)|0;K=K+Math.imul(X,va)|0;a=a+Math.imul(X,Ja)|0;a=a+Math.imul(ca,\nva)|0;b=b+Math.imul(ca,Ja)|0;K=K+Math.imul(Z,xa)|0;a=a+Math.imul(Z,Ia)|0;a=a+Math.imul(Y,xa)|0;b=b+Math.imul(Y,Ia)|0;K=K+Math.imul(Q,Aa)|0;a=a+Math.imul(Q,Ka)|0;a=a+Math.imul(da,Aa)|0;b=b+Math.imul(da,Ka)|0;K=K+Math.imul(O,sa)|0;a=a+Math.imul(O,Ga)|0;a=a+Math.imul(W,sa)|0;b=b+Math.imul(W,Ga)|0;K=K+Math.imul(v,Ba)|0;a=a+Math.imul(v,Ea)|0;a=a+Math.imul(L,Ba)|0;b=b+Math.imul(L,Ea)|0;K=K+Math.imul(w,ta)|0;a=a+Math.imul(w,Ca)|0;a=a+Math.imul(R,ta)|0;b=b+Math.imul(R,Ca)|0;K=K+Math.imul(x,f)|0;a=a+Math.imul(x,\nHa)|0;a=a+Math.imul(z,f)|0;b=b+Math.imul(z,Ha)|0;x=(m+K|0)+((a&8191)<<13)|0;m=(b+(a>>>13)|0)+(x>>>26)|0;x&=67108863;K=Math.imul(d,ia);a=Math.imul(d,oa);a=a+Math.imul(la,ia)|0;b=Math.imul(la,oa);K=K+Math.imul(ea,qa)|0;a=a+Math.imul(ea,Fa)|0;a=a+Math.imul(ka,qa)|0;b=b+Math.imul(ka,Fa)|0;K=K+Math.imul(aa,va)|0;a=a+Math.imul(aa,Ja)|0;a=a+Math.imul(ja,va)|0;b=b+Math.imul(ja,Ja)|0;K=K+Math.imul(X,xa)|0;a=a+Math.imul(X,Ia)|0;a=a+Math.imul(ca,xa)|0;b=b+Math.imul(ca,Ia)|0;K=K+Math.imul(Z,Aa)|0;a=a+Math.imul(Z,\nKa)|0;a=a+Math.imul(Y,Aa)|0;b=b+Math.imul(Y,Ka)|0;K=K+Math.imul(Q,sa)|0;a=a+Math.imul(Q,Ga)|0;a=a+Math.imul(da,sa)|0;b=b+Math.imul(da,Ga)|0;K=K+Math.imul(O,Ba)|0;a=a+Math.imul(O,Ea)|0;a=a+Math.imul(W,Ba)|0;b=b+Math.imul(W,Ea)|0;K=K+Math.imul(v,ta)|0;a=a+Math.imul(v,Ca)|0;a=a+Math.imul(L,ta)|0;b=b+Math.imul(L,Ca)|0;K=K+Math.imul(w,f)|0;a=a+Math.imul(w,Ha)|0;a=a+Math.imul(R,f)|0;b=b+Math.imul(R,Ha)|0;w=(m+K|0)+((a&8191)<<13)|0;m=(b+(a>>>13)|0)+(w>>>26)|0;w&=67108863;K=Math.imul(d,qa);a=Math.imul(d,\nFa);a=a+Math.imul(la,qa)|0;b=Math.imul(la,Fa);K=K+Math.imul(ea,va)|0;a=a+Math.imul(ea,Ja)|0;a=a+Math.imul(ka,va)|0;b=b+Math.imul(ka,Ja)|0;K=K+Math.imul(aa,xa)|0;a=a+Math.imul(aa,Ia)|0;a=a+Math.imul(ja,xa)|0;b=b+Math.imul(ja,Ia)|0;K=K+Math.imul(X,Aa)|0;a=a+Math.imul(X,Ka)|0;a=a+Math.imul(ca,Aa)|0;b=b+Math.imul(ca,Ka)|0;K=K+Math.imul(Z,sa)|0;a=a+Math.imul(Z,Ga)|0;a=a+Math.imul(Y,sa)|0;b=b+Math.imul(Y,Ga)|0;K=K+Math.imul(Q,Ba)|0;a=a+Math.imul(Q,Ea)|0;a=a+Math.imul(da,Ba)|0;b=b+Math.imul(da,Ea)|0;K=K+\nMath.imul(O,ta)|0;a=a+Math.imul(O,Ca)|0;a=a+Math.imul(W,ta)|0;b=b+Math.imul(W,Ca)|0;K=K+Math.imul(v,f)|0;a=a+Math.imul(v,Ha)|0;a=a+Math.imul(L,f)|0;b=b+Math.imul(L,Ha)|0;v=(m+K|0)+((a&8191)<<13)|0;m=(b+(a>>>13)|0)+(v>>>26)|0;v&=67108863;K=Math.imul(d,va);a=Math.imul(d,Ja);a=a+Math.imul(la,va)|0;b=Math.imul(la,Ja);K=K+Math.imul(ea,xa)|0;a=a+Math.imul(ea,Ia)|0;a=a+Math.imul(ka,xa)|0;b=b+Math.imul(ka,Ia)|0;K=K+Math.imul(aa,Aa)|0;a=a+Math.imul(aa,Ka)|0;a=a+Math.imul(ja,Aa)|0;b=b+Math.imul(ja,Ka)|0;K=\nK+Math.imul(X,sa)|0;a=a+Math.imul(X,Ga)|0;a=a+Math.imul(ca,sa)|0;b=b+Math.imul(ca,Ga)|0;K=K+Math.imul(Z,Ba)|0;a=a+Math.imul(Z,Ea)|0;a=a+Math.imul(Y,Ba)|0;b=b+Math.imul(Y,Ea)|0;K=K+Math.imul(Q,ta)|0;a=a+Math.imul(Q,Ca)|0;a=a+Math.imul(da,ta)|0;b=b+Math.imul(da,Ca)|0;K=K+Math.imul(O,f)|0;a=a+Math.imul(O,Ha)|0;a=a+Math.imul(W,f)|0;b=b+Math.imul(W,Ha)|0;O=(m+K|0)+((a&8191)<<13)|0;m=(b+(a>>>13)|0)+(O>>>26)|0;O&=67108863;K=Math.imul(d,xa);a=Math.imul(d,Ia);a=a+Math.imul(la,xa)|0;b=Math.imul(la,Ia);K=K+\nMath.imul(ea,Aa)|0;a=a+Math.imul(ea,Ka)|0;a=a+Math.imul(ka,Aa)|0;b=b+Math.imul(ka,Ka)|0;K=K+Math.imul(aa,sa)|0;a=a+Math.imul(aa,Ga)|0;a=a+Math.imul(ja,sa)|0;b=b+Math.imul(ja,Ga)|0;K=K+Math.imul(X,Ba)|0;a=a+Math.imul(X,Ea)|0;a=a+Math.imul(ca,Ba)|0;b=b+Math.imul(ca,Ea)|0;K=K+Math.imul(Z,ta)|0;a=a+Math.imul(Z,Ca)|0;a=a+Math.imul(Y,ta)|0;b=b+Math.imul(Y,Ca)|0;K=K+Math.imul(Q,f)|0;a=a+Math.imul(Q,Ha)|0;a=a+Math.imul(da,f)|0;b=b+Math.imul(da,Ha)|0;Q=(m+K|0)+((a&8191)<<13)|0;m=(b+(a>>>13)|0)+(Q>>>26)|0;\nQ&=67108863;K=Math.imul(d,Aa);a=Math.imul(d,Ka);a=a+Math.imul(la,Aa)|0;b=Math.imul(la,Ka);K=K+Math.imul(ea,sa)|0;a=a+Math.imul(ea,Ga)|0;a=a+Math.imul(ka,sa)|0;b=b+Math.imul(ka,Ga)|0;K=K+Math.imul(aa,Ba)|0;a=a+Math.imul(aa,Ea)|0;a=a+Math.imul(ja,Ba)|0;b=b+Math.imul(ja,Ea)|0;K=K+Math.imul(X,ta)|0;a=a+Math.imul(X,Ca)|0;a=a+Math.imul(ca,ta)|0;b=b+Math.imul(ca,Ca)|0;K=K+Math.imul(Z,f)|0;a=a+Math.imul(Z,Ha)|0;a=a+Math.imul(Y,f)|0;b=b+Math.imul(Y,Ha)|0;Z=(m+K|0)+((a&8191)<<13)|0;m=(b+(a>>>13)|0)+(Z>>>26)|\n0;Z&=67108863;K=Math.imul(d,sa);a=Math.imul(d,Ga);a=a+Math.imul(la,sa)|0;b=Math.imul(la,Ga);K=K+Math.imul(ea,Ba)|0;a=a+Math.imul(ea,Ea)|0;a=a+Math.imul(ka,Ba)|0;b=b+Math.imul(ka,Ea)|0;K=K+Math.imul(aa,ta)|0;a=a+Math.imul(aa,Ca)|0;a=a+Math.imul(ja,ta)|0;b=b+Math.imul(ja,Ca)|0;K=K+Math.imul(X,f)|0;a=a+Math.imul(X,Ha)|0;a=a+Math.imul(ca,f)|0;b=b+Math.imul(ca,Ha)|0;X=(m+K|0)+((a&8191)<<13)|0;m=(b+(a>>>13)|0)+(X>>>26)|0;X&=67108863;K=Math.imul(d,Ba);a=Math.imul(d,Ea);a=a+Math.imul(la,Ba)|0;b=Math.imul(la,\nEa);K=K+Math.imul(ea,ta)|0;a=a+Math.imul(ea,Ca)|0;a=a+Math.imul(ka,ta)|0;b=b+Math.imul(ka,Ca)|0;K=K+Math.imul(aa,f)|0;a=a+Math.imul(aa,Ha)|0;a=a+Math.imul(ja,f)|0;b=b+Math.imul(ja,Ha)|0;aa=(m+K|0)+((a&8191)<<13)|0;m=(b+(a>>>13)|0)+(aa>>>26)|0;aa&=67108863;K=Math.imul(d,ta);a=Math.imul(d,Ca);a=a+Math.imul(la,ta)|0;b=Math.imul(la,Ca);K=K+Math.imul(ea,f)|0;a=a+Math.imul(ea,Ha)|0;a=a+Math.imul(ka,f)|0;b=b+Math.imul(ka,Ha)|0;ea=(m+K|0)+((a&8191)<<13)|0;m=(b+(a>>>13)|0)+(ea>>>26)|0;ea&=67108863;K=Math.imul(d,\nf);a=Math.imul(d,Ha);a=a+Math.imul(la,f)|0;b=Math.imul(la,Ha);z=(m+K|0)+((a&8191)<<13)|0;m=(b+(a>>>13)|0)+(z>>>26)|0;g[0]=fa;g[1]=ba;g[2]=ma;g[3]=ya;g[4]=wa;g[5]=ra;g[6]=Ma;g[7]=La;g[8]=Oa;g[9]=x;g[10]=w;g[11]=v;g[12]=O;g[13]=Q;g[14]=Z;g[15]=X;g[16]=aa;g[17]=ea;g[18]=z&67108863;0!==m&&(g[19]=m,c.length++);return c};Math.imul||(T=l);e.prototype.mulTo=function(a,b){var c=this.length+a.length;if(10===this.length&&10===a.length)a=T(this,a,b);else if(63>c)a=l(this,a,b);else if(1024>c){b.negative=a.negative^\nthis.negative;b.length=this.length+a.length;for(var d=0,f=c=0;f<b.length-1;f++){var g=c;c=0;d&=67108863;for(var m=Math.min(f,a.length-1),w=Math.max(0,f-this.length+1);w<=m;w++){var x=(this.words[f-w]|0)*(a.words[w]|0),z=x&67108863;g=g+(x/67108864|0)|0;z=z+d|0;d=z&67108863;g=g+(z>>>26)|0;c+=g>>>26;g&=67108863}b.words[f]=d;d=g}0!==d?b.words[f]=d:b.length--;a=b.strip()}else a=(new h).mulp(this,a,b);return a};h.prototype.makeRBT=function(a){for(var b=Array(a),c=e.prototype._countBits(a)-1,d=0;d<a;d++)b[d]=\nthis.revBin(d,c,a);return b};h.prototype.revBin=function(a,b,c){if(0===a||a===c-1)return a;for(var d=c=0;d<b;d++)c|=(a&1)<<b-d-1,a>>=1;return c};h.prototype.permute=function(a,b,c,d,f,g){for(var m=0;m<g;m++)d[m]=b[a[m]],f[m]=c[a[m]]};h.prototype.transform=function(a,b,c,d,f,g){this.permute(g,a,b,c,d,f);for(a=1;a<f;a<<=1){b=a<<1;g=Math.cos(2*Math.PI/b);for(var m=Math.sin(2*Math.PI/b),w=0;w<f;w+=b)for(var x=g,z=m,v=0;v<a;v++){var R=c[w+v],O=d[w+v],L=c[w+v+a],Q=d[w+v+a],W=x*L-z*Q;Q=x*Q+z*L;L=W;c[w+v]=\nR+L;d[w+v]=O+Q;c[w+v+a]=R-L;d[w+v+a]=O-Q;v!==b&&(W=g*x-m*z,z=g*z+m*x,x=W)}}};h.prototype.guessLen13b=function(a,b){a=Math.max(b,a)|1;b=a&1;var c=0;for(a=a/2|0;a;a>>>=1)c++;return 1<<c+1+b};h.prototype.conjugate=function(a,b,c){if(!(1>=c))for(var d=0;d<c/2;d++){var f=a[d];a[d]=a[c-d-1];a[c-d-1]=f;f=b[d];b[d]=-b[c-d-1];b[c-d-1]=-f}};h.prototype.normalize13b=function(a,b){for(var c=0,d=0;d<b/2;d++)c=8192*Math.round(a[2*d+1]/b)+Math.round(a[2*d]/b)+c,a[d]=c&67108863,c=67108864>c?0:c/67108864|0;return a};\nh.prototype.convert13b=function(a,b,c,d){for(var f=0,g=0;g<b;g++)f+=a[g]|0,c[2*g]=f&8191,f>>>=13,c[2*g+1]=f&8191,f>>>=13;for(g=2*b;g<d;++g)c[g]=0;r(0===f);r(0===(f&-8192))};h.prototype.stub=function(a){for(var b=Array(a),c=0;c<a;c++)b[c]=0;return b};h.prototype.mulp=function(a,b,c){var d=2*this.guessLen13b(a.length,b.length),f=this.makeRBT(d),g=this.stub(d),m=Array(d),w=Array(d),x=Array(d),z=Array(d),v=Array(d),R=Array(d),O=c.words;O.length=d;this.convert13b(a.words,a.length,m,d);this.convert13b(b.words,\nb.length,z,d);this.transform(m,g,w,x,d,f);this.transform(z,g,v,R,d,f);for(m=0;m<d;m++)z=w[m]*v[m]-x[m]*R[m],x[m]=w[m]*R[m]+x[m]*v[m],w[m]=z;this.conjugate(w,x,d);this.transform(w,x,O,g,d,f);this.conjugate(O,g,d);this.normalize13b(O,d);c.negative=a.negative^b.negative;c.length=a.length+b.length;return c.strip()};e.prototype.mul=function(a){var b=new e(null);b.words=Array(this.length+a.length);return this.mulTo(a,b)};e.prototype.mulf=function(a){var b=new e(null);b.words=Array(this.length+a.length);\nreturn(new h).mulp(this,a,b)};e.prototype.imul=function(a){return this.clone().mulTo(a,this)};e.prototype.imuln=function(a){r(\"number\"===typeof a);r(67108864>a);for(var b=0,c=0;c<this.length;c++){var d=(this.words[c]|0)*a,f=(d&67108863)+(b&67108863);b>>=26;b+=d/67108864|0;b+=f>>>26;this.words[c]=f&67108863}0!==b&&(this.words[c]=b,this.length++);return this};e.prototype.muln=function(a){return this.clone().imuln(a)};e.prototype.sqr=function(){return this.mul(this)};e.prototype.isqr=function(){return this.imul(this.clone())};\ne.prototype.pow=function(a){for(var b=Array(a.bitLength()),c=0;c<b.length;c++){var d=c%26;b[c]=(a.words[c/26|0]&1<<d)>>>d}if(0===b.length)return new e(1);a=this;for(c=0;c<b.length&&0===b[c];c++,a=a.sqr());if(++c<b.length)for(d=a.sqr();c<b.length;c++,d=d.sqr())0!==b[c]&&(a=a.mul(d));return a};e.prototype.iushln=function(a){r(\"number\"===typeof a&&0<=a);var b=a%26;a=(a-b)/26;var c=67108863>>>26-b<<26-b,d;if(0!==b){var f=0;for(d=0;d<this.length;d++){var g=this.words[d]&c;this.words[d]=(this.words[d]|\n0)-g<<b|f;f=g>>>26-b}f&&(this.words[d]=f,this.length++)}if(0!==a){for(d=this.length-1;0<=d;d--)this.words[d+a]=this.words[d];for(d=0;d<a;d++)this.words[d]=0;this.length+=a}return this.strip()};e.prototype.ishln=function(a){r(0===this.negative);return this.iushln(a)};e.prototype.iushrn=function(a,b,c){r(\"number\"===typeof a&&0<=a);var d=a%26,f=Math.min((a-d)/26,this.length);a=67108863^67108863>>>d<<d;b=Math.max(0,(b?(b-b%26)/26:0)-f);if(c){for(var g=0;g<f;g++)c.words[g]=this.words[g];c.length=f}if(0!==\nf)if(this.length>f)for(this.length-=f,g=0;g<this.length;g++)this.words[g]=this.words[g+f];else this.words[0]=0,this.length=1;f=0;for(g=this.length-1;0<=g&&(0!==f||g>=b);g--){var m=this.words[g]|0;this.words[g]=f<<26-d|m>>>d;f=m&a}c&&0!==f&&(c.words[c.length++]=f);0===this.length&&(this.words[0]=0,this.length=1);return this.strip()};e.prototype.ishrn=function(a,b,c){r(0===this.negative);return this.iushrn(a,b,c)};e.prototype.shln=function(a){return this.clone().ishln(a)};e.prototype.ushln=function(a){return this.clone().iushln(a)};\ne.prototype.shrn=function(a){return this.clone().ishrn(a)};e.prototype.ushrn=function(a){return this.clone().iushrn(a)};e.prototype.testn=function(a){r(\"number\"===typeof a&&0<=a);var b=a%26;a=(a-b)/26;return this.length<=a?!1:!!(this.words[a]&1<<b)};e.prototype.imaskn=function(a){r(\"number\"===typeof a&&0<=a);var b=a%26;a=(a-b)/26;r(0===this.negative,\"imaskn works only with positive numbers\");if(this.length<=a)return this;0!==b&&a++;this.length=Math.min(a,this.length);0!==b&&(this.words[this.length-\n1]&=67108863^67108863>>>b<<b);return this.strip()};e.prototype.maskn=function(a){return this.clone().imaskn(a)};e.prototype.iaddn=function(a){r(\"number\"===typeof a);r(67108864>a);if(0>a)return this.isubn(-a);if(0!==this.negative){if(1===this.length&&(this.words[0]|0)<a)return this.words[0]=a-(this.words[0]|0),this.negative=0,this;this.negative=0;this.isubn(a);this.negative=1;return this}return this._iaddn(a)};e.prototype._iaddn=function(a){this.words[0]+=a;for(a=0;a<this.length&&67108864<=this.words[a];a++)this.words[a]-=\n67108864,a===this.length-1?this.words[a+1]=1:this.words[a+1]++;this.length=Math.max(this.length,a+1);return this};e.prototype.isubn=function(a){r(\"number\"===typeof a);r(67108864>a);if(0>a)return this.iaddn(-a);if(0!==this.negative)return this.negative=0,this.iaddn(a),this.negative=1,this;this.words[0]-=a;if(1===this.length&&0>this.words[0])this.words[0]=-this.words[0],this.negative=1;else for(a=0;a<this.length&&0>this.words[a];a++)this.words[a]+=67108864,--this.words[a+1];return this.strip()};e.prototype.addn=\nfunction(a){return this.clone().iaddn(a)};e.prototype.subn=function(a){return this.clone().isubn(a)};e.prototype.iabs=function(){this.negative=0;return this};e.prototype.abs=function(){return this.clone().iabs()};e.prototype._ishlnsubmul=function(a,b,c){var d;this._expand(a.length+c);var f=0;for(d=0;d<a.length;d++){var g=(this.words[d+c]|0)+f;f=(a.words[d]|0)*b;g-=f&67108863;f=(g>>26)-(f/67108864|0);this.words[d+c]=g&67108863}for(;d<this.length-c;d++)g=(this.words[d+c]|0)+f,f=g>>26,this.words[d+c]=\ng&67108863;if(0===f)return this.strip();r(-1===f);for(d=f=0;d<this.length;d++)g=-(this.words[d]|0)+f,f=g>>26,this.words[d]=g&67108863;this.negative=1;return this.strip()};e.prototype._wordDiv=function(a,b){var c=this.clone(),d=a,f=d.words[d.length-1]|0;a=26-this._countBits(f);0!==a&&(d=d.ushln(a),c.iushln(a),f=d.words[d.length-1]|0);var g=c.length-d.length;if(\"mod\"!==b){var m=new e(null);m.length=g+1;m.words=Array(m.length);for(var w=0;w<m.length;w++)m.words[w]=0}w=c.clone()._ishlnsubmul(d,1,g);0===\nw.negative&&(c=w,m&&(m.words[g]=1));for(--g;0<=g;g--){w=67108864*(c.words[d.length+g]|0)+(c.words[d.length+g-1]|0);w=Math.min(w/f|0,67108863);for(c._ishlnsubmul(d,w,g);0!==c.negative;)w--,c.negative=0,c._ishlnsubmul(d,1,g),c.isZero()||(c.negative^=1);m&&(m.words[g]=w)}m&&m.strip();c.strip();\"div\"!==b&&0!==a&&c.iushrn(a);return{div:m||null,mod:c}};e.prototype.divmod=function(a,b,c){r(!a.isZero());if(this.isZero())return{div:new e(0),mod:new e(0)};var d;if(0!==this.negative&&0===a.negative){var f=this.neg().divmod(a,\nb);\"mod\"!==b&&(d=f.div.neg());if(\"div\"!==b){var g=f.mod.neg();c&&0!==g.negative&&g.iadd(a)}return{div:d,mod:g}}return 0===this.negative&&0!==a.negative?(f=this.divmod(a.neg(),b),\"mod\"!==b&&(d=f.div.neg()),{div:d,mod:f.mod}):0!==(this.negative&a.negative)?(f=this.neg().divmod(a.neg(),b),\"div\"!==b&&(g=f.mod.neg(),c&&0!==g.negative&&g.isub(a)),{div:f.div,mod:g}):a.length>this.length||0>this.cmp(a)?{div:new e(0),mod:this}:1===a.length?\"div\"===b?{div:this.divn(a.words[0]),mod:null}:\"mod\"===b?{div:null,\nmod:new e(this.modn(a.words[0]))}:{div:this.divn(a.words[0]),mod:new e(this.modn(a.words[0]))}:this._wordDiv(a,b)};e.prototype.div=function(a){return this.divmod(a,\"div\",!1).div};e.prototype.mod=function(a){return this.divmod(a,\"mod\",!1).mod};e.prototype.umod=function(a){return this.divmod(a,\"mod\",!0).mod};e.prototype.divRound=function(a){var b=this.divmod(a);if(b.mod.isZero())return b.div;var c=0!==b.div.negative?b.mod.isub(a):b.mod,d=a.ushrn(1);a=a.andln(1);c=c.cmp(d);return 0>c||1===a&&0===c?b.div:\n0!==b.div.negative?b.div.isubn(1):b.div.iaddn(1)};e.prototype.modn=function(a){r(67108863>=a);for(var b=67108864%a,c=0,d=this.length-1;0<=d;d--)c=(b*c+(this.words[d]|0))%a;return c};e.prototype.idivn=function(a){r(67108863>=a);for(var b=0,c=this.length-1;0<=c;c--)b=(this.words[c]|0)+67108864*b,this.words[c]=b/a|0,b%=a;return this.strip()};e.prototype.divn=function(a){return this.clone().idivn(a)};e.prototype.egcd=function(a){r(0===a.negative);r(!a.isZero());var b=this,c=a.clone();b=0!==b.negative?\nb.umod(a):b.clone();a=new e(1);for(var d=new e(0),f=new e(0),g=new e(1),m=0;b.isEven()&&c.isEven();)b.iushrn(1),c.iushrn(1),++m;for(var w=c.clone(),x=b.clone();!b.isZero();){for(var z=0,v=1;0===(b.words[0]&v)&&26>z;++z,v<<=1);if(0<z)for(b.iushrn(z);0<z--;){if(a.isOdd()||d.isOdd())a.iadd(w),d.isub(x);a.iushrn(1);d.iushrn(1)}z=0;for(v=1;0===(c.words[0]&v)&&26>z;++z,v<<=1);if(0<z)for(c.iushrn(z);0<z--;){if(f.isOdd()||g.isOdd())f.iadd(w),g.isub(x);f.iushrn(1);g.iushrn(1)}0<=b.cmp(c)?(b.isub(c),a.isub(f),\nd.isub(g)):(c.isub(b),f.isub(a),g.isub(d))}return{a:f,b:g,gcd:c.iushln(m)}};e.prototype._invmp=function(a){r(0===a.negative);r(!a.isZero());var b=this,c=a.clone();b=0!==b.negative?b.umod(a):b.clone();for(var d=new e(1),f=new e(0),g=c.clone();0<b.cmpn(1)&&0<c.cmpn(1);){for(var m=0,w=1;0===(b.words[0]&w)&&26>m;++m,w<<=1);if(0<m)for(b.iushrn(m);0<m--;)d.isOdd()&&d.iadd(g),d.iushrn(1);m=0;for(w=1;0===(c.words[0]&w)&&26>m;++m,w<<=1);if(0<m)for(c.iushrn(m);0<m--;)f.isOdd()&&f.iadd(g),f.iushrn(1);0<=b.cmp(c)?\n(b.isub(c),d.isub(f)):(c.isub(b),f.isub(d))}b=0===b.cmpn(1)?d:f;0>b.cmpn(0)&&b.iadd(a);return b};e.prototype.gcd=function(a){if(this.isZero())return a.abs();if(a.isZero())return this.abs();var b=this.clone();a=a.clone();b.negative=0;for(var c=a.negative=0;b.isEven()&&a.isEven();c++)b.iushrn(1),a.iushrn(1);do{for(;b.isEven();)b.iushrn(1);for(;a.isEven();)a.iushrn(1);var d=b.cmp(a);if(0>d)d=b,b=a,a=d;else if(0===d||0===a.cmpn(1))break;b.isub(a)}while(1);return a.iushln(c)};e.prototype.invm=function(a){return this.egcd(a).a.umod(a)};\ne.prototype.isEven=function(){return 0===(this.words[0]&1)};e.prototype.isOdd=function(){return 1===(this.words[0]&1)};e.prototype.andln=function(a){return this.words[0]&a};e.prototype.bincn=function(a){r(\"number\"===typeof a);var b=a%26;a=(a-b)/26;b=1<<b;if(this.length<=a)return this._expand(a+1),this.words[a]|=b,this;for(;0!==b&&a<this.length;a++){var c=this.words[a]|0;c+=b;b=c>>>26;c&=67108863;this.words[a]=c}0!==b&&(this.words[a]=b,this.length++);return this};e.prototype.isZero=function(){return 1===\nthis.length&&0===this.words[0]};e.prototype.cmpn=function(a){var b=0>a;if(0!==this.negative&&!b)return-1;if(0===this.negative&&b)return 1;this.strip();1<this.length?a=1:(b&&(a=-a),r(67108863>=a,\"Number is too big\"),b=this.words[0]|0,a=b===a?0:b<a?-1:1);return 0!==this.negative?-a|0:a};e.prototype.cmp=function(a){if(0!==this.negative&&0===a.negative)return-1;if(0===this.negative&&0!==a.negative)return 1;a=this.ucmp(a);return 0!==this.negative?-a|0:a};e.prototype.ucmp=function(a){if(this.length>a.length)return 1;\nif(this.length<a.length)return-1;for(var b=0,c=this.length-1;0<=c;c--){var d=this.words[c]|0,f=a.words[c]|0;if(d!==f){d<f?b=-1:d>f&&(b=1);break}}return b};e.prototype.gtn=function(a){return 1===this.cmpn(a)};e.prototype.gt=function(a){return 1===this.cmp(a)};e.prototype.gten=function(a){return 0<=this.cmpn(a)};e.prototype.gte=function(a){return 0<=this.cmp(a)};e.prototype.ltn=function(a){return-1===this.cmpn(a)};e.prototype.lt=function(a){return-1===this.cmp(a)};e.prototype.lten=function(a){return 0>=\nthis.cmpn(a)};e.prototype.lte=function(a){return 0>=this.cmp(a)};e.prototype.eqn=function(a){return 0===this.cmpn(a)};e.prototype.eq=function(a){return 0===this.cmp(a)};e.red=function(a){return new D(a)};e.prototype.toRed=function(a){r(!this.red,\"Already a number in reduction context\");r(0===this.negative,\"red works only with positives\");return a.convertTo(this)._forceRed(a)};e.prototype.fromRed=function(){r(this.red,\"fromRed works only with numbers in reduction context\");return this.red.convertFrom(this)};\ne.prototype._forceRed=function(a){this.red=a;return this};e.prototype.forceRed=function(a){r(!this.red,\"Already a number in reduction context\");return this._forceRed(a)};e.prototype.redAdd=function(a){r(this.red,\"redAdd works only with red numbers\");return this.red.add(this,a)};e.prototype.redIAdd=function(a){r(this.red,\"redIAdd works only with red numbers\");return this.red.iadd(this,a)};e.prototype.redSub=function(a){r(this.red,\"redSub works only with red numbers\");return this.red.sub(this,a)};e.prototype.redISub=\nfunction(a){r(this.red,\"redISub works only with red numbers\");return this.red.isub(this,a)};e.prototype.redShl=function(a){r(this.red,\"redShl works only with red numbers\");return this.red.shl(this,a)};e.prototype.redMul=function(a){r(this.red,\"redMul works only with red numbers\");this.red._verify2(this,a);return this.red.mul(this,a)};e.prototype.redIMul=function(a){r(this.red,\"redMul works only with red numbers\");this.red._verify2(this,a);return this.red.imul(this,a)};e.prototype.redSqr=function(){r(this.red,\n\"redSqr works only with red numbers\");this.red._verify1(this);return this.red.sqr(this)};e.prototype.redISqr=function(){r(this.red,\"redISqr works only with red numbers\");this.red._verify1(this);return this.red.isqr(this)};e.prototype.redSqrt=function(){r(this.red,\"redSqrt works only with red numbers\");this.red._verify1(this);return this.red.sqrt(this)};e.prototype.redInvm=function(){r(this.red,\"redInvm works only with red numbers\");this.red._verify1(this);return this.red.invm(this)};e.prototype.redNeg=\nfunction(){r(this.red,\"redNeg works only with red numbers\");this.red._verify1(this);return this.red.neg(this)};e.prototype.redPow=function(a){r(this.red&&!a.red,\"redPow(normalNum)\");this.red._verify1(this);return this.red.pow(this,a)};var N={k256:null,p224:null,p192:null,p25519:null};k.prototype._tmp=function(){var a=new e(null);a.words=Array(Math.ceil(this.n/13));return a};k.prototype.ireduce=function(a){do{this.split(a,this.tmp);a=this.imulK(a);a=a.iadd(this.tmp);var b=a.bitLength()}while(b>this.n);\nb=b<this.n?-1:a.ucmp(this.p);0===b?(a.words[0]=0,a.length=1):0<b?a.isub(this.p):void 0!==a.strip?a.strip():a._strip();return a};k.prototype.split=function(a,b){a.iushrn(this.n,0,b)};k.prototype.imulK=function(a){return a.imul(this.k)};y(t,k);t.prototype.split=function(a,b){for(var c=Math.min(a.length,9),d=0;d<c;d++)b.words[d]=a.words[d];b.length=c;if(9>=a.length)a.words[0]=0,a.length=1;else{c=a.words[9];b.words[b.length++]=c&4194303;for(d=10;d<a.length;d++)b=a.words[d]|0,a.words[d-10]=(b&4194303)<<\n4|c>>>22,c=b;c>>>=22;a.words[d-10]=c;a.length=0===c&&10<a.length?a.length-10:a.length-9}};t.prototype.imulK=function(a){a.words[a.length]=0;a.words[a.length+1]=0;a.length+=2;for(var b=0,c=0;c<a.length;c++){var d=a.words[c]|0;b+=977*d;a.words[c]=b&67108863;b=64*d+(b/67108864|0)}0===a.words[a.length-1]&&(a.length--,0===a.words[a.length-1]&&a.length--);return a};y(B,k);y(E,k);y(H,k);H.prototype.imulK=function(a){for(var b=0,c=0;c<a.length;c++){b=19*(a.words[c]|0)+b;var d=b&67108863;b>>>=26;a.words[c]=\nd}0!==b&&(a.words[a.length++]=b);return a};e._prime=function(a){if(N[a])return N[a];if(\"k256\"===a)var b=new t;else if(\"p224\"===a)b=new B;else if(\"p192\"===a)b=new E;else if(\"p25519\"===a)b=new H;else throw Error(\"Unknown prime \"+a);return N[a]=b};D.prototype._verify1=function(a){r(0===a.negative,\"red works only with positives\");r(a.red,\"red works only with red numbers\")};D.prototype._verify2=function(a,b){r(0===(a.negative|b.negative),\"red works only with positives\");r(a.red&&a.red===b.red,\"red works only with red numbers\")};\nD.prototype.imod=function(a){return this.prime?this.prime.ireduce(a)._forceRed(this):a.umod(this.m)._forceRed(this)};D.prototype.neg=function(a){return a.isZero()?a.clone():this.m.sub(a)._forceRed(this)};D.prototype.add=function(a,b){this._verify2(a,b);a=a.add(b);0<=a.cmp(this.m)&&a.isub(this.m);return a._forceRed(this)};D.prototype.iadd=function(a,b){this._verify2(a,b);a=a.iadd(b);0<=a.cmp(this.m)&&a.isub(this.m);return a};D.prototype.sub=function(a,b){this._verify2(a,b);a=a.sub(b);0>a.cmpn(0)&&\na.iadd(this.m);return a._forceRed(this)};D.prototype.isub=function(a,b){this._verify2(a,b);a=a.isub(b);0>a.cmpn(0)&&a.iadd(this.m);return a};D.prototype.shl=function(a,b){this._verify1(a);return this.imod(a.ushln(b))};D.prototype.imul=function(a,b){this._verify2(a,b);return this.imod(a.imul(b))};D.prototype.mul=function(a,b){this._verify2(a,b);return this.imod(a.mul(b))};D.prototype.isqr=function(a){return this.imul(a,a.clone())};D.prototype.sqr=function(a){return this.mul(a,a)};D.prototype.sqrt=\nfunction(a){if(a.isZero())return a.clone();var b=this.m.andln(3);r(1===b%2);if(3===b)return b=this.m.add(new e(1)).iushrn(2),this.pow(a,b);for(var c=this.m.subn(1),d=0;!c.isZero()&&0===c.andln(1);)d++,c.iushrn(1);r(!c.isZero());b=(new e(1)).toRed(this);var f=b.redNeg(),g=this.m.subn(1).iushrn(1),m=this.m.bitLength();for(m=(new e(2*m*m)).toRed(this);0!==this.pow(m,g).cmp(f);)m.redIAdd(f);g=this.pow(m,c);f=this.pow(a,c.addn(1).iushrn(1));a=this.pow(a,c);for(c=d;0!==a.cmp(b);){m=a;for(d=0;0!==m.cmp(b);d++)m=\nm.redSqr();r(d<c);g=this.pow(g,(new e(1)).iushln(c-d-1));f=f.redMul(g);g=g.redSqr();a=a.redMul(g);c=d}return f};D.prototype.invm=function(a){a=a._invmp(this.m);return 0!==a.negative?(a.negative=0,this.imod(a).redNeg()):this.imod(a)};D.prototype.pow=function(a,b){if(b.isZero())return(new e(1)).toRed(this);if(0===b.cmpn(1))return a.clone();var c=Array(16);c[0]=(new e(1)).toRed(this);c[1]=a;for(var d=2;d<c.length;d++)c[d]=this.mul(c[d-1],a);a=c[0];var f=0,g=0,m=b.bitLength()%26;0===m&&(m=26);for(d=b.length-\n1;0<=d;d--){var w=b.words[d];for(--m;0<=m;m--){var x=w>>m&1;a!==c[0]&&(a=this.sqr(a));if(0===x&&0===f)g=0;else if(f<<=1,f|=x,g++,4===g||0===d&&0===m)a=this.mul(a,c[f]),f=g=0}m=26}return a};D.prototype.convertTo=function(a){var b=a.umod(this.m);return b===a?b.clone():b};D.prototype.convertFrom=function(a){a=a.clone();a.red=null;return a};e.mont=function(a){return new C(a)};y(C,D);C.prototype.convertTo=function(a){return this.imod(a.ushln(this.shift))};C.prototype.convertFrom=function(a){a=this.imod(a.mul(this.rinv));\na.red=null;return a};C.prototype.imul=function(a,b){if(a.isZero()||b.isZero())return a.words[0]=0,a.length=1,a;a=a.imul(b);b=a.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);b=a=a.isub(b).iushrn(this.shift);0<=a.cmp(this.m)?b=a.isub(this.m):0>a.cmpn(0)&&(b=a.iadd(this.m));return b._forceRed(this)};C.prototype.mul=function(a,b){if(a.isZero()||b.isZero())return(new e(0))._forceRed(this);a=a.mul(b);b=a.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);b=a=a.isub(b).iushrn(this.shift);\n0<=a.cmp(this.m)?b=a.isub(this.m):0>a.cmpn(0)&&(b=a.iadd(this.m));return b._forceRed(this)};C.prototype.invm=function(a){return this.imod(a._invmp(this.m).mul(this.r2))._forceRed(this)}})(\"undefined\"===typeof V||V,this)}","~:source","shadow$provide[226] = function(global,require,module,exports) {\n(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow$empty","~$shadow.js"]],"~:properties",["^5",["iadd","iaddn","toBuffer","n","bitLength","makeRBT","iuxor","minv","_parseHex","imuln","min","redSqrt","redIAdd","lt","super_","isEven","cmpn","toTwos","isZero","_verify2","sub","copy","isqr","uor","byteLength","normalize13b","prototype","BN","isNeg","isubn","maskn","eq","idivn","isub","_invmp","p","convertTo","ushrn","imaskn","ltn","redISub","setn","ior","x","max","umod","ucmp","uxor","gten","modn","negative","eqn","inspect","pow","bincn","permute","stub","transform","toString","k256","imulK","conjugate","redSub","words","guessLen13b","gt","muln","p224","redPow","divmod","_prime","gte","divn","shl","name","shrn","iushln","mulp","_normSign","isOdd","uand","gcd","ushln","egcd","revBin","shift","testn","_zeroBits","fromTwos","imul","wordSize","forceRed","or","p192","addn","invm","sqr","neg","_init","r2","split","toRed","a","ixor","redShl","ineg","_tmp","red","convert13b","sqrt","zeroBits","length","redNeg","_iaddn","and","_expand","redInvm","strip","mod","mul","_initArray","isBN","convertFrom","k","div","rinv","b","r","abs","iushrn","y","iuand","_initNumber","_ishlnsubmul","_forceRed","ireduce","gtn","clone","redMul","lte","iand","_wordDiv","_parseBase","add","toNumber","mont","lten","redAdd","shln","iuor","mulTo","p25519","imod","toArray","notn","subn","iabs","tmp","ishln","_verify1","m","ishrn","redIMul","andln","xor","redISqr","fromRed","toArrayLike","redSqr","inotn","constructor","prime","toJSON","cmp","mulf","divRound","_countBits"]],"~:compiled-at",1695041440856,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$asn1_DOT_js$node_modules$bn_js$lib$bn.js\",\n\"lineCount\":85,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/asn1_DOT_js/node_modules/bn.js/lib/bn.js\"],\n\"sourcesContent\":[\"shadow$provide[226] = function(global,require,module,exports) {\\n(function (module, exports) {\\n  'use strict';\\n\\n  // Utils\\n  function assert (val, msg) {\\n    if (!val) throw new Error(msg || 'Assertion failed');\\n  }\\n\\n  // Could use `inherits` module, but don't want to move from single file\\n  // architecture yet.\\n  function inherits (ctor, superCtor) {\\n    ctor.super_ = superCtor;\\n    var TempCtor = function () {};\\n    TempCtor.prototype = superCtor.prototype;\\n    ctor.prototype = new TempCtor();\\n    ctor.prototype.constructor = ctor;\\n  }\\n\\n  // BN\\n\\n  function BN (number, base, endian) {\\n    if (BN.isBN(number)) {\\n      return number;\\n    }\\n\\n    this.negative = 0;\\n    this.words = null;\\n    this.length = 0;\\n\\n    // Reduction context\\n    this.red = null;\\n\\n    if (number !== null) {\\n      if (base === 'le' || base === 'be') {\\n        endian = base;\\n        base = 10;\\n      }\\n\\n      this._init(number || 0, base || 10, endian || 'be');\\n    }\\n  }\\n  if (typeof module === 'object') {\\n    module.exports = BN;\\n  } else {\\n    exports.BN = BN;\\n  }\\n\\n  BN.BN = BN;\\n  BN.wordSize = 26;\\n\\n  var Buffer;\\n  try {\\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\\n      Buffer = window.Buffer;\\n    } else {\\n      Buffer = require('buffer').Buffer;\\n    }\\n  } catch (e) {\\n  }\\n\\n  BN.isBN = function isBN (num) {\\n    if (num instanceof BN) {\\n      return true;\\n    }\\n\\n    return num !== null && typeof num === 'object' &&\\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\\n  };\\n\\n  BN.max = function max (left, right) {\\n    if (left.cmp(right) > 0) return left;\\n    return right;\\n  };\\n\\n  BN.min = function min (left, right) {\\n    if (left.cmp(right) < 0) return left;\\n    return right;\\n  };\\n\\n  BN.prototype._init = function init (number, base, endian) {\\n    if (typeof number === 'number') {\\n      return this._initNumber(number, base, endian);\\n    }\\n\\n    if (typeof number === 'object') {\\n      return this._initArray(number, base, endian);\\n    }\\n\\n    if (base === 'hex') {\\n      base = 16;\\n    }\\n    assert(base === (base | 0) && base >= 2 && base <= 36);\\n\\n    number = number.toString().replace(/\\\\s+/g, '');\\n    var start = 0;\\n    if (number[0] === '-') {\\n      start++;\\n      this.negative = 1;\\n    }\\n\\n    if (start < number.length) {\\n      if (base === 16) {\\n        this._parseHex(number, start, endian);\\n      } else {\\n        this._parseBase(number, base, start);\\n        if (endian === 'le') {\\n          this._initArray(this.toArray(), base, endian);\\n        }\\n      }\\n    }\\n  };\\n\\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\\n    if (number < 0) {\\n      this.negative = 1;\\n      number = -number;\\n    }\\n    if (number < 0x4000000) {\\n      this.words = [ number & 0x3ffffff ];\\n      this.length = 1;\\n    } else if (number < 0x10000000000000) {\\n      this.words = [\\n        number & 0x3ffffff,\\n        (number / 0x4000000) & 0x3ffffff\\n      ];\\n      this.length = 2;\\n    } else {\\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\\n      this.words = [\\n        number & 0x3ffffff,\\n        (number / 0x4000000) & 0x3ffffff,\\n        1\\n      ];\\n      this.length = 3;\\n    }\\n\\n    if (endian !== 'le') return;\\n\\n    // Reverse the bytes\\n    this._initArray(this.toArray(), base, endian);\\n  };\\n\\n  BN.prototype._initArray = function _initArray (number, base, endian) {\\n    // Perhaps a Uint8Array\\n    assert(typeof number.length === 'number');\\n    if (number.length <= 0) {\\n      this.words = [ 0 ];\\n      this.length = 1;\\n      return this;\\n    }\\n\\n    this.length = Math.ceil(number.length / 3);\\n    this.words = new Array(this.length);\\n    for (var i = 0; i < this.length; i++) {\\n      this.words[i] = 0;\\n    }\\n\\n    var j, w;\\n    var off = 0;\\n    if (endian === 'be') {\\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\\n        this.words[j] |= (w << off) & 0x3ffffff;\\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\\n        off += 24;\\n        if (off >= 26) {\\n          off -= 26;\\n          j++;\\n        }\\n      }\\n    } else if (endian === 'le') {\\n      for (i = 0, j = 0; i < number.length; i += 3) {\\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\\n        this.words[j] |= (w << off) & 0x3ffffff;\\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\\n        off += 24;\\n        if (off >= 26) {\\n          off -= 26;\\n          j++;\\n        }\\n      }\\n    }\\n    return this.strip();\\n  };\\n\\n  function parseHex4Bits (string, index) {\\n    var c = string.charCodeAt(index);\\n    // 'A' - 'F'\\n    if (c >= 65 && c <= 70) {\\n      return c - 55;\\n    // 'a' - 'f'\\n    } else if (c >= 97 && c <= 102) {\\n      return c - 87;\\n    // '0' - '9'\\n    } else {\\n      return (c - 48) & 0xf;\\n    }\\n  }\\n\\n  function parseHexByte (string, lowerBound, index) {\\n    var r = parseHex4Bits(string, index);\\n    if (index - 1 >= lowerBound) {\\n      r |= parseHex4Bits(string, index - 1) << 4;\\n    }\\n    return r;\\n  }\\n\\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\\n    // Create possibly bigger array to ensure that it fits the number\\n    this.length = Math.ceil((number.length - start) / 6);\\n    this.words = new Array(this.length);\\n    for (var i = 0; i < this.length; i++) {\\n      this.words[i] = 0;\\n    }\\n\\n    // 24-bits chunks\\n    var off = 0;\\n    var j = 0;\\n\\n    var w;\\n    if (endian === 'be') {\\n      for (i = number.length - 1; i >= start; i -= 2) {\\n        w = parseHexByte(number, start, i) << off;\\n        this.words[j] |= w & 0x3ffffff;\\n        if (off >= 18) {\\n          off -= 18;\\n          j += 1;\\n          this.words[j] |= w >>> 26;\\n        } else {\\n          off += 8;\\n        }\\n      }\\n    } else {\\n      var parseLength = number.length - start;\\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\\n        w = parseHexByte(number, start, i) << off;\\n        this.words[j] |= w & 0x3ffffff;\\n        if (off >= 18) {\\n          off -= 18;\\n          j += 1;\\n          this.words[j] |= w >>> 26;\\n        } else {\\n          off += 8;\\n        }\\n      }\\n    }\\n\\n    this.strip();\\n  };\\n\\n  function parseBase (str, start, end, mul) {\\n    var r = 0;\\n    var len = Math.min(str.length, end);\\n    for (var i = start; i < len; i++) {\\n      var c = str.charCodeAt(i) - 48;\\n\\n      r *= mul;\\n\\n      // 'a'\\n      if (c >= 49) {\\n        r += c - 49 + 0xa;\\n\\n      // 'A'\\n      } else if (c >= 17) {\\n        r += c - 17 + 0xa;\\n\\n      // '0' - '9'\\n      } else {\\n        r += c;\\n      }\\n    }\\n    return r;\\n  }\\n\\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\\n    // Initialize as zero\\n    this.words = [ 0 ];\\n    this.length = 1;\\n\\n    // Find length of limb in base\\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\\n      limbLen++;\\n    }\\n    limbLen--;\\n    limbPow = (limbPow / base) | 0;\\n\\n    var total = number.length - start;\\n    var mod = total % limbLen;\\n    var end = Math.min(total, total - mod) + start;\\n\\n    var word = 0;\\n    for (var i = start; i < end; i += limbLen) {\\n      word = parseBase(number, i, i + limbLen, base);\\n\\n      this.imuln(limbPow);\\n      if (this.words[0] + word < 0x4000000) {\\n        this.words[0] += word;\\n      } else {\\n        this._iaddn(word);\\n      }\\n    }\\n\\n    if (mod !== 0) {\\n      var pow = 1;\\n      word = parseBase(number, i, number.length, base);\\n\\n      for (i = 0; i < mod; i++) {\\n        pow *= base;\\n      }\\n\\n      this.imuln(pow);\\n      if (this.words[0] + word < 0x4000000) {\\n        this.words[0] += word;\\n      } else {\\n        this._iaddn(word);\\n      }\\n    }\\n\\n    this.strip();\\n  };\\n\\n  BN.prototype.copy = function copy (dest) {\\n    dest.words = new Array(this.length);\\n    for (var i = 0; i < this.length; i++) {\\n      dest.words[i] = this.words[i];\\n    }\\n    dest.length = this.length;\\n    dest.negative = this.negative;\\n    dest.red = this.red;\\n  };\\n\\n  BN.prototype.clone = function clone () {\\n    var r = new BN(null);\\n    this.copy(r);\\n    return r;\\n  };\\n\\n  BN.prototype._expand = function _expand (size) {\\n    while (this.length < size) {\\n      this.words[this.length++] = 0;\\n    }\\n    return this;\\n  };\\n\\n  // Remove leading `0` from `this`\\n  BN.prototype.strip = function strip () {\\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\\n      this.length--;\\n    }\\n    return this._normSign();\\n  };\\n\\n  BN.prototype._normSign = function _normSign () {\\n    // -0 = 0\\n    if (this.length === 1 && this.words[0] === 0) {\\n      this.negative = 0;\\n    }\\n    return this;\\n  };\\n\\n  BN.prototype.inspect = function inspect () {\\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\\n  };\\n\\n  /*\\n\\n  var zeros = [];\\n  var groupSizes = [];\\n  var groupBases = [];\\n\\n  var s = '';\\n  var i = -1;\\n  while (++i < BN.wordSize) {\\n    zeros[i] = s;\\n    s += '0';\\n  }\\n  groupSizes[0] = 0;\\n  groupSizes[1] = 0;\\n  groupBases[0] = 0;\\n  groupBases[1] = 0;\\n  var base = 2 - 1;\\n  while (++base < 36 + 1) {\\n    var groupSize = 0;\\n    var groupBase = 1;\\n    while (groupBase < (1 << BN.wordSize) / base) {\\n      groupBase *= base;\\n      groupSize += 1;\\n    }\\n    groupSizes[base] = groupSize;\\n    groupBases[base] = groupBase;\\n  }\\n\\n  */\\n\\n  var zeros = [\\n    '',\\n    '0',\\n    '00',\\n    '000',\\n    '0000',\\n    '00000',\\n    '000000',\\n    '0000000',\\n    '00000000',\\n    '000000000',\\n    '0000000000',\\n    '00000000000',\\n    '000000000000',\\n    '0000000000000',\\n    '00000000000000',\\n    '000000000000000',\\n    '0000000000000000',\\n    '00000000000000000',\\n    '000000000000000000',\\n    '0000000000000000000',\\n    '00000000000000000000',\\n    '000000000000000000000',\\n    '0000000000000000000000',\\n    '00000000000000000000000',\\n    '000000000000000000000000',\\n    '0000000000000000000000000'\\n  ];\\n\\n  var groupSizes = [\\n    0, 0,\\n    25, 16, 12, 11, 10, 9, 8,\\n    8, 7, 7, 7, 7, 6, 6,\\n    6, 6, 6, 6, 6, 5, 5,\\n    5, 5, 5, 5, 5, 5, 5,\\n    5, 5, 5, 5, 5, 5, 5\\n  ];\\n\\n  var groupBases = [\\n    0, 0,\\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\\n  ];\\n\\n  BN.prototype.toString = function toString (base, padding) {\\n    base = base || 10;\\n    padding = padding | 0 || 1;\\n\\n    var out;\\n    if (base === 16 || base === 'hex') {\\n      out = '';\\n      var off = 0;\\n      var carry = 0;\\n      for (var i = 0; i < this.length; i++) {\\n        var w = this.words[i];\\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\\n        carry = (w >>> (24 - off)) & 0xffffff;\\n        if (carry !== 0 || i !== this.length - 1) {\\n          out = zeros[6 - word.length] + word + out;\\n        } else {\\n          out = word + out;\\n        }\\n        off += 2;\\n        if (off >= 26) {\\n          off -= 26;\\n          i--;\\n        }\\n      }\\n      if (carry !== 0) {\\n        out = carry.toString(16) + out;\\n      }\\n      while (out.length % padding !== 0) {\\n        out = '0' + out;\\n      }\\n      if (this.negative !== 0) {\\n        out = '-' + out;\\n      }\\n      return out;\\n    }\\n\\n    if (base === (base | 0) && base >= 2 && base <= 36) {\\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\\n      var groupSize = groupSizes[base];\\n      // var groupBase = Math.pow(base, groupSize);\\n      var groupBase = groupBases[base];\\n      out = '';\\n      var c = this.clone();\\n      c.negative = 0;\\n      while (!c.isZero()) {\\n        var r = c.modn(groupBase).toString(base);\\n        c = c.idivn(groupBase);\\n\\n        if (!c.isZero()) {\\n          out = zeros[groupSize - r.length] + r + out;\\n        } else {\\n          out = r + out;\\n        }\\n      }\\n      if (this.isZero()) {\\n        out = '0' + out;\\n      }\\n      while (out.length % padding !== 0) {\\n        out = '0' + out;\\n      }\\n      if (this.negative !== 0) {\\n        out = '-' + out;\\n      }\\n      return out;\\n    }\\n\\n    assert(false, 'Base should be between 2 and 36');\\n  };\\n\\n  BN.prototype.toNumber = function toNumber () {\\n    var ret = this.words[0];\\n    if (this.length === 2) {\\n      ret += this.words[1] * 0x4000000;\\n    } else if (this.length === 3 && this.words[2] === 0x01) {\\n      // NOTE: at this stage it is known that the top bit is set\\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\\n    } else if (this.length > 2) {\\n      assert(false, 'Number can only safely store up to 53 bits');\\n    }\\n    return (this.negative !== 0) ? -ret : ret;\\n  };\\n\\n  BN.prototype.toJSON = function toJSON () {\\n    return this.toString(16);\\n  };\\n\\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\\n    assert(typeof Buffer !== 'undefined');\\n    return this.toArrayLike(Buffer, endian, length);\\n  };\\n\\n  BN.prototype.toArray = function toArray (endian, length) {\\n    return this.toArrayLike(Array, endian, length);\\n  };\\n\\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\\n    var byteLength = this.byteLength();\\n    var reqLength = length || Math.max(1, byteLength);\\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\\n    assert(reqLength > 0, 'Requested array length <= 0');\\n\\n    this.strip();\\n    var littleEndian = endian === 'le';\\n    var res = new ArrayType(reqLength);\\n\\n    var b, i;\\n    var q = this.clone();\\n    if (!littleEndian) {\\n      // Assume big-endian\\n      for (i = 0; i < reqLength - byteLength; i++) {\\n        res[i] = 0;\\n      }\\n\\n      for (i = 0; !q.isZero(); i++) {\\n        b = q.andln(0xff);\\n        q.iushrn(8);\\n\\n        res[reqLength - i - 1] = b;\\n      }\\n    } else {\\n      for (i = 0; !q.isZero(); i++) {\\n        b = q.andln(0xff);\\n        q.iushrn(8);\\n\\n        res[i] = b;\\n      }\\n\\n      for (; i < reqLength; i++) {\\n        res[i] = 0;\\n      }\\n    }\\n\\n    return res;\\n  };\\n\\n  if (Math.clz32) {\\n    BN.prototype._countBits = function _countBits (w) {\\n      return 32 - Math.clz32(w);\\n    };\\n  } else {\\n    BN.prototype._countBits = function _countBits (w) {\\n      var t = w;\\n      var r = 0;\\n      if (t >= 0x1000) {\\n        r += 13;\\n        t >>>= 13;\\n      }\\n      if (t >= 0x40) {\\n        r += 7;\\n        t >>>= 7;\\n      }\\n      if (t >= 0x8) {\\n        r += 4;\\n        t >>>= 4;\\n      }\\n      if (t >= 0x02) {\\n        r += 2;\\n        t >>>= 2;\\n      }\\n      return r + t;\\n    };\\n  }\\n\\n  BN.prototype._zeroBits = function _zeroBits (w) {\\n    // Short-cut\\n    if (w === 0) return 26;\\n\\n    var t = w;\\n    var r = 0;\\n    if ((t & 0x1fff) === 0) {\\n      r += 13;\\n      t >>>= 13;\\n    }\\n    if ((t & 0x7f) === 0) {\\n      r += 7;\\n      t >>>= 7;\\n    }\\n    if ((t & 0xf) === 0) {\\n      r += 4;\\n      t >>>= 4;\\n    }\\n    if ((t & 0x3) === 0) {\\n      r += 2;\\n      t >>>= 2;\\n    }\\n    if ((t & 0x1) === 0) {\\n      r++;\\n    }\\n    return r;\\n  };\\n\\n  // Return number of used bits in a BN\\n  BN.prototype.bitLength = function bitLength () {\\n    var w = this.words[this.length - 1];\\n    var hi = this._countBits(w);\\n    return (this.length - 1) * 26 + hi;\\n  };\\n\\n  function toBitArray (num) {\\n    var w = new Array(num.bitLength());\\n\\n    for (var bit = 0; bit < w.length; bit++) {\\n      var off = (bit / 26) | 0;\\n      var wbit = bit % 26;\\n\\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\\n    }\\n\\n    return w;\\n  }\\n\\n  // Number of trailing zero bits\\n  BN.prototype.zeroBits = function zeroBits () {\\n    if (this.isZero()) return 0;\\n\\n    var r = 0;\\n    for (var i = 0; i < this.length; i++) {\\n      var b = this._zeroBits(this.words[i]);\\n      r += b;\\n      if (b !== 26) break;\\n    }\\n    return r;\\n  };\\n\\n  BN.prototype.byteLength = function byteLength () {\\n    return Math.ceil(this.bitLength() / 8);\\n  };\\n\\n  BN.prototype.toTwos = function toTwos (width) {\\n    if (this.negative !== 0) {\\n      return this.abs().inotn(width).iaddn(1);\\n    }\\n    return this.clone();\\n  };\\n\\n  BN.prototype.fromTwos = function fromTwos (width) {\\n    if (this.testn(width - 1)) {\\n      return this.notn(width).iaddn(1).ineg();\\n    }\\n    return this.clone();\\n  };\\n\\n  BN.prototype.isNeg = function isNeg () {\\n    return this.negative !== 0;\\n  };\\n\\n  // Return negative clone of `this`\\n  BN.prototype.neg = function neg () {\\n    return this.clone().ineg();\\n  };\\n\\n  BN.prototype.ineg = function ineg () {\\n    if (!this.isZero()) {\\n      this.negative ^= 1;\\n    }\\n\\n    return this;\\n  };\\n\\n  // Or `num` with `this` in-place\\n  BN.prototype.iuor = function iuor (num) {\\n    while (this.length < num.length) {\\n      this.words[this.length++] = 0;\\n    }\\n\\n    for (var i = 0; i < num.length; i++) {\\n      this.words[i] = this.words[i] | num.words[i];\\n    }\\n\\n    return this.strip();\\n  };\\n\\n  BN.prototype.ior = function ior (num) {\\n    assert((this.negative | num.negative) === 0);\\n    return this.iuor(num);\\n  };\\n\\n  // Or `num` with `this`\\n  BN.prototype.or = function or (num) {\\n    if (this.length > num.length) return this.clone().ior(num);\\n    return num.clone().ior(this);\\n  };\\n\\n  BN.prototype.uor = function uor (num) {\\n    if (this.length > num.length) return this.clone().iuor(num);\\n    return num.clone().iuor(this);\\n  };\\n\\n  // And `num` with `this` in-place\\n  BN.prototype.iuand = function iuand (num) {\\n    // b = min-length(num, this)\\n    var b;\\n    if (this.length > num.length) {\\n      b = num;\\n    } else {\\n      b = this;\\n    }\\n\\n    for (var i = 0; i < b.length; i++) {\\n      this.words[i] = this.words[i] & num.words[i];\\n    }\\n\\n    this.length = b.length;\\n\\n    return this.strip();\\n  };\\n\\n  BN.prototype.iand = function iand (num) {\\n    assert((this.negative | num.negative) === 0);\\n    return this.iuand(num);\\n  };\\n\\n  // And `num` with `this`\\n  BN.prototype.and = function and (num) {\\n    if (this.length > num.length) return this.clone().iand(num);\\n    return num.clone().iand(this);\\n  };\\n\\n  BN.prototype.uand = function uand (num) {\\n    if (this.length > num.length) return this.clone().iuand(num);\\n    return num.clone().iuand(this);\\n  };\\n\\n  // Xor `num` with `this` in-place\\n  BN.prototype.iuxor = function iuxor (num) {\\n    // a.length > b.length\\n    var a;\\n    var b;\\n    if (this.length > num.length) {\\n      a = this;\\n      b = num;\\n    } else {\\n      a = num;\\n      b = this;\\n    }\\n\\n    for (var i = 0; i < b.length; i++) {\\n      this.words[i] = a.words[i] ^ b.words[i];\\n    }\\n\\n    if (this !== a) {\\n      for (; i < a.length; i++) {\\n        this.words[i] = a.words[i];\\n      }\\n    }\\n\\n    this.length = a.length;\\n\\n    return this.strip();\\n  };\\n\\n  BN.prototype.ixor = function ixor (num) {\\n    assert((this.negative | num.negative) === 0);\\n    return this.iuxor(num);\\n  };\\n\\n  // Xor `num` with `this`\\n  BN.prototype.xor = function xor (num) {\\n    if (this.length > num.length) return this.clone().ixor(num);\\n    return num.clone().ixor(this);\\n  };\\n\\n  BN.prototype.uxor = function uxor (num) {\\n    if (this.length > num.length) return this.clone().iuxor(num);\\n    return num.clone().iuxor(this);\\n  };\\n\\n  // Not ``this`` with ``width`` bitwidth\\n  BN.prototype.inotn = function inotn (width) {\\n    assert(typeof width === 'number' && width >= 0);\\n\\n    var bytesNeeded = Math.ceil(width / 26) | 0;\\n    var bitsLeft = width % 26;\\n\\n    // Extend the buffer with leading zeroes\\n    this._expand(bytesNeeded);\\n\\n    if (bitsLeft > 0) {\\n      bytesNeeded--;\\n    }\\n\\n    // Handle complete words\\n    for (var i = 0; i < bytesNeeded; i++) {\\n      this.words[i] = ~this.words[i] & 0x3ffffff;\\n    }\\n\\n    // Handle the residue\\n    if (bitsLeft > 0) {\\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\\n    }\\n\\n    // And remove leading zeroes\\n    return this.strip();\\n  };\\n\\n  BN.prototype.notn = function notn (width) {\\n    return this.clone().inotn(width);\\n  };\\n\\n  // Set `bit` of `this`\\n  BN.prototype.setn = function setn (bit, val) {\\n    assert(typeof bit === 'number' && bit >= 0);\\n\\n    var off = (bit / 26) | 0;\\n    var wbit = bit % 26;\\n\\n    this._expand(off + 1);\\n\\n    if (val) {\\n      this.words[off] = this.words[off] | (1 << wbit);\\n    } else {\\n      this.words[off] = this.words[off] & ~(1 << wbit);\\n    }\\n\\n    return this.strip();\\n  };\\n\\n  // Add `num` to `this` in-place\\n  BN.prototype.iadd = function iadd (num) {\\n    var r;\\n\\n    // negative + positive\\n    if (this.negative !== 0 && num.negative === 0) {\\n      this.negative = 0;\\n      r = this.isub(num);\\n      this.negative ^= 1;\\n      return this._normSign();\\n\\n    // positive + negative\\n    } else if (this.negative === 0 && num.negative !== 0) {\\n      num.negative = 0;\\n      r = this.isub(num);\\n      num.negative = 1;\\n      return r._normSign();\\n    }\\n\\n    // a.length > b.length\\n    var a, b;\\n    if (this.length > num.length) {\\n      a = this;\\n      b = num;\\n    } else {\\n      a = num;\\n      b = this;\\n    }\\n\\n    var carry = 0;\\n    for (var i = 0; i < b.length; i++) {\\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\\n      this.words[i] = r & 0x3ffffff;\\n      carry = r >>> 26;\\n    }\\n    for (; carry !== 0 && i < a.length; i++) {\\n      r = (a.words[i] | 0) + carry;\\n      this.words[i] = r & 0x3ffffff;\\n      carry = r >>> 26;\\n    }\\n\\n    this.length = a.length;\\n    if (carry !== 0) {\\n      this.words[this.length] = carry;\\n      this.length++;\\n    // Copy the rest of the words\\n    } else if (a !== this) {\\n      for (; i < a.length; i++) {\\n        this.words[i] = a.words[i];\\n      }\\n    }\\n\\n    return this;\\n  };\\n\\n  // Add `num` to `this`\\n  BN.prototype.add = function add (num) {\\n    var res;\\n    if (num.negative !== 0 && this.negative === 0) {\\n      num.negative = 0;\\n      res = this.sub(num);\\n      num.negative ^= 1;\\n      return res;\\n    } else if (num.negative === 0 && this.negative !== 0) {\\n      this.negative = 0;\\n      res = num.sub(this);\\n      this.negative = 1;\\n      return res;\\n    }\\n\\n    if (this.length > num.length) return this.clone().iadd(num);\\n\\n    return num.clone().iadd(this);\\n  };\\n\\n  // Subtract `num` from `this` in-place\\n  BN.prototype.isub = function isub (num) {\\n    // this - (-num) = this + num\\n    if (num.negative !== 0) {\\n      num.negative = 0;\\n      var r = this.iadd(num);\\n      num.negative = 1;\\n      return r._normSign();\\n\\n    // -this - num = -(this + num)\\n    } else if (this.negative !== 0) {\\n      this.negative = 0;\\n      this.iadd(num);\\n      this.negative = 1;\\n      return this._normSign();\\n    }\\n\\n    // At this point both numbers are positive\\n    var cmp = this.cmp(num);\\n\\n    // Optimization - zeroify\\n    if (cmp === 0) {\\n      this.negative = 0;\\n      this.length = 1;\\n      this.words[0] = 0;\\n      return this;\\n    }\\n\\n    // a > b\\n    var a, b;\\n    if (cmp > 0) {\\n      a = this;\\n      b = num;\\n    } else {\\n      a = num;\\n      b = this;\\n    }\\n\\n    var carry = 0;\\n    for (var i = 0; i < b.length; i++) {\\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\\n      carry = r >> 26;\\n      this.words[i] = r & 0x3ffffff;\\n    }\\n    for (; carry !== 0 && i < a.length; i++) {\\n      r = (a.words[i] | 0) + carry;\\n      carry = r >> 26;\\n      this.words[i] = r & 0x3ffffff;\\n    }\\n\\n    // Copy rest of the words\\n    if (carry === 0 && i < a.length && a !== this) {\\n      for (; i < a.length; i++) {\\n        this.words[i] = a.words[i];\\n      }\\n    }\\n\\n    this.length = Math.max(this.length, i);\\n\\n    if (a !== this) {\\n      this.negative = 1;\\n    }\\n\\n    return this.strip();\\n  };\\n\\n  // Subtract `num` from `this`\\n  BN.prototype.sub = function sub (num) {\\n    return this.clone().isub(num);\\n  };\\n\\n  function smallMulTo (self, num, out) {\\n    out.negative = num.negative ^ self.negative;\\n    var len = (self.length + num.length) | 0;\\n    out.length = len;\\n    len = (len - 1) | 0;\\n\\n    // Peel one iteration (compiler can't do it, because of code complexity)\\n    var a = self.words[0] | 0;\\n    var b = num.words[0] | 0;\\n    var r = a * b;\\n\\n    var lo = r & 0x3ffffff;\\n    var carry = (r / 0x4000000) | 0;\\n    out.words[0] = lo;\\n\\n    for (var k = 1; k < len; k++) {\\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\\n      // note that ncarry could be >= 0x3ffffff\\n      var ncarry = carry >>> 26;\\n      var rword = carry & 0x3ffffff;\\n      var maxJ = Math.min(k, num.length - 1);\\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\\n        var i = (k - j) | 0;\\n        a = self.words[i] | 0;\\n        b = num.words[j] | 0;\\n        r = a * b + rword;\\n        ncarry += (r / 0x4000000) | 0;\\n        rword = r & 0x3ffffff;\\n      }\\n      out.words[k] = rword | 0;\\n      carry = ncarry | 0;\\n    }\\n    if (carry !== 0) {\\n      out.words[k] = carry | 0;\\n    } else {\\n      out.length--;\\n    }\\n\\n    return out.strip();\\n  }\\n\\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\\n  // multiplication (like elliptic secp256k1).\\n  var comb10MulTo = function comb10MulTo (self, num, out) {\\n    var a = self.words;\\n    var b = num.words;\\n    var o = out.words;\\n    var c = 0;\\n    var lo;\\n    var mid;\\n    var hi;\\n    var a0 = a[0] | 0;\\n    var al0 = a0 & 0x1fff;\\n    var ah0 = a0 >>> 13;\\n    var a1 = a[1] | 0;\\n    var al1 = a1 & 0x1fff;\\n    var ah1 = a1 >>> 13;\\n    var a2 = a[2] | 0;\\n    var al2 = a2 & 0x1fff;\\n    var ah2 = a2 >>> 13;\\n    var a3 = a[3] | 0;\\n    var al3 = a3 & 0x1fff;\\n    var ah3 = a3 >>> 13;\\n    var a4 = a[4] | 0;\\n    var al4 = a4 & 0x1fff;\\n    var ah4 = a4 >>> 13;\\n    var a5 = a[5] | 0;\\n    var al5 = a5 & 0x1fff;\\n    var ah5 = a5 >>> 13;\\n    var a6 = a[6] | 0;\\n    var al6 = a6 & 0x1fff;\\n    var ah6 = a6 >>> 13;\\n    var a7 = a[7] | 0;\\n    var al7 = a7 & 0x1fff;\\n    var ah7 = a7 >>> 13;\\n    var a8 = a[8] | 0;\\n    var al8 = a8 & 0x1fff;\\n    var ah8 = a8 >>> 13;\\n    var a9 = a[9] | 0;\\n    var al9 = a9 & 0x1fff;\\n    var ah9 = a9 >>> 13;\\n    var b0 = b[0] | 0;\\n    var bl0 = b0 & 0x1fff;\\n    var bh0 = b0 >>> 13;\\n    var b1 = b[1] | 0;\\n    var bl1 = b1 & 0x1fff;\\n    var bh1 = b1 >>> 13;\\n    var b2 = b[2] | 0;\\n    var bl2 = b2 & 0x1fff;\\n    var bh2 = b2 >>> 13;\\n    var b3 = b[3] | 0;\\n    var bl3 = b3 & 0x1fff;\\n    var bh3 = b3 >>> 13;\\n    var b4 = b[4] | 0;\\n    var bl4 = b4 & 0x1fff;\\n    var bh4 = b4 >>> 13;\\n    var b5 = b[5] | 0;\\n    var bl5 = b5 & 0x1fff;\\n    var bh5 = b5 >>> 13;\\n    var b6 = b[6] | 0;\\n    var bl6 = b6 & 0x1fff;\\n    var bh6 = b6 >>> 13;\\n    var b7 = b[7] | 0;\\n    var bl7 = b7 & 0x1fff;\\n    var bh7 = b7 >>> 13;\\n    var b8 = b[8] | 0;\\n    var bl8 = b8 & 0x1fff;\\n    var bh8 = b8 >>> 13;\\n    var b9 = b[9] | 0;\\n    var bl9 = b9 & 0x1fff;\\n    var bh9 = b9 >>> 13;\\n\\n    out.negative = self.negative ^ num.negative;\\n    out.length = 19;\\n    /* k = 0 */\\n    lo = Math.imul(al0, bl0);\\n    mid = Math.imul(al0, bh0);\\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\\n    hi = Math.imul(ah0, bh0);\\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\\n    w0 &= 0x3ffffff;\\n    /* k = 1 */\\n    lo = Math.imul(al1, bl0);\\n    mid = Math.imul(al1, bh0);\\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\\n    hi = Math.imul(ah1, bh0);\\n    lo = (lo + Math.imul(al0, bl1)) | 0;\\n    mid = (mid + Math.imul(al0, bh1)) | 0;\\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\\n    w1 &= 0x3ffffff;\\n    /* k = 2 */\\n    lo = Math.imul(al2, bl0);\\n    mid = Math.imul(al2, bh0);\\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\\n    hi = Math.imul(ah2, bh0);\\n    lo = (lo + Math.imul(al1, bl1)) | 0;\\n    mid = (mid + Math.imul(al1, bh1)) | 0;\\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\\n    lo = (lo + Math.imul(al0, bl2)) | 0;\\n    mid = (mid + Math.imul(al0, bh2)) | 0;\\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\\n    w2 &= 0x3ffffff;\\n    /* k = 3 */\\n    lo = Math.imul(al3, bl0);\\n    mid = Math.imul(al3, bh0);\\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\\n    hi = Math.imul(ah3, bh0);\\n    lo = (lo + Math.imul(al2, bl1)) | 0;\\n    mid = (mid + Math.imul(al2, bh1)) | 0;\\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\\n    lo = (lo + Math.imul(al1, bl2)) | 0;\\n    mid = (mid + Math.imul(al1, bh2)) | 0;\\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\\n    lo = (lo + Math.imul(al0, bl3)) | 0;\\n    mid = (mid + Math.imul(al0, bh3)) | 0;\\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\\n    w3 &= 0x3ffffff;\\n    /* k = 4 */\\n    lo = Math.imul(al4, bl0);\\n    mid = Math.imul(al4, bh0);\\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\\n    hi = Math.imul(ah4, bh0);\\n    lo = (lo + Math.imul(al3, bl1)) | 0;\\n    mid = (mid + Math.imul(al3, bh1)) | 0;\\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\\n    lo = (lo + Math.imul(al2, bl2)) | 0;\\n    mid = (mid + Math.imul(al2, bh2)) | 0;\\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\\n    lo = (lo + Math.imul(al1, bl3)) | 0;\\n    mid = (mid + Math.imul(al1, bh3)) | 0;\\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\\n    lo = (lo + Math.imul(al0, bl4)) | 0;\\n    mid = (mid + Math.imul(al0, bh4)) | 0;\\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\\n    w4 &= 0x3ffffff;\\n    /* k = 5 */\\n    lo = Math.imul(al5, bl0);\\n    mid = Math.imul(al5, bh0);\\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\\n    hi = Math.imul(ah5, bh0);\\n    lo = (lo + Math.imul(al4, bl1)) | 0;\\n    mid = (mid + Math.imul(al4, bh1)) | 0;\\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\\n    lo = (lo + Math.imul(al3, bl2)) | 0;\\n    mid = (mid + Math.imul(al3, bh2)) | 0;\\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\\n    lo = (lo + Math.imul(al2, bl3)) | 0;\\n    mid = (mid + Math.imul(al2, bh3)) | 0;\\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\\n    lo = (lo + Math.imul(al1, bl4)) | 0;\\n    mid = (mid + Math.imul(al1, bh4)) | 0;\\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\\n    lo = (lo + Math.imul(al0, bl5)) | 0;\\n    mid = (mid + Math.imul(al0, bh5)) | 0;\\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\\n    w5 &= 0x3ffffff;\\n    /* k = 6 */\\n    lo = Math.imul(al6, bl0);\\n    mid = Math.imul(al6, bh0);\\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\\n    hi = Math.imul(ah6, bh0);\\n    lo = (lo + Math.imul(al5, bl1)) | 0;\\n    mid = (mid + Math.imul(al5, bh1)) | 0;\\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\\n    lo = (lo + Math.imul(al4, bl2)) | 0;\\n    mid = (mid + Math.imul(al4, bh2)) | 0;\\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\\n    lo = (lo + Math.imul(al3, bl3)) | 0;\\n    mid = (mid + Math.imul(al3, bh3)) | 0;\\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\\n    lo = (lo + Math.imul(al2, bl4)) | 0;\\n    mid = (mid + Math.imul(al2, bh4)) | 0;\\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\\n    lo = (lo + Math.imul(al1, bl5)) | 0;\\n    mid = (mid + Math.imul(al1, bh5)) | 0;\\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\\n    lo = (lo + Math.imul(al0, bl6)) | 0;\\n    mid = (mid + Math.imul(al0, bh6)) | 0;\\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\\n    w6 &= 0x3ffffff;\\n    /* k = 7 */\\n    lo = Math.imul(al7, bl0);\\n    mid = Math.imul(al7, bh0);\\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\\n    hi = Math.imul(ah7, bh0);\\n    lo = (lo + Math.imul(al6, bl1)) | 0;\\n    mid = (mid + Math.imul(al6, bh1)) | 0;\\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\\n    lo = (lo + Math.imul(al5, bl2)) | 0;\\n    mid = (mid + Math.imul(al5, bh2)) | 0;\\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\\n    lo = (lo + Math.imul(al4, bl3)) | 0;\\n    mid = (mid + Math.imul(al4, bh3)) | 0;\\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\\n    lo = (lo + Math.imul(al3, bl4)) | 0;\\n    mid = (mid + Math.imul(al3, bh4)) | 0;\\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\\n    lo = (lo + Math.imul(al2, bl5)) | 0;\\n    mid = (mid + Math.imul(al2, bh5)) | 0;\\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\\n    lo = (lo + Math.imul(al1, bl6)) | 0;\\n    mid = (mid + Math.imul(al1, bh6)) | 0;\\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\\n    lo = (lo + Math.imul(al0, bl7)) | 0;\\n    mid = (mid + Math.imul(al0, bh7)) | 0;\\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\\n    w7 &= 0x3ffffff;\\n    /* k = 8 */\\n    lo = Math.imul(al8, bl0);\\n    mid = Math.imul(al8, bh0);\\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\\n    hi = Math.imul(ah8, bh0);\\n    lo = (lo + Math.imul(al7, bl1)) | 0;\\n    mid = (mid + Math.imul(al7, bh1)) | 0;\\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\\n    lo = (lo + Math.imul(al6, bl2)) | 0;\\n    mid = (mid + Math.imul(al6, bh2)) | 0;\\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\\n    lo = (lo + Math.imul(al5, bl3)) | 0;\\n    mid = (mid + Math.imul(al5, bh3)) | 0;\\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\\n    lo = (lo + Math.imul(al4, bl4)) | 0;\\n    mid = (mid + Math.imul(al4, bh4)) | 0;\\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\\n    lo = (lo + Math.imul(al3, bl5)) | 0;\\n    mid = (mid + Math.imul(al3, bh5)) | 0;\\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\\n    lo = (lo + Math.imul(al2, bl6)) | 0;\\n    mid = (mid + Math.imul(al2, bh6)) | 0;\\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\\n    lo = (lo + Math.imul(al1, bl7)) | 0;\\n    mid = (mid + Math.imul(al1, bh7)) | 0;\\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\\n    lo = (lo + Math.imul(al0, bl8)) | 0;\\n    mid = (mid + Math.imul(al0, bh8)) | 0;\\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\\n    w8 &= 0x3ffffff;\\n    /* k = 9 */\\n    lo = Math.imul(al9, bl0);\\n    mid = Math.imul(al9, bh0);\\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\\n    hi = Math.imul(ah9, bh0);\\n    lo = (lo + Math.imul(al8, bl1)) | 0;\\n    mid = (mid + Math.imul(al8, bh1)) | 0;\\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\\n    lo = (lo + Math.imul(al7, bl2)) | 0;\\n    mid = (mid + Math.imul(al7, bh2)) | 0;\\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\\n    lo = (lo + Math.imul(al6, bl3)) | 0;\\n    mid = (mid + Math.imul(al6, bh3)) | 0;\\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\\n    lo = (lo + Math.imul(al5, bl4)) | 0;\\n    mid = (mid + Math.imul(al5, bh4)) | 0;\\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\\n    lo = (lo + Math.imul(al4, bl5)) | 0;\\n    mid = (mid + Math.imul(al4, bh5)) | 0;\\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\\n    lo = (lo + Math.imul(al3, bl6)) | 0;\\n    mid = (mid + Math.imul(al3, bh6)) | 0;\\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\\n    lo = (lo + Math.imul(al2, bl7)) | 0;\\n    mid = (mid + Math.imul(al2, bh7)) | 0;\\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\\n    lo = (lo + Math.imul(al1, bl8)) | 0;\\n    mid = (mid + Math.imul(al1, bh8)) | 0;\\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\\n    lo = (lo + Math.imul(al0, bl9)) | 0;\\n    mid = (mid + Math.imul(al0, bh9)) | 0;\\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\\n    w9 &= 0x3ffffff;\\n    /* k = 10 */\\n    lo = Math.imul(al9, bl1);\\n    mid = Math.imul(al9, bh1);\\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\\n    hi = Math.imul(ah9, bh1);\\n    lo = (lo + Math.imul(al8, bl2)) | 0;\\n    mid = (mid + Math.imul(al8, bh2)) | 0;\\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\\n    lo = (lo + Math.imul(al7, bl3)) | 0;\\n    mid = (mid + Math.imul(al7, bh3)) | 0;\\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\\n    lo = (lo + Math.imul(al6, bl4)) | 0;\\n    mid = (mid + Math.imul(al6, bh4)) | 0;\\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\\n    lo = (lo + Math.imul(al5, bl5)) | 0;\\n    mid = (mid + Math.imul(al5, bh5)) | 0;\\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\\n    lo = (lo + Math.imul(al4, bl6)) | 0;\\n    mid = (mid + Math.imul(al4, bh6)) | 0;\\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\\n    lo = (lo + Math.imul(al3, bl7)) | 0;\\n    mid = (mid + Math.imul(al3, bh7)) | 0;\\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\\n    lo = (lo + Math.imul(al2, bl8)) | 0;\\n    mid = (mid + Math.imul(al2, bh8)) | 0;\\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\\n    lo = (lo + Math.imul(al1, bl9)) | 0;\\n    mid = (mid + Math.imul(al1, bh9)) | 0;\\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\\n    w10 &= 0x3ffffff;\\n    /* k = 11 */\\n    lo = Math.imul(al9, bl2);\\n    mid = Math.imul(al9, bh2);\\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\\n    hi = Math.imul(ah9, bh2);\\n    lo = (lo + Math.imul(al8, bl3)) | 0;\\n    mid = (mid + Math.imul(al8, bh3)) | 0;\\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\\n    lo = (lo + Math.imul(al7, bl4)) | 0;\\n    mid = (mid + Math.imul(al7, bh4)) | 0;\\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\\n    lo = (lo + Math.imul(al6, bl5)) | 0;\\n    mid = (mid + Math.imul(al6, bh5)) | 0;\\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\\n    lo = (lo + Math.imul(al5, bl6)) | 0;\\n    mid = (mid + Math.imul(al5, bh6)) | 0;\\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\\n    lo = (lo + Math.imul(al4, bl7)) | 0;\\n    mid = (mid + Math.imul(al4, bh7)) | 0;\\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\\n    lo = (lo + Math.imul(al3, bl8)) | 0;\\n    mid = (mid + Math.imul(al3, bh8)) | 0;\\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\\n    lo = (lo + Math.imul(al2, bl9)) | 0;\\n    mid = (mid + Math.imul(al2, bh9)) | 0;\\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\\n    w11 &= 0x3ffffff;\\n    /* k = 12 */\\n    lo = Math.imul(al9, bl3);\\n    mid = Math.imul(al9, bh3);\\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\\n    hi = Math.imul(ah9, bh3);\\n    lo = (lo + Math.imul(al8, bl4)) | 0;\\n    mid = (mid + Math.imul(al8, bh4)) | 0;\\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\\n    lo = (lo + Math.imul(al7, bl5)) | 0;\\n    mid = (mid + Math.imul(al7, bh5)) | 0;\\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\\n    lo = (lo + Math.imul(al6, bl6)) | 0;\\n    mid = (mid + Math.imul(al6, bh6)) | 0;\\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\\n    lo = (lo + Math.imul(al5, bl7)) | 0;\\n    mid = (mid + Math.imul(al5, bh7)) | 0;\\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\\n    lo = (lo + Math.imul(al4, bl8)) | 0;\\n    mid = (mid + Math.imul(al4, bh8)) | 0;\\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\\n    lo = (lo + Math.imul(al3, bl9)) | 0;\\n    mid = (mid + Math.imul(al3, bh9)) | 0;\\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\\n    w12 &= 0x3ffffff;\\n    /* k = 13 */\\n    lo = Math.imul(al9, bl4);\\n    mid = Math.imul(al9, bh4);\\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\\n    hi = Math.imul(ah9, bh4);\\n    lo = (lo + Math.imul(al8, bl5)) | 0;\\n    mid = (mid + Math.imul(al8, bh5)) | 0;\\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\\n    lo = (lo + Math.imul(al7, bl6)) | 0;\\n    mid = (mid + Math.imul(al7, bh6)) | 0;\\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\\n    lo = (lo + Math.imul(al6, bl7)) | 0;\\n    mid = (mid + Math.imul(al6, bh7)) | 0;\\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\\n    lo = (lo + Math.imul(al5, bl8)) | 0;\\n    mid = (mid + Math.imul(al5, bh8)) | 0;\\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\\n    lo = (lo + Math.imul(al4, bl9)) | 0;\\n    mid = (mid + Math.imul(al4, bh9)) | 0;\\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\\n    w13 &= 0x3ffffff;\\n    /* k = 14 */\\n    lo = Math.imul(al9, bl5);\\n    mid = Math.imul(al9, bh5);\\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\\n    hi = Math.imul(ah9, bh5);\\n    lo = (lo + Math.imul(al8, bl6)) | 0;\\n    mid = (mid + Math.imul(al8, bh6)) | 0;\\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\\n    lo = (lo + Math.imul(al7, bl7)) | 0;\\n    mid = (mid + Math.imul(al7, bh7)) | 0;\\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\\n    lo = (lo + Math.imul(al6, bl8)) | 0;\\n    mid = (mid + Math.imul(al6, bh8)) | 0;\\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\\n    lo = (lo + Math.imul(al5, bl9)) | 0;\\n    mid = (mid + Math.imul(al5, bh9)) | 0;\\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\\n    w14 &= 0x3ffffff;\\n    /* k = 15 */\\n    lo = Math.imul(al9, bl6);\\n    mid = Math.imul(al9, bh6);\\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\\n    hi = Math.imul(ah9, bh6);\\n    lo = (lo + Math.imul(al8, bl7)) | 0;\\n    mid = (mid + Math.imul(al8, bh7)) | 0;\\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\\n    lo = (lo + Math.imul(al7, bl8)) | 0;\\n    mid = (mid + Math.imul(al7, bh8)) | 0;\\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\\n    lo = (lo + Math.imul(al6, bl9)) | 0;\\n    mid = (mid + Math.imul(al6, bh9)) | 0;\\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\\n    w15 &= 0x3ffffff;\\n    /* k = 16 */\\n    lo = Math.imul(al9, bl7);\\n    mid = Math.imul(al9, bh7);\\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\\n    hi = Math.imul(ah9, bh7);\\n    lo = (lo + Math.imul(al8, bl8)) | 0;\\n    mid = (mid + Math.imul(al8, bh8)) | 0;\\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\\n    lo = (lo + Math.imul(al7, bl9)) | 0;\\n    mid = (mid + Math.imul(al7, bh9)) | 0;\\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\\n    w16 &= 0x3ffffff;\\n    /* k = 17 */\\n    lo = Math.imul(al9, bl8);\\n    mid = Math.imul(al9, bh8);\\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\\n    hi = Math.imul(ah9, bh8);\\n    lo = (lo + Math.imul(al8, bl9)) | 0;\\n    mid = (mid + Math.imul(al8, bh9)) | 0;\\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\\n    w17 &= 0x3ffffff;\\n    /* k = 18 */\\n    lo = Math.imul(al9, bl9);\\n    mid = Math.imul(al9, bh9);\\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\\n    hi = Math.imul(ah9, bh9);\\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\\n    w18 &= 0x3ffffff;\\n    o[0] = w0;\\n    o[1] = w1;\\n    o[2] = w2;\\n    o[3] = w3;\\n    o[4] = w4;\\n    o[5] = w5;\\n    o[6] = w6;\\n    o[7] = w7;\\n    o[8] = w8;\\n    o[9] = w9;\\n    o[10] = w10;\\n    o[11] = w11;\\n    o[12] = w12;\\n    o[13] = w13;\\n    o[14] = w14;\\n    o[15] = w15;\\n    o[16] = w16;\\n    o[17] = w17;\\n    o[18] = w18;\\n    if (c !== 0) {\\n      o[19] = c;\\n      out.length++;\\n    }\\n    return out;\\n  };\\n\\n  // Polyfill comb\\n  if (!Math.imul) {\\n    comb10MulTo = smallMulTo;\\n  }\\n\\n  function bigMulTo (self, num, out) {\\n    out.negative = num.negative ^ self.negative;\\n    out.length = self.length + num.length;\\n\\n    var carry = 0;\\n    var hncarry = 0;\\n    for (var k = 0; k < out.length - 1; k++) {\\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\\n      // note that ncarry could be >= 0x3ffffff\\n      var ncarry = hncarry;\\n      hncarry = 0;\\n      var rword = carry & 0x3ffffff;\\n      var maxJ = Math.min(k, num.length - 1);\\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\\n        var i = k - j;\\n        var a = self.words[i] | 0;\\n        var b = num.words[j] | 0;\\n        var r = a * b;\\n\\n        var lo = r & 0x3ffffff;\\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\\n        lo = (lo + rword) | 0;\\n        rword = lo & 0x3ffffff;\\n        ncarry = (ncarry + (lo >>> 26)) | 0;\\n\\n        hncarry += ncarry >>> 26;\\n        ncarry &= 0x3ffffff;\\n      }\\n      out.words[k] = rword;\\n      carry = ncarry;\\n      ncarry = hncarry;\\n    }\\n    if (carry !== 0) {\\n      out.words[k] = carry;\\n    } else {\\n      out.length--;\\n    }\\n\\n    return out.strip();\\n  }\\n\\n  function jumboMulTo (self, num, out) {\\n    var fftm = new FFTM();\\n    return fftm.mulp(self, num, out);\\n  }\\n\\n  BN.prototype.mulTo = function mulTo (num, out) {\\n    var res;\\n    var len = this.length + num.length;\\n    if (this.length === 10 && num.length === 10) {\\n      res = comb10MulTo(this, num, out);\\n    } else if (len < 63) {\\n      res = smallMulTo(this, num, out);\\n    } else if (len < 1024) {\\n      res = bigMulTo(this, num, out);\\n    } else {\\n      res = jumboMulTo(this, num, out);\\n    }\\n\\n    return res;\\n  };\\n\\n  // Cooley-Tukey algorithm for FFT\\n  // slightly revisited to rely on looping instead of recursion\\n\\n  function FFTM (x, y) {\\n    this.x = x;\\n    this.y = y;\\n  }\\n\\n  FFTM.prototype.makeRBT = function makeRBT (N) {\\n    var t = new Array(N);\\n    var l = BN.prototype._countBits(N) - 1;\\n    for (var i = 0; i < N; i++) {\\n      t[i] = this.revBin(i, l, N);\\n    }\\n\\n    return t;\\n  };\\n\\n  // Returns binary-reversed representation of `x`\\n  FFTM.prototype.revBin = function revBin (x, l, N) {\\n    if (x === 0 || x === N - 1) return x;\\n\\n    var rb = 0;\\n    for (var i = 0; i < l; i++) {\\n      rb |= (x & 1) << (l - i - 1);\\n      x >>= 1;\\n    }\\n\\n    return rb;\\n  };\\n\\n  // Performs \\\"tweedling\\\" phase, therefore 'emulating'\\n  // behaviour of the recursive algorithm\\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\\n    for (var i = 0; i < N; i++) {\\n      rtws[i] = rws[rbt[i]];\\n      itws[i] = iws[rbt[i]];\\n    }\\n  };\\n\\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\\n    this.permute(rbt, rws, iws, rtws, itws, N);\\n\\n    for (var s = 1; s < N; s <<= 1) {\\n      var l = s << 1;\\n\\n      var rtwdf = Math.cos(2 * Math.PI / l);\\n      var itwdf = Math.sin(2 * Math.PI / l);\\n\\n      for (var p = 0; p < N; p += l) {\\n        var rtwdf_ = rtwdf;\\n        var itwdf_ = itwdf;\\n\\n        for (var j = 0; j < s; j++) {\\n          var re = rtws[p + j];\\n          var ie = itws[p + j];\\n\\n          var ro = rtws[p + j + s];\\n          var io = itws[p + j + s];\\n\\n          var rx = rtwdf_ * ro - itwdf_ * io;\\n\\n          io = rtwdf_ * io + itwdf_ * ro;\\n          ro = rx;\\n\\n          rtws[p + j] = re + ro;\\n          itws[p + j] = ie + io;\\n\\n          rtws[p + j + s] = re - ro;\\n          itws[p + j + s] = ie - io;\\n\\n          /* jshint maxdepth : false */\\n          if (j !== l) {\\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\\n\\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\\n            rtwdf_ = rx;\\n          }\\n        }\\n      }\\n    }\\n  };\\n\\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\\n    var N = Math.max(m, n) | 1;\\n    var odd = N & 1;\\n    var i = 0;\\n    for (N = N / 2 | 0; N; N = N >>> 1) {\\n      i++;\\n    }\\n\\n    return 1 << i + 1 + odd;\\n  };\\n\\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\\n    if (N <= 1) return;\\n\\n    for (var i = 0; i < N / 2; i++) {\\n      var t = rws[i];\\n\\n      rws[i] = rws[N - i - 1];\\n      rws[N - i - 1] = t;\\n\\n      t = iws[i];\\n\\n      iws[i] = -iws[N - i - 1];\\n      iws[N - i - 1] = -t;\\n    }\\n  };\\n\\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\\n    var carry = 0;\\n    for (var i = 0; i < N / 2; i++) {\\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\\n        Math.round(ws[2 * i] / N) +\\n        carry;\\n\\n      ws[i] = w & 0x3ffffff;\\n\\n      if (w < 0x4000000) {\\n        carry = 0;\\n      } else {\\n        carry = w / 0x4000000 | 0;\\n      }\\n    }\\n\\n    return ws;\\n  };\\n\\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\\n    var carry = 0;\\n    for (var i = 0; i < len; i++) {\\n      carry = carry + (ws[i] | 0);\\n\\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\\n    }\\n\\n    // Pad with zeroes\\n    for (i = 2 * len; i < N; ++i) {\\n      rws[i] = 0;\\n    }\\n\\n    assert(carry === 0);\\n    assert((carry & ~0x1fff) === 0);\\n  };\\n\\n  FFTM.prototype.stub = function stub (N) {\\n    var ph = new Array(N);\\n    for (var i = 0; i < N; i++) {\\n      ph[i] = 0;\\n    }\\n\\n    return ph;\\n  };\\n\\n  FFTM.prototype.mulp = function mulp (x, y, out) {\\n    var N = 2 * this.guessLen13b(x.length, y.length);\\n\\n    var rbt = this.makeRBT(N);\\n\\n    var _ = this.stub(N);\\n\\n    var rws = new Array(N);\\n    var rwst = new Array(N);\\n    var iwst = new Array(N);\\n\\n    var nrws = new Array(N);\\n    var nrwst = new Array(N);\\n    var niwst = new Array(N);\\n\\n    var rmws = out.words;\\n    rmws.length = N;\\n\\n    this.convert13b(x.words, x.length, rws, N);\\n    this.convert13b(y.words, y.length, nrws, N);\\n\\n    this.transform(rws, _, rwst, iwst, N, rbt);\\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\\n\\n    for (var i = 0; i < N; i++) {\\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\\n      rwst[i] = rx;\\n    }\\n\\n    this.conjugate(rwst, iwst, N);\\n    this.transform(rwst, iwst, rmws, _, N, rbt);\\n    this.conjugate(rmws, _, N);\\n    this.normalize13b(rmws, N);\\n\\n    out.negative = x.negative ^ y.negative;\\n    out.length = x.length + y.length;\\n    return out.strip();\\n  };\\n\\n  // Multiply `this` by `num`\\n  BN.prototype.mul = function mul (num) {\\n    var out = new BN(null);\\n    out.words = new Array(this.length + num.length);\\n    return this.mulTo(num, out);\\n  };\\n\\n  // Multiply employing FFT\\n  BN.prototype.mulf = function mulf (num) {\\n    var out = new BN(null);\\n    out.words = new Array(this.length + num.length);\\n    return jumboMulTo(this, num, out);\\n  };\\n\\n  // In-place Multiplication\\n  BN.prototype.imul = function imul (num) {\\n    return this.clone().mulTo(num, this);\\n  };\\n\\n  BN.prototype.imuln = function imuln (num) {\\n    assert(typeof num === 'number');\\n    assert(num < 0x4000000);\\n\\n    // Carry\\n    var carry = 0;\\n    for (var i = 0; i < this.length; i++) {\\n      var w = (this.words[i] | 0) * num;\\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\\n      carry >>= 26;\\n      carry += (w / 0x4000000) | 0;\\n      // NOTE: lo is 27bit maximum\\n      carry += lo >>> 26;\\n      this.words[i] = lo & 0x3ffffff;\\n    }\\n\\n    if (carry !== 0) {\\n      this.words[i] = carry;\\n      this.length++;\\n    }\\n\\n    return this;\\n  };\\n\\n  BN.prototype.muln = function muln (num) {\\n    return this.clone().imuln(num);\\n  };\\n\\n  // `this` * `this`\\n  BN.prototype.sqr = function sqr () {\\n    return this.mul(this);\\n  };\\n\\n  // `this` * `this` in-place\\n  BN.prototype.isqr = function isqr () {\\n    return this.imul(this.clone());\\n  };\\n\\n  // Math.pow(`this`, `num`)\\n  BN.prototype.pow = function pow (num) {\\n    var w = toBitArray(num);\\n    if (w.length === 0) return new BN(1);\\n\\n    // Skip leading zeroes\\n    var res = this;\\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\\n      if (w[i] !== 0) break;\\n    }\\n\\n    if (++i < w.length) {\\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\\n        if (w[i] === 0) continue;\\n\\n        res = res.mul(q);\\n      }\\n    }\\n\\n    return res;\\n  };\\n\\n  // Shift-left in-place\\n  BN.prototype.iushln = function iushln (bits) {\\n    assert(typeof bits === 'number' && bits >= 0);\\n    var r = bits % 26;\\n    var s = (bits - r) / 26;\\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\\n    var i;\\n\\n    if (r !== 0) {\\n      var carry = 0;\\n\\n      for (i = 0; i < this.length; i++) {\\n        var newCarry = this.words[i] & carryMask;\\n        var c = ((this.words[i] | 0) - newCarry) << r;\\n        this.words[i] = c | carry;\\n        carry = newCarry >>> (26 - r);\\n      }\\n\\n      if (carry) {\\n        this.words[i] = carry;\\n        this.length++;\\n      }\\n    }\\n\\n    if (s !== 0) {\\n      for (i = this.length - 1; i >= 0; i--) {\\n        this.words[i + s] = this.words[i];\\n      }\\n\\n      for (i = 0; i < s; i++) {\\n        this.words[i] = 0;\\n      }\\n\\n      this.length += s;\\n    }\\n\\n    return this.strip();\\n  };\\n\\n  BN.prototype.ishln = function ishln (bits) {\\n    // TODO(indutny): implement me\\n    assert(this.negative === 0);\\n    return this.iushln(bits);\\n  };\\n\\n  // Shift-right in-place\\n  // NOTE: `hint` is a lowest bit before trailing zeroes\\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\\n    assert(typeof bits === 'number' && bits >= 0);\\n    var h;\\n    if (hint) {\\n      h = (hint - (hint % 26)) / 26;\\n    } else {\\n      h = 0;\\n    }\\n\\n    var r = bits % 26;\\n    var s = Math.min((bits - r) / 26, this.length);\\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\\n    var maskedWords = extended;\\n\\n    h -= s;\\n    h = Math.max(0, h);\\n\\n    // Extended mode, copy masked part\\n    if (maskedWords) {\\n      for (var i = 0; i < s; i++) {\\n        maskedWords.words[i] = this.words[i];\\n      }\\n      maskedWords.length = s;\\n    }\\n\\n    if (s === 0) {\\n      // No-op, we should not move anything at all\\n    } else if (this.length > s) {\\n      this.length -= s;\\n      for (i = 0; i < this.length; i++) {\\n        this.words[i] = this.words[i + s];\\n      }\\n    } else {\\n      this.words[0] = 0;\\n      this.length = 1;\\n    }\\n\\n    var carry = 0;\\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\\n      var word = this.words[i] | 0;\\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\\n      carry = word & mask;\\n    }\\n\\n    // Push carried bits as a mask\\n    if (maskedWords && carry !== 0) {\\n      maskedWords.words[maskedWords.length++] = carry;\\n    }\\n\\n    if (this.length === 0) {\\n      this.words[0] = 0;\\n      this.length = 1;\\n    }\\n\\n    return this.strip();\\n  };\\n\\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\\n    // TODO(indutny): implement me\\n    assert(this.negative === 0);\\n    return this.iushrn(bits, hint, extended);\\n  };\\n\\n  // Shift-left\\n  BN.prototype.shln = function shln (bits) {\\n    return this.clone().ishln(bits);\\n  };\\n\\n  BN.prototype.ushln = function ushln (bits) {\\n    return this.clone().iushln(bits);\\n  };\\n\\n  // Shift-right\\n  BN.prototype.shrn = function shrn (bits) {\\n    return this.clone().ishrn(bits);\\n  };\\n\\n  BN.prototype.ushrn = function ushrn (bits) {\\n    return this.clone().iushrn(bits);\\n  };\\n\\n  // Test if n bit is set\\n  BN.prototype.testn = function testn (bit) {\\n    assert(typeof bit === 'number' && bit >= 0);\\n    var r = bit % 26;\\n    var s = (bit - r) / 26;\\n    var q = 1 << r;\\n\\n    // Fast case: bit is much higher than all existing words\\n    if (this.length <= s) return false;\\n\\n    // Check bit and return\\n    var w = this.words[s];\\n\\n    return !!(w & q);\\n  };\\n\\n  // Return only lowers bits of number (in-place)\\n  BN.prototype.imaskn = function imaskn (bits) {\\n    assert(typeof bits === 'number' && bits >= 0);\\n    var r = bits % 26;\\n    var s = (bits - r) / 26;\\n\\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\\n\\n    if (this.length <= s) {\\n      return this;\\n    }\\n\\n    if (r !== 0) {\\n      s++;\\n    }\\n    this.length = Math.min(s, this.length);\\n\\n    if (r !== 0) {\\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\\n      this.words[this.length - 1] &= mask;\\n    }\\n\\n    return this.strip();\\n  };\\n\\n  // Return only lowers bits of number\\n  BN.prototype.maskn = function maskn (bits) {\\n    return this.clone().imaskn(bits);\\n  };\\n\\n  // Add plain number `num` to `this`\\n  BN.prototype.iaddn = function iaddn (num) {\\n    assert(typeof num === 'number');\\n    assert(num < 0x4000000);\\n    if (num < 0) return this.isubn(-num);\\n\\n    // Possible sign change\\n    if (this.negative !== 0) {\\n      if (this.length === 1 && (this.words[0] | 0) < num) {\\n        this.words[0] = num - (this.words[0] | 0);\\n        this.negative = 0;\\n        return this;\\n      }\\n\\n      this.negative = 0;\\n      this.isubn(num);\\n      this.negative = 1;\\n      return this;\\n    }\\n\\n    // Add without checks\\n    return this._iaddn(num);\\n  };\\n\\n  BN.prototype._iaddn = function _iaddn (num) {\\n    this.words[0] += num;\\n\\n    // Carry\\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\\n      this.words[i] -= 0x4000000;\\n      if (i === this.length - 1) {\\n        this.words[i + 1] = 1;\\n      } else {\\n        this.words[i + 1]++;\\n      }\\n    }\\n    this.length = Math.max(this.length, i + 1);\\n\\n    return this;\\n  };\\n\\n  // Subtract plain number `num` from `this`\\n  BN.prototype.isubn = function isubn (num) {\\n    assert(typeof num === 'number');\\n    assert(num < 0x4000000);\\n    if (num < 0) return this.iaddn(-num);\\n\\n    if (this.negative !== 0) {\\n      this.negative = 0;\\n      this.iaddn(num);\\n      this.negative = 1;\\n      return this;\\n    }\\n\\n    this.words[0] -= num;\\n\\n    if (this.length === 1 && this.words[0] < 0) {\\n      this.words[0] = -this.words[0];\\n      this.negative = 1;\\n    } else {\\n      // Carry\\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\\n        this.words[i] += 0x4000000;\\n        this.words[i + 1] -= 1;\\n      }\\n    }\\n\\n    return this.strip();\\n  };\\n\\n  BN.prototype.addn = function addn (num) {\\n    return this.clone().iaddn(num);\\n  };\\n\\n  BN.prototype.subn = function subn (num) {\\n    return this.clone().isubn(num);\\n  };\\n\\n  BN.prototype.iabs = function iabs () {\\n    this.negative = 0;\\n\\n    return this;\\n  };\\n\\n  BN.prototype.abs = function abs () {\\n    return this.clone().iabs();\\n  };\\n\\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\\n    var len = num.length + shift;\\n    var i;\\n\\n    this._expand(len);\\n\\n    var w;\\n    var carry = 0;\\n    for (i = 0; i < num.length; i++) {\\n      w = (this.words[i + shift] | 0) + carry;\\n      var right = (num.words[i] | 0) * mul;\\n      w -= right & 0x3ffffff;\\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\\n      this.words[i + shift] = w & 0x3ffffff;\\n    }\\n    for (; i < this.length - shift; i++) {\\n      w = (this.words[i + shift] | 0) + carry;\\n      carry = w >> 26;\\n      this.words[i + shift] = w & 0x3ffffff;\\n    }\\n\\n    if (carry === 0) return this.strip();\\n\\n    // Subtraction overflow\\n    assert(carry === -1);\\n    carry = 0;\\n    for (i = 0; i < this.length; i++) {\\n      w = -(this.words[i] | 0) + carry;\\n      carry = w >> 26;\\n      this.words[i] = w & 0x3ffffff;\\n    }\\n    this.negative = 1;\\n\\n    return this.strip();\\n  };\\n\\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\\n    var shift = this.length - num.length;\\n\\n    var a = this.clone();\\n    var b = num;\\n\\n    // Normalize\\n    var bhi = b.words[b.length - 1] | 0;\\n    var bhiBits = this._countBits(bhi);\\n    shift = 26 - bhiBits;\\n    if (shift !== 0) {\\n      b = b.ushln(shift);\\n      a.iushln(shift);\\n      bhi = b.words[b.length - 1] | 0;\\n    }\\n\\n    // Initialize quotient\\n    var m = a.length - b.length;\\n    var q;\\n\\n    if (mode !== 'mod') {\\n      q = new BN(null);\\n      q.length = m + 1;\\n      q.words = new Array(q.length);\\n      for (var i = 0; i < q.length; i++) {\\n        q.words[i] = 0;\\n      }\\n    }\\n\\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\\n    if (diff.negative === 0) {\\n      a = diff;\\n      if (q) {\\n        q.words[m] = 1;\\n      }\\n    }\\n\\n    for (var j = m - 1; j >= 0; j--) {\\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\\n        (a.words[b.length + j - 1] | 0);\\n\\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\\n      // (0x7ffffff)\\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\\n\\n      a._ishlnsubmul(b, qj, j);\\n      while (a.negative !== 0) {\\n        qj--;\\n        a.negative = 0;\\n        a._ishlnsubmul(b, 1, j);\\n        if (!a.isZero()) {\\n          a.negative ^= 1;\\n        }\\n      }\\n      if (q) {\\n        q.words[j] = qj;\\n      }\\n    }\\n    if (q) {\\n      q.strip();\\n    }\\n    a.strip();\\n\\n    // Denormalize\\n    if (mode !== 'div' && shift !== 0) {\\n      a.iushrn(shift);\\n    }\\n\\n    return {\\n      div: q || null,\\n      mod: a\\n    };\\n  };\\n\\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\\n  //       to `div` to request div only, or be absent to\\n  //       request both div & mod\\n  //       2) `positive` is true if unsigned mod is requested\\n  BN.prototype.divmod = function divmod (num, mode, positive) {\\n    assert(!num.isZero());\\n\\n    if (this.isZero()) {\\n      return {\\n        div: new BN(0),\\n        mod: new BN(0)\\n      };\\n    }\\n\\n    var div, mod, res;\\n    if (this.negative !== 0 && num.negative === 0) {\\n      res = this.neg().divmod(num, mode);\\n\\n      if (mode !== 'mod') {\\n        div = res.div.neg();\\n      }\\n\\n      if (mode !== 'div') {\\n        mod = res.mod.neg();\\n        if (positive && mod.negative !== 0) {\\n          mod.iadd(num);\\n        }\\n      }\\n\\n      return {\\n        div: div,\\n        mod: mod\\n      };\\n    }\\n\\n    if (this.negative === 0 && num.negative !== 0) {\\n      res = this.divmod(num.neg(), mode);\\n\\n      if (mode !== 'mod') {\\n        div = res.div.neg();\\n      }\\n\\n      return {\\n        div: div,\\n        mod: res.mod\\n      };\\n    }\\n\\n    if ((this.negative & num.negative) !== 0) {\\n      res = this.neg().divmod(num.neg(), mode);\\n\\n      if (mode !== 'div') {\\n        mod = res.mod.neg();\\n        if (positive && mod.negative !== 0) {\\n          mod.isub(num);\\n        }\\n      }\\n\\n      return {\\n        div: res.div,\\n        mod: mod\\n      };\\n    }\\n\\n    // Both numbers are positive at this point\\n\\n    // Strip both numbers to approximate shift value\\n    if (num.length > this.length || this.cmp(num) < 0) {\\n      return {\\n        div: new BN(0),\\n        mod: this\\n      };\\n    }\\n\\n    // Very short reduction\\n    if (num.length === 1) {\\n      if (mode === 'div') {\\n        return {\\n          div: this.divn(num.words[0]),\\n          mod: null\\n        };\\n      }\\n\\n      if (mode === 'mod') {\\n        return {\\n          div: null,\\n          mod: new BN(this.modn(num.words[0]))\\n        };\\n      }\\n\\n      return {\\n        div: this.divn(num.words[0]),\\n        mod: new BN(this.modn(num.words[0]))\\n      };\\n    }\\n\\n    return this._wordDiv(num, mode);\\n  };\\n\\n  // Find `this` / `num`\\n  BN.prototype.div = function div (num) {\\n    return this.divmod(num, 'div', false).div;\\n  };\\n\\n  // Find `this` % `num`\\n  BN.prototype.mod = function mod (num) {\\n    return this.divmod(num, 'mod', false).mod;\\n  };\\n\\n  BN.prototype.umod = function umod (num) {\\n    return this.divmod(num, 'mod', true).mod;\\n  };\\n\\n  // Find Round(`this` / `num`)\\n  BN.prototype.divRound = function divRound (num) {\\n    var dm = this.divmod(num);\\n\\n    // Fast case - exact division\\n    if (dm.mod.isZero()) return dm.div;\\n\\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\\n\\n    var half = num.ushrn(1);\\n    var r2 = num.andln(1);\\n    var cmp = mod.cmp(half);\\n\\n    // Round down\\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\\n\\n    // Round up\\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\\n  };\\n\\n  BN.prototype.modn = function modn (num) {\\n    assert(num <= 0x3ffffff);\\n    var p = (1 << 26) % num;\\n\\n    var acc = 0;\\n    for (var i = this.length - 1; i >= 0; i--) {\\n      acc = (p * acc + (this.words[i] | 0)) % num;\\n    }\\n\\n    return acc;\\n  };\\n\\n  // In-place division by number\\n  BN.prototype.idivn = function idivn (num) {\\n    assert(num <= 0x3ffffff);\\n\\n    var carry = 0;\\n    for (var i = this.length - 1; i >= 0; i--) {\\n      var w = (this.words[i] | 0) + carry * 0x4000000;\\n      this.words[i] = (w / num) | 0;\\n      carry = w % num;\\n    }\\n\\n    return this.strip();\\n  };\\n\\n  BN.prototype.divn = function divn (num) {\\n    return this.clone().idivn(num);\\n  };\\n\\n  BN.prototype.egcd = function egcd (p) {\\n    assert(p.negative === 0);\\n    assert(!p.isZero());\\n\\n    var x = this;\\n    var y = p.clone();\\n\\n    if (x.negative !== 0) {\\n      x = x.umod(p);\\n    } else {\\n      x = x.clone();\\n    }\\n\\n    // A * x + B * y = x\\n    var A = new BN(1);\\n    var B = new BN(0);\\n\\n    // C * x + D * y = y\\n    var C = new BN(0);\\n    var D = new BN(1);\\n\\n    var g = 0;\\n\\n    while (x.isEven() && y.isEven()) {\\n      x.iushrn(1);\\n      y.iushrn(1);\\n      ++g;\\n    }\\n\\n    var yp = y.clone();\\n    var xp = x.clone();\\n\\n    while (!x.isZero()) {\\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\\n      if (i > 0) {\\n        x.iushrn(i);\\n        while (i-- > 0) {\\n          if (A.isOdd() || B.isOdd()) {\\n            A.iadd(yp);\\n            B.isub(xp);\\n          }\\n\\n          A.iushrn(1);\\n          B.iushrn(1);\\n        }\\n      }\\n\\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\\n      if (j > 0) {\\n        y.iushrn(j);\\n        while (j-- > 0) {\\n          if (C.isOdd() || D.isOdd()) {\\n            C.iadd(yp);\\n            D.isub(xp);\\n          }\\n\\n          C.iushrn(1);\\n          D.iushrn(1);\\n        }\\n      }\\n\\n      if (x.cmp(y) >= 0) {\\n        x.isub(y);\\n        A.isub(C);\\n        B.isub(D);\\n      } else {\\n        y.isub(x);\\n        C.isub(A);\\n        D.isub(B);\\n      }\\n    }\\n\\n    return {\\n      a: C,\\n      b: D,\\n      gcd: y.iushln(g)\\n    };\\n  };\\n\\n  // This is reduced incarnation of the binary EEA\\n  // above, designated to invert members of the\\n  // _prime_ fields F(p) at a maximal speed\\n  BN.prototype._invmp = function _invmp (p) {\\n    assert(p.negative === 0);\\n    assert(!p.isZero());\\n\\n    var a = this;\\n    var b = p.clone();\\n\\n    if (a.negative !== 0) {\\n      a = a.umod(p);\\n    } else {\\n      a = a.clone();\\n    }\\n\\n    var x1 = new BN(1);\\n    var x2 = new BN(0);\\n\\n    var delta = b.clone();\\n\\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\\n      if (i > 0) {\\n        a.iushrn(i);\\n        while (i-- > 0) {\\n          if (x1.isOdd()) {\\n            x1.iadd(delta);\\n          }\\n\\n          x1.iushrn(1);\\n        }\\n      }\\n\\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\\n      if (j > 0) {\\n        b.iushrn(j);\\n        while (j-- > 0) {\\n          if (x2.isOdd()) {\\n            x2.iadd(delta);\\n          }\\n\\n          x2.iushrn(1);\\n        }\\n      }\\n\\n      if (a.cmp(b) >= 0) {\\n        a.isub(b);\\n        x1.isub(x2);\\n      } else {\\n        b.isub(a);\\n        x2.isub(x1);\\n      }\\n    }\\n\\n    var res;\\n    if (a.cmpn(1) === 0) {\\n      res = x1;\\n    } else {\\n      res = x2;\\n    }\\n\\n    if (res.cmpn(0) < 0) {\\n      res.iadd(p);\\n    }\\n\\n    return res;\\n  };\\n\\n  BN.prototype.gcd = function gcd (num) {\\n    if (this.isZero()) return num.abs();\\n    if (num.isZero()) return this.abs();\\n\\n    var a = this.clone();\\n    var b = num.clone();\\n    a.negative = 0;\\n    b.negative = 0;\\n\\n    // Remove common factor of two\\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\\n      a.iushrn(1);\\n      b.iushrn(1);\\n    }\\n\\n    do {\\n      while (a.isEven()) {\\n        a.iushrn(1);\\n      }\\n      while (b.isEven()) {\\n        b.iushrn(1);\\n      }\\n\\n      var r = a.cmp(b);\\n      if (r < 0) {\\n        // Swap `a` and `b` to make `a` always bigger than `b`\\n        var t = a;\\n        a = b;\\n        b = t;\\n      } else if (r === 0 || b.cmpn(1) === 0) {\\n        break;\\n      }\\n\\n      a.isub(b);\\n    } while (true);\\n\\n    return b.iushln(shift);\\n  };\\n\\n  // Invert number in the field F(num)\\n  BN.prototype.invm = function invm (num) {\\n    return this.egcd(num).a.umod(num);\\n  };\\n\\n  BN.prototype.isEven = function isEven () {\\n    return (this.words[0] & 1) === 0;\\n  };\\n\\n  BN.prototype.isOdd = function isOdd () {\\n    return (this.words[0] & 1) === 1;\\n  };\\n\\n  // And first word and num\\n  BN.prototype.andln = function andln (num) {\\n    return this.words[0] & num;\\n  };\\n\\n  // Increment at the bit position in-line\\n  BN.prototype.bincn = function bincn (bit) {\\n    assert(typeof bit === 'number');\\n    var r = bit % 26;\\n    var s = (bit - r) / 26;\\n    var q = 1 << r;\\n\\n    // Fast case: bit is much higher than all existing words\\n    if (this.length <= s) {\\n      this._expand(s + 1);\\n      this.words[s] |= q;\\n      return this;\\n    }\\n\\n    // Add bit and propagate, if needed\\n    var carry = q;\\n    for (var i = s; carry !== 0 && i < this.length; i++) {\\n      var w = this.words[i] | 0;\\n      w += carry;\\n      carry = w >>> 26;\\n      w &= 0x3ffffff;\\n      this.words[i] = w;\\n    }\\n    if (carry !== 0) {\\n      this.words[i] = carry;\\n      this.length++;\\n    }\\n    return this;\\n  };\\n\\n  BN.prototype.isZero = function isZero () {\\n    return this.length === 1 && this.words[0] === 0;\\n  };\\n\\n  BN.prototype.cmpn = function cmpn (num) {\\n    var negative = num < 0;\\n\\n    if (this.negative !== 0 && !negative) return -1;\\n    if (this.negative === 0 && negative) return 1;\\n\\n    this.strip();\\n\\n    var res;\\n    if (this.length > 1) {\\n      res = 1;\\n    } else {\\n      if (negative) {\\n        num = -num;\\n      }\\n\\n      assert(num <= 0x3ffffff, 'Number is too big');\\n\\n      var w = this.words[0] | 0;\\n      res = w === num ? 0 : w < num ? -1 : 1;\\n    }\\n    if (this.negative !== 0) return -res | 0;\\n    return res;\\n  };\\n\\n  // Compare two numbers and return:\\n  // 1 - if `this` > `num`\\n  // 0 - if `this` == `num`\\n  // -1 - if `this` < `num`\\n  BN.prototype.cmp = function cmp (num) {\\n    if (this.negative !== 0 && num.negative === 0) return -1;\\n    if (this.negative === 0 && num.negative !== 0) return 1;\\n\\n    var res = this.ucmp(num);\\n    if (this.negative !== 0) return -res | 0;\\n    return res;\\n  };\\n\\n  // Unsigned comparison\\n  BN.prototype.ucmp = function ucmp (num) {\\n    // At this point both numbers have the same sign\\n    if (this.length > num.length) return 1;\\n    if (this.length < num.length) return -1;\\n\\n    var res = 0;\\n    for (var i = this.length - 1; i >= 0; i--) {\\n      var a = this.words[i] | 0;\\n      var b = num.words[i] | 0;\\n\\n      if (a === b) continue;\\n      if (a < b) {\\n        res = -1;\\n      } else if (a > b) {\\n        res = 1;\\n      }\\n      break;\\n    }\\n    return res;\\n  };\\n\\n  BN.prototype.gtn = function gtn (num) {\\n    return this.cmpn(num) === 1;\\n  };\\n\\n  BN.prototype.gt = function gt (num) {\\n    return this.cmp(num) === 1;\\n  };\\n\\n  BN.prototype.gten = function gten (num) {\\n    return this.cmpn(num) >= 0;\\n  };\\n\\n  BN.prototype.gte = function gte (num) {\\n    return this.cmp(num) >= 0;\\n  };\\n\\n  BN.prototype.ltn = function ltn (num) {\\n    return this.cmpn(num) === -1;\\n  };\\n\\n  BN.prototype.lt = function lt (num) {\\n    return this.cmp(num) === -1;\\n  };\\n\\n  BN.prototype.lten = function lten (num) {\\n    return this.cmpn(num) <= 0;\\n  };\\n\\n  BN.prototype.lte = function lte (num) {\\n    return this.cmp(num) <= 0;\\n  };\\n\\n  BN.prototype.eqn = function eqn (num) {\\n    return this.cmpn(num) === 0;\\n  };\\n\\n  BN.prototype.eq = function eq (num) {\\n    return this.cmp(num) === 0;\\n  };\\n\\n  //\\n  // A reduce context, could be using montgomery or something better, depending\\n  // on the `m` itself.\\n  //\\n  BN.red = function red (num) {\\n    return new Red(num);\\n  };\\n\\n  BN.prototype.toRed = function toRed (ctx) {\\n    assert(!this.red, 'Already a number in reduction context');\\n    assert(this.negative === 0, 'red works only with positives');\\n    return ctx.convertTo(this)._forceRed(ctx);\\n  };\\n\\n  BN.prototype.fromRed = function fromRed () {\\n    assert(this.red, 'fromRed works only with numbers in reduction context');\\n    return this.red.convertFrom(this);\\n  };\\n\\n  BN.prototype._forceRed = function _forceRed (ctx) {\\n    this.red = ctx;\\n    return this;\\n  };\\n\\n  BN.prototype.forceRed = function forceRed (ctx) {\\n    assert(!this.red, 'Already a number in reduction context');\\n    return this._forceRed(ctx);\\n  };\\n\\n  BN.prototype.redAdd = function redAdd (num) {\\n    assert(this.red, 'redAdd works only with red numbers');\\n    return this.red.add(this, num);\\n  };\\n\\n  BN.prototype.redIAdd = function redIAdd (num) {\\n    assert(this.red, 'redIAdd works only with red numbers');\\n    return this.red.iadd(this, num);\\n  };\\n\\n  BN.prototype.redSub = function redSub (num) {\\n    assert(this.red, 'redSub works only with red numbers');\\n    return this.red.sub(this, num);\\n  };\\n\\n  BN.prototype.redISub = function redISub (num) {\\n    assert(this.red, 'redISub works only with red numbers');\\n    return this.red.isub(this, num);\\n  };\\n\\n  BN.prototype.redShl = function redShl (num) {\\n    assert(this.red, 'redShl works only with red numbers');\\n    return this.red.shl(this, num);\\n  };\\n\\n  BN.prototype.redMul = function redMul (num) {\\n    assert(this.red, 'redMul works only with red numbers');\\n    this.red._verify2(this, num);\\n    return this.red.mul(this, num);\\n  };\\n\\n  BN.prototype.redIMul = function redIMul (num) {\\n    assert(this.red, 'redMul works only with red numbers');\\n    this.red._verify2(this, num);\\n    return this.red.imul(this, num);\\n  };\\n\\n  BN.prototype.redSqr = function redSqr () {\\n    assert(this.red, 'redSqr works only with red numbers');\\n    this.red._verify1(this);\\n    return this.red.sqr(this);\\n  };\\n\\n  BN.prototype.redISqr = function redISqr () {\\n    assert(this.red, 'redISqr works only with red numbers');\\n    this.red._verify1(this);\\n    return this.red.isqr(this);\\n  };\\n\\n  // Square root over p\\n  BN.prototype.redSqrt = function redSqrt () {\\n    assert(this.red, 'redSqrt works only with red numbers');\\n    this.red._verify1(this);\\n    return this.red.sqrt(this);\\n  };\\n\\n  BN.prototype.redInvm = function redInvm () {\\n    assert(this.red, 'redInvm works only with red numbers');\\n    this.red._verify1(this);\\n    return this.red.invm(this);\\n  };\\n\\n  // Return negative clone of `this` % `red modulo`\\n  BN.prototype.redNeg = function redNeg () {\\n    assert(this.red, 'redNeg works only with red numbers');\\n    this.red._verify1(this);\\n    return this.red.neg(this);\\n  };\\n\\n  BN.prototype.redPow = function redPow (num) {\\n    assert(this.red && !num.red, 'redPow(normalNum)');\\n    this.red._verify1(this);\\n    return this.red.pow(this, num);\\n  };\\n\\n  // Prime numbers with efficient reduction\\n  var primes = {\\n    k256: null,\\n    p224: null,\\n    p192: null,\\n    p25519: null\\n  };\\n\\n  // Pseudo-Mersenne prime\\n  function MPrime (name, p) {\\n    // P = 2 ^ N - K\\n    this.name = name;\\n    this.p = new BN(p, 16);\\n    this.n = this.p.bitLength();\\n    this.k = new BN(1).iushln(this.n).isub(this.p);\\n\\n    this.tmp = this._tmp();\\n  }\\n\\n  MPrime.prototype._tmp = function _tmp () {\\n    var tmp = new BN(null);\\n    tmp.words = new Array(Math.ceil(this.n / 13));\\n    return tmp;\\n  };\\n\\n  MPrime.prototype.ireduce = function ireduce (num) {\\n    // Assumes that `num` is less than `P^2`\\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\\n    var r = num;\\n    var rlen;\\n\\n    do {\\n      this.split(r, this.tmp);\\n      r = this.imulK(r);\\n      r = r.iadd(this.tmp);\\n      rlen = r.bitLength();\\n    } while (rlen > this.n);\\n\\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\\n    if (cmp === 0) {\\n      r.words[0] = 0;\\n      r.length = 1;\\n    } else if (cmp > 0) {\\n      r.isub(this.p);\\n    } else {\\n      if (r.strip !== undefined) {\\n        // r is BN v4 instance\\n        r.strip();\\n      } else {\\n        // r is BN v5 instance\\n        r._strip();\\n      }\\n    }\\n\\n    return r;\\n  };\\n\\n  MPrime.prototype.split = function split (input, out) {\\n    input.iushrn(this.n, 0, out);\\n  };\\n\\n  MPrime.prototype.imulK = function imulK (num) {\\n    return num.imul(this.k);\\n  };\\n\\n  function K256 () {\\n    MPrime.call(\\n      this,\\n      'k256',\\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\\n  }\\n  inherits(K256, MPrime);\\n\\n  K256.prototype.split = function split (input, output) {\\n    // 256 = 9 * 26 + 22\\n    var mask = 0x3fffff;\\n\\n    var outLen = Math.min(input.length, 9);\\n    for (var i = 0; i < outLen; i++) {\\n      output.words[i] = input.words[i];\\n    }\\n    output.length = outLen;\\n\\n    if (input.length <= 9) {\\n      input.words[0] = 0;\\n      input.length = 1;\\n      return;\\n    }\\n\\n    // Shift by 9 limbs\\n    var prev = input.words[9];\\n    output.words[output.length++] = prev & mask;\\n\\n    for (i = 10; i < input.length; i++) {\\n      var next = input.words[i] | 0;\\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\\n      prev = next;\\n    }\\n    prev >>>= 22;\\n    input.words[i - 10] = prev;\\n    if (prev === 0 && input.length > 10) {\\n      input.length -= 10;\\n    } else {\\n      input.length -= 9;\\n    }\\n  };\\n\\n  K256.prototype.imulK = function imulK (num) {\\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\\n    num.words[num.length] = 0;\\n    num.words[num.length + 1] = 0;\\n    num.length += 2;\\n\\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\\n    var lo = 0;\\n    for (var i = 0; i < num.length; i++) {\\n      var w = num.words[i] | 0;\\n      lo += w * 0x3d1;\\n      num.words[i] = lo & 0x3ffffff;\\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\\n    }\\n\\n    // Fast length reduction\\n    if (num.words[num.length - 1] === 0) {\\n      num.length--;\\n      if (num.words[num.length - 1] === 0) {\\n        num.length--;\\n      }\\n    }\\n    return num;\\n  };\\n\\n  function P224 () {\\n    MPrime.call(\\n      this,\\n      'p224',\\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\\n  }\\n  inherits(P224, MPrime);\\n\\n  function P192 () {\\n    MPrime.call(\\n      this,\\n      'p192',\\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\\n  }\\n  inherits(P192, MPrime);\\n\\n  function P25519 () {\\n    // 2 ^ 255 - 19\\n    MPrime.call(\\n      this,\\n      '25519',\\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\\n  }\\n  inherits(P25519, MPrime);\\n\\n  P25519.prototype.imulK = function imulK (num) {\\n    // K = 0x13\\n    var carry = 0;\\n    for (var i = 0; i < num.length; i++) {\\n      var hi = (num.words[i] | 0) * 0x13 + carry;\\n      var lo = hi & 0x3ffffff;\\n      hi >>>= 26;\\n\\n      num.words[i] = lo;\\n      carry = hi;\\n    }\\n    if (carry !== 0) {\\n      num.words[num.length++] = carry;\\n    }\\n    return num;\\n  };\\n\\n  // Exported mostly for testing purposes, use plain name instead\\n  BN._prime = function prime (name) {\\n    // Cached version of prime\\n    if (primes[name]) return primes[name];\\n\\n    var prime;\\n    if (name === 'k256') {\\n      prime = new K256();\\n    } else if (name === 'p224') {\\n      prime = new P224();\\n    } else if (name === 'p192') {\\n      prime = new P192();\\n    } else if (name === 'p25519') {\\n      prime = new P25519();\\n    } else {\\n      throw new Error('Unknown prime ' + name);\\n    }\\n    primes[name] = prime;\\n\\n    return prime;\\n  };\\n\\n  //\\n  // Base reduction engine\\n  //\\n  function Red (m) {\\n    if (typeof m === 'string') {\\n      var prime = BN._prime(m);\\n      this.m = prime.p;\\n      this.prime = prime;\\n    } else {\\n      assert(m.gtn(1), 'modulus must be greater than 1');\\n      this.m = m;\\n      this.prime = null;\\n    }\\n  }\\n\\n  Red.prototype._verify1 = function _verify1 (a) {\\n    assert(a.negative === 0, 'red works only with positives');\\n    assert(a.red, 'red works only with red numbers');\\n  };\\n\\n  Red.prototype._verify2 = function _verify2 (a, b) {\\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\\n    assert(a.red && a.red === b.red,\\n      'red works only with red numbers');\\n  };\\n\\n  Red.prototype.imod = function imod (a) {\\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\\n    return a.umod(this.m)._forceRed(this);\\n  };\\n\\n  Red.prototype.neg = function neg (a) {\\n    if (a.isZero()) {\\n      return a.clone();\\n    }\\n\\n    return this.m.sub(a)._forceRed(this);\\n  };\\n\\n  Red.prototype.add = function add (a, b) {\\n    this._verify2(a, b);\\n\\n    var res = a.add(b);\\n    if (res.cmp(this.m) >= 0) {\\n      res.isub(this.m);\\n    }\\n    return res._forceRed(this);\\n  };\\n\\n  Red.prototype.iadd = function iadd (a, b) {\\n    this._verify2(a, b);\\n\\n    var res = a.iadd(b);\\n    if (res.cmp(this.m) >= 0) {\\n      res.isub(this.m);\\n    }\\n    return res;\\n  };\\n\\n  Red.prototype.sub = function sub (a, b) {\\n    this._verify2(a, b);\\n\\n    var res = a.sub(b);\\n    if (res.cmpn(0) < 0) {\\n      res.iadd(this.m);\\n    }\\n    return res._forceRed(this);\\n  };\\n\\n  Red.prototype.isub = function isub (a, b) {\\n    this._verify2(a, b);\\n\\n    var res = a.isub(b);\\n    if (res.cmpn(0) < 0) {\\n      res.iadd(this.m);\\n    }\\n    return res;\\n  };\\n\\n  Red.prototype.shl = function shl (a, num) {\\n    this._verify1(a);\\n    return this.imod(a.ushln(num));\\n  };\\n\\n  Red.prototype.imul = function imul (a, b) {\\n    this._verify2(a, b);\\n    return this.imod(a.imul(b));\\n  };\\n\\n  Red.prototype.mul = function mul (a, b) {\\n    this._verify2(a, b);\\n    return this.imod(a.mul(b));\\n  };\\n\\n  Red.prototype.isqr = function isqr (a) {\\n    return this.imul(a, a.clone());\\n  };\\n\\n  Red.prototype.sqr = function sqr (a) {\\n    return this.mul(a, a);\\n  };\\n\\n  Red.prototype.sqrt = function sqrt (a) {\\n    if (a.isZero()) return a.clone();\\n\\n    var mod3 = this.m.andln(3);\\n    assert(mod3 % 2 === 1);\\n\\n    // Fast case\\n    if (mod3 === 3) {\\n      var pow = this.m.add(new BN(1)).iushrn(2);\\n      return this.pow(a, pow);\\n    }\\n\\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\\n    //\\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\\n    var q = this.m.subn(1);\\n    var s = 0;\\n    while (!q.isZero() && q.andln(1) === 0) {\\n      s++;\\n      q.iushrn(1);\\n    }\\n    assert(!q.isZero());\\n\\n    var one = new BN(1).toRed(this);\\n    var nOne = one.redNeg();\\n\\n    // Find quadratic non-residue\\n    // NOTE: Max is such because of generalized Riemann hypothesis.\\n    var lpow = this.m.subn(1).iushrn(1);\\n    var z = this.m.bitLength();\\n    z = new BN(2 * z * z).toRed(this);\\n\\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\\n      z.redIAdd(nOne);\\n    }\\n\\n    var c = this.pow(z, q);\\n    var r = this.pow(a, q.addn(1).iushrn(1));\\n    var t = this.pow(a, q);\\n    var m = s;\\n    while (t.cmp(one) !== 0) {\\n      var tmp = t;\\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\\n        tmp = tmp.redSqr();\\n      }\\n      assert(i < m);\\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\\n\\n      r = r.redMul(b);\\n      c = b.redSqr();\\n      t = t.redMul(c);\\n      m = i;\\n    }\\n\\n    return r;\\n  };\\n\\n  Red.prototype.invm = function invm (a) {\\n    var inv = a._invmp(this.m);\\n    if (inv.negative !== 0) {\\n      inv.negative = 0;\\n      return this.imod(inv).redNeg();\\n    } else {\\n      return this.imod(inv);\\n    }\\n  };\\n\\n  Red.prototype.pow = function pow (a, num) {\\n    if (num.isZero()) return new BN(1).toRed(this);\\n    if (num.cmpn(1) === 0) return a.clone();\\n\\n    var windowSize = 4;\\n    var wnd = new Array(1 << windowSize);\\n    wnd[0] = new BN(1).toRed(this);\\n    wnd[1] = a;\\n    for (var i = 2; i < wnd.length; i++) {\\n      wnd[i] = this.mul(wnd[i - 1], a);\\n    }\\n\\n    var res = wnd[0];\\n    var current = 0;\\n    var currentLen = 0;\\n    var start = num.bitLength() % 26;\\n    if (start === 0) {\\n      start = 26;\\n    }\\n\\n    for (i = num.length - 1; i >= 0; i--) {\\n      var word = num.words[i];\\n      for (var j = start - 1; j >= 0; j--) {\\n        var bit = (word >> j) & 1;\\n        if (res !== wnd[0]) {\\n          res = this.sqr(res);\\n        }\\n\\n        if (bit === 0 && current === 0) {\\n          currentLen = 0;\\n          continue;\\n        }\\n\\n        current <<= 1;\\n        current |= bit;\\n        currentLen++;\\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\\n\\n        res = this.mul(res, wnd[current]);\\n        currentLen = 0;\\n        current = 0;\\n      }\\n      start = 26;\\n    }\\n\\n    return res;\\n  };\\n\\n  Red.prototype.convertTo = function convertTo (num) {\\n    var r = num.umod(this.m);\\n\\n    return r === num ? r.clone() : r;\\n  };\\n\\n  Red.prototype.convertFrom = function convertFrom (num) {\\n    var res = num.clone();\\n    res.red = null;\\n    return res;\\n  };\\n\\n  //\\n  // Montgomery method engine\\n  //\\n\\n  BN.mont = function mont (num) {\\n    return new Mont(num);\\n  };\\n\\n  function Mont (m) {\\n    Red.call(this, m);\\n\\n    this.shift = this.m.bitLength();\\n    if (this.shift % 26 !== 0) {\\n      this.shift += 26 - (this.shift % 26);\\n    }\\n\\n    this.r = new BN(1).iushln(this.shift);\\n    this.r2 = this.imod(this.r.sqr());\\n    this.rinv = this.r._invmp(this.m);\\n\\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\\n    this.minv = this.minv.umod(this.r);\\n    this.minv = this.r.sub(this.minv);\\n  }\\n  inherits(Mont, Red);\\n\\n  Mont.prototype.convertTo = function convertTo (num) {\\n    return this.imod(num.ushln(this.shift));\\n  };\\n\\n  Mont.prototype.convertFrom = function convertFrom (num) {\\n    var r = this.imod(num.mul(this.rinv));\\n    r.red = null;\\n    return r;\\n  };\\n\\n  Mont.prototype.imul = function imul (a, b) {\\n    if (a.isZero() || b.isZero()) {\\n      a.words[0] = 0;\\n      a.length = 1;\\n      return a;\\n    }\\n\\n    var t = a.imul(b);\\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\\n    var u = t.isub(c).iushrn(this.shift);\\n    var res = u;\\n\\n    if (u.cmp(this.m) >= 0) {\\n      res = u.isub(this.m);\\n    } else if (u.cmpn(0) < 0) {\\n      res = u.iadd(this.m);\\n    }\\n\\n    return res._forceRed(this);\\n  };\\n\\n  Mont.prototype.mul = function mul (a, b) {\\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\\n\\n    var t = a.mul(b);\\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\\n    var u = t.isub(c).iushrn(this.shift);\\n    var res = u;\\n    if (u.cmp(this.m) >= 0) {\\n      res = u.isub(this.m);\\n    } else if (u.cmpn(0) < 0) {\\n      res = u.iadd(this.m);\\n    }\\n\\n    return res._forceRed(this);\\n  };\\n\\n  Mont.prototype.invm = function invm (a) {\\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\\n    return res._forceRed(this);\\n  };\\n})(typeof module === 'undefined' || module, this);\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"assert\",\"val\",\"msg\",\"Error\",\"inherits\",\"ctor\",\"superCtor\",\"super_\",\"TempCtor\",\"prototype\",\"constructor\",\"BN\",\"number\",\"base\",\"endian\",\"isBN\",\"negative\",\"words\",\"length\",\"red\",\"_init\",\"parseHex4Bits\",\"string\",\"index\",\"c\",\"charCodeAt\",\"parseHexByte\",\"lowerBound\",\"r\",\"parseBase\",\"str\",\"start\",\"end\",\"mul\",\"len\",\"Math\",\"min\",\"i\",\"smallMulTo\",\"self\",\"num\",\"out\",\"a\",\"b\",\"carry\",\"k\",\"ncarry\",\"rword\",\"maxJ\",\"j\",\"max\",\"strip\",\"FFTM\",\"x\",\"y\",\"MPrime\",\"name\",\"p\",\"n\",\"bitLength\",\"iushln\",\"isub\",\"tmp\",\"_tmp\",\"K256\",\"call\",\"P224\",\"P192\",\"P25519\",\"Red\",\"m\",\"prime\",\"_prime\",\"gtn\",\"Mont\",\"shift\",\"r2\",\"imod\",\"sqr\",\"rinv\",\"_invmp\",\"minv\",\"isubn\",\"div\",\"umod\",\"sub\",\"wordSize\",\"Buffer\",\"window\",\"e\",\"BN.isBN\",\"Array\",\"isArray\",\"BN.max\",\"left\",\"right\",\"cmp\",\"BN.min\",\"BN.prototype._init\",\"_initNumber\",\"_initArray\",\"toString\",\"replace\",\"_parseHex\",\"_parseBase\",\"toArray\",\"BN.prototype._initNumber\",\"BN.prototype._initArray\",\"ceil\",\"off\",\"w\",\"BN.prototype._parseHex\",\"BN.prototype._parseBase\",\"limbLen\",\"limbPow\",\"total\",\"mod\",\"word\",\"imuln\",\"_iaddn\",\"pow\",\"copy\",\"BN.prototype.copy\",\"dest\",\"clone\",\"BN.prototype.clone\",\"_expand\",\"BN.prototype._expand\",\"size\",\"BN.prototype.strip\",\"_normSign\",\"BN.prototype._normSign\",\"inspect\",\"BN.prototype.inspect\",\"zeros\",\"groupSizes\",\"groupBases\",\"BN.prototype.toString\",\"padding\",\"groupSize\",\"groupBase\",\"isZero\",\"modn\",\"idivn\",\"toNumber\",\"BN.prototype.toNumber\",\"ret\",\"toJSON\",\"BN.prototype.toJSON\",\"toBuffer\",\"BN.prototype.toBuffer\",\"toArrayLike\",\"BN.prototype.toArray\",\"BN.prototype.toArrayLike\",\"ArrayType\",\"byteLength\",\"reqLength\",\"littleEndian\",\"res\",\"q\",\"andln\",\"iushrn\",\"_countBits\",\"clz32\",\"BN.prototype._countBits\",\"t\",\"_zeroBits\",\"BN.prototype._zeroBits\",\"BN.prototype.bitLength\",\"hi\",\"zeroBits\",\"BN.prototype.zeroBits\",\"BN.prototype.byteLength\",\"toTwos\",\"BN.prototype.toTwos\",\"width\",\"abs\",\"inotn\",\"iaddn\",\"fromTwos\",\"BN.prototype.fromTwos\",\"testn\",\"notn\",\"ineg\",\"isNeg\",\"BN.prototype.isNeg\",\"neg\",\"BN.prototype.neg\",\"BN.prototype.ineg\",\"iuor\",\"BN.prototype.iuor\",\"ior\",\"BN.prototype.ior\",\"or\",\"BN.prototype.or\",\"uor\",\"BN.prototype.uor\",\"iuand\",\"BN.prototype.iuand\",\"iand\",\"BN.prototype.iand\",\"and\",\"BN.prototype.and\",\"uand\",\"BN.prototype.uand\",\"iuxor\",\"BN.prototype.iuxor\",\"ixor\",\"BN.prototype.ixor\",\"xor\",\"BN.prototype.xor\",\"uxor\",\"BN.prototype.uxor\",\"BN.prototype.inotn\",\"bytesNeeded\",\"bitsLeft\",\"BN.prototype.notn\",\"setn\",\"BN.prototype.setn\",\"bit\",\"wbit\",\"iadd\",\"BN.prototype.iadd\",\"add\",\"BN.prototype.add\",\"BN.prototype.isub\",\"BN.prototype.sub\",\"comb10MulTo\",\"o\",\"a0\",\"al0\",\"ah0\",\"a1\",\"al1\",\"ah1\",\"a2\",\"al2\",\"ah2\",\"a3\",\"al3\",\"ah3\",\"a4\",\"al4\",\"ah4\",\"a5\",\"al5\",\"ah5\",\"a6\",\"al6\",\"ah6\",\"a7\",\"al7\",\"ah7\",\"a8\",\"al8\",\"ah8\",\"a9\",\"al9\",\"ah9\",\"b0\",\"bl0\",\"bh0\",\"b1\",\"bl1\",\"bh1\",\"b2\",\"bl2\",\"bh2\",\"b3\",\"bl3\",\"bh3\",\"b4\",\"bl4\",\"bh4\",\"b5\",\"bl5\",\"bh5\",\"b6\",\"bl6\",\"bh6\",\"b7\",\"bl7\",\"bh7\",\"b8\",\"bl8\",\"bh8\",\"b9\",\"bl9\",\"bh9\",\"lo\",\"imul\",\"mid\",\"w0\",\"w1\",\"w2\",\"w3\",\"w4\",\"w5\",\"w6\",\"w7\",\"w8\",\"w9\",\"w10\",\"w11\",\"w12\",\"w13\",\"w14\",\"w15\",\"w16\",\"w17\",\"w18\",\"mulTo\",\"BN.prototype.mulTo\",\"hncarry\",\"mulp\",\"fftm\",\"makeRBT\",\"FFTM.prototype.makeRBT\",\"N\",\"l\",\"revBin\",\"FFTM.prototype.revBin\",\"rb\",\"permute\",\"FFTM.prototype.permute\",\"rbt\",\"rws\",\"iws\",\"rtws\",\"itws\",\"transform\",\"FFTM.prototype.transform\",\"s\",\"rtwdf\",\"cos\",\"PI\",\"itwdf\",\"sin\",\"rtwdf_\",\"itwdf_\",\"re\",\"ie\",\"ro\",\"io\",\"rx\",\"guessLen13b\",\"FFTM.prototype.guessLen13b\",\"odd\",\"conjugate\",\"FFTM.prototype.conjugate\",\"normalize13b\",\"FFTM.prototype.normalize13b\",\"ws\",\"round\",\"convert13b\",\"FFTM.prototype.convert13b\",\"stub\",\"FFTM.prototype.stub\",\"ph\",\"FFTM.prototype.mulp\",\"_\",\"rwst\",\"iwst\",\"nrws\",\"nrwst\",\"niwst\",\"rmws\",\"BN.prototype.mul\",\"mulf\",\"BN.prototype.mulf\",\"BN.prototype.imul\",\"BN.prototype.imuln\",\"muln\",\"BN.prototype.muln\",\"BN.prototype.sqr\",\"isqr\",\"BN.prototype.isqr\",\"BN.prototype.pow\",\"BN.prototype.iushln\",\"bits\",\"carryMask\",\"newCarry\",\"ishln\",\"BN.prototype.ishln\",\"BN.prototype.iushrn\",\"hint\",\"extended\",\"mask\",\"h\",\"ishrn\",\"BN.prototype.ishrn\",\"shln\",\"BN.prototype.shln\",\"ushln\",\"BN.prototype.ushln\",\"shrn\",\"BN.prototype.shrn\",\"ushrn\",\"BN.prototype.ushrn\",\"BN.prototype.testn\",\"imaskn\",\"BN.prototype.imaskn\",\"maskn\",\"BN.prototype.maskn\",\"BN.prototype.iaddn\",\"BN.prototype._iaddn\",\"BN.prototype.isubn\",\"addn\",\"BN.prototype.addn\",\"subn\",\"BN.prototype.subn\",\"iabs\",\"BN.prototype.iabs\",\"BN.prototype.abs\",\"_ishlnsubmul\",\"BN.prototype._ishlnsubmul\",\"_wordDiv\",\"BN.prototype._wordDiv\",\"mode\",\"bhi\",\"bhiBits\",\"diff\",\"qj\",\"divmod\",\"BN.prototype.divmod\",\"positive\",\"divn\",\"BN.prototype.div\",\"BN.prototype.mod\",\"BN.prototype.umod\",\"divRound\",\"BN.prototype.divRound\",\"dm\",\"half\",\"BN.prototype.modn\",\"acc\",\"BN.prototype.idivn\",\"BN.prototype.divn\",\"egcd\",\"BN.prototype.egcd\",\"A\",\"B\",\"C\",\"D\",\"g\",\"isEven\",\"yp\",\"xp\",\"im\",\"isOdd\",\"jm\",\"gcd\",\"BN.prototype._invmp\",\"x1\",\"x2\",\"delta\",\"cmpn\",\"BN.prototype.gcd\",\"invm\",\"BN.prototype.invm\",\"BN.prototype.isEven\",\"BN.prototype.isOdd\",\"BN.prototype.andln\",\"bincn\",\"BN.prototype.bincn\",\"BN.prototype.isZero\",\"BN.prototype.cmpn\",\"BN.prototype.cmp\",\"ucmp\",\"BN.prototype.ucmp\",\"BN.prototype.gtn\",\"gt\",\"BN.prototype.gt\",\"gten\",\"BN.prototype.gten\",\"gte\",\"BN.prototype.gte\",\"ltn\",\"BN.prototype.ltn\",\"lt\",\"BN.prototype.lt\",\"lten\",\"BN.prototype.lten\",\"lte\",\"BN.prototype.lte\",\"eqn\",\"BN.prototype.eqn\",\"eq\",\"BN.prototype.eq\",\"BN.red\",\"toRed\",\"BN.prototype.toRed\",\"ctx\",\"convertTo\",\"_forceRed\",\"fromRed\",\"BN.prototype.fromRed\",\"convertFrom\",\"BN.prototype._forceRed\",\"forceRed\",\"BN.prototype.forceRed\",\"redAdd\",\"BN.prototype.redAdd\",\"redIAdd\",\"BN.prototype.redIAdd\",\"redSub\",\"BN.prototype.redSub\",\"redISub\",\"BN.prototype.redISub\",\"redShl\",\"BN.prototype.redShl\",\"shl\",\"redMul\",\"BN.prototype.redMul\",\"_verify2\",\"redIMul\",\"BN.prototype.redIMul\",\"redSqr\",\"BN.prototype.redSqr\",\"_verify1\",\"redISqr\",\"BN.prototype.redISqr\",\"redSqrt\",\"BN.prototype.redSqrt\",\"sqrt\",\"redInvm\",\"BN.prototype.redInvm\",\"redNeg\",\"BN.prototype.redNeg\",\"redPow\",\"BN.prototype.redPow\",\"primes\",\"k256\",\"p224\",\"p192\",\"p25519\",\"MPrime.prototype._tmp\",\"ireduce\",\"MPrime.prototype.ireduce\",\"split\",\"imulK\",\"rlen\",\"undefined\",\"_strip\",\"MPrime.prototype.split\",\"input\",\"MPrime.prototype.imulK\",\"K256.prototype.split\",\"output\",\"outLen\",\"prev\",\"next\",\"K256.prototype.imulK\",\"P25519.prototype.imulK\",\"BN._prime\",\"Red.prototype._verify1\",\"Red.prototype._verify2\",\"Red.prototype.imod\",\"Red.prototype.neg\",\"Red.prototype.add\",\"Red.prototype.iadd\",\"Red.prototype.sub\",\"Red.prototype.isub\",\"Red.prototype.shl\",\"Red.prototype.imul\",\"Red.prototype.mul\",\"Red.prototype.isqr\",\"Red.prototype.sqr\",\"Red.prototype.sqrt\",\"mod3\",\"one\",\"nOne\",\"lpow\",\"z\",\"Red.prototype.invm\",\"inv\",\"Red.prototype.pow\",\"wnd\",\"current\",\"currentLen\",\"windowSize\",\"Red.prototype.convertTo\",\"Red.prototype.convertFrom\",\"mont\",\"BN.mont\",\"Mont.prototype.convertTo\",\"Mont.prototype.convertFrom\",\"Mont.prototype.imul\",\"u\",\"Mont.prototype.mul\",\"Mont.prototype.invm\"]\n}\n"]