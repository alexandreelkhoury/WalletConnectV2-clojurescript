["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@ethersproject/json-wallets/lib/inspect.js"],"~:js","shadow$provide.module$node_modules$$ethersproject$json_wallets$lib$inspect=function(global,require,module,exports){function isCrowdsaleWallet(json){var data=null;try{data=JSON.parse(json)}catch(error){return!1}return data.encseed&&data.ethaddr}function isKeystoreWallet(json){var data=null;try{data=JSON.parse(json)}catch(error){return!1}return data.version&&parseInt(data.version)===data.version&&3===parseInt(data.version)?!0:!1}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.getJsonWalletAddress=\nexports.isKeystoreWallet=exports.isCrowdsaleWallet=void 0;var address_1=require(\"module$node_modules$$ethersproject$address$lib$index\");exports.isCrowdsaleWallet=isCrowdsaleWallet;exports.isKeystoreWallet=isKeystoreWallet;exports.getJsonWalletAddress=function(json){if(isCrowdsaleWallet(json))try{return(0,address_1.getAddress)(JSON.parse(json).ethaddr)}catch(error){return null}if(isKeystoreWallet(json))try{return(0,address_1.getAddress)(JSON.parse(json).address)}catch(error){}return null}}","~:source","shadow$provide[\"module$node_modules$$ethersproject$json_wallets$lib$inspect\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getJsonWalletAddress = exports.isKeystoreWallet = exports.isCrowdsaleWallet = void 0;\nvar address_1 = require(\"@ethersproject/address\");\nfunction isCrowdsaleWallet(json) {\n    var data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    return (data.encseed && data.ethaddr);\n}\nexports.isCrowdsaleWallet = isCrowdsaleWallet;\nfunction isKeystoreWallet(json) {\n    var data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n        return false;\n    }\n    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n    return true;\n}\nexports.isKeystoreWallet = isKeystoreWallet;\n//export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\nfunction getJsonWalletAddress(json) {\n    if (isCrowdsaleWallet(json)) {\n        try {\n            return (0, address_1.getAddress)(JSON.parse(json).ethaddr);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    if (isKeystoreWallet(json)) {\n        try {\n            return (0, address_1.getAddress)(JSON.parse(json).address);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    return null;\n}\nexports.getJsonWalletAddress = getJsonWalletAddress;\n//# sourceMappingURL=inspect.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$$ethersproject$address$lib$index"]],"~:properties",["^5",["__esModule","isCrowdsaleWallet","value","isKeystoreWallet","getJsonWalletAddress"]],"~:compiled-at",1695040653719,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$ethersproject$json_wallets$lib$inspect.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,2DAAA,CAAgF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAKxHC,QAASA,kBAAiB,CAACC,IAAD,CAAO,CAC7B,IAAIC,KAAO,IACX,IAAI,CACAA,IAAA,CAAOC,IAAKC,CAAAA,KAAL,CAAWH,IAAX,CADP,CAGJ,MAAOI,KAAP,CAAc,CACV,MAAO,CAAA,CADG,CAGd,MAAQH,KAAKI,CAAAA,OAAb,EAAwBJ,IAAKK,CAAAA,OARA,CAWjCC,QAASA,iBAAgB,CAACP,IAAD,CAAO,CAC5B,IAAIC,KAAO,IACX,IAAI,CACAA,IAAA,CAAOC,IAAKC,CAAAA,KAAL,CAAWH,IAAX,CADP,CAGJ,MAAOI,KAAP,CAAc,CACV,MAAO,CAAA,CADG,CAGd,MAAKH,KAAKO,CAAAA,OAAV,EAAqBC,QAAA,CAASR,IAAKO,CAAAA,OAAd,CAArB,GAAgDP,IAAKO,CAAAA,OAArD,EAA2F,CAA3F,GAAgEC,QAAA,CAASR,IAAKO,CAAAA,OAAd,CAAhE,CAIO,CAAA,CAJP,CACW,CAAA,CATiB,CAdhCE,MAAOC,CAAAA,cAAP,CAAsBb,OAAtB,CAA+B,YAA/B,CAA6C,CAAEc,MAAO,CAAA,CAAT,CAA7C,CACAd,QAAQe,CAAAA,oBAAR;AAA+Bf,OAAQS,CAAAA,gBAAvC,CAA0DT,OAAQC,CAAAA,iBAAlE,CAAsF,IAAK,EAC3F,KAAIe,UAAYlB,OAAA,CAAQ,sDAAR,CAWhBE,QAAQC,CAAAA,iBAAR,CAA4BA,iBAe5BD,QAAQS,CAAAA,gBAAR,CAA2BA,gBAuB3BT,QAAQe,CAAAA,oBAAR,CAnBAA,QAA6B,CAACb,IAAD,CAAO,CAChC,GAAID,iBAAA,CAAkBC,IAAlB,CAAJ,CACI,GAAI,CACA,MAAO,GAAIc,SAAUC,CAAAA,UAAd,EAA0Bb,IAAKC,CAAAA,KAAL,CAAWH,IAAX,CAAiBM,CAAAA,OAA3C,CADP,CAGJ,MAAOF,KAAP,CAAc,CACV,MAAO,KADG,CAIlB,GAAIG,gBAAA,CAAiBP,IAAjB,CAAJ,CACI,GAAI,CACA,MAAO,GAAIc,SAAUC,CAAAA,UAAd,EAA0Bb,IAAKC,CAAAA,KAAL,CAAWH,IAAX,CAAiBgB,CAAAA,OAA3C,CADP,CAGJ,MAAOZ,KAAP,CAAc,EAIlB,MAAO,KAjByB,CAlCoF;\",\n\"sources\":[\"node_modules/@ethersproject/json-wallets/lib/inspect.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$ethersproject$json_wallets$lib$inspect\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.getJsonWalletAddress = exports.isKeystoreWallet = exports.isCrowdsaleWallet = void 0;\\nvar address_1 = require(\\\"@ethersproject/address\\\");\\nfunction isCrowdsaleWallet(json) {\\n    var data = null;\\n    try {\\n        data = JSON.parse(json);\\n    }\\n    catch (error) {\\n        return false;\\n    }\\n    return (data.encseed && data.ethaddr);\\n}\\nexports.isCrowdsaleWallet = isCrowdsaleWallet;\\nfunction isKeystoreWallet(json) {\\n    var data = null;\\n    try {\\n        data = JSON.parse(json);\\n    }\\n    catch (error) {\\n        return false;\\n    }\\n    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\\n        return false;\\n    }\\n    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\\n    return true;\\n}\\nexports.isKeystoreWallet = isKeystoreWallet;\\n//export function isJsonWallet(json: string): boolean {\\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\\n//}\\nfunction getJsonWalletAddress(json) {\\n    if (isCrowdsaleWallet(json)) {\\n        try {\\n            return (0, address_1.getAddress)(JSON.parse(json).ethaddr);\\n        }\\n        catch (error) {\\n            return null;\\n        }\\n    }\\n    if (isKeystoreWallet(json)) {\\n        try {\\n            return (0, address_1.getAddress)(JSON.parse(json).address);\\n        }\\n        catch (error) {\\n            return null;\\n        }\\n    }\\n    return null;\\n}\\nexports.getJsonWalletAddress = getJsonWalletAddress;\\n//# sourceMappingURL=inspect.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"isCrowdsaleWallet\",\"json\",\"data\",\"JSON\",\"parse\",\"error\",\"encseed\",\"ethaddr\",\"isKeystoreWallet\",\"version\",\"parseInt\",\"Object\",\"defineProperty\",\"value\",\"getJsonWalletAddress\",\"address_1\",\"getAddress\",\"address\"]\n}\n"]