["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/browserify-aes/modes/cfb1.js"],"~:js","shadow$provide[187]=function(S,A,V,q){var F=A(111).Buffer;q.encrypt=function(G,r,y){for(var e=r.length,u=F.allocUnsafe(e),p=-1;++p<e;){for(var n=p,l,h,k,t=G,B=r[p],E=y,H=-1,D=0;8>++H;){k=t._cipher.encryptBlock(t._prev);h=B&1<<7-H?128:0;l=k[0]^h;D+=(l&128)>>H%8;k=t;var C=t._prev;h=E?h:l;l=C.length;var I=-1,M=F.allocUnsafe(C.length);for(C=F.concat([C,F.from([h])]);++I<l;)M[I]=C[I]<<1|C[I+1]>>7;k._prev=M}u[n]=D}return u}}","~:source","shadow$provide[187] = function(global,require,module,exports) {\nvar Buffer = require('safe-buffer').Buffer\n\nfunction encryptByte (self, byteParam, decrypt) {\n  var pad\n  var i = -1\n  var len = 8\n  var out = 0\n  var bit, value\n  while (++i < len) {\n    pad = self._cipher.encryptBlock(self._prev)\n    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0\n    value = pad[0] ^ bit\n    out += ((value & 0x80) >> (i % 8))\n    self._prev = shiftIn(self._prev, decrypt ? bit : value)\n  }\n  return out\n}\n\nfunction shiftIn (buffer, value) {\n  var len = buffer.length\n  var i = -1\n  var out = Buffer.allocUnsafe(buffer.length)\n  buffer = Buffer.concat([buffer, Buffer.from([value])])\n\n  while (++i < len) {\n    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)\n  }\n\n  return out\n}\n\nexports.encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length\n  var out = Buffer.allocUnsafe(len)\n  var i = -1\n\n  while (++i < len) {\n    out[i] = encryptByte(self, chunk[i], decrypt)\n  }\n\n  return out\n}\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$safe_buffer$index"]],"~:properties",["^5",["encrypt","_prev"]],"~:compiled-at",1695041440824,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$browserify_aes$modes$cfb1.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAC9D,IAAIC,EAASH,CAAA,CAAQ,GAAR,CAAuBG,CAAAA,MA+BpCD,EAAQE,CAAAA,OAAR,CAAkBC,QAAS,CAACC,CAAD,CAAOC,CAAP,CAAcC,CAAd,CAAuB,CAKhD,IAJA,IAAIC,EAAMF,CAAMG,CAAAA,MAAhB,CACIC,EAAMR,CAAOS,CAAAA,WAAP,CAAmBH,CAAnB,CADV,CAEII,EAAI,CAAC,CAET,CAAO,EAAEA,CAAT,CAAaJ,CAAb,CAAA,CAAkB,CA5BlB,IA6BMI,IAAAA,EAAAA,CAAAA,CA9BGC,CA8BHD,CA9BFE,CA8BEF,CAlCFG,CAkCEH,CAAiBP,EAAAA,CAAjBO,CAAuB,EAAAN,CAAA,CAAMM,CAAN,CAAvBA,CAAiCL,EAAAA,CAAjCK,CAjCFA,EAAI,CAAC,CAiCHA,CA/BFF,EAAM,CAEV,CAHUF,CAGV,CAAO,EAAEI,CAAT,CAAA,CAAkB,CAChBG,CAAA,CAAMV,CAAKW,CAAAA,OAAQC,CAAAA,YAAb,CAA0BZ,CAAKa,CAAAA,KAA/B,CACNJ,EAAA,CAAOK,CAAD,CAAc,CAAd,EAAoB,CAApB,CAAwBP,CAAxB,CAA+B,GAA/B,CAAsC,CAC5CC,EAAA,CAAQE,CAAA,CAAI,CAAJ,CAAR,CAAiBD,CACjBJ,EAAA,GAASG,CAAT,CAAiB,GAAjB,GAA2BD,CAA3B,CAA+B,CAC/BP,EAAAA,CAAAA,CAA0Ba,KAAAA,EAALb,CAAKa,CAAAA,KAAO,EAAA,CAAAX,CAAA,CAAUO,CAAV,CAAgBD,CAM/CL,EAAAA,CAAMY,CAAOX,CAAAA,MACjB,KAAIG,EAAI,CAAC,CAAT,CACIF,EAAMR,CAAOS,CAAAA,WAAP,CAAmBS,CAAOX,CAAAA,MAA1B,CAGV,KAFAW,CAEA,CAFSlB,CAAOmB,CAAAA,MAAP,CAAc,CAACD,CAAD,CAASlB,CAAOoB,CAAAA,IAAP,CAAY,CAACT,CAAD,CAAZ,CAAT,CAAd,CAET,CAAO,EAAED,CAAT,CAAaJ,CAAb,CAAA,CACEE,CAAA,CAAIE,CAAJ,CAAA,CAASQ,CAAA,CAAOR,CAAP,CAAT,EAAsB,CAAtB,CAA0BQ,CAAA,CAAOR,CAAP,CAAW,CAAX,CAA1B,EAA4C,CAZ5CP,EAAKa,CAAAA,KAAL,CAeKR,CApBW,CA6BhBA,CAAA,CAAIE,CAAJ,CAAA,CAtBKF,CAqBW,CAIlB,MAAOA,EATyC,CAhCY;\",\n\"sources\":[\"node_modules/browserify-aes/modes/cfb1.js\"],\n\"sourcesContent\":[\"shadow$provide[187] = function(global,require,module,exports) {\\nvar Buffer = require('safe-buffer').Buffer\\n\\nfunction encryptByte (self, byteParam, decrypt) {\\n  var pad\\n  var i = -1\\n  var len = 8\\n  var out = 0\\n  var bit, value\\n  while (++i < len) {\\n    pad = self._cipher.encryptBlock(self._prev)\\n    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0\\n    value = pad[0] ^ bit\\n    out += ((value & 0x80) >> (i % 8))\\n    self._prev = shiftIn(self._prev, decrypt ? bit : value)\\n  }\\n  return out\\n}\\n\\nfunction shiftIn (buffer, value) {\\n  var len = buffer.length\\n  var i = -1\\n  var out = Buffer.allocUnsafe(buffer.length)\\n  buffer = Buffer.concat([buffer, Buffer.from([value])])\\n\\n  while (++i < len) {\\n    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)\\n  }\\n\\n  return out\\n}\\n\\nexports.encrypt = function (self, chunk, decrypt) {\\n  var len = chunk.length\\n  var out = Buffer.allocUnsafe(len)\\n  var i = -1\\n\\n  while (++i < len) {\\n    out[i] = encryptByte(self, chunk[i], decrypt)\\n  }\\n\\n  return out\\n}\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Buffer\",\"encrypt\",\"exports.encrypt\",\"self\",\"chunk\",\"decrypt\",\"len\",\"length\",\"out\",\"allocUnsafe\",\"i\",\"value\",\"bit\",\"pad\",\"_cipher\",\"encryptBlock\",\"_prev\",\"byteParam\",\"buffer\",\"concat\",\"from\"]\n}\n"]