["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@ethersproject/hash/lib/namehash.js"],"~:js","shadow$provide[59]=function(S,A,V,q){function F(l){if(0===l.length)throw Error(\"invalid ENS name; empty component\");return l}function G(l){var h=(0,y.toUtf8Bytes)((0,p.ens_normalize)(l)),k=[];if(0===l.length)return k;for(var t=l=0;t<h.length;t++)46===h[t]&&(k.push(F(h.slice(l,t))),l=t+1);if(l>=h.length)throw Error(\"invalid ENS name; empty component\");k.push(F(h.slice(l)));return k}Object.defineProperty(q,\"__esModule\",{value:!0});q.dnsEncode=q.namehash=q.isValidName=q.ensNormalize=void 0;var r=A(11),\ny=A(44),e=A(22);S=A(9);V=A(49);var u=new S.Logger(V.version),p=A(58),n=new Uint8Array(32);n.fill(0);q.ensNormalize=function(l){return G(l).map(function(h){return(0,y.toUtf8String)(h)}).join(\".\")};q.isValidName=function(l){try{return 0!==G(l).length}catch(h){}return!1};q.namehash=function(l){\"string\"!==typeof l&&u.throwArgumentError(\"invalid ENS name; not a string\",\"name\",l);var h=n;for(l=G(l);l.length;)h=(0,e.keccak256)((0,r.concat)([h,(0,e.keccak256)(l.pop())]));return(0,r.hexlify)(h)};q.dnsEncode=\nfunction(l){return(0,r.hexlify)((0,r.concat)(G(l).map(function(h){if(63<h.length)throw Error(\"invalid DNS encoded entry; length exceeds 63 bytes\");var k=new Uint8Array(h.length+1);k.set(h,1);k[0]=k.length-1;return k})))+\"00\"}}","~:source","shadow$provide[59] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.dnsEncode = exports.namehash = exports.isValidName = exports.ensNormalize = void 0;\nvar bytes_1 = require(\"@ethersproject/bytes\");\nvar strings_1 = require(\"@ethersproject/strings\");\nvar keccak256_1 = require(\"@ethersproject/keccak256\");\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\nvar lib_1 = require(\"./ens-normalize/lib\");\nvar Zeros = new Uint8Array(32);\nZeros.fill(0);\nfunction checkComponent(comp) {\n    if (comp.length === 0) {\n        throw new Error(\"invalid ENS name; empty component\");\n    }\n    return comp;\n}\nfunction ensNameSplit(name) {\n    var bytes = (0, strings_1.toUtf8Bytes)((0, lib_1.ens_normalize)(name));\n    var comps = [];\n    if (name.length === 0) {\n        return comps;\n    }\n    var last = 0;\n    for (var i = 0; i < bytes.length; i++) {\n        var d = bytes[i];\n        // A separator (i.e. \".\"); copy this component\n        if (d === 0x2e) {\n            comps.push(checkComponent(bytes.slice(last, i)));\n            last = i + 1;\n        }\n    }\n    // There was a stray separator at the end of the name\n    if (last >= bytes.length) {\n        throw new Error(\"invalid ENS name; empty component\");\n    }\n    comps.push(checkComponent(bytes.slice(last)));\n    return comps;\n}\nfunction ensNormalize(name) {\n    return ensNameSplit(name).map(function (comp) { return (0, strings_1.toUtf8String)(comp); }).join(\".\");\n}\nexports.ensNormalize = ensNormalize;\nfunction isValidName(name) {\n    try {\n        return (ensNameSplit(name).length !== 0);\n    }\n    catch (error) { }\n    return false;\n}\nexports.isValidName = isValidName;\nfunction namehash(name) {\n    /* istanbul ignore if */\n    if (typeof (name) !== \"string\") {\n        logger.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n    }\n    var result = Zeros;\n    var comps = ensNameSplit(name);\n    while (comps.length) {\n        result = (0, keccak256_1.keccak256)((0, bytes_1.concat)([result, (0, keccak256_1.keccak256)(comps.pop())]));\n    }\n    return (0, bytes_1.hexlify)(result);\n}\nexports.namehash = namehash;\nfunction dnsEncode(name) {\n    return (0, bytes_1.hexlify)((0, bytes_1.concat)(ensNameSplit(name).map(function (comp) {\n        // DNS does not allow components over 63 bytes in length\n        if (comp.length > 63) {\n            throw new Error(\"invalid DNS encoded entry; length exceeds 63 bytes\");\n        }\n        var bytes = new Uint8Array(comp.length + 1);\n        bytes.set(comp, 1);\n        bytes[0] = bytes.length - 1;\n        return bytes;\n    }))) + \"00\";\n}\nexports.dnsEncode = dnsEncode;\n//# sourceMappingURL=namehash.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$ethersproject$hash$lib$_version","~$module$node_modules$$ethersproject$strings$lib$index","~$shadow.js","~$module$node_modules$$ethersproject$bytes$lib$index","~$module$node_modules$$ethersproject$keccak256$lib$index","~$module$node_modules$$ethersproject$hash$lib$ens_normalize$lib","~$module$node_modules$$ethersproject$logger$lib$index"]],"~:properties",["^5",["__esModule","ensNormalize","isValidName","value","namehash","dnsEncode"]],"~:compiled-at",1695041440709,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$ethersproject$hash$lib$namehash.js\",\n\"lineCount\":3,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@ethersproject/hash/lib/namehash.js\"],\n\"sourcesContent\":[\"shadow$provide[59] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.dnsEncode = exports.namehash = exports.isValidName = exports.ensNormalize = void 0;\\nvar bytes_1 = require(\\\"@ethersproject/bytes\\\");\\nvar strings_1 = require(\\\"@ethersproject/strings\\\");\\nvar keccak256_1 = require(\\\"@ethersproject/keccak256\\\");\\nvar logger_1 = require(\\\"@ethersproject/logger\\\");\\nvar _version_1 = require(\\\"./_version\\\");\\nvar logger = new logger_1.Logger(_version_1.version);\\nvar lib_1 = require(\\\"./ens-normalize/lib\\\");\\nvar Zeros = new Uint8Array(32);\\nZeros.fill(0);\\nfunction checkComponent(comp) {\\n    if (comp.length === 0) {\\n        throw new Error(\\\"invalid ENS name; empty component\\\");\\n    }\\n    return comp;\\n}\\nfunction ensNameSplit(name) {\\n    var bytes = (0, strings_1.toUtf8Bytes)((0, lib_1.ens_normalize)(name));\\n    var comps = [];\\n    if (name.length === 0) {\\n        return comps;\\n    }\\n    var last = 0;\\n    for (var i = 0; i < bytes.length; i++) {\\n        var d = bytes[i];\\n        // A separator (i.e. \\\".\\\"); copy this component\\n        if (d === 0x2e) {\\n            comps.push(checkComponent(bytes.slice(last, i)));\\n            last = i + 1;\\n        }\\n    }\\n    // There was a stray separator at the end of the name\\n    if (last >= bytes.length) {\\n        throw new Error(\\\"invalid ENS name; empty component\\\");\\n    }\\n    comps.push(checkComponent(bytes.slice(last)));\\n    return comps;\\n}\\nfunction ensNormalize(name) {\\n    return ensNameSplit(name).map(function (comp) { return (0, strings_1.toUtf8String)(comp); }).join(\\\".\\\");\\n}\\nexports.ensNormalize = ensNormalize;\\nfunction isValidName(name) {\\n    try {\\n        return (ensNameSplit(name).length !== 0);\\n    }\\n    catch (error) { }\\n    return false;\\n}\\nexports.isValidName = isValidName;\\nfunction namehash(name) {\\n    /* istanbul ignore if */\\n    if (typeof (name) !== \\\"string\\\") {\\n        logger.throwArgumentError(\\\"invalid ENS name; not a string\\\", \\\"name\\\", name);\\n    }\\n    var result = Zeros;\\n    var comps = ensNameSplit(name);\\n    while (comps.length) {\\n        result = (0, keccak256_1.keccak256)((0, bytes_1.concat)([result, (0, keccak256_1.keccak256)(comps.pop())]));\\n    }\\n    return (0, bytes_1.hexlify)(result);\\n}\\nexports.namehash = namehash;\\nfunction dnsEncode(name) {\\n    return (0, bytes_1.hexlify)((0, bytes_1.concat)(ensNameSplit(name).map(function (comp) {\\n        // DNS does not allow components over 63 bytes in length\\n        if (comp.length > 63) {\\n            throw new Error(\\\"invalid DNS encoded entry; length exceeds 63 bytes\\\");\\n        }\\n        var bytes = new Uint8Array(comp.length + 1);\\n        bytes.set(comp, 1);\\n        bytes[0] = bytes.length - 1;\\n        return bytes;\\n    }))) + \\\"00\\\";\\n}\\nexports.dnsEncode = dnsEncode;\\n//# sourceMappingURL=namehash.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"checkComponent\",\"comp\",\"length\",\"Error\",\"ensNameSplit\",\"name\",\"bytes\",\"strings_1\",\"toUtf8Bytes\",\"lib_1\",\"ens_normalize\",\"comps\",\"i\",\"last\",\"d\",\"push\",\"slice\",\"Object\",\"defineProperty\",\"value\",\"dnsEncode\",\"namehash\",\"isValidName\",\"ensNormalize\",\"bytes_1\",\"keccak256_1\",\"logger_1\",\"_version_1\",\"logger\",\"Logger\",\"version\",\"Zeros\",\"Uint8Array\",\"fill\",\"map\",\"toUtf8String\",\"join\",\"error\",\"throwArgumentError\",\"result\",\"keccak256\",\"concat\",\"pop\",\"hexlify\",\"set\"]\n}\n"]