{
"version":3,
"file":"module$node_modules$browserify_sign$node_modules$readable_stream$lib$_stream_readable.js",
"lineCount":35,
"mappings":"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",
"sources":["node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_readable.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$browserify_sign$node_modules$readable_stream$lib$_stream_readable\"] = function(global,require,module,exports) {\nvar process = require('process');\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/buffer_list');\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;\n\n// Lazy loaded to improve the startup performance.\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\nrequire('inherits')(Readable, Stream);\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex);\n\n  // legacy\n  this.readable = true;\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n  Stream.call(this);\n}\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n  return er;\n}\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null), decoder.encoding equals utf8\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  var p = this._readableState.buffer.head;\n  var content = '';\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n  this._readableState.buffer.clear();\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB\nvar MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n  return dest;\n};\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {\n      hasUnpiped: false\n    });\n    return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n  state.paused = false;\n  return this;\n};\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState.paused = true;\n  return this;\n};\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n  return this;\n};\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n    return createReadableStreamAsyncIterator(this);\n  };\n}\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n});\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n    return from(Readable, iterable, opts);\n  };\n}\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","prependListener","emitter","event","fn","_events","Array","isArray","unshift","on","ReadableState","options","stream","isDuplex","Duplex","objectMode","readableObjectMode","highWaterMark","getHighWaterMark","buffer","BufferList","length","pipes","pipesCount","flowing","reading","endEmitted","ended","sync","resumeScheduled","readableListening","emittedReadable","needReadable","paused","emitClose","autoDestroy","destroyed","defaultEncoding","awaitDrain","readingMore","encoding","decoder","StringDecoder","Readable","_readableState","readable","read","_read","destroy","_destroy","Stream","call","readableAddChunk","chunk","addToFront","skipChunkCheck","debug","state","end","push","emitReadable","emitReadable_","er","Buffer","isBuffer","OurUint8Array","undefined","ERR_INVALID_ARG_TYPE","errorOrDestroy","Object","getPrototypeOf","prototype","from","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","addChunk","ERR_STREAM_PUSH_AFTER_EOF","write","maybeReadMore","emit","howMuchToRead","n","head","data","MAX_HWM","process","nextTick","flow","maybeReadMore_","len","pipeOnDrain","src","pipeOnDrainFunctionResult","listeners","type","updateReadableListening","self","listenerCount","resume","nReadingNextTick","resume_","fromList","ret","shift","join","first","concat","clear","consume","endReadable","endReadableNT","wState","_writableState","finished","indexOf","xs","x","i","l","Uint8Array","window","debugUtil","debuglog","destroyImpl","_require","_require$codes","codes","ERR_METHOD_NOT_IMPLEMENTED","createReadableStreamAsyncIterator","kProxyEvents","defineProperty","enumerable","get","set","value","_undestroy","undestroy","Readable.prototype._destroy","err","cb","Readable.prototype.push","Readable.prototype.unshift","isPaused","Readable.prototype.isPaused","setEncoding","Readable.prototype.setEncoding","enc","p","content","next","Readable.prototype.read","parseInt","nOrig","doRead","Readable.prototype._read","pipe","Readable.prototype.pipe","dest","pipeOpts","onunpipe","unpipeInfo","hasUnpiped","removeListener","onclose","onfinish","ondrain","onerror","onend","unpipe","ondata","cleanedUp","needDrain","pause","endFn","stdout","stderr","once","Readable.prototype.unpipe","dests","index","splice","Readable.prototype.on","ev","res","addListener","Readable.prototype.removeListener","removeAllListeners","Readable.prototype.removeAllListeners","apply","arguments","Readable.prototype.resume","Readable.prototype.pause","wrap","Readable.prototype.wrap","_this","methodWrap","method","methodWrapReturnFunction","bind","this._read","Symbol","asyncIterator","_fromList","Readable.from","iterable","opts"]
}
