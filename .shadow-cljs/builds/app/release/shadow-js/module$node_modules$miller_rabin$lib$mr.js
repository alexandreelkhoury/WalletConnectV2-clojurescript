["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/miller-rabin/lib/mr.js"],"~:js","shadow$provide[205]=function(S,A,V,q){function F(y){this.rand=y||new r.Rand}var G=A(204),r=A(74);V.exports=F;F.create=function(y){return new F(y)};F.prototype._randbelow=function(y){var e=y.bitLength();e=Math.ceil(e/8);do var u=new G(this.rand.generate(e));while(0<=u.cmp(y));return u};F.prototype._randrange=function(y,e){e=e.sub(y);return y.add(this._randbelow(e))};F.prototype.test=function(y,e,u){var p=y.bitLength(),n=G.mont(y),l=(new G(1)).toRed(n);e||(e=Math.max(1,p/48|0));p=y.subn(1);for(var h=\n0;!p.testn(h);h++);y=y.shrn(h);for(var k=p.toRed(n);0<e;e--){var t=this._randrange(new G(2),p);u&&u(t);t=t.toRed(n).redPow(y);if(0!==t.cmp(l)&&0!==t.cmp(k)){for(var B=1;B<h;B++){t=t.redSqr();if(0===t.cmp(l))return!1;if(0===t.cmp(k))break}if(B===h)return!1}}return!0};F.prototype.getDivisor=function(y,e){var u=y.bitLength(),p=G.mont(y),n=(new G(1)).toRed(p);e||(e=Math.max(1,u/48|0));u=y.subn(1);for(var l=0;!u.testn(l);l++);for(var h=y.shrn(l),k=u.toRed(p);0<e;e--){var t=this._randrange(new G(2),u),\nB=y.gcd(t);if(0!==B.cmpn(1))return B;t=t.toRed(p).redPow(h);if(0!==t.cmp(n)&&0!==t.cmp(k)){for(B=1;B<l;B++){t=t.redSqr();if(0===t.cmp(n))return t.fromRed().subn(1).gcd(y);if(0===t.cmp(k))break}if(B===l)return t=t.redSqr(),t.fromRed().subn(1).gcd(y)}}return!1}}","~:source","shadow$provide[205] = function(global,require,module,exports) {\nvar bn = require('bn.js');\nvar brorand = require('brorand');\n\nfunction MillerRabin(rand) {\n  this.rand = rand || new brorand.Rand();\n}\nmodule.exports = MillerRabin;\n\nMillerRabin.create = function create(rand) {\n  return new MillerRabin(rand);\n};\n\nMillerRabin.prototype._randbelow = function _randbelow(n) {\n  var len = n.bitLength();\n  var min_bytes = Math.ceil(len / 8);\n\n  // Generage random bytes until a number less than n is found.\n  // This ensures that 0..n-1 have an equal probability of being selected.\n  do\n    var a = new bn(this.rand.generate(min_bytes));\n  while (a.cmp(n) >= 0);\n\n  return a;\n};\n\nMillerRabin.prototype._randrange = function _randrange(start, stop) {\n  // Generate a random number greater than or equal to start and less than stop.\n  var size = stop.sub(start);\n  return start.add(this._randbelow(size));\n};\n\nMillerRabin.prototype.test = function test(n, k, cb) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  var prime = true;\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n    if (cb)\n      cb(a);\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return false;\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s)\n      return false;\n  }\n\n  return prime;\n};\n\nMillerRabin.prototype.getDivisor = function getDivisor(n, k) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n\n    var g = n.gcd(a);\n    if (g.cmpn(1) !== 0)\n      return g;\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return x.fromRed().subn(1).gcd(n);\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s) {\n      x = x.redSqr();\n      return x.fromRed().subn(1).gcd(n);\n    }\n  }\n\n  return false;\n};\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$miller_rabin$node_modules$bn_js$lib$bn","~$shadow.js","~$module$node_modules$brorand$index"]],"~:properties",["^5",["getDivisor","rand","_randbelow","create","test","_randrange"]],"~:compiled-at",1695041440842,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$miller_rabin$lib$mr.js\",\n\"lineCount\":3,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/miller-rabin/lib/mr.js\"],\n\"sourcesContent\":[\"shadow$provide[205] = function(global,require,module,exports) {\\nvar bn = require('bn.js');\\nvar brorand = require('brorand');\\n\\nfunction MillerRabin(rand) {\\n  this.rand = rand || new brorand.Rand();\\n}\\nmodule.exports = MillerRabin;\\n\\nMillerRabin.create = function create(rand) {\\n  return new MillerRabin(rand);\\n};\\n\\nMillerRabin.prototype._randbelow = function _randbelow(n) {\\n  var len = n.bitLength();\\n  var min_bytes = Math.ceil(len / 8);\\n\\n  // Generage random bytes until a number less than n is found.\\n  // This ensures that 0..n-1 have an equal probability of being selected.\\n  do\\n    var a = new bn(this.rand.generate(min_bytes));\\n  while (a.cmp(n) >= 0);\\n\\n  return a;\\n};\\n\\nMillerRabin.prototype._randrange = function _randrange(start, stop) {\\n  // Generate a random number greater than or equal to start and less than stop.\\n  var size = stop.sub(start);\\n  return start.add(this._randbelow(size));\\n};\\n\\nMillerRabin.prototype.test = function test(n, k, cb) {\\n  var len = n.bitLength();\\n  var red = bn.mont(n);\\n  var rone = new bn(1).toRed(red);\\n\\n  if (!k)\\n    k = Math.max(1, (len / 48) | 0);\\n\\n  // Find d and s, (n - 1) = (2 ^ s) * d;\\n  var n1 = n.subn(1);\\n  for (var s = 0; !n1.testn(s); s++) {}\\n  var d = n.shrn(s);\\n\\n  var rn1 = n1.toRed(red);\\n\\n  var prime = true;\\n  for (; k > 0; k--) {\\n    var a = this._randrange(new bn(2), n1);\\n    if (cb)\\n      cb(a);\\n\\n    var x = a.toRed(red).redPow(d);\\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\\n      continue;\\n\\n    for (var i = 1; i < s; i++) {\\n      x = x.redSqr();\\n\\n      if (x.cmp(rone) === 0)\\n        return false;\\n      if (x.cmp(rn1) === 0)\\n        break;\\n    }\\n\\n    if (i === s)\\n      return false;\\n  }\\n\\n  return prime;\\n};\\n\\nMillerRabin.prototype.getDivisor = function getDivisor(n, k) {\\n  var len = n.bitLength();\\n  var red = bn.mont(n);\\n  var rone = new bn(1).toRed(red);\\n\\n  if (!k)\\n    k = Math.max(1, (len / 48) | 0);\\n\\n  // Find d and s, (n - 1) = (2 ^ s) * d;\\n  var n1 = n.subn(1);\\n  for (var s = 0; !n1.testn(s); s++) {}\\n  var d = n.shrn(s);\\n\\n  var rn1 = n1.toRed(red);\\n\\n  for (; k > 0; k--) {\\n    var a = this._randrange(new bn(2), n1);\\n\\n    var g = n.gcd(a);\\n    if (g.cmpn(1) !== 0)\\n      return g;\\n\\n    var x = a.toRed(red).redPow(d);\\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\\n      continue;\\n\\n    for (var i = 1; i < s; i++) {\\n      x = x.redSqr();\\n\\n      if (x.cmp(rone) === 0)\\n        return x.fromRed().subn(1).gcd(n);\\n      if (x.cmp(rn1) === 0)\\n        break;\\n    }\\n\\n    if (i === s) {\\n      x = x.redSqr();\\n      return x.fromRed().subn(1).gcd(n);\\n    }\\n  }\\n\\n  return false;\\n};\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"MillerRabin\",\"rand\",\"brorand\",\"Rand\",\"bn\",\"create\",\"MillerRabin.create\",\"prototype\",\"_randbelow\",\"MillerRabin.prototype._randbelow\",\"n\",\"len\",\"bitLength\",\"min_bytes\",\"Math\",\"ceil\",\"a\",\"generate\",\"cmp\",\"_randrange\",\"MillerRabin.prototype._randrange\",\"start\",\"stop\",\"size\",\"sub\",\"add\",\"test\",\"MillerRabin.prototype.test\",\"k\",\"cb\",\"red\",\"mont\",\"rone\",\"toRed\",\"max\",\"n1\",\"subn\",\"s\",\"testn\",\"d\",\"shrn\",\"rn1\",\"x\",\"redPow\",\"i\",\"redSqr\",\"prime\",\"getDivisor\",\"MillerRabin.prototype.getDivisor\",\"g\",\"gcd\",\"cmpn\",\"fromRed\"]\n}\n"]