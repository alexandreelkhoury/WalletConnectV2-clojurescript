["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/zustand/vanilla.js"],"~:js","shadow$provide.module$node_modules$zustand$vanilla=function(global,require,module,exports){var createStoreImpl=function(createState){var listeners=new Set,setState=function(partial,replace){partial=\"function\"===typeof partial?partial(state):partial;if(!Object.is(partial,state)){var _previousState=state;state=(null!=replace?replace:\"object\"!==typeof partial)?partial:Object.assign({},state,partial);listeners.forEach(function(listener){return listener(state,_previousState)})}},getState=function(){return state},\napi={setState,getState,subscribe:function(listener){listeners.add(listener);return function(){return listeners.delete(listener)}},destroy:function(){console.warn(\"[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.\");listeners.clear()}};var state=createState(setState,getState,api);return api},createStore=function(createState){return createState?createStoreImpl(createState):\ncreateStoreImpl};global=function(createState){console.warn(\"[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'.\");return createStore(createState)};exports.createStore=createStore;exports.default=global;module.exports=global;module.exports.createStore=createStore;exports.default=module.exports}","~:source","shadow$provide[\"module$node_modules$zustand$vanilla\"] = function(global,require,module,exports) {\n'use strict';\n\nvar createStoreImpl = function createStoreImpl(createState) {\n  var state;\n  var listeners = new Set();\n  var setState = function setState(partial, replace) {\n    var nextState = typeof partial === 'function' ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      var _previousState = state;\n      state = (replace != null ? replace : typeof nextState !== 'object') ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach(function (listener) {\n        return listener(state, _previousState);\n      });\n    }\n  };\n  var getState = function getState() {\n    return state;\n  };\n  var subscribe = function subscribe(listener) {\n    listeners.add(listener);\n    return function () {\n      return listeners.delete(listener);\n    };\n  };\n  var destroy = function destroy() {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.');\n    }\n    listeners.clear();\n  };\n  var api = {\n    setState: setState,\n    getState: getState,\n    subscribe: subscribe,\n    destroy: destroy\n  };\n  state = createState(setState, getState, api);\n  return api;\n};\nvar createStore = function createStore(createState) {\n  return createState ? createStoreImpl(createState) : createStoreImpl;\n};\nvar vanilla = (function (createState) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn(\"[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'.\");\n  }\n  return createStore(createState);\n});\n\nexports.createStore = createStore;\nexports.default = vanilla;\n\nmodule.exports = vanilla;\nmodule.exports.createStore = createStore;\nexports.default = module.exports;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["setState","getState","createStore","destroy","subscribe","default"]],"~:compiled-at",1695111490388,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$zustand$vanilla.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,mCAAA,CAAwD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGhG,IAAIC,gBAAkBA,QAAwB,CAACC,WAAD,CAAc,CAC1D,IACIC,UAAY,IAAIC,GADpB,CAEIC,SAAWA,QAAiB,CAACC,OAAD,CAAUC,OAAV,CAAmB,CAC7CC,OAAAA,CAA+B,UAAnB,GAAA,MAAOF,QAAP,CAAgCA,OAAA,CAAQG,KAAR,CAAhC,CAAiDH,OACjE,IAAI,CAACI,MAAOC,CAAAA,EAAP,CAAUH,OAAV,CAAqBC,KAArB,CAAL,CAAkC,CAChC,IAAIG,eAAiBH,KACrBA,MAAA,CAAQ,CAAY,IAAX,EAAAF,OAAA,CAAkBA,OAAlB,CAAiD,QAAjD,GAA4B,MAAOC,QAApC,EAA8DA,OAA9D,CAA0EE,MAAOG,CAAAA,MAAP,CAAc,EAAd,CAAkBJ,KAAlB,CAAyBD,OAAzB,CAClFL,UAAUW,CAAAA,OAAV,CAAkB,QAAS,CAACC,QAAD,CAAW,CACpC,MAAOA,SAAA,CAASN,KAAT,CAAgBG,cAAhB,CAD6B,CAAtC,CAHgC,CAFe,CAFnD,CAYII,SAAWA,QAAiB,EAAG,CACjC,MAAOP,MAD0B,CAZnC;AA2BIQ,IAAM,CACEZ,QADF,CAEEW,QAFF,CAGRE,UAfcA,QAAkB,CAACH,QAAD,CAAW,CAC3CZ,SAAUgB,CAAAA,GAAV,CAAcJ,QAAd,CACA,OAAO,SAAS,EAAG,CACjB,MAAOZ,UAAUiB,CAAAA,MAAV,CAAiBL,QAAjB,CADU,CAFwB,CAYnC,CAIRM,QAVYA,QAAgB,EAAG,CAE7BC,OAAQC,CAAAA,IAAR,CAAa,wMAAb,CAEFpB,UAAUqB,CAAAA,KAAV,EAJ+B,CAMvB,CAMV,KAAAf,MAAQP,WAAA,CAAYG,QAAZ,CAAsBW,QAAtB,CAAgCC,GAAhC,CACR,OAAOA,IAnCmD,CAA5D,CAqCIQ,YAAcA,QAAoB,CAACvB,WAAD,CAAc,CAClD,MAAOA,YAAA,CAAcD,eAAA,CAAgBC,WAAhB,CAAd;AAA6CD,eADF,CAGhDyB,OAAAA,CAAWA,QAAS,CAACxB,WAAD,CAAc,CAElCoB,OAAQC,CAAAA,IAAR,CAAa,uGAAb,CAEF,OAAOE,YAAA,CAAYvB,WAAZ,CAJ6B,CAOtCF,QAAQyB,CAAAA,WAAR,CAAsBA,WACtBzB,QAAQ2B,CAAAA,OAAR,CAAkBD,MAElB3B,OAAOC,CAAAA,OAAP,CAAiB0B,MACjB3B,OAAOC,CAAAA,OAAQyB,CAAAA,WAAf,CAA6BA,WAC7BzB,QAAQ2B,CAAAA,OAAR,CAAkB5B,MAAOC,CAAAA,OAvDuE;\",\n\"sources\":[\"node_modules/zustand/vanilla.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$zustand$vanilla\\\"] = function(global,require,module,exports) {\\n'use strict';\\n\\nvar createStoreImpl = function createStoreImpl(createState) {\\n  var state;\\n  var listeners = new Set();\\n  var setState = function setState(partial, replace) {\\n    var nextState = typeof partial === 'function' ? partial(state) : partial;\\n    if (!Object.is(nextState, state)) {\\n      var _previousState = state;\\n      state = (replace != null ? replace : typeof nextState !== 'object') ? nextState : Object.assign({}, state, nextState);\\n      listeners.forEach(function (listener) {\\n        return listener(state, _previousState);\\n      });\\n    }\\n  };\\n  var getState = function getState() {\\n    return state;\\n  };\\n  var subscribe = function subscribe(listener) {\\n    listeners.add(listener);\\n    return function () {\\n      return listeners.delete(listener);\\n    };\\n  };\\n  var destroy = function destroy() {\\n    if (process.env.NODE_ENV !== 'production') {\\n      console.warn('[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.');\\n    }\\n    listeners.clear();\\n  };\\n  var api = {\\n    setState: setState,\\n    getState: getState,\\n    subscribe: subscribe,\\n    destroy: destroy\\n  };\\n  state = createState(setState, getState, api);\\n  return api;\\n};\\nvar createStore = function createStore(createState) {\\n  return createState ? createStoreImpl(createState) : createStoreImpl;\\n};\\nvar vanilla = (function (createState) {\\n  if (process.env.NODE_ENV !== 'production') {\\n    console.warn(\\\"[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'.\\\");\\n  }\\n  return createStore(createState);\\n});\\n\\nexports.createStore = createStore;\\nexports.default = vanilla;\\n\\nmodule.exports = vanilla;\\nmodule.exports.createStore = createStore;\\nexports.default = module.exports;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"createStoreImpl\",\"createState\",\"listeners\",\"Set\",\"setState\",\"partial\",\"replace\",\"nextState\",\"state\",\"Object\",\"is\",\"_previousState\",\"assign\",\"forEach\",\"listener\",\"getState\",\"api\",\"subscribe\",\"add\",\"delete\",\"destroy\",\"console\",\"warn\",\"clear\",\"createStore\",\"vanilla\",\"default\"]\n}\n"]