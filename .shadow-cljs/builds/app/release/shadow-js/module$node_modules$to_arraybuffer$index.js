["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/to-arraybuffer/index.js"],"~:js","shadow$provide[300]=function(S,A,V,q){var F=A(53).Buffer;V.exports=function(G){if(G instanceof Uint8Array){if(0===G.byteOffset&&G.byteLength===G.buffer.byteLength)return G.buffer;if(\"function\"===typeof G.buffer.slice)return G.buffer.slice(G.byteOffset,G.byteOffset+G.byteLength)}if(F.isBuffer(G)){for(var r=new Uint8Array(G.length),y=G.length,e=0;e<y;e++)r[e]=G[e];return r.buffer}throw Error(\"Argument must be a Buffer\");}}","~:source","shadow$provide[300] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer\n\nmodule.exports = function (buf) {\n\t// If the buffer is backed by a Uint8Array, a faster version will work\n\tif (buf instanceof Uint8Array) {\n\t\t// If the buffer isn't a subarray, return the underlying ArrayBuffer\n\t\tif (buf.byteOffset === 0 && buf.byteLength === buf.buffer.byteLength) {\n\t\t\treturn buf.buffer\n\t\t} else if (typeof buf.buffer.slice === 'function') {\n\t\t\t// Otherwise we need to get a proper copy\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength)\n\t\t}\n\t}\n\n\tif (Buffer.isBuffer(buf)) {\n\t\t// This is the slow version that will work with any Buffer\n\t\t// implementation (even in old browsers)\n\t\tvar arrayCopy = new Uint8Array(buf.length)\n\t\tvar len = buf.length\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tarrayCopy[i] = buf[i]\n\t\t}\n\t\treturn arrayCopy.buffer\n\t} else {\n\t\tthrow new Error('Argument must be a Buffer')\n\t}\n}\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$buffer$index"]],"~:properties",["^5",[]],"~:compiled-at",1695041440891,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$to_arraybuffer$index.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAC9D,IAAIC,EAASH,CAAA,CAAQ,EAAR,CAAkBG,CAAAA,MAE/BF,EAAOC,CAAAA,OAAP,CAAiBE,QAAS,CAACC,CAAD,CAAM,CAE/B,GAAIA,CAAJ,WAAmBC,WAAnB,CAA+B,CAE9B,GAAuB,CAAvB,GAAID,CAAIE,CAAAA,UAAR,EAA4BF,CAAIG,CAAAA,UAAhC,GAA+CH,CAAII,CAAAA,MAAOD,CAAAA,UAA1D,CACC,MAAOH,EAAII,CAAAA,MACL,IAAgC,UAAhC,GAAI,MAAOJ,EAAII,CAAAA,MAAOC,CAAAA,KAAtB,CAEN,MAAOL,EAAII,CAAAA,MAAOC,CAAAA,KAAX,CAAiBL,CAAIE,CAAAA,UAArB,CAAiCF,CAAIE,CAAAA,UAArC,CAAkDF,CAAIG,CAAAA,UAAtD,CANsB,CAU/B,GAAIL,CAAOQ,CAAAA,QAAP,CAAgBN,CAAhB,CAAJ,CAA0B,CAKzB,IAFA,IAAIO,EAAY,IAAIN,UAAJ,CAAeD,CAAIQ,CAAAA,MAAnB,CAAhB,CACIC,EAAMT,CAAIQ,CAAAA,MADd,CAESE,EAAI,CAAb,CAAgBA,CAAhB,CAAoBD,CAApB,CAAyBC,CAAA,EAAzB,CACCH,CAAA,CAAUG,CAAV,CAAA,CAAeV,CAAA,CAAIU,CAAJ,CAEhB,OAAOH,EAAUH,CAAAA,MARQ,CAUzB,KAAUO,MAAJ,CAAU,2BAAV,CAAN,CAtB8B,CAH8B;\",\n\"sources\":[\"node_modules/to-arraybuffer/index.js\"],\n\"sourcesContent\":[\"shadow$provide[300] = function(global,require,module,exports) {\\nvar Buffer = require('buffer').Buffer\\n\\nmodule.exports = function (buf) {\\n\\t// If the buffer is backed by a Uint8Array, a faster version will work\\n\\tif (buf instanceof Uint8Array) {\\n\\t\\t// If the buffer isn't a subarray, return the underlying ArrayBuffer\\n\\t\\tif (buf.byteOffset === 0 && buf.byteLength === buf.buffer.byteLength) {\\n\\t\\t\\treturn buf.buffer\\n\\t\\t} else if (typeof buf.buffer.slice === 'function') {\\n\\t\\t\\t// Otherwise we need to get a proper copy\\n\\t\\t\\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength)\\n\\t\\t}\\n\\t}\\n\\n\\tif (Buffer.isBuffer(buf)) {\\n\\t\\t// This is the slow version that will work with any Buffer\\n\\t\\t// implementation (even in old browsers)\\n\\t\\tvar arrayCopy = new Uint8Array(buf.length)\\n\\t\\tvar len = buf.length\\n\\t\\tfor (var i = 0; i < len; i++) {\\n\\t\\t\\tarrayCopy[i] = buf[i]\\n\\t\\t}\\n\\t\\treturn arrayCopy.buffer\\n\\t} else {\\n\\t\\tthrow new Error('Argument must be a Buffer')\\n\\t}\\n}\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Buffer\",\"module.exports\",\"buf\",\"Uint8Array\",\"byteOffset\",\"byteLength\",\"buffer\",\"slice\",\"isBuffer\",\"arrayCopy\",\"length\",\"len\",\"i\",\"Error\"]\n}\n"]