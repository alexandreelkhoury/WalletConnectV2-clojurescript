shadow$provide.module$node_modules$viem$_cjs$actions$public$watchPendingTransactions=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.watchPendingTransactions=void 0;const observe_js_1=require("module$node_modules$viem$_cjs$utils$observe"),poll_js_1=require("module$node_modules$viem$_cjs$utils$poll"),stringify_js_1=require("module$node_modules$viem$_cjs$utils$stringify"),createPendingTransactionFilter_js_1=require("module$node_modules$viem$_cjs$actions$public$createPendingTransactionFilter"),
getFilterChanges_js_1=require("module$node_modules$viem$_cjs$actions$public$getFilterChanges"),uninstallFilter_js_1=require("module$node_modules$viem$_cjs$actions$public$uninstallFilter");exports.watchPendingTransactions=function(client,{batch=!0,onError,onTransactions,poll:poll_,pollingInterval=client.pollingInterval}){const pollPendingTransactions=()=>{const observerId=(0,stringify_js_1.stringify)(["watchPendingTransactions",client.uid,batch,pollingInterval]);return(0,observe_js_1.observe)(observerId,
{onTransactions,onError},emit=>{let filter;const unwatch=(0,poll_js_1.poll)(async()=>{try{if(!filter)try{filter=await (0,createPendingTransactionFilter_js_1.createPendingTransactionFilter)(client);return}catch(err){throw unwatch(),err;}const hashes=await (0,getFilterChanges_js_1.getFilterChanges)(client,{filter});if(0!==hashes.length)if(batch)emit.onTransactions(hashes);else hashes.forEach(hash=>emit.onTransactions([hash]))}catch(err){emit.onError?.(err)}},{emitOnBegin:!0,interval:pollingInterval});
return async()=>{filter&&await (0,uninstallFilter_js_1.uninstallFilter)(client,{filter});unwatch()}})},subscribePendingTransactions=()=>{let active=!0,unsubscribe=()=>active=!1;(async()=>{try{const {unsubscribe:unsubscribe_}=await client.transport.subscribe({params:["newPendingTransactions"],onData(data){active&&onTransactions([data.result])},onError(error){onError?.(error)}});unsubscribe=unsubscribe_;active||unsubscribe()}catch(err){onError?.(err)}})();return unsubscribe};return("undefined"!==typeof poll_?
poll_:"webSocket"!==client.transport.type)?pollPendingTransactions():subscribePendingTransactions()}}
//# sourceMappingURL=module$node_modules$viem$_cjs$actions$public$watchPendingTransactions.js.map
