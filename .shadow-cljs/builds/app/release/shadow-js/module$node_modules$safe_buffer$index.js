["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/safe-buffer/index.js"],"~:js","shadow$provide[111]=function(S,A,V,q){function F(e,u){for(var p in e)u[p]=e[p]}function G(e,u,p){return y(e,u,p)}var r=A(53),y=r.Buffer;y.from&&y.alloc&&y.allocUnsafe&&y.allocUnsafeSlow?V.exports=r:(F(r,q),q.Buffer=G);G.prototype=Object.create(y.prototype);F(y,G);G.from=function(e,u,p){if(\"number\"===typeof e)throw new TypeError(\"Argument must not be a number\");return y(e,u,p)};G.alloc=function(e,u,p){if(\"number\"!==typeof e)throw new TypeError(\"Argument must be a number\");e=y(e);void 0!==u?\"string\"===\ntypeof p?e.fill(u,p):e.fill(u):e.fill(0);return e};G.allocUnsafe=function(e){if(\"number\"!==typeof e)throw new TypeError(\"Argument must be a number\");return y(e)};G.allocUnsafeSlow=function(e){if(\"number\"!==typeof e)throw new TypeError(\"Argument must be a number\");return r.SlowBuffer(e)}}","~:source","shadow$provide[111] = function(global,require,module,exports) {\n/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$buffer$index"]],"~:properties",["^5",["prototype","allocUnsafeSlow","Buffer","allocUnsafe","alloc","from"]],"~:compiled-at",1695041440780,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$safe_buffer$index.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAO9DC,QAASA,EAAU,CAACC,CAAD,CAAMC,CAAN,CAAW,CAC5B,IAAKC,IAAIA,CAAT,GAAgBF,EAAhB,CACEC,CAAA,CAAIC,CAAJ,CAAA,CAAWF,CAAA,CAAIE,CAAJ,CAFe,CAa9BC,QAASA,EAAW,CAACC,CAAD,CAAMC,CAAN,CAAwBC,CAAxB,CAAgC,CAClD,MAAOC,EAAA,CAAOH,CAAP,CAAYC,CAAZ,CAA8BC,CAA9B,CAD2C,CAjBpD,IAAIE,EAASZ,CAAA,CAAQ,EAAR,CAAb,CACIW,EAASC,CAAOD,CAAAA,MAQhBA,EAAOE,CAAAA,IAAX,EAAmBF,CAAOG,CAAAA,KAA1B,EAAmCH,CAAOI,CAAAA,WAA1C,EAAyDJ,CAAOK,CAAAA,eAAhE,CACEf,CAAOC,CAAAA,OADT,CACmBU,CADnB,EAIET,CAAA,CAAUS,CAAV,CAAkBV,CAAlB,CACA,CAAAA,CAAQS,CAAAA,MAAR,CAAiBJ,CALnB,CAYAA,EAAWU,CAAAA,SAAX,CAAuBC,MAAOC,CAAAA,MAAP,CAAcR,CAAOM,CAAAA,SAArB,CAGvBd,EAAA,CAAUQ,CAAV,CAAkBJ,CAAlB,CAEAA,EAAWM,CAAAA,IAAX,CAAkBO,QAAS,CAACZ,CAAD,CAAMC,CAAN,CAAwBC,CAAxB,CAAgC,CACzD,GAAmB,QAAnB,GAAI,MAAOF,EAAX,CACE,KAAM,KAAIa,SAAJ,CAAc,+BAAd,CAAN,CAEF,MAAOV,EAAA,CAAOH,CAAP,CAAYC,CAAZ,CAA8BC,CAA9B,CAJkD,CAO3DH,EAAWO,CAAAA,KAAX,CAAmBQ,QAAS,CAACC,CAAD,CAAOC,CAAP,CAAaC,CAAb,CAAuB,CACjD,GAAoB,QAApB,GAAI,MAAOF,EAAX,CACE,KAAM,KAAIF,SAAJ,CAAc,2BAAd,CAAN,CAEEK,CAAAA,CAAMf,CAAA,CAAOY,CAAP,CACGI,KAAAA,EAAb,GAAIH,CAAJ,CAC0B,QAAxB;AAAI,MAAOC,EAAX,CACEC,CAAIF,CAAAA,IAAJ,CAASA,CAAT,CAAeC,CAAf,CADF,CAGEC,CAAIF,CAAAA,IAAJ,CAASA,CAAT,CAJJ,CAOEE,CAAIF,CAAAA,IAAJ,CAAS,CAAT,CAEF,OAAOE,EAd0C,CAiBnDnB,EAAWQ,CAAAA,WAAX,CAAyBa,QAAS,CAACL,CAAD,CAAO,CACvC,GAAoB,QAApB,GAAI,MAAOA,EAAX,CACE,KAAM,KAAIF,SAAJ,CAAc,2BAAd,CAAN,CAEF,MAAOV,EAAA,CAAOY,CAAP,CAJgC,CAOzChB,EAAWS,CAAAA,eAAX,CAA6Ba,QAAS,CAACN,CAAD,CAAO,CAC3C,GAAoB,QAApB,GAAI,MAAOA,EAAX,CACE,KAAM,KAAIF,SAAJ,CAAc,2BAAd,CAAN,CAEF,MAAOT,EAAOkB,CAAAA,UAAP,CAAkBP,CAAlB,CAJoC,CA5DiB;\",\n\"sources\":[\"node_modules/safe-buffer/index.js\"],\n\"sourcesContent\":[\"shadow$provide[111] = function(global,require,module,exports) {\\n/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\\n/* eslint-disable node/no-deprecated-api */\\nvar buffer = require('buffer')\\nvar Buffer = buffer.Buffer\\n\\n// alternative to using Object.keys for old browsers\\nfunction copyProps (src, dst) {\\n  for (var key in src) {\\n    dst[key] = src[key]\\n  }\\n}\\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\\n  module.exports = buffer\\n} else {\\n  // Copy properties from require('buffer')\\n  copyProps(buffer, exports)\\n  exports.Buffer = SafeBuffer\\n}\\n\\nfunction SafeBuffer (arg, encodingOrOffset, length) {\\n  return Buffer(arg, encodingOrOffset, length)\\n}\\n\\nSafeBuffer.prototype = Object.create(Buffer.prototype)\\n\\n// Copy static methods from Buffer\\ncopyProps(Buffer, SafeBuffer)\\n\\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\\n  if (typeof arg === 'number') {\\n    throw new TypeError('Argument must not be a number')\\n  }\\n  return Buffer(arg, encodingOrOffset, length)\\n}\\n\\nSafeBuffer.alloc = function (size, fill, encoding) {\\n  if (typeof size !== 'number') {\\n    throw new TypeError('Argument must be a number')\\n  }\\n  var buf = Buffer(size)\\n  if (fill !== undefined) {\\n    if (typeof encoding === 'string') {\\n      buf.fill(fill, encoding)\\n    } else {\\n      buf.fill(fill)\\n    }\\n  } else {\\n    buf.fill(0)\\n  }\\n  return buf\\n}\\n\\nSafeBuffer.allocUnsafe = function (size) {\\n  if (typeof size !== 'number') {\\n    throw new TypeError('Argument must be a number')\\n  }\\n  return Buffer(size)\\n}\\n\\nSafeBuffer.allocUnsafeSlow = function (size) {\\n  if (typeof size !== 'number') {\\n    throw new TypeError('Argument must be a number')\\n  }\\n  return buffer.SlowBuffer(size)\\n}\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"copyProps\",\"src\",\"dst\",\"key\",\"SafeBuffer\",\"arg\",\"encodingOrOffset\",\"length\",\"Buffer\",\"buffer\",\"from\",\"alloc\",\"allocUnsafe\",\"allocUnsafeSlow\",\"prototype\",\"Object\",\"create\",\"SafeBuffer.from\",\"TypeError\",\"SafeBuffer.alloc\",\"size\",\"fill\",\"encoding\",\"buf\",\"undefined\",\"SafeBuffer.allocUnsafe\",\"SafeBuffer.allocUnsafeSlow\",\"SlowBuffer\"]\n}\n"]