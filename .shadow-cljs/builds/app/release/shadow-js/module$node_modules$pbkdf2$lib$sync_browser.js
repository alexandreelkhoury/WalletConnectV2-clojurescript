["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/pbkdf2/lib/sync-browser.js"],"~:js","shadow$provide[172]=function(S,A,V,q){function F(t,B,E){var H=G(t),D=\"sha512\"===t||\"sha384\"===t?128:64;B.length>D?B=H(B):B.length<D&&(B=u.concat([B,h],D));for(var C=u.allocUnsafe(D+k[t]),I=u.allocUnsafe(D+k[t]),M=0;M<D;M++)C[M]=B[M]^54,I[M]=B[M]^92;B=u.allocUnsafe(D+E+4);C.copy(B,0,0,D);this.ipad1=B;this.ipad2=C;this.opad=I;this.alg=t;this.blocksize=D;this.hash=H;this.size=k[t]}function G(t){function B(E){return(new y).update(E).digest()}return\"rmd160\"===t||\"ripemd160\"===t?B:\"md5\"===t?r:function(E){return e(t).update(E).digest()}}\nvar r=A(165),y=A(133),e=A(141),u=A(111).Buffer,p=A(169),n=A(170),l=A(171),h=u.alloc(128),k={md5:16,sha1:20,sha224:28,sha256:32,sha384:48,sha512:64,rmd160:20,ripemd160:20};F.prototype.run=function(t,B){t.copy(B,this.blocksize);this.hash(B).copy(this.opad,this.blocksize);return this.hash(this.opad)};V.exports=function(t,B,E,H,D){p(E,H);t=l(t,n,\"Password\");B=l(B,n,\"Salt\");D=D||\"sha1\";t=new F(D,t,B.length);var C=u.allocUnsafe(H),I=u.allocUnsafe(B.length+4);B.copy(I,0,0,B.length);var M=0;D=k[D];H=Math.ceil(H/\nD);for(var P=1;P<=H;P++){I.writeUInt32BE(P,B.length);for(var J=t.run(I,t.ipad1),T=J,N=1;N<E;N++){T=t.run(T,t.ipad2);for(var a=0;a<D;a++)J[a]^=T[a]}J.copy(C,M);M+=D}return C}}","~:source","shadow$provide[172] = function(global,require,module,exports) {\nvar md5 = require('create-hash/md5')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\nvar Buffer = require('safe-buffer').Buffer\n\nvar checkParameters = require('./precondition')\nvar defaultEncoding = require('./default-encoding')\nvar toBuffer = require('./to-buffer')\n\nvar ZEROS = Buffer.alloc(128)\nvar sizes = {\n  md5: 16,\n  sha1: 20,\n  sha224: 28,\n  sha256: 32,\n  sha384: 48,\n  sha512: 64,\n  rmd160: 20,\n  ripemd160: 20\n}\n\nfunction Hmac (alg, key, saltLen) {\n  var hash = getDigest(alg)\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  if (key.length > blocksize) {\n    key = hash(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  var opad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)\n  ipad.copy(ipad1, 0, 0, blocksize)\n  this.ipad1 = ipad1\n  this.ipad2 = ipad\n  this.opad = opad\n  this.alg = alg\n  this.blocksize = blocksize\n  this.hash = hash\n  this.size = sizes[alg]\n}\n\nHmac.prototype.run = function (data, ipad) {\n  data.copy(ipad, this.blocksize)\n  var h = this.hash(ipad)\n  h.copy(this.opad, this.blocksize)\n  return this.hash(this.opad)\n}\n\nfunction getDigest (alg) {\n  function shaFunc (data) {\n    return sha(alg).update(data).digest()\n  }\n  function rmd160Func (data) {\n    return new RIPEMD160().update(data).digest()\n  }\n\n  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160Func\n  if (alg === 'md5') return md5\n  return shaFunc\n}\n\nfunction pbkdf2 (password, salt, iterations, keylen, digest) {\n  checkParameters(iterations, keylen)\n  password = toBuffer(password, defaultEncoding, 'Password')\n  salt = toBuffer(salt, defaultEncoding, 'Salt')\n\n  digest = digest || 'sha1'\n\n  var hmac = new Hmac(digest, password, salt.length)\n\n  var DK = Buffer.allocUnsafe(keylen)\n  var block1 = Buffer.allocUnsafe(salt.length + 4)\n  salt.copy(block1, 0, 0, salt.length)\n\n  var destPos = 0\n  var hLen = sizes[digest]\n  var l = Math.ceil(keylen / hLen)\n\n  for (var i = 1; i <= l; i++) {\n    block1.writeUInt32BE(i, salt.length)\n\n    var T = hmac.run(block1, hmac.ipad1)\n    var U = T\n\n    for (var j = 1; j < iterations; j++) {\n      U = hmac.run(U, hmac.ipad2)\n      for (var k = 0; k < hLen; k++) T[k] ^= U[k]\n    }\n\n    T.copy(DK, destPos)\n    destPos += hLen\n  }\n\n  return DK\n}\n\nmodule.exports = pbkdf2\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$pbkdf2$lib$precondition","~$module$node_modules$sha_DOT_js$index","~$module$node_modules$pbkdf2$lib$default_encoding","~$shadow.js","~$module$node_modules$create_hash$md5","~$module$node_modules$ripemd160$index","~$module$node_modules$safe_buffer$index","~$module$node_modules$pbkdf2$lib$to_buffer"]],"~:properties",["^5",["sha224","hash","run","sha256","ipad1","sha512","sha1","blocksize","md5","alg","rmd160","ipad2","ripemd160","size","opad","sha384"]],"~:compiled-at",1695041440820,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$pbkdf2$lib$sync_browser.js\",\n\"lineCount\":3,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/pbkdf2/lib/sync-browser.js\"],\n\"sourcesContent\":[\"shadow$provide[172] = function(global,require,module,exports) {\\nvar md5 = require('create-hash/md5')\\nvar RIPEMD160 = require('ripemd160')\\nvar sha = require('sha.js')\\nvar Buffer = require('safe-buffer').Buffer\\n\\nvar checkParameters = require('./precondition')\\nvar defaultEncoding = require('./default-encoding')\\nvar toBuffer = require('./to-buffer')\\n\\nvar ZEROS = Buffer.alloc(128)\\nvar sizes = {\\n  md5: 16,\\n  sha1: 20,\\n  sha224: 28,\\n  sha256: 32,\\n  sha384: 48,\\n  sha512: 64,\\n  rmd160: 20,\\n  ripemd160: 20\\n}\\n\\nfunction Hmac (alg, key, saltLen) {\\n  var hash = getDigest(alg)\\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\\n\\n  if (key.length > blocksize) {\\n    key = hash(key)\\n  } else if (key.length < blocksize) {\\n    key = Buffer.concat([key, ZEROS], blocksize)\\n  }\\n\\n  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])\\n  var opad = Buffer.allocUnsafe(blocksize + sizes[alg])\\n  for (var i = 0; i < blocksize; i++) {\\n    ipad[i] = key[i] ^ 0x36\\n    opad[i] = key[i] ^ 0x5C\\n  }\\n\\n  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)\\n  ipad.copy(ipad1, 0, 0, blocksize)\\n  this.ipad1 = ipad1\\n  this.ipad2 = ipad\\n  this.opad = opad\\n  this.alg = alg\\n  this.blocksize = blocksize\\n  this.hash = hash\\n  this.size = sizes[alg]\\n}\\n\\nHmac.prototype.run = function (data, ipad) {\\n  data.copy(ipad, this.blocksize)\\n  var h = this.hash(ipad)\\n  h.copy(this.opad, this.blocksize)\\n  return this.hash(this.opad)\\n}\\n\\nfunction getDigest (alg) {\\n  function shaFunc (data) {\\n    return sha(alg).update(data).digest()\\n  }\\n  function rmd160Func (data) {\\n    return new RIPEMD160().update(data).digest()\\n  }\\n\\n  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160Func\\n  if (alg === 'md5') return md5\\n  return shaFunc\\n}\\n\\nfunction pbkdf2 (password, salt, iterations, keylen, digest) {\\n  checkParameters(iterations, keylen)\\n  password = toBuffer(password, defaultEncoding, 'Password')\\n  salt = toBuffer(salt, defaultEncoding, 'Salt')\\n\\n  digest = digest || 'sha1'\\n\\n  var hmac = new Hmac(digest, password, salt.length)\\n\\n  var DK = Buffer.allocUnsafe(keylen)\\n  var block1 = Buffer.allocUnsafe(salt.length + 4)\\n  salt.copy(block1, 0, 0, salt.length)\\n\\n  var destPos = 0\\n  var hLen = sizes[digest]\\n  var l = Math.ceil(keylen / hLen)\\n\\n  for (var i = 1; i <= l; i++) {\\n    block1.writeUInt32BE(i, salt.length)\\n\\n    var T = hmac.run(block1, hmac.ipad1)\\n    var U = T\\n\\n    for (var j = 1; j < iterations; j++) {\\n      U = hmac.run(U, hmac.ipad2)\\n      for (var k = 0; k < hLen; k++) T[k] ^= U[k]\\n    }\\n\\n    T.copy(DK, destPos)\\n    destPos += hLen\\n  }\\n\\n  return DK\\n}\\n\\nmodule.exports = pbkdf2\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Hmac\",\"alg\",\"key\",\"saltLen\",\"hash\",\"getDigest\",\"blocksize\",\"length\",\"Buffer\",\"concat\",\"ZEROS\",\"ipad\",\"allocUnsafe\",\"sizes\",\"opad\",\"i\",\"ipad1\",\"copy\",\"ipad2\",\"size\",\"rmd160Func\",\"data\",\"update\",\"RIPEMD160\",\"digest\",\"md5\",\"shaFunc\",\"sha\",\"checkParameters\",\"defaultEncoding\",\"toBuffer\",\"alloc\",\"sha1\",\"sha224\",\"sha256\",\"sha384\",\"sha512\",\"rmd160\",\"ripemd160\",\"prototype\",\"run\",\"Hmac.prototype.run\",\"h\",\"pbkdf2\",\"password\",\"salt\",\"iterations\",\"keylen\",\"hmac\",\"DK\",\"block1\",\"destPos\",\"hLen\",\"l\",\"Math\",\"ceil\",\"writeUInt32BE\",\"T\",\"U\",\"j\",\"k\"]\n}\n"]