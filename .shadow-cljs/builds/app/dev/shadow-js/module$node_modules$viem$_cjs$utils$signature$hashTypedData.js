["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/viem/_cjs/utils/signature/hashTypedData.js"],"~:js","shadow$provide.module$node_modules$viem$_cjs$utils$signature$hashTypedData=function(global,require,module,exports){function hashDomain({domain,types}){return hashStruct({data:domain,primaryType:\"EIP712Domain\",types})}function hashStruct({data,primaryType,types}){data=encodeData({data,primaryType,types});return(0,keccak256_js_1.keccak256)(data)}function encodeData({data,primaryType,types}){const encodedTypes=[{type:\"bytes32\"}],encodedValues=[hashType({primaryType,types})];for(const field of types[primaryType]){const [type,\nvalue]=encodeField({types,name:field.name,type:field.type,value:data[field.name]});encodedTypes.push(type);encodedValues.push(value)}return(0,encodeAbiParameters_js_1.encodeAbiParameters)(encodedTypes,encodedValues)}function hashType({primaryType,types}){primaryType=(0,toHex_js_1.toHex)(encodeType({primaryType,types}));return(0,keccak256_js_1.keccak256)(primaryType)}function encodeType({primaryType,types}){let result=\"\";const unsortedDeps=findTypeDependencies({primaryType,types});unsortedDeps.delete(primaryType);\nprimaryType=[primaryType,...Array.from(unsortedDeps).sort()];for(const type of primaryType)result+=`${type}(${types[type].map(({name,type:t})=>`${t} ${name}`).join(\",\")})`;return result}function findTypeDependencies({primaryType:primaryType_,types},results=new Set){primaryType_=primaryType_.match(/^\\w*/u)?.[0];if(results.has(primaryType_)||void 0===types[primaryType_])return results;results.add(primaryType_);for(const field of types[primaryType_])findTypeDependencies({primaryType:field.type,types},\nresults);return results}function encodeField({types,name,type,value}){if(void 0!==types[type])return[{type:\"bytes32\"},(0,keccak256_js_1.keccak256)(encodeData({data:value,primaryType:type,types}))];if(\"bytes\"===type)return value=`0x${(value.length%2?\"0\":\"\")+value.slice(2)}`,[{type:\"bytes32\"},(0,keccak256_js_1.keccak256)(value)];if(\"string\"===type)return[{type:\"bytes32\"},(0,keccak256_js_1.keccak256)((0,toHex_js_1.toHex)(value))];if(type.lastIndexOf(\"]\")===type.length-1){const parsedType=type.slice(0,\ntype.lastIndexOf(\"[\"));type=value.map(item=>encodeField({name,type:parsedType,types,value:item}));return[{type:\"bytes32\"},(0,keccak256_js_1.keccak256)((0,encodeAbiParameters_js_1.encodeAbiParameters)(type.map(([t])=>t),type.map(([,v])=>v)))]}return[{type},value]}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.hashDomain=exports.hashTypedData=void 0;const encodeAbiParameters_js_1=require(\"module$node_modules$viem$_cjs$utils$abi$encodeAbiParameters\"),concat_js_1=require(\"module$node_modules$viem$_cjs$utils$data$concat\"),\ntoHex_js_1=require(\"module$node_modules$viem$_cjs$utils$encoding$toHex\"),keccak256_js_1=require(\"module$node_modules$viem$_cjs$utils$hash$keccak256\"),typedData_js_1=require(\"module$node_modules$viem$_cjs$utils$typedData\");exports.hashTypedData=function({domain:domain_,message,primaryType,types:types_}){domain_=\"undefined\"===typeof domain_?{}:domain_;types_={EIP712Domain:(0,typedData_js_1.getTypesForEIP712Domain)({domain:domain_}),...types_};(0,typedData_js_1.validateTypedData)({domain:domain_,message,\nprimaryType,types:types_});const parts=[\"0x1901\"];domain_&&parts.push(hashDomain({domain:domain_,types:types_}));\"EIP712Domain\"!==primaryType&&parts.push(hashStruct({data:message,primaryType,types:types_}));return(0,keccak256_js_1.keccak256)((0,concat_js_1.concat)(parts))};exports.hashDomain=hashDomain}","~:source","shadow$provide[\"module$node_modules$viem$_cjs$utils$signature$hashTypedData\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hashDomain = exports.hashTypedData = void 0;\nconst encodeAbiParameters_js_1 = require(\"../abi/encodeAbiParameters.js\");\nconst concat_js_1 = require(\"../data/concat.js\");\nconst toHex_js_1 = require(\"../encoding/toHex.js\");\nconst keccak256_js_1 = require(\"../hash/keccak256.js\");\nconst typedData_js_1 = require(\"../typedData.js\");\nfunction hashTypedData({ domain: domain_, message, primaryType, types: types_, }) {\n    const domain = typeof domain_ === 'undefined' ? {} : domain_;\n    const types = {\n        EIP712Domain: (0, typedData_js_1.getTypesForEIP712Domain)({ domain }),\n        ...types_,\n    };\n    (0, typedData_js_1.validateTypedData)({\n        domain,\n        message,\n        primaryType,\n        types,\n    });\n    const parts = ['0x1901'];\n    if (domain)\n        parts.push(hashDomain({\n            domain,\n            types: types,\n        }));\n    if (primaryType !== 'EIP712Domain') {\n        parts.push(hashStruct({\n            data: message,\n            primaryType: primaryType,\n            types: types,\n        }));\n    }\n    return (0, keccak256_js_1.keccak256)((0, concat_js_1.concat)(parts));\n}\nexports.hashTypedData = hashTypedData;\nfunction hashDomain({ domain, types, }) {\n    return hashStruct({\n        data: domain,\n        primaryType: 'EIP712Domain',\n        types,\n    });\n}\nexports.hashDomain = hashDomain;\nfunction hashStruct({ data, primaryType, types, }) {\n    const encoded = encodeData({\n        data,\n        primaryType,\n        types,\n    });\n    return (0, keccak256_js_1.keccak256)(encoded);\n}\nfunction encodeData({ data, primaryType, types, }) {\n    const encodedTypes = [{ type: 'bytes32' }];\n    const encodedValues = [hashType({ primaryType, types })];\n    for (const field of types[primaryType]) {\n        const [type, value] = encodeField({\n            types,\n            name: field.name,\n            type: field.type,\n            value: data[field.name],\n        });\n        encodedTypes.push(type);\n        encodedValues.push(value);\n    }\n    return (0, encodeAbiParameters_js_1.encodeAbiParameters)(encodedTypes, encodedValues);\n}\nfunction hashType({ primaryType, types, }) {\n    const encodedHashType = (0, toHex_js_1.toHex)(encodeType({ primaryType, types }));\n    return (0, keccak256_js_1.keccak256)(encodedHashType);\n}\nfunction encodeType({ primaryType, types, }) {\n    let result = '';\n    const unsortedDeps = findTypeDependencies({ primaryType, types });\n    unsortedDeps.delete(primaryType);\n    const deps = [primaryType, ...Array.from(unsortedDeps).sort()];\n    for (const type of deps) {\n        result += `${type}(${types[type]\n            .map(({ name, type: t }) => `${t} ${name}`)\n            .join(',')})`;\n    }\n    return result;\n}\nfunction findTypeDependencies({ primaryType: primaryType_, types, }, results = new Set()) {\n    const match = primaryType_.match(/^\\w*/u);\n    const primaryType = match?.[0];\n    if (results.has(primaryType) || types[primaryType] === undefined) {\n        return results;\n    }\n    results.add(primaryType);\n    for (const field of types[primaryType]) {\n        findTypeDependencies({ primaryType: field.type, types }, results);\n    }\n    return results;\n}\nfunction encodeField({ types, name, type, value, }) {\n    if (types[type] !== undefined) {\n        return [\n            { type: 'bytes32' },\n            (0, keccak256_js_1.keccak256)(encodeData({ data: value, primaryType: type, types })),\n        ];\n    }\n    if (type === 'bytes') {\n        const prepend = value.length % 2 ? '0' : '';\n        value = `0x${prepend + value.slice(2)}`;\n        return [{ type: 'bytes32' }, (0, keccak256_js_1.keccak256)(value)];\n    }\n    if (type === 'string')\n        return [{ type: 'bytes32' }, (0, keccak256_js_1.keccak256)((0, toHex_js_1.toHex)(value))];\n    if (type.lastIndexOf(']') === type.length - 1) {\n        const parsedType = type.slice(0, type.lastIndexOf('['));\n        const typeValuePairs = value.map((item) => encodeField({\n            name,\n            type: parsedType,\n            types,\n            value: item,\n        }));\n        return [\n            { type: 'bytes32' },\n            (0, keccak256_js_1.keccak256)((0, encodeAbiParameters_js_1.encodeAbiParameters)(typeValuePairs.map(([t]) => t), typeValuePairs.map(([, v]) => v))),\n        ];\n    }\n    return [{ type }, value];\n}\n//# sourceMappingURL=hashTypedData.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$viem$_cjs$utils$typedData","~$module$node_modules$viem$_cjs$utils$data$concat","~$shadow.js","~$module$node_modules$viem$_cjs$utils$hash$keccak256","~$module$node_modules$viem$_cjs$utils$abi$encodeAbiParameters","~$module$node_modules$viem$_cjs$utils$encoding$toHex"]],"~:properties",["^5",["message","primaryType","__esModule","types","name","value","EIP712Domain","hashDomain","domain","hashTypedData","type","data"]],"~:compiled-at",1695111490303,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$viem$_cjs$utils$signature$hashTypedData.js\",\n\"lineCount\":7,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/viem/_cjs/utils/signature/hashTypedData.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$viem$_cjs$utils$signature$hashTypedData\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.hashDomain = exports.hashTypedData = void 0;\\nconst encodeAbiParameters_js_1 = require(\\\"../abi/encodeAbiParameters.js\\\");\\nconst concat_js_1 = require(\\\"../data/concat.js\\\");\\nconst toHex_js_1 = require(\\\"../encoding/toHex.js\\\");\\nconst keccak256_js_1 = require(\\\"../hash/keccak256.js\\\");\\nconst typedData_js_1 = require(\\\"../typedData.js\\\");\\nfunction hashTypedData({ domain: domain_, message, primaryType, types: types_, }) {\\n    const domain = typeof domain_ === 'undefined' ? {} : domain_;\\n    const types = {\\n        EIP712Domain: (0, typedData_js_1.getTypesForEIP712Domain)({ domain }),\\n        ...types_,\\n    };\\n    (0, typedData_js_1.validateTypedData)({\\n        domain,\\n        message,\\n        primaryType,\\n        types,\\n    });\\n    const parts = ['0x1901'];\\n    if (domain)\\n        parts.push(hashDomain({\\n            domain,\\n            types: types,\\n        }));\\n    if (primaryType !== 'EIP712Domain') {\\n        parts.push(hashStruct({\\n            data: message,\\n            primaryType: primaryType,\\n            types: types,\\n        }));\\n    }\\n    return (0, keccak256_js_1.keccak256)((0, concat_js_1.concat)(parts));\\n}\\nexports.hashTypedData = hashTypedData;\\nfunction hashDomain({ domain, types, }) {\\n    return hashStruct({\\n        data: domain,\\n        primaryType: 'EIP712Domain',\\n        types,\\n    });\\n}\\nexports.hashDomain = hashDomain;\\nfunction hashStruct({ data, primaryType, types, }) {\\n    const encoded = encodeData({\\n        data,\\n        primaryType,\\n        types,\\n    });\\n    return (0, keccak256_js_1.keccak256)(encoded);\\n}\\nfunction encodeData({ data, primaryType, types, }) {\\n    const encodedTypes = [{ type: 'bytes32' }];\\n    const encodedValues = [hashType({ primaryType, types })];\\n    for (const field of types[primaryType]) {\\n        const [type, value] = encodeField({\\n            types,\\n            name: field.name,\\n            type: field.type,\\n            value: data[field.name],\\n        });\\n        encodedTypes.push(type);\\n        encodedValues.push(value);\\n    }\\n    return (0, encodeAbiParameters_js_1.encodeAbiParameters)(encodedTypes, encodedValues);\\n}\\nfunction hashType({ primaryType, types, }) {\\n    const encodedHashType = (0, toHex_js_1.toHex)(encodeType({ primaryType, types }));\\n    return (0, keccak256_js_1.keccak256)(encodedHashType);\\n}\\nfunction encodeType({ primaryType, types, }) {\\n    let result = '';\\n    const unsortedDeps = findTypeDependencies({ primaryType, types });\\n    unsortedDeps.delete(primaryType);\\n    const deps = [primaryType, ...Array.from(unsortedDeps).sort()];\\n    for (const type of deps) {\\n        result += `${type}(${types[type]\\n            .map(({ name, type: t }) => `${t} ${name}`)\\n            .join(',')})`;\\n    }\\n    return result;\\n}\\nfunction findTypeDependencies({ primaryType: primaryType_, types, }, results = new Set()) {\\n    const match = primaryType_.match(/^\\\\w*/u);\\n    const primaryType = match?.[0];\\n    if (results.has(primaryType) || types[primaryType] === undefined) {\\n        return results;\\n    }\\n    results.add(primaryType);\\n    for (const field of types[primaryType]) {\\n        findTypeDependencies({ primaryType: field.type, types }, results);\\n    }\\n    return results;\\n}\\nfunction encodeField({ types, name, type, value, }) {\\n    if (types[type] !== undefined) {\\n        return [\\n            { type: 'bytes32' },\\n            (0, keccak256_js_1.keccak256)(encodeData({ data: value, primaryType: type, types })),\\n        ];\\n    }\\n    if (type === 'bytes') {\\n        const prepend = value.length % 2 ? '0' : '';\\n        value = `0x${prepend + value.slice(2)}`;\\n        return [{ type: 'bytes32' }, (0, keccak256_js_1.keccak256)(value)];\\n    }\\n    if (type === 'string')\\n        return [{ type: 'bytes32' }, (0, keccak256_js_1.keccak256)((0, toHex_js_1.toHex)(value))];\\n    if (type.lastIndexOf(']') === type.length - 1) {\\n        const parsedType = type.slice(0, type.lastIndexOf('['));\\n        const typeValuePairs = value.map((item) => encodeField({\\n            name,\\n            type: parsedType,\\n            types,\\n            value: item,\\n        }));\\n        return [\\n            { type: 'bytes32' },\\n            (0, keccak256_js_1.keccak256)((0, encodeAbiParameters_js_1.encodeAbiParameters)(typeValuePairs.map(([t]) => t), typeValuePairs.map(([, v]) => v))),\\n        ];\\n    }\\n    return [{ type }, value];\\n}\\n//# sourceMappingURL=hashTypedData.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"hashDomain\",\"domain\",\"types\",\"hashStruct\",\"data\",\"primaryType\",\"encoded\",\"encodeData\",\"keccak256_js_1\",\"keccak256\",\"encodedTypes\",\"type\",\"encodedValues\",\"hashType\",\"field\",\"value\",\"encodeField\",\"name\",\"push\",\"encodeAbiParameters_js_1\",\"encodeAbiParameters\",\"encodedHashType\",\"toHex_js_1\",\"toHex\",\"encodeType\",\"result\",\"unsortedDeps\",\"findTypeDependencies\",\"delete\",\"deps\",\"Array\",\"from\",\"sort\",\"map\",\"t\",\"join\",\"primaryType_\",\"results\",\"Set\",\"match\",\"has\",\"undefined\",\"add\",\"length\",\"prepend\",\"slice\",\"lastIndexOf\",\"parsedType\",\"typeValuePairs\",\"item\",\"v\",\"Object\",\"defineProperty\",\"hashTypedData\",\"concat_js_1\",\"typedData_js_1\",\"domain_\",\"message\",\"types_\",\"EIP712Domain\",\"getTypesForEIP712Domain\",\"validateTypedData\",\"parts\",\"concat\"]\n}\n"]