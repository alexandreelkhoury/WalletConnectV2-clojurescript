shadow$provide.module$node_modules$viem$_cjs$utils$encoding$fromHex=function(global,require,module,exports){function assertSize(hexOrBytes,{size}){if((0,size_js_1.size)(hexOrBytes)>size)throw new encoding_js_1.SizeOverflowError({givenSize:(0,size_js_1.size)(hexOrBytes),maxSize:size});}function hexToBigInt(hex,opts={}){const {signed}=opts;opts.size&&assertSize(hex,{size:opts.size});opts=BigInt(hex);if(!signed)return opts;hex=(hex.length-2)/2;return opts<=(1n<<8n*BigInt(hex)-1n)-1n?opts:opts-BigInt(`0x${"f".padStart(2*
hex,"f")}`)-1n}function hexToBool(hex_,opts={}){opts.size&&(assertSize(hex_,{size:opts.size}),hex_=(0,trim_js_1.trim)(hex_));if("0x00"===(0,trim_js_1.trim)(hex_))return!1;if("0x01"===(0,trim_js_1.trim)(hex_))return!0;throw new encoding_js_1.InvalidHexBooleanError(hex_);}function hexToNumber(hex,opts={}){return Number(hexToBigInt(hex,opts))}function hexToString(hex,opts={}){hex=(0,toBytes_js_1.hexToBytes)(hex);opts.size&&(assertSize(hex,{size:opts.size}),hex=(0,trim_js_1.trim)(hex,{dir:"right"}));
return(new TextDecoder).decode(hex)}Object.defineProperty(exports,"__esModule",{value:!0});exports.hexToString=exports.hexToNumber=exports.hexToBool=exports.hexToBigInt=exports.fromHex=exports.assertSize=void 0;const encoding_js_1=require("module$node_modules$viem$_cjs$errors$encoding"),size_js_1=require("module$node_modules$viem$_cjs$utils$data$size"),trim_js_1=require("module$node_modules$viem$_cjs$utils$data$trim"),toBytes_js_1=require("module$node_modules$viem$_cjs$utils$encoding$toBytes");exports.assertSize=
assertSize;exports.fromHex=function(hex,toOrOpts){toOrOpts="string"===typeof toOrOpts?{to:toOrOpts}:toOrOpts;const to=toOrOpts.to;return"number"===to?hexToNumber(hex,toOrOpts):"bigint"===to?hexToBigInt(hex,toOrOpts):"string"===to?hexToString(hex,toOrOpts):"boolean"===to?hexToBool(hex,toOrOpts):(0,toBytes_js_1.hexToBytes)(hex,toOrOpts)};exports.hexToBigInt=hexToBigInt;exports.hexToBool=hexToBool;exports.hexToNumber=hexToNumber;exports.hexToString=hexToString}
//# sourceMappingURL=module$node_modules$viem$_cjs$utils$encoding$fromHex.js.map
