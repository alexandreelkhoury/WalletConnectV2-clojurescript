["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/viem/_cjs/utils/abi/encodePacked.js"],"~:js","shadow$provide.module$node_modules$viem$_cjs$utils$abi$encodePacked=function(global,require,module,exports){function encode(type,value,isArray=!1){if(\"address\"===type){if(!(0,isAddress_js_1.isAddress)(value))throw new address_js_1.InvalidAddressError({address:value});return(0,pad_js_1.pad)(value.toLowerCase(),{size:isArray?32:null})}if(\"string\"===type)return(0,toHex_js_1.stringToHex)(value);if(\"bytes\"===type)return value;if(\"bool\"===type)return(0,pad_js_1.pad)((0,toHex_js_1.boolToHex)(value),{size:isArray?\n32:1});var intMatch=type.match(regex_js_1.integerRegex);if(intMatch){const [,baseType,bits=\"256\"]=intMatch;type=parseInt(bits)/8;return(0,toHex_js_1.numberToHex)(value,{size:isArray?32:type,signed:\"int\"===baseType})}if(intMatch=type.match(regex_js_1.bytesRegex)){[,type]=intMatch;if(parseInt(type)!==(value.length-2)/2)throw new abi_js_1.BytesSizeMismatchError({expectedSize:parseInt(type),givenSize:(value.length-2)/2});return(0,pad_js_1.pad)(value,{dir:\"right\",size:isArray?32:null})}if((isArray=type.match(regex_js_1.arrayRegex))&&\nArray.isArray(value)){[,isArray]=isArray;type=[];for(intMatch=0;intMatch<value.length;intMatch++)type.push(encode(isArray,value[intMatch],!0));return 0===type.length?\"0x\":(0,concat_js_1.concatHex)(type)}throw new abi_js_1.UnsupportedPackedAbiType(type);}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.encodePacked=void 0;const abi_js_1=require(\"module$node_modules$viem$_cjs$errors$abi\"),address_js_1=require(\"module$node_modules$viem$_cjs$errors$address\"),isAddress_js_1=require(\"module$node_modules$viem$_cjs$utils$address$isAddress\"),\nconcat_js_1=require(\"module$node_modules$viem$_cjs$utils$data$concat\"),pad_js_1=require(\"module$node_modules$viem$_cjs$utils$data$pad\"),toHex_js_1=require(\"module$node_modules$viem$_cjs$utils$encoding$toHex\"),regex_js_1=require(\"module$node_modules$viem$_cjs$utils$regex\");exports.encodePacked=function(types,values){if(types.length!==values.length)throw new abi_js_1.AbiEncodingLengthMismatchError({expectedLength:types.length,givenLength:values.length});const data=[];for(let i=0;i<types.length;i++)data.push(encode(types[i],\nvalues[i]));return(0,concat_js_1.concatHex)(data)}}","~:source","shadow$provide[\"module$node_modules$viem$_cjs$utils$abi$encodePacked\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.encodePacked = void 0;\nconst abi_js_1 = require(\"../../errors/abi.js\");\nconst address_js_1 = require(\"../../errors/address.js\");\nconst isAddress_js_1 = require(\"../address/isAddress.js\");\nconst concat_js_1 = require(\"../data/concat.js\");\nconst pad_js_1 = require(\"../data/pad.js\");\nconst toHex_js_1 = require(\"../encoding/toHex.js\");\nconst regex_js_1 = require(\"../regex.js\");\nfunction encodePacked(types, values) {\n    if (types.length !== values.length)\n        throw new abi_js_1.AbiEncodingLengthMismatchError({\n            expectedLength: types.length,\n            givenLength: values.length,\n        });\n    const data = [];\n    for (let i = 0; i < types.length; i++) {\n        const type = types[i];\n        const value = values[i];\n        data.push(encode(type, value));\n    }\n    return (0, concat_js_1.concatHex)(data);\n}\nexports.encodePacked = encodePacked;\nfunction encode(type, value, isArray = false) {\n    if (type === 'address') {\n        const address = value;\n        if (!(0, isAddress_js_1.isAddress)(address))\n            throw new address_js_1.InvalidAddressError({ address });\n        return (0, pad_js_1.pad)(address.toLowerCase(), {\n            size: isArray ? 32 : null,\n        });\n    }\n    if (type === 'string')\n        return (0, toHex_js_1.stringToHex)(value);\n    if (type === 'bytes')\n        return value;\n    if (type === 'bool')\n        return (0, pad_js_1.pad)((0, toHex_js_1.boolToHex)(value), { size: isArray ? 32 : 1 });\n    const intMatch = type.match(regex_js_1.integerRegex);\n    if (intMatch) {\n        const [_type, baseType, bits = '256'] = intMatch;\n        const size = parseInt(bits) / 8;\n        return (0, toHex_js_1.numberToHex)(value, {\n            size: isArray ? 32 : size,\n            signed: baseType === 'int',\n        });\n    }\n    const bytesMatch = type.match(regex_js_1.bytesRegex);\n    if (bytesMatch) {\n        const [_type, size] = bytesMatch;\n        if (parseInt(size) !== (value.length - 2) / 2)\n            throw new abi_js_1.BytesSizeMismatchError({\n                expectedSize: parseInt(size),\n                givenSize: (value.length - 2) / 2,\n            });\n        return (0, pad_js_1.pad)(value, { dir: 'right', size: isArray ? 32 : null });\n    }\n    const arrayMatch = type.match(regex_js_1.arrayRegex);\n    if (arrayMatch && Array.isArray(value)) {\n        const [_type, childType] = arrayMatch;\n        const data = [];\n        for (let i = 0; i < value.length; i++) {\n            data.push(encode(childType, value[i], true));\n        }\n        if (data.length === 0)\n            return '0x';\n        return (0, concat_js_1.concatHex)(data);\n    }\n    throw new abi_js_1.UnsupportedPackedAbiType(type);\n}\n//# sourceMappingURL=encodePacked.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$viem$_cjs$utils$data$pad","~$module$node_modules$viem$_cjs$utils$data$concat","~$module$node_modules$viem$_cjs$errors$address","~$shadow.js","~$module$node_modules$viem$_cjs$errors$abi","~$module$node_modules$viem$_cjs$utils$address$isAddress","~$module$node_modules$viem$_cjs$utils$regex","~$module$node_modules$viem$_cjs$utils$encoding$toHex"]],"~:properties",["^5",["encodePacked","signed","givenSize","expectedLength","__esModule","value","address","dir","expectedSize","size","givenLength"]],"~:compiled-at",1695111490308,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$viem$_cjs$utils$abi$encodePacked.js\",\n\"lineCount\":5,\n\"mappings\":\"AAAAA,cAAA,CAAA,oDAAA,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA0BjHC,QAASA,OAAM,CAACC,IAAD,CAAOC,KAAP,CAAcC,OAAA,CAAU,CAAA,CAAxB,CAA+B,CAC1C,GAAa,SAAb,GAAIF,IAAJ,CAAwB,CAEpB,GAAI,CAAC,GAAIG,cAAeC,CAAAA,SAAnB,EADWH,KACX,CAAL,CACI,KAAM,KAAII,YAAaC,CAAAA,mBAAjB,CAAqC,CAAEC,QAFjCN,KAE+B,CAArC,CAAN,CACJ,MAAO,GAAIO,QAASC,CAAAA,GAAb,EAHSR,KAGiBS,CAAAA,WAAR,EAAlB,CAAyC,CAC5CC,KAAMT,OAAA,CAAU,EAAV,CAAe,IADuB,CAAzC,CAJa,CAQxB,GAAa,QAAb,GAAIF,IAAJ,CACI,MAAO,GAAIY,UAAWC,CAAAA,WAAf,EAA4BZ,KAA5B,CACX,IAAa,OAAb,GAAID,IAAJ,CACI,MAAOC,MACX,IAAa,MAAb,GAAID,IAAJ,CACI,MAAO,GAAIQ,QAASC,CAAAA,GAAb,EAAkB,GAAIG,UAAWE,CAAAA,SAAf,EAA0Bb,KAA1B,CAAlB,CAAoD,CAAEU,KAAMT,OAAA;AAAU,EAAV,CAAe,CAAvB,CAApD,CACX,KAAMa,SAAWf,IAAKgB,CAAAA,KAAL,CAAWC,UAAWC,CAAAA,YAAtB,CACjB,IAAIH,QAAJ,CAAc,CACV,MAAM,CAAA,CAAQI,QAAR,CAAkBC,IAAA,CAAO,KAAzB,CAAA,CAAkCL,QAClCJ,KAAAA,CAAOU,QAAA,CAASD,IAAT,CAAPT,CAAwB,CAC9B,OAAO,GAAIC,UAAWU,CAAAA,WAAf,EAA4BrB,KAA5B,CAAmC,CACtCU,KAAMT,OAAA,CAAU,EAAV,CAAeS,IADiB,CAEtCY,OAAqB,KAArBA,GAAQJ,QAF8B,CAAnC,CAHG,CASd,GADMK,QACN,CADmBxB,IAAKgB,CAAAA,KAAL,CAAWC,UAAWQ,CAAAA,UAAtB,CACnB,CAAgB,CACN,CAAA,CAAQd,IAAR,CAAN,CAAsBa,QACtB,IAAIH,QAAA,CAASV,IAAT,CAAJ,IAAwBV,KAAMyB,CAAAA,MAA9B,CAAuC,CAAvC,EAA4C,CAA5C,CACI,KAAM,KAAIC,QAASC,CAAAA,sBAAb,CAAoC,CACtCC,aAAcR,QAAA,CAASV,IAAT,CADwB,CAEtCmB,WAAY7B,KAAMyB,CAAAA,MAAlBI,CAA2B,CAA3BA,EAAgC,CAFM,CAApC,CAAN,CAIJ,MAAO,GAAItB,QAASC,CAAAA,GAAb,EAAkBR,KAAlB,CAAyB,CAAE8B,IAAK,OAAP,CAAgBpB,KAAMT,OAAA,CAAU,EAAV,CAAe,IAArC,CAAzB,CAPK,CAUhB,IADM8B,OACN,CADmBhC,IAAKgB,CAAAA,KAAL,CAAWC,UAAWgB,CAAAA,UAAtB,CACnB;AAAkBC,KAAMhC,CAAAA,OAAN,CAAcD,KAAd,CAAlB,CAAwC,CAC9B,CAAA,CAAQkC,OAAR,CAAN,CAA2BH,OACrBI,KAAAA,CAAO,EACb,KAASC,QAAT,CAAa,CAAb,CAAgBA,QAAhB,CAAoBpC,KAAMyB,CAAAA,MAA1B,CAAkCW,QAAA,EAAlC,CACID,IAAKE,CAAAA,IAAL,CAAUvC,MAAA,CAAOoC,OAAP,CAAkBlC,KAAA,CAAMoC,QAAN,CAAlB,CAA4B,CAAA,CAA5B,CAAV,CAEJ,OAAoB,EAApB,GAAID,IAAKV,CAAAA,MAAT,CACW,IADX,CAEO,GAAIa,WAAYC,CAAAA,SAAhB,EAA2BJ,IAA3B,CAR6B,CAUxC,KAAM,KAAIT,QAASc,CAAAA,wBAAb,CAAsCzC,IAAtC,CAAN,CA7C0C,CAxB9C0C,MAAOC,CAAAA,cAAP,CAAsB7C,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAQ8C,CAAAA,YAAR,CAAuB,IAAK,EAC5B,OAAMjB,SAAW/B,OAAA,CAAQ,0CAAR,CAAjB,CACMS,aAAeT,OAAA,CAAQ,8CAAR,CADrB,CAEMO,eAAiBP,OAAA,CAAQ,uDAAR,CAFvB;AAGM2C,YAAc3C,OAAA,CAAQ,iDAAR,CAHpB,CAIMY,SAAWZ,OAAA,CAAQ,8CAAR,CAJjB,CAKMgB,WAAahB,OAAA,CAAQ,oDAAR,CALnB,CAMMqB,WAAarB,OAAA,CAAQ,2CAAR,CAenBE,QAAQ8C,CAAAA,YAAR,CAdAA,QAAqB,CAACC,KAAD,CAAQC,MAAR,CAAgB,CACjC,GAAID,KAAMnB,CAAAA,MAAV,GAAqBoB,MAAOpB,CAAAA,MAA5B,CACI,KAAM,KAAIC,QAASoB,CAAAA,8BAAb,CAA4C,CAC9CC,eAAgBH,KAAMnB,CAAAA,MADwB,CAE9CuB,YAAaH,MAAOpB,CAAAA,MAF0B,CAA5C,CAAN,CAIJ,MAAMU,KAAO,EACb,KAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBQ,KAAMnB,CAAAA,MAA1B,CAAkCW,CAAA,EAAlC,CAGID,IAAKE,CAAAA,IAAL,CAAUvC,MAAA,CAFG8C,KAAA7C,CAAMqC,CAANrC,CAEH;AADI8C,MAAA7C,CAAOoC,CAAPpC,CACJ,CAAV,CAEJ,OAAO,GAAIsC,WAAYC,CAAAA,SAAhB,EAA2BJ,IAA3B,CAZ0B,CAX4E;\",\n\"sources\":[\"node_modules/viem/_cjs/utils/abi/encodePacked.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$viem$_cjs$utils$abi$encodePacked\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.encodePacked = void 0;\\nconst abi_js_1 = require(\\\"../../errors/abi.js\\\");\\nconst address_js_1 = require(\\\"../../errors/address.js\\\");\\nconst isAddress_js_1 = require(\\\"../address/isAddress.js\\\");\\nconst concat_js_1 = require(\\\"../data/concat.js\\\");\\nconst pad_js_1 = require(\\\"../data/pad.js\\\");\\nconst toHex_js_1 = require(\\\"../encoding/toHex.js\\\");\\nconst regex_js_1 = require(\\\"../regex.js\\\");\\nfunction encodePacked(types, values) {\\n    if (types.length !== values.length)\\n        throw new abi_js_1.AbiEncodingLengthMismatchError({\\n            expectedLength: types.length,\\n            givenLength: values.length,\\n        });\\n    const data = [];\\n    for (let i = 0; i < types.length; i++) {\\n        const type = types[i];\\n        const value = values[i];\\n        data.push(encode(type, value));\\n    }\\n    return (0, concat_js_1.concatHex)(data);\\n}\\nexports.encodePacked = encodePacked;\\nfunction encode(type, value, isArray = false) {\\n    if (type === 'address') {\\n        const address = value;\\n        if (!(0, isAddress_js_1.isAddress)(address))\\n            throw new address_js_1.InvalidAddressError({ address });\\n        return (0, pad_js_1.pad)(address.toLowerCase(), {\\n            size: isArray ? 32 : null,\\n        });\\n    }\\n    if (type === 'string')\\n        return (0, toHex_js_1.stringToHex)(value);\\n    if (type === 'bytes')\\n        return value;\\n    if (type === 'bool')\\n        return (0, pad_js_1.pad)((0, toHex_js_1.boolToHex)(value), { size: isArray ? 32 : 1 });\\n    const intMatch = type.match(regex_js_1.integerRegex);\\n    if (intMatch) {\\n        const [_type, baseType, bits = '256'] = intMatch;\\n        const size = parseInt(bits) / 8;\\n        return (0, toHex_js_1.numberToHex)(value, {\\n            size: isArray ? 32 : size,\\n            signed: baseType === 'int',\\n        });\\n    }\\n    const bytesMatch = type.match(regex_js_1.bytesRegex);\\n    if (bytesMatch) {\\n        const [_type, size] = bytesMatch;\\n        if (parseInt(size) !== (value.length - 2) / 2)\\n            throw new abi_js_1.BytesSizeMismatchError({\\n                expectedSize: parseInt(size),\\n                givenSize: (value.length - 2) / 2,\\n            });\\n        return (0, pad_js_1.pad)(value, { dir: 'right', size: isArray ? 32 : null });\\n    }\\n    const arrayMatch = type.match(regex_js_1.arrayRegex);\\n    if (arrayMatch && Array.isArray(value)) {\\n        const [_type, childType] = arrayMatch;\\n        const data = [];\\n        for (let i = 0; i < value.length; i++) {\\n            data.push(encode(childType, value[i], true));\\n        }\\n        if (data.length === 0)\\n            return '0x';\\n        return (0, concat_js_1.concatHex)(data);\\n    }\\n    throw new abi_js_1.UnsupportedPackedAbiType(type);\\n}\\n//# sourceMappingURL=encodePacked.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"encode\",\"type\",\"value\",\"isArray\",\"isAddress_js_1\",\"isAddress\",\"address_js_1\",\"InvalidAddressError\",\"address\",\"pad_js_1\",\"pad\",\"toLowerCase\",\"size\",\"toHex_js_1\",\"stringToHex\",\"boolToHex\",\"intMatch\",\"match\",\"regex_js_1\",\"integerRegex\",\"baseType\",\"bits\",\"parseInt\",\"numberToHex\",\"signed\",\"bytesMatch\",\"bytesRegex\",\"length\",\"abi_js_1\",\"BytesSizeMismatchError\",\"expectedSize\",\"givenSize\",\"dir\",\"arrayMatch\",\"arrayRegex\",\"Array\",\"childType\",\"data\",\"i\",\"push\",\"concat_js_1\",\"concatHex\",\"UnsupportedPackedAbiType\",\"Object\",\"defineProperty\",\"encodePacked\",\"types\",\"values\",\"AbiEncodingLengthMismatchError\",\"expectedLength\",\"givenLength\"]\n}\n"]