shadow$provide.module$node_modules$$noble$hashes$hmac=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.hmac=exports.HMAC=void 0;const _assert_js_1=require("module$node_modules$$noble$hashes$_assert"),utils_js_1=require("module$node_modules$$noble$hashes$utils");class HMAC extends utils_js_1.Hash{constructor(hash,_key){super();this.destroyed=this.finished=!1;(0,_assert_js_1.hash)(hash);var key=(0,utils_js_1.toBytes)(_key);this.iHash=hash.create();
if("function"!==typeof this.iHash.update)throw Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen;this.outputLen=this.iHash.outputLen;const blockLen=this.blockLen;_key=new Uint8Array(blockLen);_key.set(key.length>blockLen?hash.create().update(key).digest():key);for(key=0;key<_key.length;key++)_key[key]^=54;this.iHash.update(_key);this.oHash=hash.create();for(hash=0;hash<_key.length;hash++)_key[hash]^=106;this.oHash.update(_key);_key.fill(0)}update(buf){(0,_assert_js_1.exists)(this);
this.iHash.update(buf);return this}digestInto(out){(0,_assert_js_1.exists)(this);(0,_assert_js_1.bytes)(out,this.outputLen);this.finished=!0;this.iHash.digestInto(out);this.oHash.update(out);this.oHash.digestInto(out);this.destroy()}digest(){const out=new Uint8Array(this.oHash.outputLen);this.digestInto(out);return out}_cloneInto(to){to||(to=Object.create(Object.getPrototypeOf(this),{}));const {oHash,iHash,finished,destroyed,blockLen,outputLen}=this;to.finished=finished;to.destroyed=destroyed;to.blockLen=
blockLen;to.outputLen=outputLen;to.oHash=oHash._cloneInto(to.oHash);to.iHash=iHash._cloneInto(to.iHash);return to}destroy(){this.destroyed=!0;this.oHash.destroy();this.iHash.destroy()}}exports.HMAC=HMAC;exports.hmac=(hash,key,message)=>(new HMAC(hash,key)).update(message).digest();exports.hmac.create=(hash,key)=>new HMAC(hash,key)}
//# sourceMappingURL=module$node_modules$$noble$hashes$hmac.js.map
