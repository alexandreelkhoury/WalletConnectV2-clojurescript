["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/viem/_cjs/errors/node.js"],"~:js","shadow$provide.module$node_modules$viem$_cjs$errors$node=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.UnknownNodeError=exports.TipAboveFeeCapError=exports.TransactionTypeNotSupportedError=exports.IntrinsicGasTooLowError=exports.IntrinsicGasTooHighError=exports.InsufficientFundsError=exports.NonceMaxValueError=exports.NonceTooLowError=exports.NonceTooHighError=exports.FeeCapTooLowError=exports.FeeCapTooHighError=exports.ExecutionRevertedError=\nvoid 0;const formatGwei_js_1=require(\"module$node_modules$viem$_cjs$utils$unit$formatGwei\");global=require(\"module$node_modules$viem$_cjs$errors$base\");class ExecutionRevertedError extends global.BaseError{constructor({cause,message}={}){message=message?.replace(\"execution reverted: \",\"\")?.replace(\"execution reverted\",\"\");super(`Execution reverted ${message?`with reason: ${message}`:\"for an unknown reason\"}.`,{cause});Object.defineProperty(this,\"name\",{enumerable:!0,configurable:!0,writable:!0,value:\"ExecutionRevertedError\"})}}\nexports.ExecutionRevertedError=ExecutionRevertedError;Object.defineProperty(ExecutionRevertedError,\"code\",{enumerable:!0,configurable:!0,writable:!0,value:3});Object.defineProperty(ExecutionRevertedError,\"nodeMessage\",{enumerable:!0,configurable:!0,writable:!0,value:/execution reverted/});class FeeCapTooHighError extends global.BaseError{constructor({cause,maxFeePerGas}={}){super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas?` = ${(0,formatGwei_js_1.formatGwei)(maxFeePerGas)} gwei`:\"\"}) cannot be higher than the maximum allowed value (2^256-1).`,\n{cause});Object.defineProperty(this,\"name\",{enumerable:!0,configurable:!0,writable:!0,value:\"FeeCapTooHigh\"})}}exports.FeeCapTooHighError=FeeCapTooHighError;Object.defineProperty(FeeCapTooHighError,\"nodeMessage\",{enumerable:!0,configurable:!0,writable:!0,value:/max fee per gas higher than 2\\^256-1|fee cap higher than 2\\^256-1/});class FeeCapTooLowError extends global.BaseError{constructor({cause,maxFeePerGas}={}){super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas?` = ${(0,formatGwei_js_1.formatGwei)(maxFeePerGas)}`:\n\"\"} gwei) cannot be lower than the block base fee.`,{cause});Object.defineProperty(this,\"name\",{enumerable:!0,configurable:!0,writable:!0,value:\"FeeCapTooLow\"})}}exports.FeeCapTooLowError=FeeCapTooLowError;Object.defineProperty(FeeCapTooLowError,\"nodeMessage\",{enumerable:!0,configurable:!0,writable:!0,value:/max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/});class NonceTooHighError extends global.BaseError{constructor({cause,nonce}={}){super(`Nonce provided for the transaction ${nonce?\n`(${nonce}) `:\"\"}is higher than the next one expected.`,{cause});Object.defineProperty(this,\"name\",{enumerable:!0,configurable:!0,writable:!0,value:\"NonceTooHighError\"})}}exports.NonceTooHighError=NonceTooHighError;Object.defineProperty(NonceTooHighError,\"nodeMessage\",{enumerable:!0,configurable:!0,writable:!0,value:/nonce too high/});class NonceTooLowError extends global.BaseError{constructor({cause,nonce}={}){super([`Nonce provided for the transaction ${nonce?`(${nonce}) `:\"\"}is lower than the current nonce of the account.`,\n\"Try increasing the nonce or find the latest nonce with `getTransactionCount`.\"].join(\"\\n\"),{cause});Object.defineProperty(this,\"name\",{enumerable:!0,configurable:!0,writable:!0,value:\"NonceTooLowError\"})}}exports.NonceTooLowError=NonceTooLowError;Object.defineProperty(NonceTooLowError,\"nodeMessage\",{enumerable:!0,configurable:!0,writable:!0,value:/nonce too low|transaction already imported|already known/});class NonceMaxValueError extends global.BaseError{constructor({cause,nonce}={}){super(`Nonce provided for the transaction ${nonce?\n`(${nonce}) `:\"\"}exceeds the maximum allowed nonce.`,{cause});Object.defineProperty(this,\"name\",{enumerable:!0,configurable:!0,writable:!0,value:\"NonceMaxValueError\"})}}exports.NonceMaxValueError=NonceMaxValueError;Object.defineProperty(NonceMaxValueError,\"nodeMessage\",{enumerable:!0,configurable:!0,writable:!0,value:/nonce has max value/});class InsufficientFundsError extends global.BaseError{constructor({cause}={}){super(\"The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.\",\n{cause,metaMessages:\"This error could arise when the account does not have enough funds to:; - pay for the total gas fee,; - pay for the value to send.; ;The cost of the transaction is calculated as `gas * gas fee + value`, where:; - `gas` is the amount of gas needed for transaction to execute,; - `gas fee` is the gas fee,; - `value` is the amount of ether to send to the recipient.\".split(\";\")});Object.defineProperty(this,\"name\",{enumerable:!0,configurable:!0,writable:!0,value:\"InsufficientFundsError\"})}}\nexports.InsufficientFundsError=InsufficientFundsError;Object.defineProperty(InsufficientFundsError,\"nodeMessage\",{enumerable:!0,configurable:!0,writable:!0,value:/insufficient funds/});class IntrinsicGasTooHighError extends global.BaseError{constructor({cause,gas}={}){super(`The amount of gas ${gas?`(${gas}) `:\"\"}provided for the transaction exceeds the limit allowed for the block.`,{cause});Object.defineProperty(this,\"name\",{enumerable:!0,configurable:!0,writable:!0,value:\"IntrinsicGasTooHighError\"})}}\nexports.IntrinsicGasTooHighError=IntrinsicGasTooHighError;Object.defineProperty(IntrinsicGasTooHighError,\"nodeMessage\",{enumerable:!0,configurable:!0,writable:!0,value:/intrinsic gas too high|gas limit reached/});class IntrinsicGasTooLowError extends global.BaseError{constructor({cause,gas}={}){super(`The amount of gas ${gas?`(${gas}) `:\"\"}provided for the transaction is too low.`,{cause});Object.defineProperty(this,\"name\",{enumerable:!0,configurable:!0,writable:!0,value:\"IntrinsicGasTooLowError\"})}}\nexports.IntrinsicGasTooLowError=IntrinsicGasTooLowError;Object.defineProperty(IntrinsicGasTooLowError,\"nodeMessage\",{enumerable:!0,configurable:!0,writable:!0,value:/intrinsic gas too low/});class TransactionTypeNotSupportedError extends global.BaseError{constructor({cause}){super(\"The transaction type is not supported for this chain.\",{cause});Object.defineProperty(this,\"name\",{enumerable:!0,configurable:!0,writable:!0,value:\"TransactionTypeNotSupportedError\"})}}exports.TransactionTypeNotSupportedError=\nTransactionTypeNotSupportedError;Object.defineProperty(TransactionTypeNotSupportedError,\"nodeMessage\",{enumerable:!0,configurable:!0,writable:!0,value:/transaction type not valid/});class TipAboveFeeCapError extends global.BaseError{constructor({cause,maxPriorityFeePerGas,maxFeePerGas}={}){super([`The provided tip (\\`maxPriorityFeePerGas\\`${maxPriorityFeePerGas?` = ${(0,formatGwei_js_1.formatGwei)(maxPriorityFeePerGas)} gwei`:\"\"}) cannot be higher than the fee cap (\\`maxFeePerGas\\`${maxFeePerGas?\n` = ${(0,formatGwei_js_1.formatGwei)(maxFeePerGas)} gwei`:\"\"}).`].join(\"\\n\"),{cause});Object.defineProperty(this,\"name\",{enumerable:!0,configurable:!0,writable:!0,value:\"TipAboveFeeCapError\"})}}exports.TipAboveFeeCapError=TipAboveFeeCapError;Object.defineProperty(TipAboveFeeCapError,\"nodeMessage\",{enumerable:!0,configurable:!0,writable:!0,value:/max priority fee per gas higher than max fee per gas|tip higher than fee cap/});class UnknownNodeError extends global.BaseError{constructor({cause}){super(`An error occurred while executing: ${cause?.shortMessage}`,\n{cause});Object.defineProperty(this,\"name\",{enumerable:!0,configurable:!0,writable:!0,value:\"UnknownNodeError\"})}}exports.UnknownNodeError=UnknownNodeError}","~:source","shadow$provide[\"module$node_modules$viem$_cjs$errors$node\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UnknownNodeError = exports.TipAboveFeeCapError = exports.TransactionTypeNotSupportedError = exports.IntrinsicGasTooLowError = exports.IntrinsicGasTooHighError = exports.InsufficientFundsError = exports.NonceMaxValueError = exports.NonceTooLowError = exports.NonceTooHighError = exports.FeeCapTooLowError = exports.FeeCapTooHighError = exports.ExecutionRevertedError = void 0;\nconst formatGwei_js_1 = require(\"../utils/unit/formatGwei.js\");\nconst base_js_1 = require(\"./base.js\");\nclass ExecutionRevertedError extends base_js_1.BaseError {\n    constructor({ cause, message, } = {}) {\n        const reason = message\n            ?.replace('execution reverted: ', '')\n            ?.replace('execution reverted', '');\n        super(`Execution reverted ${reason ? `with reason: ${reason}` : 'for an unknown reason'}.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ExecutionRevertedError'\n        });\n    }\n}\nexports.ExecutionRevertedError = ExecutionRevertedError;\nObject.defineProperty(ExecutionRevertedError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 3\n});\nObject.defineProperty(ExecutionRevertedError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /execution reverted/\n});\nclass FeeCapTooHighError extends base_js_1.BaseError {\n    constructor({ cause, maxFeePerGas, } = {}) {\n        super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${(0, formatGwei_js_1.formatGwei)(maxFeePerGas)} gwei` : ''}) cannot be higher than the maximum allowed value (2^256-1).`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeCapTooHigh'\n        });\n    }\n}\nexports.FeeCapTooHighError = FeeCapTooHighError;\nObject.defineProperty(FeeCapTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max fee per gas higher than 2\\^256-1|fee cap higher than 2\\^256-1/\n});\nclass FeeCapTooLowError extends base_js_1.BaseError {\n    constructor({ cause, maxFeePerGas, } = {}) {\n        super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${(0, formatGwei_js_1.formatGwei)(maxFeePerGas)}` : ''} gwei) cannot be lower than the block base fee.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeCapTooLow'\n        });\n    }\n}\nexports.FeeCapTooLowError = FeeCapTooLowError;\nObject.defineProperty(FeeCapTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/\n});\nclass NonceTooHighError extends base_js_1.BaseError {\n    constructor({ cause, nonce } = {}) {\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is higher than the next one expected.`, { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceTooHighError'\n        });\n    }\n}\nexports.NonceTooHighError = NonceTooHighError;\nObject.defineProperty(NonceTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce too high/\n});\nclass NonceTooLowError extends base_js_1.BaseError {\n    constructor({ cause, nonce } = {}) {\n        super([\n            `Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is lower than the current nonce of the account.`,\n            'Try increasing the nonce or find the latest nonce with `getTransactionCount`.',\n        ].join('\\n'), { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceTooLowError'\n        });\n    }\n}\nexports.NonceTooLowError = NonceTooLowError;\nObject.defineProperty(NonceTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce too low|transaction already imported|already known/\n});\nclass NonceMaxValueError extends base_js_1.BaseError {\n    constructor({ cause, nonce } = {}) {\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}exceeds the maximum allowed nonce.`, { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceMaxValueError'\n        });\n    }\n}\nexports.NonceMaxValueError = NonceMaxValueError;\nObject.defineProperty(NonceMaxValueError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce has max value/\n});\nclass InsufficientFundsError extends base_js_1.BaseError {\n    constructor({ cause } = {}) {\n        super([\n            'The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.',\n        ].join('\\n'), {\n            cause,\n            metaMessages: [\n                'This error could arise when the account does not have enough funds to:',\n                ' - pay for the total gas fee,',\n                ' - pay for the value to send.',\n                ' ',\n                'The cost of the transaction is calculated as `gas * gas fee + value`, where:',\n                ' - `gas` is the amount of gas needed for transaction to execute,',\n                ' - `gas fee` is the gas fee,',\n                ' - `value` is the amount of ether to send to the recipient.',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InsufficientFundsError'\n        });\n    }\n}\nexports.InsufficientFundsError = InsufficientFundsError;\nObject.defineProperty(InsufficientFundsError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /insufficient funds/\n});\nclass IntrinsicGasTooHighError extends base_js_1.BaseError {\n    constructor({ cause, gas } = {}) {\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction exceeds the limit allowed for the block.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'IntrinsicGasTooHighError'\n        });\n    }\n}\nexports.IntrinsicGasTooHighError = IntrinsicGasTooHighError;\nObject.defineProperty(IntrinsicGasTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /intrinsic gas too high|gas limit reached/\n});\nclass IntrinsicGasTooLowError extends base_js_1.BaseError {\n    constructor({ cause, gas } = {}) {\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction is too low.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'IntrinsicGasTooLowError'\n        });\n    }\n}\nexports.IntrinsicGasTooLowError = IntrinsicGasTooLowError;\nObject.defineProperty(IntrinsicGasTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /intrinsic gas too low/\n});\nclass TransactionTypeNotSupportedError extends base_js_1.BaseError {\n    constructor({ cause }) {\n        super('The transaction type is not supported for this chain.', {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionTypeNotSupportedError'\n        });\n    }\n}\nexports.TransactionTypeNotSupportedError = TransactionTypeNotSupportedError;\nObject.defineProperty(TransactionTypeNotSupportedError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /transaction type not valid/\n});\nclass TipAboveFeeCapError extends base_js_1.BaseError {\n    constructor({ cause, maxPriorityFeePerGas, maxFeePerGas, } = {}) {\n        super([\n            `The provided tip (\\`maxPriorityFeePerGas\\`${maxPriorityFeePerGas\n                ? ` = ${(0, formatGwei_js_1.formatGwei)(maxPriorityFeePerGas)} gwei`\n                : ''}) cannot be higher than the fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${(0, formatGwei_js_1.formatGwei)(maxFeePerGas)} gwei` : ''}).`,\n        ].join('\\n'), {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TipAboveFeeCapError'\n        });\n    }\n}\nexports.TipAboveFeeCapError = TipAboveFeeCapError;\nObject.defineProperty(TipAboveFeeCapError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max priority fee per gas higher than max fee per gas|tip higher than fee cap/\n});\nclass UnknownNodeError extends base_js_1.BaseError {\n    constructor({ cause }) {\n        super(`An error occurred while executing: ${cause?.shortMessage}`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'UnknownNodeError'\n        });\n    }\n}\nexports.UnknownNodeError = UnknownNodeError;\n//# sourceMappingURL=node.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$viem$_cjs$errors$base","~$shadow.js","~$module$node_modules$viem$_cjs$utils$unit$formatGwei"]],"~:properties",["^5",["IntrinsicGasTooHighError","TransactionTypeNotSupportedError","__esModule","ExecutionRevertedError","IntrinsicGasTooLowError","nodeMessage","name","configurable","NonceTooHighError","cause","NonceTooLowError","FeeCapTooHighError","value","NonceMaxValueError","enumerable","writable","FeeCapTooLowError","TipAboveFeeCapError","metaMessages","InsufficientFundsError","code","UnknownNodeError"]],"~:compiled-at",1695064956399,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$viem$_cjs$errors$node.js\",\n\"lineCount\":15,\n\"mappings\":\"AAAAA,cAAA,CAAA,yCAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEtGC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAQI,CAAAA,gBAAR,CAA2BJ,OAAQK,CAAAA,mBAAnC,CAAyDL,OAAQM,CAAAA,gCAAjE,CAAoGN,OAAQO,CAAAA,uBAA5G,CAAsIP,OAAQQ,CAAAA,wBAA9I,CAAyKR,OAAQS,CAAAA,sBAAjL,CAA0MT,OAAQU,CAAAA,kBAAlN,CAAuOV,OAAQW,CAAAA,gBAA/O,CAAkQX,OAAQY,CAAAA,iBAA1Q,CAA8RZ,OAAQa,CAAAA,iBAAtS,CAA0Tb,OAAQc,CAAAA,kBAAlU,CAAuVd,OAAQe,CAAAA,sBAA/V;AAAwX,IAAK,EAC7X,OAAMC,gBAAkBlB,OAAA,CAAQ,qDAAR,CAClBmB,OAAAA,CAAYnB,OAAA,CAAQ,2CAAR,CAClB,MAAMiB,uBAAN,QAAqCE,OAAUC,CAAAA,SAA/C,CACIC,WAAW,CAAC,CAAEC,KAAF,CAASC,OAAT,CAAA,CAAsB,EAAvB,CAA2B,CAC5BC,OAAAA,CAASD,OACTE,EAAAA,OADS,CACD,sBADC,CACuB,EADvB,CAETA,EAAAA,OAFS,CAED,oBAFC,CAEqB,EAFrB,CAGf,MAAA,CAAO,sBAAqBD,OAAA,CAAU,gBAAeA,OAAf,EAAV,CAAoC,uBAAzD,GAAP,CAA4F,CACxFF,KADwF,CAA5F,CAGAnB,OAAOC,CAAAA,cAAP,CAAsB,IAAtB,CAA4B,MAA5B,CAAoC,CAChCsB,WAAY,CAAA,CADoB,CAEhCC,aAAc,CAAA,CAFkB,CAGhCC,SAAU,CAAA,CAHsB,CAIhCvB,MAAO,wBAJyB,CAApC,CAPkC,CAD1C;AAgBAH,OAAQe,CAAAA,sBAAR,CAAiCA,sBACjCd,OAAOC,CAAAA,cAAP,CAAsBa,sBAAtB,CAA8C,MAA9C,CAAsD,CAClDS,WAAY,CAAA,CADsC,CAElDC,aAAc,CAAA,CAFoC,CAGlDC,SAAU,CAAA,CAHwC,CAIlDvB,MAAO,CAJ2C,CAAtD,CAMAF,OAAOC,CAAAA,cAAP,CAAsBa,sBAAtB,CAA8C,aAA9C,CAA6D,CACzDS,WAAY,CAAA,CAD6C,CAEzDC,aAAc,CAAA,CAF2C,CAGzDC,SAAU,CAAA,CAH+C,CAIzDvB,MAAO,oBAJkD,CAA7D,CAMA,MAAMW,mBAAN,QAAiCG,OAAUC,CAAAA,SAA3C,CACIC,WAAW,CAAC,CAAEC,KAAF,CAASO,YAAT,CAAA,CAA2B,EAA5B,CAAgC,CACvC,KAAA,CAAO,gCAA+BA,YAAA,CAAgB,MAAK,GAAIX,eAAgBY,CAAAA,UAApB,EAAgCD,YAAhC,CAAL,OAAhB,CAA4E,EAA3G,8DAAP;AAAoL,CAChLP,KADgL,CAApL,CAGAnB,OAAOC,CAAAA,cAAP,CAAsB,IAAtB,CAA4B,MAA5B,CAAoC,CAChCsB,WAAY,CAAA,CADoB,CAEhCC,aAAc,CAAA,CAFkB,CAGhCC,SAAU,CAAA,CAHsB,CAIhCvB,MAAO,eAJyB,CAApC,CAJuC,CAD/C,CAaAH,OAAQc,CAAAA,kBAAR,CAA6BA,kBAC7Bb,OAAOC,CAAAA,cAAP,CAAsBY,kBAAtB,CAA0C,aAA1C,CAAyD,CACrDU,WAAY,CAAA,CADyC,CAErDC,aAAc,CAAA,CAFuC,CAGrDC,SAAU,CAAA,CAH2C,CAIrDvB,MAAO,mEAJ8C,CAAzD,CAMA,MAAMU,kBAAN,QAAgCI,OAAUC,CAAAA,SAA1C,CACIC,WAAW,CAAC,CAAEC,KAAF,CAASO,YAAT,CAAA,CAA2B,EAA5B,CAAgC,CACvC,KAAA,CAAO,gCAA+BA,YAAA,CAAgB,MAAK,GAAIX,eAAgBY,CAAAA,UAApB,EAAgCD,YAAhC,CAAL,EAAhB;AAAuE,EAAtG,iDAAP,CAAkK,CAC9JP,KAD8J,CAAlK,CAGAnB,OAAOC,CAAAA,cAAP,CAAsB,IAAtB,CAA4B,MAA5B,CAAoC,CAChCsB,WAAY,CAAA,CADoB,CAEhCC,aAAc,CAAA,CAFkB,CAGhCC,SAAU,CAAA,CAHsB,CAIhCvB,MAAO,cAJyB,CAApC,CAJuC,CAD/C,CAaAH,OAAQa,CAAAA,iBAAR,CAA4BA,iBAC5BZ,OAAOC,CAAAA,cAAP,CAAsBW,iBAAtB,CAAyC,aAAzC,CAAwD,CACpDW,WAAY,CAAA,CADwC,CAEpDC,aAAc,CAAA,CAFsC,CAGpDC,SAAU,CAAA,CAH0C,CAIpDvB,MAAO,mGAJ6C,CAAxD,CAMA,MAAMS,kBAAN,QAAgCK,OAAUC,CAAAA,SAA1C,CACIC,WAAW,CAAC,CAAEC,KAAF,CAASS,KAAT,CAAA,CAAmB,EAApB,CAAwB,CAC/B,KAAA,CAAO,sCAAqCA,KAAA;AAAS,IAAGA,KAAH,IAAT,CAAwB,EAA7D,uCAAP,CAA+G,CAAET,KAAF,CAA/G,CACAnB,OAAOC,CAAAA,cAAP,CAAsB,IAAtB,CAA4B,MAA5B,CAAoC,CAChCsB,WAAY,CAAA,CADoB,CAEhCC,aAAc,CAAA,CAFkB,CAGhCC,SAAU,CAAA,CAHsB,CAIhCvB,MAAO,mBAJyB,CAApC,CAF+B,CADvC,CAWAH,OAAQY,CAAAA,iBAAR,CAA4BA,iBAC5BX,OAAOC,CAAAA,cAAP,CAAsBU,iBAAtB,CAAyC,aAAzC,CAAwD,CACpDY,WAAY,CAAA,CADwC,CAEpDC,aAAc,CAAA,CAFsC,CAGpDC,SAAU,CAAA,CAH0C,CAIpDvB,MAAO,gBAJ6C,CAAxD,CAMA,MAAMQ,iBAAN,QAA+BM,OAAUC,CAAAA,SAAzC,CACIC,WAAW,CAAC,CAAEC,KAAF,CAASS,KAAT,CAAA,CAAmB,EAApB,CAAwB,CAC/B,KAAA,CAAM,CACD,sCAAqCA,KAAA,CAAS,IAAGA,KAAH,IAAT,CAAwB,EAA7D,iDADC;AAEF,+EAFE,CAGJC,CAAAA,IAHI,CAGC,IAHD,CAAN,CAGc,CAAEV,KAAF,CAHd,CAIAnB,OAAOC,CAAAA,cAAP,CAAsB,IAAtB,CAA4B,MAA5B,CAAoC,CAChCsB,WAAY,CAAA,CADoB,CAEhCC,aAAc,CAAA,CAFkB,CAGhCC,SAAU,CAAA,CAHsB,CAIhCvB,MAAO,kBAJyB,CAApC,CAL+B,CADvC,CAcAH,OAAQW,CAAAA,gBAAR,CAA2BA,gBAC3BV,OAAOC,CAAAA,cAAP,CAAsBS,gBAAtB,CAAwC,aAAxC,CAAuD,CACnDa,WAAY,CAAA,CADuC,CAEnDC,aAAc,CAAA,CAFqC,CAGnDC,SAAU,CAAA,CAHyC,CAInDvB,MAAO,0DAJ4C,CAAvD,CAMA,MAAMO,mBAAN,QAAiCO,OAAUC,CAAAA,SAA3C,CACIC,WAAW,CAAC,CAAEC,KAAF,CAASS,KAAT,CAAA,CAAmB,EAApB,CAAwB,CAC/B,KAAA,CAAO,sCAAqCA,KAAA;AAAS,IAAGA,KAAH,IAAT,CAAwB,EAA7D,oCAAP,CAA4G,CAAET,KAAF,CAA5G,CACAnB,OAAOC,CAAAA,cAAP,CAAsB,IAAtB,CAA4B,MAA5B,CAAoC,CAChCsB,WAAY,CAAA,CADoB,CAEhCC,aAAc,CAAA,CAFkB,CAGhCC,SAAU,CAAA,CAHsB,CAIhCvB,MAAO,oBAJyB,CAApC,CAF+B,CADvC,CAWAH,OAAQU,CAAAA,kBAAR,CAA6BA,kBAC7BT,OAAOC,CAAAA,cAAP,CAAsBQ,kBAAtB,CAA0C,aAA1C,CAAyD,CACrDc,WAAY,CAAA,CADyC,CAErDC,aAAc,CAAA,CAFuC,CAGrDC,SAAU,CAAA,CAH2C,CAIrDvB,MAAO,qBAJ8C,CAAzD,CAMA,MAAMM,uBAAN,QAAqCQ,OAAUC,CAAAA,SAA/C,CACIC,WAAW,CAAC,CAAEC,KAAF,CAAA,CAAY,EAAb,CAAiB,CACxB,KAAA,CACI,0GADJ;AAEc,CACVA,KADU,CAEVW,aAAc,6WAAA,CAAA,KAAA,CAAA,GAAA,CAFJ,CAFd,CAeA9B,OAAOC,CAAAA,cAAP,CAAsB,IAAtB,CAA4B,MAA5B,CAAoC,CAChCsB,WAAY,CAAA,CADoB,CAEhCC,aAAc,CAAA,CAFkB,CAGhCC,SAAU,CAAA,CAHsB,CAIhCvB,MAAO,wBAJyB,CAApC,CAhBwB,CADhC;AAyBAH,OAAQS,CAAAA,sBAAR,CAAiCA,sBACjCR,OAAOC,CAAAA,cAAP,CAAsBO,sBAAtB,CAA8C,aAA9C,CAA6D,CACzDe,WAAY,CAAA,CAD6C,CAEzDC,aAAc,CAAA,CAF2C,CAGzDC,SAAU,CAAA,CAH+C,CAIzDvB,MAAO,oBAJkD,CAA7D,CAMA,MAAMK,yBAAN,QAAuCS,OAAUC,CAAAA,SAAjD,CACIC,WAAW,CAAC,CAAEC,KAAF,CAASY,GAAT,CAAA,CAAiB,EAAlB,CAAsB,CAC7B,KAAA,CAAO,qBAAoBA,GAAA,CAAO,IAAGA,GAAH,IAAP,CAAoB,EAAxC,uEAAP,CAA0H,CACtHZ,KADsH,CAA1H,CAGAnB,OAAOC,CAAAA,cAAP,CAAsB,IAAtB,CAA4B,MAA5B,CAAoC,CAChCsB,WAAY,CAAA,CADoB,CAEhCC,aAAc,CAAA,CAFkB,CAGhCC,SAAU,CAAA,CAHsB,CAIhCvB,MAAO,0BAJyB,CAApC,CAJ6B,CADrC;AAaAH,OAAQQ,CAAAA,wBAAR,CAAmCA,wBACnCP,OAAOC,CAAAA,cAAP,CAAsBM,wBAAtB,CAAgD,aAAhD,CAA+D,CAC3DgB,WAAY,CAAA,CAD+C,CAE3DC,aAAc,CAAA,CAF6C,CAG3DC,SAAU,CAAA,CAHiD,CAI3DvB,MAAO,0CAJoD,CAA/D,CAMA,MAAMI,wBAAN,QAAsCU,OAAUC,CAAAA,SAAhD,CACIC,WAAW,CAAC,CAAEC,KAAF,CAASY,GAAT,CAAA,CAAiB,EAAlB,CAAsB,CAC7B,KAAA,CAAO,qBAAoBA,GAAA,CAAO,IAAGA,GAAH,IAAP,CAAoB,EAAxC,0CAAP,CAA6F,CACzFZ,KADyF,CAA7F,CAGAnB,OAAOC,CAAAA,cAAP,CAAsB,IAAtB,CAA4B,MAA5B,CAAoC,CAChCsB,WAAY,CAAA,CADoB,CAEhCC,aAAc,CAAA,CAFkB,CAGhCC,SAAU,CAAA,CAHsB,CAIhCvB,MAAO,yBAJyB,CAApC,CAJ6B,CADrC;AAaAH,OAAQO,CAAAA,uBAAR,CAAkCA,uBAClCN,OAAOC,CAAAA,cAAP,CAAsBK,uBAAtB,CAA+C,aAA/C,CAA8D,CAC1DiB,WAAY,CAAA,CAD8C,CAE1DC,aAAc,CAAA,CAF4C,CAG1DC,SAAU,CAAA,CAHgD,CAI1DvB,MAAO,uBAJmD,CAA9D,CAMA,MAAMG,iCAAN,QAA+CW,OAAUC,CAAAA,SAAzD,CACIC,WAAW,CAAC,CAAEC,KAAF,CAAD,CAAY,CACnB,KAAA,CAAM,uDAAN,CAA+D,CAC3DA,KAD2D,CAA/D,CAGAnB,OAAOC,CAAAA,cAAP,CAAsB,IAAtB,CAA4B,MAA5B,CAAoC,CAChCsB,WAAY,CAAA,CADoB,CAEhCC,aAAc,CAAA,CAFkB,CAGhCC,SAAU,CAAA,CAHsB,CAIhCvB,MAAO,kCAJyB,CAApC,CAJmB,CAD3B,CAaAH,OAAQM,CAAAA,gCAAR;AAA2CA,gCAC3CL,OAAOC,CAAAA,cAAP,CAAsBI,gCAAtB,CAAwD,aAAxD,CAAuE,CACnEkB,WAAY,CAAA,CADuD,CAEnEC,aAAc,CAAA,CAFqD,CAGnEC,SAAU,CAAA,CAHyD,CAInEvB,MAAO,4BAJ4D,CAAvE,CAMA,MAAME,oBAAN,QAAkCY,OAAUC,CAAAA,SAA5C,CACIC,WAAW,CAAC,CAAEC,KAAF,CAASa,oBAAT,CAA+BN,YAA/B,CAAA,CAAiD,EAAlD,CAAsD,CAC7D,KAAA,CAAM,CACD,6CAA4CM,oBAAA,CACtC,MAAK,GAAIjB,eAAgBY,CAAAA,UAApB,EAAgCK,oBAAhC,CAAL,OADsC,CAEvC,EAFL,wDAE+DN,YAAA;AAAgB,MAAK,GAAIX,eAAgBY,CAAAA,UAApB,EAAgCD,YAAhC,CAAL,OAAhB,CAA4E,EAF3I,IADC,CAIJG,CAAAA,IAJI,CAIC,IAJD,CAAN,CAIc,CACVV,KADU,CAJd,CAOAnB,OAAOC,CAAAA,cAAP,CAAsB,IAAtB,CAA4B,MAA5B,CAAoC,CAChCsB,WAAY,CAAA,CADoB,CAEhCC,aAAc,CAAA,CAFkB,CAGhCC,SAAU,CAAA,CAHsB,CAIhCvB,MAAO,qBAJyB,CAApC,CAR6D,CADrE,CAiBAH,OAAQK,CAAAA,mBAAR,CAA8BA,mBAC9BJ,OAAOC,CAAAA,cAAP,CAAsBG,mBAAtB,CAA2C,aAA3C,CAA0D,CACtDmB,WAAY,CAAA,CAD0C,CAEtDC,aAAc,CAAA,CAFwC,CAGtDC,SAAU,CAAA,CAH4C,CAItDvB,MAAO,8EAJ+C,CAA1D,CAMA,MAAMC,iBAAN,QAA+Ba,OAAUC,CAAAA,SAAzC,CACIC,WAAW,CAAC,CAAEC,KAAF,CAAD,CAAY,CACnB,KAAA,CAAO,sCAAqCA,KAAOc,EAAAA,YAA5C,EAAP;AAAmE,CAC/Dd,KAD+D,CAAnE,CAGAnB,OAAOC,CAAAA,cAAP,CAAsB,IAAtB,CAA4B,MAA5B,CAAoC,CAChCsB,WAAY,CAAA,CADoB,CAEhCC,aAAc,CAAA,CAFkB,CAGhCC,SAAU,CAAA,CAHsB,CAIhCvB,MAAO,kBAJyB,CAApC,CAJmB,CAD3B,CAaAH,OAAQI,CAAAA,gBAAR,CAA2BA,gBArQ2E;\",\n\"sources\":[\"node_modules/viem/_cjs/errors/node.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$viem$_cjs$errors$node\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.UnknownNodeError = exports.TipAboveFeeCapError = exports.TransactionTypeNotSupportedError = exports.IntrinsicGasTooLowError = exports.IntrinsicGasTooHighError = exports.InsufficientFundsError = exports.NonceMaxValueError = exports.NonceTooLowError = exports.NonceTooHighError = exports.FeeCapTooLowError = exports.FeeCapTooHighError = exports.ExecutionRevertedError = void 0;\\nconst formatGwei_js_1 = require(\\\"../utils/unit/formatGwei.js\\\");\\nconst base_js_1 = require(\\\"./base.js\\\");\\nclass ExecutionRevertedError extends base_js_1.BaseError {\\n    constructor({ cause, message, } = {}) {\\n        const reason = message\\n            ?.replace('execution reverted: ', '')\\n            ?.replace('execution reverted', '');\\n        super(`Execution reverted ${reason ? `with reason: ${reason}` : 'for an unknown reason'}.`, {\\n            cause,\\n        });\\n        Object.defineProperty(this, \\\"name\\\", {\\n            enumerable: true,\\n            configurable: true,\\n            writable: true,\\n            value: 'ExecutionRevertedError'\\n        });\\n    }\\n}\\nexports.ExecutionRevertedError = ExecutionRevertedError;\\nObject.defineProperty(ExecutionRevertedError, \\\"code\\\", {\\n    enumerable: true,\\n    configurable: true,\\n    writable: true,\\n    value: 3\\n});\\nObject.defineProperty(ExecutionRevertedError, \\\"nodeMessage\\\", {\\n    enumerable: true,\\n    configurable: true,\\n    writable: true,\\n    value: /execution reverted/\\n});\\nclass FeeCapTooHighError extends base_js_1.BaseError {\\n    constructor({ cause, maxFeePerGas, } = {}) {\\n        super(`The fee cap (\\\\`maxFeePerGas\\\\`${maxFeePerGas ? ` = ${(0, formatGwei_js_1.formatGwei)(maxFeePerGas)} gwei` : ''}) cannot be higher than the maximum allowed value (2^256-1).`, {\\n            cause,\\n        });\\n        Object.defineProperty(this, \\\"name\\\", {\\n            enumerable: true,\\n            configurable: true,\\n            writable: true,\\n            value: 'FeeCapTooHigh'\\n        });\\n    }\\n}\\nexports.FeeCapTooHighError = FeeCapTooHighError;\\nObject.defineProperty(FeeCapTooHighError, \\\"nodeMessage\\\", {\\n    enumerable: true,\\n    configurable: true,\\n    writable: true,\\n    value: /max fee per gas higher than 2\\\\^256-1|fee cap higher than 2\\\\^256-1/\\n});\\nclass FeeCapTooLowError extends base_js_1.BaseError {\\n    constructor({ cause, maxFeePerGas, } = {}) {\\n        super(`The fee cap (\\\\`maxFeePerGas\\\\`${maxFeePerGas ? ` = ${(0, formatGwei_js_1.formatGwei)(maxFeePerGas)}` : ''} gwei) cannot be lower than the block base fee.`, {\\n            cause,\\n        });\\n        Object.defineProperty(this, \\\"name\\\", {\\n            enumerable: true,\\n            configurable: true,\\n            writable: true,\\n            value: 'FeeCapTooLow'\\n        });\\n    }\\n}\\nexports.FeeCapTooLowError = FeeCapTooLowError;\\nObject.defineProperty(FeeCapTooLowError, \\\"nodeMessage\\\", {\\n    enumerable: true,\\n    configurable: true,\\n    writable: true,\\n    value: /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/\\n});\\nclass NonceTooHighError extends base_js_1.BaseError {\\n    constructor({ cause, nonce } = {}) {\\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is higher than the next one expected.`, { cause });\\n        Object.defineProperty(this, \\\"name\\\", {\\n            enumerable: true,\\n            configurable: true,\\n            writable: true,\\n            value: 'NonceTooHighError'\\n        });\\n    }\\n}\\nexports.NonceTooHighError = NonceTooHighError;\\nObject.defineProperty(NonceTooHighError, \\\"nodeMessage\\\", {\\n    enumerable: true,\\n    configurable: true,\\n    writable: true,\\n    value: /nonce too high/\\n});\\nclass NonceTooLowError extends base_js_1.BaseError {\\n    constructor({ cause, nonce } = {}) {\\n        super([\\n            `Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is lower than the current nonce of the account.`,\\n            'Try increasing the nonce or find the latest nonce with `getTransactionCount`.',\\n        ].join('\\\\n'), { cause });\\n        Object.defineProperty(this, \\\"name\\\", {\\n            enumerable: true,\\n            configurable: true,\\n            writable: true,\\n            value: 'NonceTooLowError'\\n        });\\n    }\\n}\\nexports.NonceTooLowError = NonceTooLowError;\\nObject.defineProperty(NonceTooLowError, \\\"nodeMessage\\\", {\\n    enumerable: true,\\n    configurable: true,\\n    writable: true,\\n    value: /nonce too low|transaction already imported|already known/\\n});\\nclass NonceMaxValueError extends base_js_1.BaseError {\\n    constructor({ cause, nonce } = {}) {\\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}exceeds the maximum allowed nonce.`, { cause });\\n        Object.defineProperty(this, \\\"name\\\", {\\n            enumerable: true,\\n            configurable: true,\\n            writable: true,\\n            value: 'NonceMaxValueError'\\n        });\\n    }\\n}\\nexports.NonceMaxValueError = NonceMaxValueError;\\nObject.defineProperty(NonceMaxValueError, \\\"nodeMessage\\\", {\\n    enumerable: true,\\n    configurable: true,\\n    writable: true,\\n    value: /nonce has max value/\\n});\\nclass InsufficientFundsError extends base_js_1.BaseError {\\n    constructor({ cause } = {}) {\\n        super([\\n            'The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.',\\n        ].join('\\\\n'), {\\n            cause,\\n            metaMessages: [\\n                'This error could arise when the account does not have enough funds to:',\\n                ' - pay for the total gas fee,',\\n                ' - pay for the value to send.',\\n                ' ',\\n                'The cost of the transaction is calculated as `gas * gas fee + value`, where:',\\n                ' - `gas` is the amount of gas needed for transaction to execute,',\\n                ' - `gas fee` is the gas fee,',\\n                ' - `value` is the amount of ether to send to the recipient.',\\n            ],\\n        });\\n        Object.defineProperty(this, \\\"name\\\", {\\n            enumerable: true,\\n            configurable: true,\\n            writable: true,\\n            value: 'InsufficientFundsError'\\n        });\\n    }\\n}\\nexports.InsufficientFundsError = InsufficientFundsError;\\nObject.defineProperty(InsufficientFundsError, \\\"nodeMessage\\\", {\\n    enumerable: true,\\n    configurable: true,\\n    writable: true,\\n    value: /insufficient funds/\\n});\\nclass IntrinsicGasTooHighError extends base_js_1.BaseError {\\n    constructor({ cause, gas } = {}) {\\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction exceeds the limit allowed for the block.`, {\\n            cause,\\n        });\\n        Object.defineProperty(this, \\\"name\\\", {\\n            enumerable: true,\\n            configurable: true,\\n            writable: true,\\n            value: 'IntrinsicGasTooHighError'\\n        });\\n    }\\n}\\nexports.IntrinsicGasTooHighError = IntrinsicGasTooHighError;\\nObject.defineProperty(IntrinsicGasTooHighError, \\\"nodeMessage\\\", {\\n    enumerable: true,\\n    configurable: true,\\n    writable: true,\\n    value: /intrinsic gas too high|gas limit reached/\\n});\\nclass IntrinsicGasTooLowError extends base_js_1.BaseError {\\n    constructor({ cause, gas } = {}) {\\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction is too low.`, {\\n            cause,\\n        });\\n        Object.defineProperty(this, \\\"name\\\", {\\n            enumerable: true,\\n            configurable: true,\\n            writable: true,\\n            value: 'IntrinsicGasTooLowError'\\n        });\\n    }\\n}\\nexports.IntrinsicGasTooLowError = IntrinsicGasTooLowError;\\nObject.defineProperty(IntrinsicGasTooLowError, \\\"nodeMessage\\\", {\\n    enumerable: true,\\n    configurable: true,\\n    writable: true,\\n    value: /intrinsic gas too low/\\n});\\nclass TransactionTypeNotSupportedError extends base_js_1.BaseError {\\n    constructor({ cause }) {\\n        super('The transaction type is not supported for this chain.', {\\n            cause,\\n        });\\n        Object.defineProperty(this, \\\"name\\\", {\\n            enumerable: true,\\n            configurable: true,\\n            writable: true,\\n            value: 'TransactionTypeNotSupportedError'\\n        });\\n    }\\n}\\nexports.TransactionTypeNotSupportedError = TransactionTypeNotSupportedError;\\nObject.defineProperty(TransactionTypeNotSupportedError, \\\"nodeMessage\\\", {\\n    enumerable: true,\\n    configurable: true,\\n    writable: true,\\n    value: /transaction type not valid/\\n});\\nclass TipAboveFeeCapError extends base_js_1.BaseError {\\n    constructor({ cause, maxPriorityFeePerGas, maxFeePerGas, } = {}) {\\n        super([\\n            `The provided tip (\\\\`maxPriorityFeePerGas\\\\`${maxPriorityFeePerGas\\n                ? ` = ${(0, formatGwei_js_1.formatGwei)(maxPriorityFeePerGas)} gwei`\\n                : ''}) cannot be higher than the fee cap (\\\\`maxFeePerGas\\\\`${maxFeePerGas ? ` = ${(0, formatGwei_js_1.formatGwei)(maxFeePerGas)} gwei` : ''}).`,\\n        ].join('\\\\n'), {\\n            cause,\\n        });\\n        Object.defineProperty(this, \\\"name\\\", {\\n            enumerable: true,\\n            configurable: true,\\n            writable: true,\\n            value: 'TipAboveFeeCapError'\\n        });\\n    }\\n}\\nexports.TipAboveFeeCapError = TipAboveFeeCapError;\\nObject.defineProperty(TipAboveFeeCapError, \\\"nodeMessage\\\", {\\n    enumerable: true,\\n    configurable: true,\\n    writable: true,\\n    value: /max priority fee per gas higher than max fee per gas|tip higher than fee cap/\\n});\\nclass UnknownNodeError extends base_js_1.BaseError {\\n    constructor({ cause }) {\\n        super(`An error occurred while executing: ${cause?.shortMessage}`, {\\n            cause,\\n        });\\n        Object.defineProperty(this, \\\"name\\\", {\\n            enumerable: true,\\n            configurable: true,\\n            writable: true,\\n            value: 'UnknownNodeError'\\n        });\\n    }\\n}\\nexports.UnknownNodeError = UnknownNodeError;\\n//# sourceMappingURL=node.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"UnknownNodeError\",\"TipAboveFeeCapError\",\"TransactionTypeNotSupportedError\",\"IntrinsicGasTooLowError\",\"IntrinsicGasTooHighError\",\"InsufficientFundsError\",\"NonceMaxValueError\",\"NonceTooLowError\",\"NonceTooHighError\",\"FeeCapTooLowError\",\"FeeCapTooHighError\",\"ExecutionRevertedError\",\"formatGwei_js_1\",\"base_js_1\",\"BaseError\",\"constructor\",\"cause\",\"message\",\"reason\",\"replace\",\"enumerable\",\"configurable\",\"writable\",\"maxFeePerGas\",\"formatGwei\",\"nonce\",\"join\",\"metaMessages\",\"gas\",\"maxPriorityFeePerGas\",\"shortMessage\"]\n}\n"]