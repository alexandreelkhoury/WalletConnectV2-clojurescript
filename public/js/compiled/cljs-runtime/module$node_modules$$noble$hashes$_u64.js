shadow$provide.module$node_modules$$noble$hashes$_u64=function(global,require,module,exports){function fromBig(n,le=!1){return le?{h:Number(n&U32_MASK64),l:Number(n>>_32n&U32_MASK64)}:{h:Number(n>>_32n&U32_MASK64)|0,l:Number(n&U32_MASK64)|0}}function split(lst,le=!1){let Ah=new Uint32Array(lst.length),Al=new Uint32Array(lst.length);for(let i=0;i<lst.length;i++){const {h,l}=fromBig(lst[i],le);[Ah[i],Al[i]]=[h,l]}return[Ah,Al]}function add(Ah,Al,Bh,Bl){Al=(Al>>>0)+(Bl>>>0);return{h:Ah+Bh+(Al/2**32|
0)|0,l:Al|0}}Object.defineProperty(exports,"__esModule",{value:!0});exports.add5L=exports.add5H=exports.add4H=exports.add4L=exports.add3H=exports.add3L=exports.add=exports.rotlBL=exports.rotlBH=exports.rotlSL=exports.rotlSH=exports.rotr32L=exports.rotr32H=exports.rotrBL=exports.rotrBH=exports.rotrSL=exports.rotrSH=exports.shrSL=exports.shrSH=exports.toBig=exports.split=exports.fromBig=void 0;const U32_MASK64=BigInt(2**32-1),_32n=BigInt(32);exports.fromBig=fromBig;exports.split=split;global=(h,l)=>
BigInt(h>>>0)<<_32n|BigInt(l>>>0);exports.toBig=global;require=(h,_l,s)=>h>>>s;exports.shrSH=require;module=(h,l,s)=>h<<32-s|l>>>s;exports.shrSL=module;const rotrSH=(h,l,s)=>h>>>s|l<<32-s;exports.rotrSH=rotrSH;const rotrSL=(h,l,s)=>h<<32-s|l>>>s;exports.rotrSL=rotrSL;const rotrBH=(h,l,s)=>h<<64-s|l>>>s-32;exports.rotrBH=rotrBH;const rotrBL=(h,l,s)=>h>>>s-32|l<<64-s;exports.rotrBL=rotrBL;const rotr32H=(_h,l)=>l;exports.rotr32H=rotr32H;const rotr32L=(h,_l)=>h;exports.rotr32L=rotr32L;const rotlSH=(h,
l,s)=>h<<s|l>>>32-s;exports.rotlSH=rotlSH;const rotlSL=(h,l,s)=>l<<s|h>>>32-s;exports.rotlSL=rotlSL;const rotlBH=(h,l,s)=>l<<s-32|h>>>64-s;exports.rotlBH=rotlBH;const rotlBL=(h,l,s)=>h<<s-32|l>>>64-s;exports.rotlBL=rotlBL;exports.add=add;const add3L=(Al,Bl,Cl)=>(Al>>>0)+(Bl>>>0)+(Cl>>>0);exports.add3L=add3L;const add3H=(low,Ah,Bh,Ch)=>Ah+Bh+Ch+(low/2**32|0)|0;exports.add3H=add3H;const add4L=(Al,Bl,Cl,Dl)=>(Al>>>0)+(Bl>>>0)+(Cl>>>0)+(Dl>>>0);exports.add4L=add4L;const add4H=(low,Ah,Bh,Ch,Dh)=>Ah+Bh+
Ch+Dh+(low/2**32|0)|0;exports.add4H=add4H;const add5L=(Al,Bl,Cl,Dl,El)=>(Al>>>0)+(Bl>>>0)+(Cl>>>0)+(Dl>>>0)+(El>>>0);exports.add5L=add5L;const add5H=(low,Ah,Bh,Ch,Dh,Eh)=>Ah+Bh+Ch+Dh+Eh+(low/2**32|0)|0;exports.add5H=add5H;exports.default={fromBig,split,toBig:global,shrSH:require,shrSL:module,rotrSH,rotrSL,rotrBH,rotrBL,rotr32H,rotr32L,rotlSH,rotlSL,rotlBH,rotlBL,add,add3L,add3H,add4L,add4H,add5H,add5L}}
//# sourceMappingURL=module$node_modules$$noble$hashes$_u64.js.map
