shadow$provide.module$node_modules$$tanstack$react_query$build$lib$suspense=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.ensureStaleTime=defaultedOptions=>{defaultedOptions.suspense&&"number"!==typeof defaultedOptions.staleTime&&(defaultedOptions.staleTime=1E3)};exports.fetchOptimistic=(defaultedOptions,observer,errorResetBoundary)=>observer.fetchOptimistic(defaultedOptions).then(({data})=>{null==defaultedOptions.onSuccess?void 0:defaultedOptions.onSuccess(data);
null==defaultedOptions.onSettled?void 0:defaultedOptions.onSettled(data,null)}).catch(error=>{errorResetBoundary.clearReset();null==defaultedOptions.onError?void 0:defaultedOptions.onError(error);null==defaultedOptions.onSettled?void 0:defaultedOptions.onSettled(void 0,error)});exports.shouldSuspend=(defaultedOptions,result,isRestoring)=>(null==defaultedOptions?void 0:defaultedOptions.suspense)&&result.isLoading&&result.isFetching&&!isRestoring;exports.willFetch=(result,isRestoring)=>result.isLoading&&
result.isFetching&&!isRestoring}
//# sourceMappingURL=module$node_modules$$tanstack$react_query$build$lib$suspense.js.map
