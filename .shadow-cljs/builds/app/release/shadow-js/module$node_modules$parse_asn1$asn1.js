["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/parse-asn1/asn1.js"],"~:js","shadow$provide[243]=function(S,A,V,q){S=A(241);q.certificate=A(242);A=S.define(\"RSAPrivateKey\",function(){this.seq().obj(this.key(\"version\").int(),this.key(\"modulus\").int(),this.key(\"publicExponent\").int(),this.key(\"privateExponent\").int(),this.key(\"prime1\").int(),this.key(\"prime2\").int(),this.key(\"exponent1\").int(),this.key(\"exponent2\").int(),this.key(\"coefficient\").int())});q.RSAPrivateKey=A;A=S.define(\"RSAPublicKey\",function(){this.seq().obj(this.key(\"modulus\").int(),this.key(\"publicExponent\").int())});\nq.RSAPublicKey=A;A=S.define(\"SubjectPublicKeyInfo\",function(){this.seq().obj(this.key(\"algorithm\").use(F),this.key(\"subjectPublicKey\").bitstr())});q.PublicKey=A;var F=S.define(\"AlgorithmIdentifier\",function(){this.seq().obj(this.key(\"algorithm\").objid(),this.key(\"none\").null_().optional(),this.key(\"curve\").objid().optional(),this.key(\"params\").seq().obj(this.key(\"p\").int(),this.key(\"q\").int(),this.key(\"g\").int()).optional())});A=S.define(\"PrivateKeyInfo\",function(){this.seq().obj(this.key(\"version\").int(),\nthis.key(\"algorithm\").use(F),this.key(\"subjectPrivateKey\").octstr())});q.PrivateKey=A;A=S.define(\"EncryptedPrivateKeyInfo\",function(){this.seq().obj(this.key(\"algorithm\").seq().obj(this.key(\"id\").objid(),this.key(\"decrypt\").seq().obj(this.key(\"kde\").seq().obj(this.key(\"id\").objid(),this.key(\"kdeparams\").seq().obj(this.key(\"salt\").octstr(),this.key(\"iters\").int())),this.key(\"cipher\").seq().obj(this.key(\"algo\").objid(),this.key(\"iv\").octstr()))),this.key(\"subjectPrivateKey\").octstr())});q.EncryptedPrivateKey=\nA;A=S.define(\"DSAPrivateKey\",function(){this.seq().obj(this.key(\"version\").int(),this.key(\"p\").int(),this.key(\"q\").int(),this.key(\"g\").int(),this.key(\"pub_key\").int(),this.key(\"priv_key\").int())});q.DSAPrivateKey=A;q.DSAparam=S.define(\"DSAparam\",function(){this.int()});A=S.define(\"ECPrivateKey\",function(){this.seq().obj(this.key(\"version\").int(),this.key(\"privateKey\").octstr(),this.key(\"parameters\").optional().explicit(0).use(G),this.key(\"publicKey\").optional().explicit(1).bitstr())});q.ECPrivateKey=\nA;var G=S.define(\"ECParameters\",function(){this.choice({namedCurve:this.objid()})});q.signature=S.define(\"signature\",function(){this.seq().obj(this.key(\"r\").int(),this.key(\"s\").int())})}","~:source","shadow$provide[243] = function(global,require,module,exports) {\n// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js\n// Fedor, you are amazing.\n'use strict'\n\nvar asn1 = require('asn1.js')\n\nexports.certificate = require('./certificate')\n\nvar RSAPrivateKey = asn1.define('RSAPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('modulus').int(),\n    this.key('publicExponent').int(),\n    this.key('privateExponent').int(),\n    this.key('prime1').int(),\n    this.key('prime2').int(),\n    this.key('exponent1').int(),\n    this.key('exponent2').int(),\n    this.key('coefficient').int()\n  )\n})\nexports.RSAPrivateKey = RSAPrivateKey\n\nvar RSAPublicKey = asn1.define('RSAPublicKey', function () {\n  this.seq().obj(\n    this.key('modulus').int(),\n    this.key('publicExponent').int()\n  )\n})\nexports.RSAPublicKey = RSAPublicKey\n\nvar PublicKey = asn1.define('SubjectPublicKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('subjectPublicKey').bitstr()\n  )\n})\nexports.PublicKey = PublicKey\n\nvar AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {\n  this.seq().obj(\n    this.key('algorithm').objid(),\n    this.key('none').null_().optional(),\n    this.key('curve').objid().optional(),\n    this.key('params').seq().obj(\n      this.key('p').int(),\n      this.key('q').int(),\n      this.key('g').int()\n    ).optional()\n  )\n})\n\nvar PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('subjectPrivateKey').octstr()\n  )\n})\nexports.PrivateKey = PrivateKeyInfo\nvar EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').seq().obj(\n      this.key('id').objid(),\n      this.key('decrypt').seq().obj(\n        this.key('kde').seq().obj(\n          this.key('id').objid(),\n          this.key('kdeparams').seq().obj(\n            this.key('salt').octstr(),\n            this.key('iters').int()\n          )\n        ),\n        this.key('cipher').seq().obj(\n          this.key('algo').objid(),\n          this.key('iv').octstr()\n        )\n      )\n    ),\n    this.key('subjectPrivateKey').octstr()\n  )\n})\n\nexports.EncryptedPrivateKey = EncryptedPrivateKeyInfo\n\nvar DSAPrivateKey = asn1.define('DSAPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('p').int(),\n    this.key('q').int(),\n    this.key('g').int(),\n    this.key('pub_key').int(),\n    this.key('priv_key').int()\n  )\n})\nexports.DSAPrivateKey = DSAPrivateKey\n\nexports.DSAparam = asn1.define('DSAparam', function () {\n  this.int()\n})\n\nvar ECPrivateKey = asn1.define('ECPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('privateKey').octstr(),\n    this.key('parameters').optional().explicit(0).use(ECParameters),\n    this.key('publicKey').optional().explicit(1).bitstr()\n  )\n})\nexports.ECPrivateKey = ECPrivateKey\n\nvar ECParameters = asn1.define('ECParameters', function () {\n  this.choice({\n    namedCurve: this.objid()\n  })\n})\n\nexports.signature = asn1.define('signature', function () {\n  this.seq().obj(\n    this.key('r').int(),\n    this.key('s').int()\n  )\n})\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$parse_asn1$certificate","~$shadow.js","~$module$node_modules$asn1_DOT_js$lib$asn1"]],"~:properties",["^5",["PrivateKey","EncryptedPrivateKey","ECPrivateKey","DSAPrivateKey","RSAPrivateKey","certificate","DSAparam","signature","namedCurve","RSAPublicKey","PublicKey"]],"~:compiled-at",1695041440860,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$parse_asn1$asn1.js\",\n\"lineCount\":5,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/parse-asn1/asn1.js\"],\n\"sourcesContent\":[\"shadow$provide[243] = function(global,require,module,exports) {\\n// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js\\n// Fedor, you are amazing.\\n'use strict'\\n\\nvar asn1 = require('asn1.js')\\n\\nexports.certificate = require('./certificate')\\n\\nvar RSAPrivateKey = asn1.define('RSAPrivateKey', function () {\\n  this.seq().obj(\\n    this.key('version').int(),\\n    this.key('modulus').int(),\\n    this.key('publicExponent').int(),\\n    this.key('privateExponent').int(),\\n    this.key('prime1').int(),\\n    this.key('prime2').int(),\\n    this.key('exponent1').int(),\\n    this.key('exponent2').int(),\\n    this.key('coefficient').int()\\n  )\\n})\\nexports.RSAPrivateKey = RSAPrivateKey\\n\\nvar RSAPublicKey = asn1.define('RSAPublicKey', function () {\\n  this.seq().obj(\\n    this.key('modulus').int(),\\n    this.key('publicExponent').int()\\n  )\\n})\\nexports.RSAPublicKey = RSAPublicKey\\n\\nvar PublicKey = asn1.define('SubjectPublicKeyInfo', function () {\\n  this.seq().obj(\\n    this.key('algorithm').use(AlgorithmIdentifier),\\n    this.key('subjectPublicKey').bitstr()\\n  )\\n})\\nexports.PublicKey = PublicKey\\n\\nvar AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {\\n  this.seq().obj(\\n    this.key('algorithm').objid(),\\n    this.key('none').null_().optional(),\\n    this.key('curve').objid().optional(),\\n    this.key('params').seq().obj(\\n      this.key('p').int(),\\n      this.key('q').int(),\\n      this.key('g').int()\\n    ).optional()\\n  )\\n})\\n\\nvar PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {\\n  this.seq().obj(\\n    this.key('version').int(),\\n    this.key('algorithm').use(AlgorithmIdentifier),\\n    this.key('subjectPrivateKey').octstr()\\n  )\\n})\\nexports.PrivateKey = PrivateKeyInfo\\nvar EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {\\n  this.seq().obj(\\n    this.key('algorithm').seq().obj(\\n      this.key('id').objid(),\\n      this.key('decrypt').seq().obj(\\n        this.key('kde').seq().obj(\\n          this.key('id').objid(),\\n          this.key('kdeparams').seq().obj(\\n            this.key('salt').octstr(),\\n            this.key('iters').int()\\n          )\\n        ),\\n        this.key('cipher').seq().obj(\\n          this.key('algo').objid(),\\n          this.key('iv').octstr()\\n        )\\n      )\\n    ),\\n    this.key('subjectPrivateKey').octstr()\\n  )\\n})\\n\\nexports.EncryptedPrivateKey = EncryptedPrivateKeyInfo\\n\\nvar DSAPrivateKey = asn1.define('DSAPrivateKey', function () {\\n  this.seq().obj(\\n    this.key('version').int(),\\n    this.key('p').int(),\\n    this.key('q').int(),\\n    this.key('g').int(),\\n    this.key('pub_key').int(),\\n    this.key('priv_key').int()\\n  )\\n})\\nexports.DSAPrivateKey = DSAPrivateKey\\n\\nexports.DSAparam = asn1.define('DSAparam', function () {\\n  this.int()\\n})\\n\\nvar ECPrivateKey = asn1.define('ECPrivateKey', function () {\\n  this.seq().obj(\\n    this.key('version').int(),\\n    this.key('privateKey').octstr(),\\n    this.key('parameters').optional().explicit(0).use(ECParameters),\\n    this.key('publicKey').optional().explicit(1).bitstr()\\n  )\\n})\\nexports.ECPrivateKey = ECPrivateKey\\n\\nvar ECParameters = asn1.define('ECParameters', function () {\\n  this.choice({\\n    namedCurve: this.objid()\\n  })\\n})\\n\\nexports.signature = asn1.define('signature', function () {\\n  this.seq().obj(\\n    this.key('r').int(),\\n    this.key('s').int()\\n  )\\n})\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"asn1\",\"certificate\",\"RSAPrivateKey\",\"define\",\"seq\",\"obj\",\"key\",\"int\",\"RSAPublicKey\",\"PublicKey\",\"use\",\"AlgorithmIdentifier\",\"bitstr\",\"objid\",\"null_\",\"optional\",\"PrivateKeyInfo\",\"octstr\",\"PrivateKey\",\"EncryptedPrivateKeyInfo\",\"EncryptedPrivateKey\",\"DSAPrivateKey\",\"DSAparam\",\"ECPrivateKey\",\"explicit\",\"ECParameters\",\"choice\",\"namedCurve\",\"signature\"]\n}\n"]