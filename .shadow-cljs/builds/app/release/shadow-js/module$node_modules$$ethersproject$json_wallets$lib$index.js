["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@ethersproject/json-wallets/lib/index.js"],"~:js","shadow$provide[292]=function(S,A,V,q){Object.defineProperty(q,\"__esModule\",{value:!0});q.decryptJsonWalletSync=q.decryptJsonWallet=q.getJsonWalletAddress=q.isKeystoreWallet=q.isCrowdsaleWallet=q.encryptKeystore=q.decryptKeystoreSync=q.decryptKeystore=q.decryptCrowdsale=void 0;var F=A(288);Object.defineProperty(q,\"decryptCrowdsale\",{enumerable:!0,get:function(){return F.decrypt}});var G=A(289);Object.defineProperty(q,\"getJsonWalletAddress\",{enumerable:!0,get:function(){return G.getJsonWalletAddress}});\nObject.defineProperty(q,\"isCrowdsaleWallet\",{enumerable:!0,get:function(){return G.isCrowdsaleWallet}});Object.defineProperty(q,\"isKeystoreWallet\",{enumerable:!0,get:function(){return G.isKeystoreWallet}});var r=A(291);Object.defineProperty(q,\"decryptKeystore\",{enumerable:!0,get:function(){return r.decrypt}});Object.defineProperty(q,\"decryptKeystoreSync\",{enumerable:!0,get:function(){return r.decryptSync}});Object.defineProperty(q,\"encryptKeystore\",{enumerable:!0,get:function(){return r.encrypt}});\nq.decryptJsonWallet=function(y,e,u){return(0,G.isCrowdsaleWallet)(y)?(u&&u(0),y=(0,F.decrypt)(y,e),u&&u(1),Promise.resolve(y)):(0,G.isKeystoreWallet)(y)?(0,r.decrypt)(y,e,u):Promise.reject(Error(\"invalid JSON wallet\"))};q.decryptJsonWalletSync=function(y,e){if((0,G.isCrowdsaleWallet)(y))return(0,F.decrypt)(y,e);if((0,G.isKeystoreWallet)(y))return(0,r.decryptSync)(y,e);throw Error(\"invalid JSON wallet\");}}","~:source","shadow$provide[292] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decryptJsonWalletSync = exports.decryptJsonWallet = exports.getJsonWalletAddress = exports.isKeystoreWallet = exports.isCrowdsaleWallet = exports.encryptKeystore = exports.decryptKeystoreSync = exports.decryptKeystore = exports.decryptCrowdsale = void 0;\nvar crowdsale_1 = require(\"./crowdsale\");\nObject.defineProperty(exports, \"decryptCrowdsale\", { enumerable: true, get: function () { return crowdsale_1.decrypt; } });\nvar inspect_1 = require(\"./inspect\");\nObject.defineProperty(exports, \"getJsonWalletAddress\", { enumerable: true, get: function () { return inspect_1.getJsonWalletAddress; } });\nObject.defineProperty(exports, \"isCrowdsaleWallet\", { enumerable: true, get: function () { return inspect_1.isCrowdsaleWallet; } });\nObject.defineProperty(exports, \"isKeystoreWallet\", { enumerable: true, get: function () { return inspect_1.isKeystoreWallet; } });\nvar keystore_1 = require(\"./keystore\");\nObject.defineProperty(exports, \"decryptKeystore\", { enumerable: true, get: function () { return keystore_1.decrypt; } });\nObject.defineProperty(exports, \"decryptKeystoreSync\", { enumerable: true, get: function () { return keystore_1.decryptSync; } });\nObject.defineProperty(exports, \"encryptKeystore\", { enumerable: true, get: function () { return keystore_1.encrypt; } });\nfunction decryptJsonWallet(json, password, progressCallback) {\n    if ((0, inspect_1.isCrowdsaleWallet)(json)) {\n        if (progressCallback) {\n            progressCallback(0);\n        }\n        var account = (0, crowdsale_1.decrypt)(json, password);\n        if (progressCallback) {\n            progressCallback(1);\n        }\n        return Promise.resolve(account);\n    }\n    if ((0, inspect_1.isKeystoreWallet)(json)) {\n        return (0, keystore_1.decrypt)(json, password, progressCallback);\n    }\n    return Promise.reject(new Error(\"invalid JSON wallet\"));\n}\nexports.decryptJsonWallet = decryptJsonWallet;\nfunction decryptJsonWalletSync(json, password) {\n    if ((0, inspect_1.isCrowdsaleWallet)(json)) {\n        return (0, crowdsale_1.decrypt)(json, password);\n    }\n    if ((0, inspect_1.isKeystoreWallet)(json)) {\n        return (0, keystore_1.decryptSync)(json, password);\n    }\n    throw new Error(\"invalid JSON wallet\");\n}\nexports.decryptJsonWalletSync = decryptJsonWalletSync;\n//# sourceMappingURL=index.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$ethersproject$json_wallets$lib$crowdsale","~$module$node_modules$$ethersproject$json_wallets$lib$inspect","~$shadow.js","~$module$node_modules$$ethersproject$json_wallets$lib$keystore"]],"~:properties",["^5",["encryptKeystore","decryptJsonWallet","decryptCrowdsale","__esModule","isCrowdsaleWallet","value","enumerable","isKeystoreWallet","decryptKeystore","decryptJsonWalletSync","get","getJsonWalletAddress","decryptKeystoreSync"]],"~:compiled-at",1695041440889,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$ethersproject$json_wallets$lib$index.js\",\n\"lineCount\":3,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@ethersproject/json-wallets/lib/index.js\"],\n\"sourcesContent\":[\"shadow$provide[292] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.decryptJsonWalletSync = exports.decryptJsonWallet = exports.getJsonWalletAddress = exports.isKeystoreWallet = exports.isCrowdsaleWallet = exports.encryptKeystore = exports.decryptKeystoreSync = exports.decryptKeystore = exports.decryptCrowdsale = void 0;\\nvar crowdsale_1 = require(\\\"./crowdsale\\\");\\nObject.defineProperty(exports, \\\"decryptCrowdsale\\\", { enumerable: true, get: function () { return crowdsale_1.decrypt; } });\\nvar inspect_1 = require(\\\"./inspect\\\");\\nObject.defineProperty(exports, \\\"getJsonWalletAddress\\\", { enumerable: true, get: function () { return inspect_1.getJsonWalletAddress; } });\\nObject.defineProperty(exports, \\\"isCrowdsaleWallet\\\", { enumerable: true, get: function () { return inspect_1.isCrowdsaleWallet; } });\\nObject.defineProperty(exports, \\\"isKeystoreWallet\\\", { enumerable: true, get: function () { return inspect_1.isKeystoreWallet; } });\\nvar keystore_1 = require(\\\"./keystore\\\");\\nObject.defineProperty(exports, \\\"decryptKeystore\\\", { enumerable: true, get: function () { return keystore_1.decrypt; } });\\nObject.defineProperty(exports, \\\"decryptKeystoreSync\\\", { enumerable: true, get: function () { return keystore_1.decryptSync; } });\\nObject.defineProperty(exports, \\\"encryptKeystore\\\", { enumerable: true, get: function () { return keystore_1.encrypt; } });\\nfunction decryptJsonWallet(json, password, progressCallback) {\\n    if ((0, inspect_1.isCrowdsaleWallet)(json)) {\\n        if (progressCallback) {\\n            progressCallback(0);\\n        }\\n        var account = (0, crowdsale_1.decrypt)(json, password);\\n        if (progressCallback) {\\n            progressCallback(1);\\n        }\\n        return Promise.resolve(account);\\n    }\\n    if ((0, inspect_1.isKeystoreWallet)(json)) {\\n        return (0, keystore_1.decrypt)(json, password, progressCallback);\\n    }\\n    return Promise.reject(new Error(\\\"invalid JSON wallet\\\"));\\n}\\nexports.decryptJsonWallet = decryptJsonWallet;\\nfunction decryptJsonWalletSync(json, password) {\\n    if ((0, inspect_1.isCrowdsaleWallet)(json)) {\\n        return (0, crowdsale_1.decrypt)(json, password);\\n    }\\n    if ((0, inspect_1.isKeystoreWallet)(json)) {\\n        return (0, keystore_1.decryptSync)(json, password);\\n    }\\n    throw new Error(\\\"invalid JSON wallet\\\");\\n}\\nexports.decryptJsonWalletSync = decryptJsonWalletSync;\\n//# sourceMappingURL=index.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"decryptJsonWalletSync\",\"decryptJsonWallet\",\"getJsonWalletAddress\",\"isKeystoreWallet\",\"isCrowdsaleWallet\",\"encryptKeystore\",\"decryptKeystoreSync\",\"decryptKeystore\",\"decryptCrowdsale\",\"crowdsale_1\",\"enumerable\",\"get\",\"decrypt\",\"inspect_1\",\"keystore_1\",\"decryptSync\",\"encrypt\",\"json\",\"password\",\"progressCallback\",\"account\",\"Promise\",\"resolve\",\"reject\",\"Error\"]\n}\n"]