["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/browserify-cipher/browser.js"],"~:js","shadow$provide[202]=function(S,A,V,q){function F(n,l,h){n=n.toLowerCase();if(e[n])return y.createCipheriv(n,l,h);if(u[n])return new r({key:l,iv:h,mode:n});throw new TypeError(\"invalid suite type\");}function G(n,l,h){n=n.toLowerCase();if(e[n])return y.createDecipheriv(n,l,h);if(u[n])return new r({key:l,iv:h,mode:n,decrypt:!0});throw new TypeError(\"invalid suite type\");}var r=A(181),y=A(200),e=A(192),u=A(201),p=A(197);q.createCipher=q.Cipher=function(n,l){n=n.toLowerCase();if(e[n]){var h=e[n].key;var k=\ne[n].iv}else if(u[n])h=8*u[n].key,k=u[n].iv;else throw new TypeError(\"invalid suite type\");l=p(l,!1,h,k);return F(n,l.key,l.iv)};q.createCipheriv=q.Cipheriv=F;q.createDecipher=q.Decipher=function(n,l){n=n.toLowerCase();if(e[n]){var h=e[n].key;var k=e[n].iv}else if(u[n])h=8*u[n].key,k=u[n].iv;else throw new TypeError(\"invalid suite type\");l=p(l,!1,h,k);return G(n,l.key,l.iv)};q.createDecipheriv=q.Decipheriv=G;q.listCiphers=q.getCiphers=function(){return Object.keys(u).concat(y.getCiphers())}}","~:source","shadow$provide[202] = function(global,require,module,exports) {\nvar DES = require('browserify-des')\nvar aes = require('browserify-aes/browser')\nvar aesModes = require('browserify-aes/modes')\nvar desModes = require('browserify-des/modes')\nvar ebtk = require('evp_bytestokey')\n\nfunction createCipher (suite, password) {\n  suite = suite.toLowerCase()\n\n  var keyLen, ivLen\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createDecipher (suite, password) {\n  suite = suite.toLowerCase()\n\n  var keyLen, ivLen\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createCipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv)\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite })\n\n  throw new TypeError('invalid suite type')\n}\n\nfunction createDecipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv)\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: true })\n\n  throw new TypeError('invalid suite type')\n}\n\nfunction getCiphers () {\n  return Object.keys(desModes).concat(aes.getCiphers())\n}\n\nexports.createCipher = exports.Cipher = createCipher\nexports.createCipheriv = exports.Cipheriv = createCipheriv\nexports.createDecipher = exports.Decipher = createDecipher\nexports.createDecipheriv = exports.Decipheriv = createDecipheriv\nexports.listCiphers = exports.getCiphers = getCiphers\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$evp_bytestokey$index","~$shadow.js","~$module$node_modules$browserify_des$index","~$module$node_modules$browserify_des$modes","~$module$node_modules$browserify_aes$modes$index","~$module$node_modules$browserify_aes$browser"]],"~:properties",["^5",["iv","createCipheriv","listCiphers","Cipher","Cipheriv","key","createDecipher","createCipher","mode","Decipher","decrypt","Decipheriv","createDecipheriv","getCiphers"]],"~:compiled-at",1695041440828,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$browserify_cipher$browser.js\",\n\"lineCount\":2,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/browserify-cipher/browser.js\"],\n\"sourcesContent\":[\"shadow$provide[202] = function(global,require,module,exports) {\\nvar DES = require('browserify-des')\\nvar aes = require('browserify-aes/browser')\\nvar aesModes = require('browserify-aes/modes')\\nvar desModes = require('browserify-des/modes')\\nvar ebtk = require('evp_bytestokey')\\n\\nfunction createCipher (suite, password) {\\n  suite = suite.toLowerCase()\\n\\n  var keyLen, ivLen\\n  if (aesModes[suite]) {\\n    keyLen = aesModes[suite].key\\n    ivLen = aesModes[suite].iv\\n  } else if (desModes[suite]) {\\n    keyLen = desModes[suite].key * 8\\n    ivLen = desModes[suite].iv\\n  } else {\\n    throw new TypeError('invalid suite type')\\n  }\\n\\n  var keys = ebtk(password, false, keyLen, ivLen)\\n  return createCipheriv(suite, keys.key, keys.iv)\\n}\\n\\nfunction createDecipher (suite, password) {\\n  suite = suite.toLowerCase()\\n\\n  var keyLen, ivLen\\n  if (aesModes[suite]) {\\n    keyLen = aesModes[suite].key\\n    ivLen = aesModes[suite].iv\\n  } else if (desModes[suite]) {\\n    keyLen = desModes[suite].key * 8\\n    ivLen = desModes[suite].iv\\n  } else {\\n    throw new TypeError('invalid suite type')\\n  }\\n\\n  var keys = ebtk(password, false, keyLen, ivLen)\\n  return createDecipheriv(suite, keys.key, keys.iv)\\n}\\n\\nfunction createCipheriv (suite, key, iv) {\\n  suite = suite.toLowerCase()\\n  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv)\\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite })\\n\\n  throw new TypeError('invalid suite type')\\n}\\n\\nfunction createDecipheriv (suite, key, iv) {\\n  suite = suite.toLowerCase()\\n  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv)\\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: true })\\n\\n  throw new TypeError('invalid suite type')\\n}\\n\\nfunction getCiphers () {\\n  return Object.keys(desModes).concat(aes.getCiphers())\\n}\\n\\nexports.createCipher = exports.Cipher = createCipher\\nexports.createCipheriv = exports.Cipheriv = createCipheriv\\nexports.createDecipher = exports.Decipher = createDecipher\\nexports.createDecipheriv = exports.Decipheriv = createDecipheriv\\nexports.listCiphers = exports.getCiphers = getCiphers\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"createCipheriv\",\"suite\",\"key\",\"iv\",\"toLowerCase\",\"aesModes\",\"aes\",\"desModes\",\"DES\",\"mode\",\"TypeError\",\"createDecipheriv\",\"decrypt\",\"ebtk\",\"createCipher\",\"Cipher\",\"password\",\"keyLen\",\"ivLen\",\"keys\",\"Cipheriv\",\"createDecipher\",\"Decipher\",\"Decipheriv\",\"listCiphers\",\"getCiphers\",\"Object\",\"concat\"]\n}\n"]