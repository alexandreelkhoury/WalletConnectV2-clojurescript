shadow$provide.module$node_modules$$wagmi$connectors$dist$chunk_W65LBPLT=function(global,require,module,exports){Object.defineProperties(exports,{__esModule:{enumerable:!0,value:!0},Connector:{enumerable:!0,get:function(){return Connector}},__privateAdd:{enumerable:!0,get:function(){return __privateAdd}},__privateGet:{enumerable:!0,get:function(){return __privateGet}},__privateMethod:{enumerable:!0,get:function(){return __privateMethod}},__privateSet:{enumerable:!0,get:function(){return __privateSet}}});
global=require("module$node_modules$eventemitter3$index");var require$viem_SLASH_chains=require("module$node_modules$viem$_cjs$chains$index"),__privateGet=(obj,member,getter)=>{if(!member.has(obj))throw TypeError("Cannot read from private field");return getter?getter.call(obj):member.get(obj)},__privateAdd=(obj,member,value)=>{if(member.has(obj))throw TypeError("Cannot add the same private member more than once");member instanceof WeakSet?member.add(obj):member.set(obj,value)},__privateSet=(obj,member,
value,setter)=>{if(!member.has(obj))throw TypeError("Cannot write to private field");setter?setter.call(obj,value):member.set(obj,value);return value},__privateMethod=(obj,member,method)=>{if(!member.has(obj))throw TypeError("Cannot access private method");return method},Connector=class extends global.default{constructor({chains=[require$viem_SLASH_chains.mainnet,require$viem_SLASH_chains.goerli],options}){super();this.chains=chains;this.options=options}getBlockExplorerUrls(chain){const {default:blockExplorer,
...blockExplorers}=chain.blockExplorers??{};if(blockExplorer)return[blockExplorer.url,...Object.values(blockExplorers).map(x=>x.url)]}isChainUnsupported(chainId){return!this.chains.some(x=>x.id===chainId)}setStorage(storage){this.storage=storage}}}
//# sourceMappingURL=module$node_modules$$wagmi$connectors$dist$chunk_W65LBPLT.js.map
