["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js"],"~:js","shadow$provide.module$node_modules$use_sync_external_store$cjs$use_sync_external_store_shim$with_selector_development=function(global,require,module,exports){(function(){function is(x,y){return x===y&&(0!==x||1/x===1/y)||x!==x&&y!==y}\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&\"function\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart&&__REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());var React=require(\"module$node_modules$react$index\"),shim=require(\"module$node_modules$use_sync_external_store$shim$index\"),\nobjectIs=\"function\"===typeof Object.is?Object.is:is,useSyncExternalStore=shim.useSyncExternalStore,useRef=React.useRef,useEffect=React.useEffect,useMemo=React.useMemo,useDebugValue=React.useDebugValue;exports.useSyncExternalStoreWithSelector=function(subscribe,getSnapshot,getServerSnapshot,selector,isEqual){var instRef=useRef(null);if(null===instRef.current){var inst={hasValue:!1,value:null};instRef.current=inst}else inst=instRef.current;instRef=useMemo(function(){var hasMemo=!1,memoizedSnapshot,\nmemoizedSelection,memoizedSelector=function(nextSnapshot){if(!hasMemo){hasMemo=!0;memoizedSnapshot=nextSnapshot;nextSnapshot=selector(nextSnapshot);if(void 0!==isEqual&&inst.hasValue){var currentSelection=inst.value;if(isEqual(currentSelection,nextSnapshot))return memoizedSelection=currentSelection}return memoizedSelection=nextSnapshot}currentSelection=memoizedSelection;if(objectIs(memoizedSnapshot,nextSnapshot))return currentSelection;var nextSelection=selector(nextSnapshot);if(void 0!==isEqual&&\nisEqual(currentSelection,nextSelection))return currentSelection;memoizedSnapshot=nextSnapshot;return memoizedSelection=nextSelection},maybeGetServerSnapshot=void 0===getServerSnapshot?null:getServerSnapshot;return[function(){return memoizedSelector(getSnapshot())},null===maybeGetServerSnapshot?void 0:function(){return memoizedSelector(maybeGetServerSnapshot())}]},[getSnapshot,getServerSnapshot,selector,isEqual]);var value=useSyncExternalStore(subscribe,instRef[0],instRef[1]);useEffect(function(){inst.hasValue=\n!0;inst.value=value},[value]);useDebugValue(value);return value};\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&\"function\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop&&__REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error())})()}","~:source","shadow$provide[\"module$node_modules$use_sync_external_store$cjs$use_sync_external_store_shim$with_selector_development\"] = function(global,require,module,exports) {\n/**\n * @license React\n * use-sync-external-store-shim/with-selector.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = require('react');\nvar shim = require('use-sync-external-store/shim');\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\nvar useSyncExternalStore = shim.useSyncExternalStore;\n\n// for CommonJS interop.\n\nvar useRef = React.useRef,\n    useEffect = React.useEffect,\n    useMemo = React.useMemo,\n    useDebugValue = React.useDebugValue; // Same as useSyncExternalStore, but supports selector and isEqual arguments.\n\nfunction useSyncExternalStoreWithSelector(subscribe, getSnapshot, getServerSnapshot, selector, isEqual) {\n  // Use this to track the rendered snapshot.\n  var instRef = useRef(null);\n  var inst;\n\n  if (instRef.current === null) {\n    inst = {\n      hasValue: false,\n      value: null\n    };\n    instRef.current = inst;\n  } else {\n    inst = instRef.current;\n  }\n\n  var _useMemo = useMemo(function () {\n    // Track the memoized state using closure variables that are local to this\n    // memoized instance of a getSnapshot function. Intentionally not using a\n    // useRef hook, because that state would be shared across all concurrent\n    // copies of the hook/component.\n    var hasMemo = false;\n    var memoizedSnapshot;\n    var memoizedSelection;\n\n    var memoizedSelector = function (nextSnapshot) {\n      if (!hasMemo) {\n        // The first time the hook is called, there is no memoized result.\n        hasMemo = true;\n        memoizedSnapshot = nextSnapshot;\n\n        var _nextSelection = selector(nextSnapshot);\n\n        if (isEqual !== undefined) {\n          // Even if the selector has changed, the currently rendered selection\n          // may be equal to the new selection. We should attempt to reuse the\n          // current value if possible, to preserve downstream memoizations.\n          if (inst.hasValue) {\n            var currentSelection = inst.value;\n\n            if (isEqual(currentSelection, _nextSelection)) {\n              memoizedSelection = currentSelection;\n              return currentSelection;\n            }\n          }\n        }\n\n        memoizedSelection = _nextSelection;\n        return _nextSelection;\n      } // We may be able to reuse the previous invocation's result.\n\n\n      // We may be able to reuse the previous invocation's result.\n      var prevSnapshot = memoizedSnapshot;\n      var prevSelection = memoizedSelection;\n\n      if (objectIs(prevSnapshot, nextSnapshot)) {\n        // The snapshot is the same as last time. Reuse the previous selection.\n        return prevSelection;\n      } // The snapshot has changed, so we need to compute a new selection.\n\n\n      // The snapshot has changed, so we need to compute a new selection.\n      var nextSelection = selector(nextSnapshot); // If a custom isEqual function is provided, use that to check if the data\n      // has changed. If it hasn't, return the previous selection. That signals\n      // to React that the selections are conceptually equal, and we can bail\n      // out of rendering.\n\n      // If a custom isEqual function is provided, use that to check if the data\n      // has changed. If it hasn't, return the previous selection. That signals\n      // to React that the selections are conceptually equal, and we can bail\n      // out of rendering.\n      if (isEqual !== undefined && isEqual(prevSelection, nextSelection)) {\n        return prevSelection;\n      }\n\n      memoizedSnapshot = nextSnapshot;\n      memoizedSelection = nextSelection;\n      return nextSelection;\n    }; // Assigning this to a constant so that Flow knows it can't change.\n\n\n    // Assigning this to a constant so that Flow knows it can't change.\n    var maybeGetServerSnapshot = getServerSnapshot === undefined ? null : getServerSnapshot;\n\n    var getSnapshotWithSelector = function () {\n      return memoizedSelector(getSnapshot());\n    };\n\n    var getServerSnapshotWithSelector = maybeGetServerSnapshot === null ? undefined : function () {\n      return memoizedSelector(maybeGetServerSnapshot());\n    };\n    return [getSnapshotWithSelector, getServerSnapshotWithSelector];\n  }, [getSnapshot, getServerSnapshot, selector, isEqual]),\n      getSelection = _useMemo[0],\n      getServerSelection = _useMemo[1];\n\n  var value = useSyncExternalStore(subscribe, getSelection, getServerSelection);\n  useEffect(function () {\n    inst.hasValue = true;\n    inst.value = value;\n  }, [value]);\n  useDebugValue(value);\n  return value;\n}\n\nexports.useSyncExternalStoreWithSelector = useSyncExternalStoreWithSelector;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react$index","~$shadow.js","~$module$node_modules$use_sync_external_store$shim$index"]],"~:properties",["^5",["hasValue","value","current","useSyncExternalStoreWithSelector"]],"~:compiled-at",1695111490422,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$use_sync_external_store$cjs$use_sync_external_store_shim$with_selector_development.js\",\n\"lineCount\":5,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$use_sync_external_store$cjs$use_sync_external_store_shim$with_selector_development\\\"] = function(global,require,module,exports) {\\n/**\\n * @license React\\n * use-sync-external-store-shim/with-selector.development.js\\n *\\n * Copyright (c) Facebook, Inc. and its affiliates.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\n'use strict';\\n\\nif (process.env.NODE_ENV !== \\\"production\\\") {\\n  (function() {\\n\\n          'use strict';\\n\\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\\nif (\\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\\n    'function'\\n) {\\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\\n}\\n          var React = require('react');\\nvar shim = require('use-sync-external-store/shim');\\n\\n/**\\n * inlined Object.is polyfill to avoid requiring consumers ship their own\\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\\n */\\nfunction is(x, y) {\\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\\n  ;\\n}\\n\\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\\n\\nvar useSyncExternalStore = shim.useSyncExternalStore;\\n\\n// for CommonJS interop.\\n\\nvar useRef = React.useRef,\\n    useEffect = React.useEffect,\\n    useMemo = React.useMemo,\\n    useDebugValue = React.useDebugValue; // Same as useSyncExternalStore, but supports selector and isEqual arguments.\\n\\nfunction useSyncExternalStoreWithSelector(subscribe, getSnapshot, getServerSnapshot, selector, isEqual) {\\n  // Use this to track the rendered snapshot.\\n  var instRef = useRef(null);\\n  var inst;\\n\\n  if (instRef.current === null) {\\n    inst = {\\n      hasValue: false,\\n      value: null\\n    };\\n    instRef.current = inst;\\n  } else {\\n    inst = instRef.current;\\n  }\\n\\n  var _useMemo = useMemo(function () {\\n    // Track the memoized state using closure variables that are local to this\\n    // memoized instance of a getSnapshot function. Intentionally not using a\\n    // useRef hook, because that state would be shared across all concurrent\\n    // copies of the hook/component.\\n    var hasMemo = false;\\n    var memoizedSnapshot;\\n    var memoizedSelection;\\n\\n    var memoizedSelector = function (nextSnapshot) {\\n      if (!hasMemo) {\\n        // The first time the hook is called, there is no memoized result.\\n        hasMemo = true;\\n        memoizedSnapshot = nextSnapshot;\\n\\n        var _nextSelection = selector(nextSnapshot);\\n\\n        if (isEqual !== undefined) {\\n          // Even if the selector has changed, the currently rendered selection\\n          // may be equal to the new selection. We should attempt to reuse the\\n          // current value if possible, to preserve downstream memoizations.\\n          if (inst.hasValue) {\\n            var currentSelection = inst.value;\\n\\n            if (isEqual(currentSelection, _nextSelection)) {\\n              memoizedSelection = currentSelection;\\n              return currentSelection;\\n            }\\n          }\\n        }\\n\\n        memoizedSelection = _nextSelection;\\n        return _nextSelection;\\n      } // We may be able to reuse the previous invocation's result.\\n\\n\\n      // We may be able to reuse the previous invocation's result.\\n      var prevSnapshot = memoizedSnapshot;\\n      var prevSelection = memoizedSelection;\\n\\n      if (objectIs(prevSnapshot, nextSnapshot)) {\\n        // The snapshot is the same as last time. Reuse the previous selection.\\n        return prevSelection;\\n      } // The snapshot has changed, so we need to compute a new selection.\\n\\n\\n      // The snapshot has changed, so we need to compute a new selection.\\n      var nextSelection = selector(nextSnapshot); // If a custom isEqual function is provided, use that to check if the data\\n      // has changed. If it hasn't, return the previous selection. That signals\\n      // to React that the selections are conceptually equal, and we can bail\\n      // out of rendering.\\n\\n      // If a custom isEqual function is provided, use that to check if the data\\n      // has changed. If it hasn't, return the previous selection. That signals\\n      // to React that the selections are conceptually equal, and we can bail\\n      // out of rendering.\\n      if (isEqual !== undefined && isEqual(prevSelection, nextSelection)) {\\n        return prevSelection;\\n      }\\n\\n      memoizedSnapshot = nextSnapshot;\\n      memoizedSelection = nextSelection;\\n      return nextSelection;\\n    }; // Assigning this to a constant so that Flow knows it can't change.\\n\\n\\n    // Assigning this to a constant so that Flow knows it can't change.\\n    var maybeGetServerSnapshot = getServerSnapshot === undefined ? null : getServerSnapshot;\\n\\n    var getSnapshotWithSelector = function () {\\n      return memoizedSelector(getSnapshot());\\n    };\\n\\n    var getServerSnapshotWithSelector = maybeGetServerSnapshot === null ? undefined : function () {\\n      return memoizedSelector(maybeGetServerSnapshot());\\n    };\\n    return [getSnapshotWithSelector, getServerSnapshotWithSelector];\\n  }, [getSnapshot, getServerSnapshot, selector, isEqual]),\\n      getSelection = _useMemo[0],\\n      getServerSelection = _useMemo[1];\\n\\n  var value = useSyncExternalStore(subscribe, getSelection, getServerSelection);\\n  useEffect(function () {\\n    inst.hasValue = true;\\n    inst.value = value;\\n  }, [value]);\\n  useDebugValue(value);\\n  return value;\\n}\\n\\nexports.useSyncExternalStoreWithSelector = useSyncExternalStoreWithSelector;\\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\\nif (\\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\\n    'function'\\n) {\\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\\n}\\n        \\n  })();\\n}\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"is\",\"x\",\"y\",\"__REACT_DEVTOOLS_GLOBAL_HOOK__\",\"registerInternalModuleStart\",\"Error\",\"React\",\"shim\",\"objectIs\",\"Object\",\"useSyncExternalStore\",\"useRef\",\"useEffect\",\"useMemo\",\"useDebugValue\",\"useSyncExternalStoreWithSelector\",\"subscribe\",\"getSnapshot\",\"getServerSnapshot\",\"selector\",\"isEqual\",\"instRef\",\"current\",\"inst\",\"hasValue\",\"value\",\"_useMemo\",\"hasMemo\",\"memoizedSnapshot\",\"memoizedSelection\",\"memoizedSelector\",\"nextSnapshot\",\"_nextSelection\",\"undefined\",\"currentSelection\",\"prevSelection\",\"nextSelection\",\"maybeGetServerSnapshot\",\"getSnapshotWithSelector\",\"getServerSnapshotWithSelector\",\"getSelection\",\"getServerSelection\",\"registerInternalModuleStop\"]\n}\n"]