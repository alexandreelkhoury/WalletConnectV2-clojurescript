{
"version":3,
"file":"module$node_modules$$tanstack$react_query$build$lib$useIsFetching.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,iEAAA,CAAsF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC9H,YACA,aAEAC,OAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CAEIC,OAAAA,CAAQN,OAAA,CAAQ,iCAAR,CACZ,KAAIO,UAAYP,OAAA,CAAQ,0DAAR,CAAhB,CACIQ,qBAAuBR,OAAA,CAAQ,0EAAR,CAD3B,CAEIS,oBAAsBT,OAAA,CAAQ,yEAAR,CAF1B;AAsBIU,iBAlBJC,QAA0B,CAACC,CAAD,CAAI,CAC5B,GAAIA,CAAJ,EAASA,CAAEC,CAAAA,UAAX,CAAuB,MAAOD,EAC9B,KAAIE,EAAIX,MAAOY,CAAAA,MAAP,CAAc,IAAd,CACJH,EAAJ,EACET,MAAOa,CAAAA,IAAP,CAAYJ,CAAZ,CAAeK,CAAAA,OAAf,CAAuB,QAAS,CAACC,CAAD,CAAI,CAClC,GAAU,SAAV,GAAIA,CAAJ,CAAqB,CACnB,IAAIC,EAAIhB,MAAOiB,CAAAA,wBAAP,CAAgCR,CAAhC,CAAmCM,CAAnC,CACRf,OAAOC,CAAAA,cAAP,CAAsBU,CAAtB,CAAyBI,CAAzB,CAA4BC,CAAEE,CAAAA,GAAF,CAAQF,CAAR,CAAY,CACtCG,WAAY,CAAA,CAD0B,CAEtCD,IAAKA,QAAS,EAAG,CAAE,MAAOT,EAAA,CAAEM,CAAF,CAAT,CAFqB,CAAxC,CAFmB,CADa,CAApC,CAUFJ,EAAA,CAAE,SAAF,CAAA,CAAeF,CACf,OAAOT,OAAOoB,CAAAA,MAAP,CAAcT,CAAd,CAfqB,CAkBM,CAAkBR,MAAlB,CAWpCJ,QAAQsB,CAAAA,aAAR,CATAA,QAAsB,CAACC,IAAD,CAAOC,IAAP,CAAaC,IAAb,CAAmB,CACvC,MAAM,CAACC,OAAD,CAAUC,OAAA,CAAU,EAApB,CAAA,CAA0BtB,SAAUuB,CAAAA,eAAV,CAA0BL,IAA1B,CAAgCC,IAAhC,CAAsCC,IAAtC,CAAhC,CACMI,YAActB,mBAAoBuB,CAAAA,cAApB,CAAmC,CACrDC,QAASJ,OAAQI,CAAAA,OADoC,CAAnC,CADpB;AAIMC,WAAaH,WAAYI,CAAAA,aAAZ,EACnB,OAAO3B,qBAAqBA,CAAAA,oBAArB,CAA0CE,gBAAiB0B,CAAAA,WAAjB,CAA6BC,aAAA,EAAiBH,UAAWI,CAAAA,SAAX,CAAqB/B,SAAUgC,CAAAA,aAAcC,CAAAA,UAAxB,CAAmCH,aAAnC,CAArB,CAA9C,CAAuH,CAACH,UAAD,CAAvH,CAA1C,CAAgL,EAAA,EAAMH,WAAYU,CAAAA,UAAZ,CAAuBb,OAAvB,CAAtL,CAAuN,EAAA,EAAMG,WAAYU,CAAAA,UAAZ,CAAuBb,OAAvB,CAA7N,CANgC,CA/BqF;",
"sources":["node_modules/@tanstack/react-query/build/lib/useIsFetching.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$tanstack$react_query$build$lib$useIsFetching\"] = function(global,require,module,exports) {\n'use client';\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar React = require('react');\nvar queryCore = require('@tanstack/query-core');\nvar useSyncExternalStore = require('./useSyncExternalStore');\nvar QueryClientProvider = require('./QueryClientProvider.js');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nfunction useIsFetching(arg1, arg2, arg3) {\n  const [filters, options = {}] = queryCore.parseFilterArgs(arg1, arg2, arg3);\n  const queryClient = QueryClientProvider.useQueryClient({\n    context: options.context\n  });\n  const queryCache = queryClient.getQueryCache();\n  return useSyncExternalStore.useSyncExternalStore(React__namespace.useCallback(onStoreChange => queryCache.subscribe(queryCore.notifyManager.batchCalls(onStoreChange)), [queryCache]), () => queryClient.isFetching(filters), () => queryClient.isFetching(filters));\n}\n\nexports.useIsFetching = useIsFetching;\n//# sourceMappingURL=useIsFetching.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","React","queryCore","useSyncExternalStore","QueryClientProvider","React__namespace","_interopNamespace","e","__esModule","n","create","keys","forEach","k","d","getOwnPropertyDescriptor","get","enumerable","freeze","useIsFetching","arg1","arg2","arg3","filters","options","parseFilterArgs","queryClient","useQueryClient","context","queryCache","getQueryCache","useCallback","onStoreChange","subscribe","notifyManager","batchCalls","isFetching"]
}
