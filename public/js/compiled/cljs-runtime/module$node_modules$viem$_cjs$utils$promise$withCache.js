shadow$provide.module$node_modules$viem$_cjs$utils$promise$withCache=function(global,require,module,exports){function getCache(cacheKey){const buildCache=(cacheKey,cache)=>({clear:()=>cache.delete(cacheKey),get:()=>cache.get(cacheKey),set:data=>cache.set(cacheKey,data)}),promise=buildCache(cacheKey,exports.promiseCache),response=buildCache(cacheKey,exports.responseCache);return{clear:()=>{promise.clear();response.clear()},promise,response}}Object.defineProperty(exports,"__esModule",{value:!0});exports.withCache=
exports.getCache=exports.responseCache=exports.promiseCache=void 0;exports.promiseCache=new Map;exports.responseCache=new Map;exports.getCache=getCache;exports.withCache=async function(fn,{cacheKey,cacheTime=Infinity}){cacheKey=getCache(cacheKey);const response=cacheKey.response.get();if(response&&0<cacheTime&&(new Date).getTime()-response.created.getTime()<cacheTime)return response.data;cacheTime=cacheKey.promise.get();cacheTime||(cacheTime=fn(),cacheKey.promise.set(cacheTime));try{const data=await cacheTime;
cacheKey.response.set({created:new Date,data});return data}finally{cacheKey.promise.clear()}}}
//# sourceMappingURL=module$node_modules$viem$_cjs$utils$promise$withCache.js.map
