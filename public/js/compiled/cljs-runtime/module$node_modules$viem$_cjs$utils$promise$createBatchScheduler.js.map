{
"version":3,
"file":"module$node_modules$viem$_cjs$utils$promise$createBatchScheduler.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,gEAAA,CAAqF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAE7HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAQI,CAAAA,oBAAR,CAA+B,IAAK,EACpC,OAAMC,eAAiB,IAAIC,GA0C3BN,QAAQI,CAAAA,oBAAR,CAzCAA,QAA6B,CAAC,CAAEG,EAAF,CAAMC,EAAN,CAAUC,gBAAV,CAA4BC,IAAA,CAAO,CAAnC,CAAD,CAA0C,CACnE,MAAMC,KAAOA,KAAM,EAANA,EAAY,CACrB,MAAMC,UAeiBP,cAAeQ,CAAAA,GAAf,CAAmBL,EAAnB,CAfjBI,EAe2C,EAFjCP,eAAeS,CAAAA,MAAf,CAAsBN,EAAtB,CAXhB,OAAMO,cAAOH,SAAUI,CAAAA,GAAV,CAAc,CAAC,CAAED,IAAF,CAAD,CAAA,EAAcA,IAA5B,CACO,EAApB,GAAIA,aAAKE,CAAAA,MAAT,EAEAV,EAAA,CAAGQ,aAAH,CACKG,CAAAA,IADL,CACWC,IAAD;AAAU,CAChBP,SAAUQ,CAAAA,OAAV,CAAkB,CAAC,CAAEC,cAAF,CAAD,CAAqBC,CAArB,CAAA,EAA2BD,cAAeE,CAAAA,OAAf,GAAyB,CAACJ,IAAA,CAAKG,CAAL,CAAD,CAAUH,IAAV,CAAzB,CAA7C,CADgB,CADpB,CAIKK,CAAAA,KAJL,CAIYC,GAAD,EAAS,CAChBb,SAAUQ,CAAAA,OAAV,CAAkB,CAAC,CAAEC,cAAF,CAAD,CAAA,EAAwBA,cAAeK,CAAAA,MAAf,GAAwBD,GAAxB,CAA1C,CADgB,CAJpB,CANqB,CAAzB,CAeME,eAAiB,EAAAA,EAAqBX,CACjBX,cAAeQ,CAAAA,GAAf,CAAmBL,EAAnB,CADiBQ,EACS,EADTA,EAAAA,GAAf,CAAmB,CAAC,CAAED,IAAF,CAAD,CAAA,EAAcA,IAAjC,CAf7B,CAiBMa,aAAgBC,IAADD,EAAUvB,cAAeyB,CAAAA,GAAf,CAAmBtB,EAAnB,CAAuB,CAAC,IAD5BH,cAAeQ,CAAAA,GAAf,CAAmBL,EAAnB,CAC4B,EADF,EACE,CAAD,CAAoBqB,IAApB,CAAvB,CAC/B,OAAO,CACHE,MALU,EAAAA,EAAM1B,cAAeS,CAAAA,MAAf,CAAsBN,EAAtB,CAIb,CAEGwB,cAAQ,CAACjB,IAAD,CAAO,CACjB,MAAMM,eAAiB,EAAvB,CACMY,QAAU,IAAIC,OAAJ,CAAY,CAACX,OAAD,CAAUG,MAAV,CAAA,EAAqB,CAC7CL,cAAeE,CAAAA,OAAf,CAAyBA,OACzBF,eAAeK,CAAAA,MAAf,CAAwBA,MAFqB,CAAjC,CAIFjB;gBAAA0B,GAAmB,CAAC,GAAGR,cAAA,EAAJ,CAAsBZ,IAAtB,CAAnBoB,CACd,EACIxB,IAAA,EAEJ,IADmD,CACnD,CAD0CM,CAbvBZ,cAAeQ,CAAAA,GAAf,CAAmBL,EAAnB,CAauBS,EAbG,EAaHA,EAAAA,MAC1C,CAEI,MADAW,aAAA,CAAa,CAAEb,IAAF,CAAQM,cAAR,CAAb,CACOY,CAAAA,OAEXL,aAAA,CAAa,CAAEb,IAAF,CAAQM,cAAR,CAAb,CACAe,WAAA,CAAWzB,IAAX,CAAiBD,IAAjB,CACA,OAAOuB,QAhBU,CAFlB,CAnB4D,CALsD;",
"sources":["node_modules/viem/_cjs/utils/promise/createBatchScheduler.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$viem$_cjs$utils$promise$createBatchScheduler\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createBatchScheduler = void 0;\nconst schedulerCache = new Map();\nfunction createBatchScheduler({ fn, id, shouldSplitBatch, wait = 0, }) {\n    const exec = async () => {\n        const scheduler = getScheduler();\n        flush();\n        const args = scheduler.map(({ args }) => args);\n        if (args.length === 0)\n            return;\n        fn(args)\n            .then((data) => {\n            scheduler.forEach(({ pendingPromise }, i) => pendingPromise.resolve?.([data[i], data]));\n        })\n            .catch((err) => {\n            scheduler.forEach(({ pendingPromise }) => pendingPromise.reject?.(err));\n        });\n    };\n    const flush = () => schedulerCache.delete(id);\n    const getBatchedArgs = () => getScheduler().map(({ args }) => args);\n    const getScheduler = () => schedulerCache.get(id) || [];\n    const setScheduler = (item) => schedulerCache.set(id, [...getScheduler(), item]);\n    return {\n        flush,\n        async schedule(args) {\n            const pendingPromise = {};\n            const promise = new Promise((resolve, reject) => {\n                pendingPromise.resolve = resolve;\n                pendingPromise.reject = reject;\n            });\n            const split = shouldSplitBatch?.([...getBatchedArgs(), args]);\n            if (split)\n                exec();\n            const hasActiveScheduler = getScheduler().length > 0;\n            if (hasActiveScheduler) {\n                setScheduler({ args, pendingPromise });\n                return promise;\n            }\n            setScheduler({ args, pendingPromise });\n            setTimeout(exec, wait);\n            return promise;\n        },\n    };\n}\nexports.createBatchScheduler = createBatchScheduler;\n//# sourceMappingURL=createBatchScheduler.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createBatchScheduler","schedulerCache","Map","fn","id","shouldSplitBatch","wait","exec","scheduler","get","delete","args","map","length","then","data","forEach","pendingPromise","i","resolve","catch","err","reject","getBatchedArgs","setScheduler","item","set","flush","schedule","promise","Promise","split","setTimeout"]
}
