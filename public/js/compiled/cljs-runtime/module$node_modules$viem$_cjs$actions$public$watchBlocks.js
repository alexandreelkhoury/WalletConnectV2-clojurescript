shadow$provide.module$node_modules$viem$_cjs$actions$public$watchBlocks=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.watchBlocks=void 0;const block_js_1=require("module$node_modules$viem$_cjs$utils$formatters$block"),observe_js_1=require("module$node_modules$viem$_cjs$utils$observe"),poll_js_1=require("module$node_modules$viem$_cjs$utils$poll"),stringify_js_1=require("module$node_modules$viem$_cjs$utils$stringify"),getBlock_js_1=require("module$node_modules$viem$_cjs$actions$public$getBlock");
exports.watchBlocks=function(client,{blockTag="latest",emitMissed=!1,emitOnBegin=!1,onBlock,onError,includeTransactions:includeTransactions_,poll:poll_,pollingInterval=client.pollingInterval}){const includeTransactions=includeTransactions_??!1;let prevBlock;includeTransactions_=()=>{const observerId=(0,stringify_js_1.stringify)(["watchBlocks",client.uid,emitMissed,emitOnBegin,includeTransactions,pollingInterval]);return(0,observe_js_1.observe)(observerId,{onBlock,onError},emit=>(0,poll_js_1.poll)(async()=>
{try{const block$jscomp$0=await (0,getBlock_js_1.getBlock)(client,{blockTag,includeTransactions});if(block$jscomp$0.number&&prevBlock?.number){if(block$jscomp$0.number===prevBlock.number)return;if(1<block$jscomp$0.number-prevBlock.number&&emitMissed)for(let i=prevBlock?.number+1n;i<block$jscomp$0.number;i++){const block=await (0,getBlock_js_1.getBlock)(client,{blockNumber:i,includeTransactions});emit.onBlock(block,prevBlock);prevBlock=block}}if(!prevBlock?.number||"pending"===blockTag&&!block$jscomp$0?.number||
block$jscomp$0.number&&block$jscomp$0.number>prevBlock.number)emit.onBlock(block$jscomp$0,prevBlock),prevBlock=block$jscomp$0}catch(err){emit.onError?.(err)}},{emitOnBegin,interval:pollingInterval}))};const subscribeBlocks=()=>{let active=!0,unsubscribe=()=>active=!1;(async()=>{try{const {unsubscribe:unsubscribe_}=await client.transport.subscribe({params:["newHeads"],onData(data){active&&(data=(client.chain?.formatters?.block?.format||block_js_1.formatBlock)(data.result),onBlock(data,prevBlock),prevBlock=
data)},onError(error){onError?.(error)}});unsubscribe=unsubscribe_;active||unsubscribe()}catch(err){onError?.(err)}})();return unsubscribe};return("undefined"!==typeof poll_?poll_:"webSocket"!==client.transport.type)?includeTransactions_():subscribeBlocks()}}
//# sourceMappingURL=module$node_modules$viem$_cjs$actions$public$watchBlocks.js.map
