shadow$provide.module$node_modules$viem$_cjs$utils$encoding$toBytes=function(global,require,module,exports){function boolToBytes(value,opts={}){const bytes=new Uint8Array(1);bytes[0]=Number(value);return"number"===typeof opts.size?((0,fromHex_js_1.assertSize)(bytes,{size:opts.size}),(0,pad_js_1.pad)(bytes,{size:opts.size})):bytes}function hexToBytes(hex_,opts={}){opts.size&&((0,fromHex_js_1.assertSize)(hex_,{size:opts.size}),hex_=(0,pad_js_1.pad)(hex_,{dir:"right",size:opts.size}));opts=hex_.slice(2);
opts.length%2&&(opts=`0${opts}`);hex_=new Uint8Array(opts.length/2);for(let index=0;index<hex_.length;index++){var start=2*index;start=opts.slice(start,start+2);const byte=Number.parseInt(start,16);if(Number.isNaN(byte)||0>byte)throw new base_js_1.BaseError(`Invalid byte sequence ("${start}" in "${opts}").`);hex_[index]=byte}return hex_}function numberToBytes(value,opts){value=(0,toHex_js_1.numberToHex)(value,opts);return hexToBytes(value)}function stringToBytes(value,opts={}){value=encoder.encode(value);
return"number"===typeof opts.size?((0,fromHex_js_1.assertSize)(value,{size:opts.size}),(0,pad_js_1.pad)(value,{dir:"right",size:opts.size})):value}Object.defineProperty(exports,"__esModule",{value:!0});exports.stringToBytes=exports.numberToBytes=exports.hexToBytes=exports.boolToBytes=exports.toBytes=void 0;const base_js_1=require("module$node_modules$viem$_cjs$errors$base"),isHex_js_1=require("module$node_modules$viem$_cjs$utils$data$isHex"),pad_js_1=require("module$node_modules$viem$_cjs$utils$data$pad"),
fromHex_js_1=require("module$node_modules$viem$_cjs$utils$encoding$fromHex"),toHex_js_1=require("module$node_modules$viem$_cjs$utils$encoding$toHex"),encoder=new TextEncoder;exports.toBytes=function(value,opts={}){return"number"===typeof value||"bigint"===typeof value?numberToBytes(value,opts):"boolean"===typeof value?boolToBytes(value,opts):(0,isHex_js_1.isHex)(value)?hexToBytes(value,opts):stringToBytes(value,opts)};exports.boolToBytes=boolToBytes;exports.hexToBytes=hexToBytes;exports.numberToBytes=
numberToBytes;exports.stringToBytes=stringToBytes}
//# sourceMappingURL=module$node_modules$viem$_cjs$utils$encoding$toBytes.js.map
