["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@ethersproject/providers/lib/formatter.js"],"~:js","shadow$provide[334]=function(S,A,V,q){function F(h){return h&&\"function\"===typeof h.isCommunityResource}Object.defineProperty(q,\"__esModule\",{value:!0});q.showThrottleMessage=q.isCommunityResource=q.isCommunityResourcable=q.Formatter=void 0;var G=A(26),r=A(15),y=A(11),e=A(38),u=A(17),p=A(107);S=A(9);A=A(333);var n=new S.Logger(A.version);A=function(){function h(){this.formats=this.getDefaultFormats()}h.prototype.getDefaultFormats=function(){var k=this,t={},B=this.address.bind(this),E=this.bigNumber.bind(this),\nH=this.blockTag.bind(this),D=this.data.bind(this),C=this.hash.bind(this),I=this.hex.bind(this),M=this.number.bind(this),P=this.type.bind(this);t.transaction={hash:C,type:P,accessList:h.allowNull(this.accessList.bind(this),null),blockHash:h.allowNull(C,null),blockNumber:h.allowNull(M,null),transactionIndex:h.allowNull(M,null),confirmations:h.allowNull(M,null),from:B,gasPrice:h.allowNull(E),maxPriorityFeePerGas:h.allowNull(E),maxFeePerGas:h.allowNull(E),gasLimit:E,to:h.allowNull(B,null),value:E,nonce:M,\ndata:D,r:h.allowNull(this.uint256),s:h.allowNull(this.uint256),v:h.allowNull(M),creates:h.allowNull(B,null),raw:h.allowNull(D)};t.transactionRequest={from:h.allowNull(B),nonce:h.allowNull(M),gasLimit:h.allowNull(E),gasPrice:h.allowNull(E),maxPriorityFeePerGas:h.allowNull(E),maxFeePerGas:h.allowNull(E),to:h.allowNull(B),value:h.allowNull(E),data:h.allowNull(function(J){return k.data(J,!0)}),type:h.allowNull(M),accessList:h.allowNull(this.accessList.bind(this),null)};t.receiptLog={transactionIndex:M,\nblockNumber:M,transactionHash:C,address:B,topics:h.arrayOf(C),data:D,logIndex:M,blockHash:C};t.receipt={to:h.allowNull(this.address,null),from:h.allowNull(this.address,null),contractAddress:h.allowNull(B,null),transactionIndex:M,root:h.allowNull(I),gasUsed:E,logsBloom:h.allowNull(D),blockHash:C,transactionHash:C,logs:h.arrayOf(this.receiptLog.bind(this)),blockNumber:M,confirmations:h.allowNull(M,null),cumulativeGasUsed:E,effectiveGasPrice:h.allowNull(E),status:h.allowNull(M),type:P};t.block={hash:h.allowNull(C),\nparentHash:C,number:M,timestamp:M,nonce:h.allowNull(I),difficulty:this.difficulty.bind(this),gasLimit:E,gasUsed:E,miner:h.allowNull(B),extraData:D,transactions:h.allowNull(h.arrayOf(C)),baseFeePerGas:h.allowNull(E)};t.blockWithTransactions=(0,u.shallowCopy)(t.block);t.blockWithTransactions.transactions=h.allowNull(h.arrayOf(this.transactionResponse.bind(this)));t.filter={fromBlock:h.allowNull(H,void 0),toBlock:h.allowNull(H,void 0),blockHash:h.allowNull(C,void 0),address:h.allowNull(B,void 0),topics:h.allowNull(this.topics.bind(this),\nvoid 0)};t.filterLog={blockNumber:h.allowNull(M),blockHash:h.allowNull(C),transactionIndex:M,removed:h.allowNull(this.boolean.bind(this)),address:B,data:h.allowFalsish(D,\"0x\"),topics:h.arrayOf(C),transactionHash:C,logIndex:M};return t};h.prototype.accessList=function(k){return(0,p.accessListify)(k||[])};h.prototype.number=function(k){return\"0x\"===k?0:r.BigNumber.from(k).toNumber()};h.prototype.type=function(k){return\"0x\"===k||null==k?0:r.BigNumber.from(k).toNumber()};h.prototype.bigNumber=function(k){return r.BigNumber.from(k)};\nh.prototype.boolean=function(k){if(\"boolean\"===typeof k)return k;if(\"string\"===typeof k){k=k.toLowerCase();if(\"true\"===k)return!0;if(\"false\"===k)return!1}throw Error(\"invalid boolean - \"+k);};h.prototype.hex=function(k,t){return\"string\"===typeof k&&(t||\"0x\"===k.substring(0,2)||(k=\"0x\"+k),(0,y.isHexString)(k))?k.toLowerCase():n.throwArgumentError(\"invalid hash\",\"value\",k)};h.prototype.data=function(k,t){t=this.hex(k,t);if(0!==t.length%2)throw Error(\"invalid data; odd-length - \"+k);return t};h.prototype.address=\nfunction(k){return(0,G.getAddress)(k)};h.prototype.callAddress=function(k){if(!(0,y.isHexString)(k,32))return null;k=(0,G.getAddress)((0,y.hexDataSlice)(k,12));return k===e.AddressZero?null:k};h.prototype.contractAddress=function(k){return(0,G.getContractAddress)(k)};h.prototype.blockTag=function(k){if(null==k)return\"latest\";if(\"earliest\"===k)return\"0x0\";switch(k){case \"earliest\":return\"0x0\";case \"latest\":case \"pending\":case \"safe\":case \"finalized\":return k}if(\"number\"===typeof k||(0,y.isHexString)(k))return(0,y.hexValue)(k);\nthrow Error(\"invalid blockTag\");};h.prototype.hash=function(k,t){t=this.hex(k,t);return 32!==(0,y.hexDataLength)(t)?n.throwArgumentError(\"invalid hash\",\"value\",k):t};h.prototype.difficulty=function(k){if(null==k)return null;k=r.BigNumber.from(k);try{return k.toNumber()}catch(t){}return null};h.prototype.uint256=function(k){if(!(0,y.isHexString)(k))throw Error(\"invalid uint256\");return(0,y.hexZeroPad)(k,32)};h.prototype._block=function(k,t){null!=k.author&&null==k.miner&&(k.miner=k.author);var B=null!=\nk._difficulty?k._difficulty:k.difficulty;k=h.check(t,k);k._difficulty=null==B?null:r.BigNumber.from(B);return k};h.prototype.block=function(k){return this._block(k,this.formats.block)};h.prototype.blockWithTransactions=function(k){return this._block(k,this.formats.blockWithTransactions)};h.prototype.transactionRequest=function(k){return h.check(this.formats.transactionRequest,k)};h.prototype.transactionResponse=function(k){null!=k.gas&&null==k.gasLimit&&(k.gasLimit=k.gas);k.to&&r.BigNumber.from(k.to).isZero()&&\n(k.to=\"0x0000000000000000000000000000000000000000\");null!=k.input&&null==k.data&&(k.data=k.input);null==k.to&&null==k.creates&&(k.creates=this.contractAddress(k));1!==k.type&&2!==k.type||null!=k.accessList||(k.accessList=[]);var t=h.check(this.formats.transaction,k);if(null!=k.chainId){var B=k.chainId;(0,y.isHexString)(B)&&(B=r.BigNumber.from(B).toNumber())}else B=k.networkId,null==B&&null==t.v&&(B=k.chainId),(0,y.isHexString)(B)&&(B=r.BigNumber.from(B).toNumber()),\"number\"!==typeof B&&null!=t.v&&\n(B=(t.v-35)/2,0>B&&(B=0),B=parseInt(B)),\"number\"!==typeof B&&(B=0);t.chainId=B;t.blockHash&&\"x\"===t.blockHash.replace(/0/g,\"\")&&(t.blockHash=null);return t};h.prototype.transaction=function(k){return(0,p.parse)(k)};h.prototype.receiptLog=function(k){return h.check(this.formats.receiptLog,k)};h.prototype.receipt=function(k){k=h.check(this.formats.receipt,k);if(null!=k.root)if(4>=k.root.length){var t=r.BigNumber.from(k.root).toNumber();0===t||1===t?(null!=k.status&&k.status!==t&&n.throwArgumentError(\"alt-root-status/status mismatch\",\n\"value\",{root:k.root,status:k.status}),k.status=t,delete k.root):n.throwArgumentError(\"invalid alt-root-status\",\"value.root\",k.root)}else 66!==k.root.length&&n.throwArgumentError(\"invalid root hash\",\"value.root\",k.root);null!=k.status&&(k.byzantium=!0);return k};h.prototype.topics=function(k){var t=this;return Array.isArray(k)?k.map(function(B){return t.topics(B)}):null!=k?this.hash(k,!0):null};h.prototype.filter=function(k){return h.check(this.formats.filter,k)};h.prototype.filterLog=function(k){return h.check(this.formats.filterLog,\nk)};h.check=function(k,t){var B={},E;for(E in k)try{var H=k[E](t[E]);void 0!==H&&(B[E]=H)}catch(D){throw D.checkKey=E,D.checkValue=t[E],D;}return B};h.allowNull=function(k,t){return function(B){return null==B?t:k(B)}};h.allowFalsish=function(k,t){return function(B){return B?k(B):t}};h.arrayOf=function(k){return function(t){if(!Array.isArray(t))throw Error(\"not an array\");var B=[];t.forEach(function(E){B.push(k(E))});return B}};return h}();q.Formatter=A;q.isCommunityResourcable=F;q.isCommunityResource=\nfunction(h){return F(h)&&h.isCommunityResource()};var l=!1;q.showThrottleMessage=function(){l||(l=!0,console.log(\"\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d NOTICE \\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\"),console.log(\"Request-Rate Exceeded  (this message will not be repeated)\"),console.log(\"\"),console.log(\"The default API keys for each service are provided as a highly-throttled,\"),console.log(\"community resource for low-traffic projects and early prototyping.\"),console.log(\"\"),console.log(\"While your application will continue to function, we highly recommended\"),\nconsole.log(\"signing up for your own API keys to improve performance, increase your\"),console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\"),console.log(\"\"),console.log(\"For more details: https://docs.ethers.io/api-keys/\"),console.log(\"\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\\x3d\"))}}","~:source","shadow$provide[334] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.showThrottleMessage = exports.isCommunityResource = exports.isCommunityResourcable = exports.Formatter = void 0;\nvar address_1 = require(\"@ethersproject/address\");\nvar bignumber_1 = require(\"@ethersproject/bignumber\");\nvar bytes_1 = require(\"@ethersproject/bytes\");\nvar constants_1 = require(\"@ethersproject/constants\");\nvar properties_1 = require(\"@ethersproject/properties\");\nvar transactions_1 = require(\"@ethersproject/transactions\");\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\nvar Formatter = /** @class */ (function () {\n    function Formatter() {\n        this.formats = this.getDefaultFormats();\n    }\n    Formatter.prototype.getDefaultFormats = function () {\n        var _this = this;\n        var formats = ({});\n        var address = this.address.bind(this);\n        var bigNumber = this.bigNumber.bind(this);\n        var blockTag = this.blockTag.bind(this);\n        var data = this.data.bind(this);\n        var hash = this.hash.bind(this);\n        var hex = this.hex.bind(this);\n        var number = this.number.bind(this);\n        var type = this.type.bind(this);\n        var strictData = function (v) { return _this.data(v, true); };\n        formats.transaction = {\n            hash: hash,\n            type: type,\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n            blockHash: Formatter.allowNull(hash, null),\n            blockNumber: Formatter.allowNull(number, null),\n            transactionIndex: Formatter.allowNull(number, null),\n            confirmations: Formatter.allowNull(number, null),\n            from: address,\n            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\n            // must be set\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            gasLimit: bigNumber,\n            to: Formatter.allowNull(address, null),\n            value: bigNumber,\n            nonce: number,\n            data: data,\n            r: Formatter.allowNull(this.uint256),\n            s: Formatter.allowNull(this.uint256),\n            v: Formatter.allowNull(number),\n            creates: Formatter.allowNull(address, null),\n            raw: Formatter.allowNull(data),\n        };\n        formats.transactionRequest = {\n            from: Formatter.allowNull(address),\n            nonce: Formatter.allowNull(number),\n            gasLimit: Formatter.allowNull(bigNumber),\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            to: Formatter.allowNull(address),\n            value: Formatter.allowNull(bigNumber),\n            data: Formatter.allowNull(strictData),\n            type: Formatter.allowNull(number),\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n        };\n        formats.receiptLog = {\n            transactionIndex: number,\n            blockNumber: number,\n            transactionHash: hash,\n            address: address,\n            topics: Formatter.arrayOf(hash),\n            data: data,\n            logIndex: number,\n            blockHash: hash,\n        };\n        formats.receipt = {\n            to: Formatter.allowNull(this.address, null),\n            from: Formatter.allowNull(this.address, null),\n            contractAddress: Formatter.allowNull(address, null),\n            transactionIndex: number,\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n            root: Formatter.allowNull(hex),\n            gasUsed: bigNumber,\n            logsBloom: Formatter.allowNull(data),\n            blockHash: hash,\n            transactionHash: hash,\n            logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n            blockNumber: number,\n            confirmations: Formatter.allowNull(number, null),\n            cumulativeGasUsed: bigNumber,\n            effectiveGasPrice: Formatter.allowNull(bigNumber),\n            status: Formatter.allowNull(number),\n            type: type\n        };\n        formats.block = {\n            hash: Formatter.allowNull(hash),\n            parentHash: hash,\n            number: number,\n            timestamp: number,\n            nonce: Formatter.allowNull(hex),\n            difficulty: this.difficulty.bind(this),\n            gasLimit: bigNumber,\n            gasUsed: bigNumber,\n            miner: Formatter.allowNull(address),\n            extraData: data,\n            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\n            baseFeePerGas: Formatter.allowNull(bigNumber)\n        };\n        formats.blockWithTransactions = (0, properties_1.shallowCopy)(formats.block);\n        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n        formats.filter = {\n            fromBlock: Formatter.allowNull(blockTag, undefined),\n            toBlock: Formatter.allowNull(blockTag, undefined),\n            blockHash: Formatter.allowNull(hash, undefined),\n            address: Formatter.allowNull(address, undefined),\n            topics: Formatter.allowNull(this.topics.bind(this), undefined),\n        };\n        formats.filterLog = {\n            blockNumber: Formatter.allowNull(number),\n            blockHash: Formatter.allowNull(hash),\n            transactionIndex: number,\n            removed: Formatter.allowNull(this.boolean.bind(this)),\n            address: address,\n            data: Formatter.allowFalsish(data, \"0x\"),\n            topics: Formatter.arrayOf(hash),\n            transactionHash: hash,\n            logIndex: number,\n        };\n        return formats;\n    };\n    Formatter.prototype.accessList = function (accessList) {\n        return (0, transactions_1.accessListify)(accessList || []);\n    };\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n    // Strict! Used on input.\n    Formatter.prototype.number = function (number) {\n        if (number === \"0x\") {\n            return 0;\n        }\n        return bignumber_1.BigNumber.from(number).toNumber();\n    };\n    Formatter.prototype.type = function (number) {\n        if (number === \"0x\" || number == null) {\n            return 0;\n        }\n        return bignumber_1.BigNumber.from(number).toNumber();\n    };\n    // Strict! Used on input.\n    Formatter.prototype.bigNumber = function (value) {\n        return bignumber_1.BigNumber.from(value);\n    };\n    // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n    Formatter.prototype.boolean = function (value) {\n        if (typeof (value) === \"boolean\") {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            value = value.toLowerCase();\n            if (value === \"true\") {\n                return true;\n            }\n            if (value === \"false\") {\n                return false;\n            }\n        }\n        throw new Error(\"invalid boolean - \" + value);\n    };\n    Formatter.prototype.hex = function (value, strict) {\n        if (typeof (value) === \"string\") {\n            if (!strict && value.substring(0, 2) !== \"0x\") {\n                value = \"0x\" + value;\n            }\n            if ((0, bytes_1.isHexString)(value)) {\n                return value.toLowerCase();\n            }\n        }\n        return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n    };\n    Formatter.prototype.data = function (value, strict) {\n        var result = this.hex(value, strict);\n        if ((result.length % 2) !== 0) {\n            throw new Error(\"invalid data; odd-length - \" + value);\n        }\n        return result;\n    };\n    // Requires an address\n    // Strict! Used on input.\n    Formatter.prototype.address = function (value) {\n        return (0, address_1.getAddress)(value);\n    };\n    Formatter.prototype.callAddress = function (value) {\n        if (!(0, bytes_1.isHexString)(value, 32)) {\n            return null;\n        }\n        var address = (0, address_1.getAddress)((0, bytes_1.hexDataSlice)(value, 12));\n        return (address === constants_1.AddressZero) ? null : address;\n    };\n    Formatter.prototype.contractAddress = function (value) {\n        return (0, address_1.getContractAddress)(value);\n    };\n    // Strict! Used on input.\n    Formatter.prototype.blockTag = function (blockTag) {\n        if (blockTag == null) {\n            return \"latest\";\n        }\n        if (blockTag === \"earliest\") {\n            return \"0x0\";\n        }\n        switch (blockTag) {\n            case \"earliest\": return \"0x0\";\n            case \"latest\":\n            case \"pending\":\n            case \"safe\":\n            case \"finalized\":\n                return blockTag;\n        }\n        if (typeof (blockTag) === \"number\" || (0, bytes_1.isHexString)(blockTag)) {\n            return (0, bytes_1.hexValue)(blockTag);\n        }\n        throw new Error(\"invalid blockTag\");\n    };\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n    Formatter.prototype.hash = function (value, strict) {\n        var result = this.hex(value, strict);\n        if ((0, bytes_1.hexDataLength)(result) !== 32) {\n            return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n        }\n        return result;\n    };\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n    Formatter.prototype.difficulty = function (value) {\n        if (value == null) {\n            return null;\n        }\n        var v = bignumber_1.BigNumber.from(value);\n        try {\n            return v.toNumber();\n        }\n        catch (error) { }\n        return null;\n    };\n    Formatter.prototype.uint256 = function (value) {\n        if (!(0, bytes_1.isHexString)(value)) {\n            throw new Error(\"invalid uint256\");\n        }\n        return (0, bytes_1.hexZeroPad)(value, 32);\n    };\n    Formatter.prototype._block = function (value, format) {\n        if (value.author != null && value.miner == null) {\n            value.miner = value.author;\n        }\n        // The difficulty may need to come from _difficulty in recursed blocks\n        var difficulty = (value._difficulty != null) ? value._difficulty : value.difficulty;\n        var result = Formatter.check(format, value);\n        result._difficulty = ((difficulty == null) ? null : bignumber_1.BigNumber.from(difficulty));\n        return result;\n    };\n    Formatter.prototype.block = function (value) {\n        return this._block(value, this.formats.block);\n    };\n    Formatter.prototype.blockWithTransactions = function (value) {\n        return this._block(value, this.formats.blockWithTransactions);\n    };\n    // Strict! Used on input.\n    Formatter.prototype.transactionRequest = function (value) {\n        return Formatter.check(this.formats.transactionRequest, value);\n    };\n    Formatter.prototype.transactionResponse = function (transaction) {\n        // Rename gas to gasLimit\n        if (transaction.gas != null && transaction.gasLimit == null) {\n            transaction.gasLimit = transaction.gas;\n        }\n        // Some clients (TestRPC) do strange things like return 0x0 for the\n        // 0 address; correct this to be a real address\n        if (transaction.to && bignumber_1.BigNumber.from(transaction.to).isZero()) {\n            transaction.to = \"0x0000000000000000000000000000000000000000\";\n        }\n        // Rename input to data\n        if (transaction.input != null && transaction.data == null) {\n            transaction.data = transaction.input;\n        }\n        // If to and creates are empty, populate the creates from the transaction\n        if (transaction.to == null && transaction.creates == null) {\n            transaction.creates = this.contractAddress(transaction);\n        }\n        if ((transaction.type === 1 || transaction.type === 2) && transaction.accessList == null) {\n            transaction.accessList = [];\n        }\n        var result = Formatter.check(this.formats.transaction, transaction);\n        if (transaction.chainId != null) {\n            var chainId = transaction.chainId;\n            if ((0, bytes_1.isHexString)(chainId)) {\n                chainId = bignumber_1.BigNumber.from(chainId).toNumber();\n            }\n            result.chainId = chainId;\n        }\n        else {\n            var chainId = transaction.networkId;\n            // geth-etc returns chainId\n            if (chainId == null && result.v == null) {\n                chainId = transaction.chainId;\n            }\n            if ((0, bytes_1.isHexString)(chainId)) {\n                chainId = bignumber_1.BigNumber.from(chainId).toNumber();\n            }\n            if (typeof (chainId) !== \"number\" && result.v != null) {\n                chainId = (result.v - 35) / 2;\n                if (chainId < 0) {\n                    chainId = 0;\n                }\n                chainId = parseInt(chainId);\n            }\n            if (typeof (chainId) !== \"number\") {\n                chainId = 0;\n            }\n            result.chainId = chainId;\n        }\n        // 0x0000... should actually be null\n        if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n            result.blockHash = null;\n        }\n        return result;\n    };\n    Formatter.prototype.transaction = function (value) {\n        return (0, transactions_1.parse)(value);\n    };\n    Formatter.prototype.receiptLog = function (value) {\n        return Formatter.check(this.formats.receiptLog, value);\n    };\n    Formatter.prototype.receipt = function (value) {\n        var result = Formatter.check(this.formats.receipt, value);\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n        if (result.root != null) {\n            if (result.root.length <= 4) {\n                // Could be 0x00, 0x0, 0x01 or 0x1\n                var value_1 = bignumber_1.BigNumber.from(result.root).toNumber();\n                if (value_1 === 0 || value_1 === 1) {\n                    // Make sure if both are specified, they match\n                    if (result.status != null && (result.status !== value_1)) {\n                        logger.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", { root: result.root, status: result.status });\n                    }\n                    result.status = value_1;\n                    delete result.root;\n                }\n                else {\n                    logger.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n                }\n            }\n            else if (result.root.length !== 66) {\n                // Must be a valid bytes32\n                logger.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n            }\n        }\n        if (result.status != null) {\n            result.byzantium = true;\n        }\n        return result;\n    };\n    Formatter.prototype.topics = function (value) {\n        var _this = this;\n        if (Array.isArray(value)) {\n            return value.map(function (v) { return _this.topics(v); });\n        }\n        else if (value != null) {\n            return this.hash(value, true);\n        }\n        return null;\n    };\n    Formatter.prototype.filter = function (value) {\n        return Formatter.check(this.formats.filter, value);\n    };\n    Formatter.prototype.filterLog = function (value) {\n        return Formatter.check(this.formats.filterLog, value);\n    };\n    Formatter.check = function (format, object) {\n        var result = {};\n        for (var key in format) {\n            try {\n                var value = format[key](object[key]);\n                if (value !== undefined) {\n                    result[key] = value;\n                }\n            }\n            catch (error) {\n                error.checkKey = key;\n                error.checkValue = object[key];\n                throw error;\n            }\n        }\n        return result;\n    };\n    // if value is null-ish, nullValue is returned\n    Formatter.allowNull = function (format, nullValue) {\n        return (function (value) {\n            if (value == null) {\n                return nullValue;\n            }\n            return format(value);\n        });\n    };\n    // If value is false-ish, replaceValue is returned\n    Formatter.allowFalsish = function (format, replaceValue) {\n        return (function (value) {\n            if (!value) {\n                return replaceValue;\n            }\n            return format(value);\n        });\n    };\n    // Requires an Array satisfying check\n    Formatter.arrayOf = function (format) {\n        return (function (array) {\n            if (!Array.isArray(array)) {\n                throw new Error(\"not an array\");\n            }\n            var result = [];\n            array.forEach(function (value) {\n                result.push(format(value));\n            });\n            return result;\n        });\n    };\n    return Formatter;\n}());\nexports.Formatter = Formatter;\nfunction isCommunityResourcable(value) {\n    return (value && typeof (value.isCommunityResource) === \"function\");\n}\nexports.isCommunityResourcable = isCommunityResourcable;\nfunction isCommunityResource(value) {\n    return (isCommunityResourcable(value) && value.isCommunityResource());\n}\nexports.isCommunityResource = isCommunityResource;\n// Show the throttle message only once\nvar throttleMessage = false;\nfunction showThrottleMessage() {\n    if (throttleMessage) {\n        return;\n    }\n    throttleMessage = true;\n    console.log(\"========= NOTICE =========\");\n    console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.io/api-keys/\");\n    console.log(\"==========================\");\n}\nexports.showThrottleMessage = showThrottleMessage;\n//# sourceMappingURL=formatter.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$ethersproject$constants$lib$index","~$shadow.js","~$module$node_modules$$ethersproject$bytes$lib$index","~$module$node_modules$$ethersproject$providers$lib$_version","~$module$node_modules$$ethersproject$bignumber$lib$index","~$module$node_modules$$ethersproject$transactions$lib$index","~$module$node_modules$$ethersproject$address$lib$index","~$module$node_modules$$ethersproject$logger$lib$index","~$module$node_modules$$ethersproject$properties$lib$index"]],"~:properties",["^5",["transactionResponse","miner","transactionIndex","boolean","gasLimit","arrayOf","transactionRequest","topics","s","removed","isCommunityResourcable","chainId","transaction","gasPrice","confirmations","gasUsed","effectiveGasPrice","allowNull","baseFeePerGas","accessList","hex","hash","checkValue","__esModule","v","timestamp","root","block","showThrottleMessage","toBlock","blockNumber","receipt","blockWithTransactions","bigNumber","_difficulty","getDefaultFormats","maxPriorityFeePerGas","fromBlock","maxFeePerGas","value","creates","check","receiptLog","address","status","number","logs","filter","difficulty","blockHash","allowFalsish","cumulativeGasUsed","transactionHash","type","checkKey","r","formats","from","contractAddress","transactions","nonce","isCommunityResource","callAddress","parentHash","logsBloom","logIndex","raw","extraData","to","uint256","blockTag","Formatter","data","byzantium","_block","filterLog"]],"~:compiled-at",1695041440909,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$ethersproject$providers$lib$formatter.js\",\n\"lineCount\":16,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@ethersproject/providers/lib/formatter.js\"],\n\"sourcesContent\":[\"shadow$provide[334] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.showThrottleMessage = exports.isCommunityResource = exports.isCommunityResourcable = exports.Formatter = void 0;\\nvar address_1 = require(\\\"@ethersproject/address\\\");\\nvar bignumber_1 = require(\\\"@ethersproject/bignumber\\\");\\nvar bytes_1 = require(\\\"@ethersproject/bytes\\\");\\nvar constants_1 = require(\\\"@ethersproject/constants\\\");\\nvar properties_1 = require(\\\"@ethersproject/properties\\\");\\nvar transactions_1 = require(\\\"@ethersproject/transactions\\\");\\nvar logger_1 = require(\\\"@ethersproject/logger\\\");\\nvar _version_1 = require(\\\"./_version\\\");\\nvar logger = new logger_1.Logger(_version_1.version);\\nvar Formatter = /** @class */ (function () {\\n    function Formatter() {\\n        this.formats = this.getDefaultFormats();\\n    }\\n    Formatter.prototype.getDefaultFormats = function () {\\n        var _this = this;\\n        var formats = ({});\\n        var address = this.address.bind(this);\\n        var bigNumber = this.bigNumber.bind(this);\\n        var blockTag = this.blockTag.bind(this);\\n        var data = this.data.bind(this);\\n        var hash = this.hash.bind(this);\\n        var hex = this.hex.bind(this);\\n        var number = this.number.bind(this);\\n        var type = this.type.bind(this);\\n        var strictData = function (v) { return _this.data(v, true); };\\n        formats.transaction = {\\n            hash: hash,\\n            type: type,\\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\\n            blockHash: Formatter.allowNull(hash, null),\\n            blockNumber: Formatter.allowNull(number, null),\\n            transactionIndex: Formatter.allowNull(number, null),\\n            confirmations: Formatter.allowNull(number, null),\\n            from: address,\\n            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\\n            // must be set\\n            gasPrice: Formatter.allowNull(bigNumber),\\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\\n            maxFeePerGas: Formatter.allowNull(bigNumber),\\n            gasLimit: bigNumber,\\n            to: Formatter.allowNull(address, null),\\n            value: bigNumber,\\n            nonce: number,\\n            data: data,\\n            r: Formatter.allowNull(this.uint256),\\n            s: Formatter.allowNull(this.uint256),\\n            v: Formatter.allowNull(number),\\n            creates: Formatter.allowNull(address, null),\\n            raw: Formatter.allowNull(data),\\n        };\\n        formats.transactionRequest = {\\n            from: Formatter.allowNull(address),\\n            nonce: Formatter.allowNull(number),\\n            gasLimit: Formatter.allowNull(bigNumber),\\n            gasPrice: Formatter.allowNull(bigNumber),\\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\\n            maxFeePerGas: Formatter.allowNull(bigNumber),\\n            to: Formatter.allowNull(address),\\n            value: Formatter.allowNull(bigNumber),\\n            data: Formatter.allowNull(strictData),\\n            type: Formatter.allowNull(number),\\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\\n        };\\n        formats.receiptLog = {\\n            transactionIndex: number,\\n            blockNumber: number,\\n            transactionHash: hash,\\n            address: address,\\n            topics: Formatter.arrayOf(hash),\\n            data: data,\\n            logIndex: number,\\n            blockHash: hash,\\n        };\\n        formats.receipt = {\\n            to: Formatter.allowNull(this.address, null),\\n            from: Formatter.allowNull(this.address, null),\\n            contractAddress: Formatter.allowNull(address, null),\\n            transactionIndex: number,\\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\\n            root: Formatter.allowNull(hex),\\n            gasUsed: bigNumber,\\n            logsBloom: Formatter.allowNull(data),\\n            blockHash: hash,\\n            transactionHash: hash,\\n            logs: Formatter.arrayOf(this.receiptLog.bind(this)),\\n            blockNumber: number,\\n            confirmations: Formatter.allowNull(number, null),\\n            cumulativeGasUsed: bigNumber,\\n            effectiveGasPrice: Formatter.allowNull(bigNumber),\\n            status: Formatter.allowNull(number),\\n            type: type\\n        };\\n        formats.block = {\\n            hash: Formatter.allowNull(hash),\\n            parentHash: hash,\\n            number: number,\\n            timestamp: number,\\n            nonce: Formatter.allowNull(hex),\\n            difficulty: this.difficulty.bind(this),\\n            gasLimit: bigNumber,\\n            gasUsed: bigNumber,\\n            miner: Formatter.allowNull(address),\\n            extraData: data,\\n            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\\n            baseFeePerGas: Formatter.allowNull(bigNumber)\\n        };\\n        formats.blockWithTransactions = (0, properties_1.shallowCopy)(formats.block);\\n        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\\n        formats.filter = {\\n            fromBlock: Formatter.allowNull(blockTag, undefined),\\n            toBlock: Formatter.allowNull(blockTag, undefined),\\n            blockHash: Formatter.allowNull(hash, undefined),\\n            address: Formatter.allowNull(address, undefined),\\n            topics: Formatter.allowNull(this.topics.bind(this), undefined),\\n        };\\n        formats.filterLog = {\\n            blockNumber: Formatter.allowNull(number),\\n            blockHash: Formatter.allowNull(hash),\\n            transactionIndex: number,\\n            removed: Formatter.allowNull(this.boolean.bind(this)),\\n            address: address,\\n            data: Formatter.allowFalsish(data, \\\"0x\\\"),\\n            topics: Formatter.arrayOf(hash),\\n            transactionHash: hash,\\n            logIndex: number,\\n        };\\n        return formats;\\n    };\\n    Formatter.prototype.accessList = function (accessList) {\\n        return (0, transactions_1.accessListify)(accessList || []);\\n    };\\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\\n    // Strict! Used on input.\\n    Formatter.prototype.number = function (number) {\\n        if (number === \\\"0x\\\") {\\n            return 0;\\n        }\\n        return bignumber_1.BigNumber.from(number).toNumber();\\n    };\\n    Formatter.prototype.type = function (number) {\\n        if (number === \\\"0x\\\" || number == null) {\\n            return 0;\\n        }\\n        return bignumber_1.BigNumber.from(number).toNumber();\\n    };\\n    // Strict! Used on input.\\n    Formatter.prototype.bigNumber = function (value) {\\n        return bignumber_1.BigNumber.from(value);\\n    };\\n    // Requires a boolean, \\\"true\\\" or  \\\"false\\\"; returns a boolean\\n    Formatter.prototype.boolean = function (value) {\\n        if (typeof (value) === \\\"boolean\\\") {\\n            return value;\\n        }\\n        if (typeof (value) === \\\"string\\\") {\\n            value = value.toLowerCase();\\n            if (value === \\\"true\\\") {\\n                return true;\\n            }\\n            if (value === \\\"false\\\") {\\n                return false;\\n            }\\n        }\\n        throw new Error(\\\"invalid boolean - \\\" + value);\\n    };\\n    Formatter.prototype.hex = function (value, strict) {\\n        if (typeof (value) === \\\"string\\\") {\\n            if (!strict && value.substring(0, 2) !== \\\"0x\\\") {\\n                value = \\\"0x\\\" + value;\\n            }\\n            if ((0, bytes_1.isHexString)(value)) {\\n                return value.toLowerCase();\\n            }\\n        }\\n        return logger.throwArgumentError(\\\"invalid hash\\\", \\\"value\\\", value);\\n    };\\n    Formatter.prototype.data = function (value, strict) {\\n        var result = this.hex(value, strict);\\n        if ((result.length % 2) !== 0) {\\n            throw new Error(\\\"invalid data; odd-length - \\\" + value);\\n        }\\n        return result;\\n    };\\n    // Requires an address\\n    // Strict! Used on input.\\n    Formatter.prototype.address = function (value) {\\n        return (0, address_1.getAddress)(value);\\n    };\\n    Formatter.prototype.callAddress = function (value) {\\n        if (!(0, bytes_1.isHexString)(value, 32)) {\\n            return null;\\n        }\\n        var address = (0, address_1.getAddress)((0, bytes_1.hexDataSlice)(value, 12));\\n        return (address === constants_1.AddressZero) ? null : address;\\n    };\\n    Formatter.prototype.contractAddress = function (value) {\\n        return (0, address_1.getContractAddress)(value);\\n    };\\n    // Strict! Used on input.\\n    Formatter.prototype.blockTag = function (blockTag) {\\n        if (blockTag == null) {\\n            return \\\"latest\\\";\\n        }\\n        if (blockTag === \\\"earliest\\\") {\\n            return \\\"0x0\\\";\\n        }\\n        switch (blockTag) {\\n            case \\\"earliest\\\": return \\\"0x0\\\";\\n            case \\\"latest\\\":\\n            case \\\"pending\\\":\\n            case \\\"safe\\\":\\n            case \\\"finalized\\\":\\n                return blockTag;\\n        }\\n        if (typeof (blockTag) === \\\"number\\\" || (0, bytes_1.isHexString)(blockTag)) {\\n            return (0, bytes_1.hexValue)(blockTag);\\n        }\\n        throw new Error(\\\"invalid blockTag\\\");\\n    };\\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\\n    Formatter.prototype.hash = function (value, strict) {\\n        var result = this.hex(value, strict);\\n        if ((0, bytes_1.hexDataLength)(result) !== 32) {\\n            return logger.throwArgumentError(\\\"invalid hash\\\", \\\"value\\\", value);\\n        }\\n        return result;\\n    };\\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\\n    Formatter.prototype.difficulty = function (value) {\\n        if (value == null) {\\n            return null;\\n        }\\n        var v = bignumber_1.BigNumber.from(value);\\n        try {\\n            return v.toNumber();\\n        }\\n        catch (error) { }\\n        return null;\\n    };\\n    Formatter.prototype.uint256 = function (value) {\\n        if (!(0, bytes_1.isHexString)(value)) {\\n            throw new Error(\\\"invalid uint256\\\");\\n        }\\n        return (0, bytes_1.hexZeroPad)(value, 32);\\n    };\\n    Formatter.prototype._block = function (value, format) {\\n        if (value.author != null && value.miner == null) {\\n            value.miner = value.author;\\n        }\\n        // The difficulty may need to come from _difficulty in recursed blocks\\n        var difficulty = (value._difficulty != null) ? value._difficulty : value.difficulty;\\n        var result = Formatter.check(format, value);\\n        result._difficulty = ((difficulty == null) ? null : bignumber_1.BigNumber.from(difficulty));\\n        return result;\\n    };\\n    Formatter.prototype.block = function (value) {\\n        return this._block(value, this.formats.block);\\n    };\\n    Formatter.prototype.blockWithTransactions = function (value) {\\n        return this._block(value, this.formats.blockWithTransactions);\\n    };\\n    // Strict! Used on input.\\n    Formatter.prototype.transactionRequest = function (value) {\\n        return Formatter.check(this.formats.transactionRequest, value);\\n    };\\n    Formatter.prototype.transactionResponse = function (transaction) {\\n        // Rename gas to gasLimit\\n        if (transaction.gas != null && transaction.gasLimit == null) {\\n            transaction.gasLimit = transaction.gas;\\n        }\\n        // Some clients (TestRPC) do strange things like return 0x0 for the\\n        // 0 address; correct this to be a real address\\n        if (transaction.to && bignumber_1.BigNumber.from(transaction.to).isZero()) {\\n            transaction.to = \\\"0x0000000000000000000000000000000000000000\\\";\\n        }\\n        // Rename input to data\\n        if (transaction.input != null && transaction.data == null) {\\n            transaction.data = transaction.input;\\n        }\\n        // If to and creates are empty, populate the creates from the transaction\\n        if (transaction.to == null && transaction.creates == null) {\\n            transaction.creates = this.contractAddress(transaction);\\n        }\\n        if ((transaction.type === 1 || transaction.type === 2) && transaction.accessList == null) {\\n            transaction.accessList = [];\\n        }\\n        var result = Formatter.check(this.formats.transaction, transaction);\\n        if (transaction.chainId != null) {\\n            var chainId = transaction.chainId;\\n            if ((0, bytes_1.isHexString)(chainId)) {\\n                chainId = bignumber_1.BigNumber.from(chainId).toNumber();\\n            }\\n            result.chainId = chainId;\\n        }\\n        else {\\n            var chainId = transaction.networkId;\\n            // geth-etc returns chainId\\n            if (chainId == null && result.v == null) {\\n                chainId = transaction.chainId;\\n            }\\n            if ((0, bytes_1.isHexString)(chainId)) {\\n                chainId = bignumber_1.BigNumber.from(chainId).toNumber();\\n            }\\n            if (typeof (chainId) !== \\\"number\\\" && result.v != null) {\\n                chainId = (result.v - 35) / 2;\\n                if (chainId < 0) {\\n                    chainId = 0;\\n                }\\n                chainId = parseInt(chainId);\\n            }\\n            if (typeof (chainId) !== \\\"number\\\") {\\n                chainId = 0;\\n            }\\n            result.chainId = chainId;\\n        }\\n        // 0x0000... should actually be null\\n        if (result.blockHash && result.blockHash.replace(/0/g, \\\"\\\") === \\\"x\\\") {\\n            result.blockHash = null;\\n        }\\n        return result;\\n    };\\n    Formatter.prototype.transaction = function (value) {\\n        return (0, transactions_1.parse)(value);\\n    };\\n    Formatter.prototype.receiptLog = function (value) {\\n        return Formatter.check(this.formats.receiptLog, value);\\n    };\\n    Formatter.prototype.receipt = function (value) {\\n        var result = Formatter.check(this.formats.receipt, value);\\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\\n        if (result.root != null) {\\n            if (result.root.length <= 4) {\\n                // Could be 0x00, 0x0, 0x01 or 0x1\\n                var value_1 = bignumber_1.BigNumber.from(result.root).toNumber();\\n                if (value_1 === 0 || value_1 === 1) {\\n                    // Make sure if both are specified, they match\\n                    if (result.status != null && (result.status !== value_1)) {\\n                        logger.throwArgumentError(\\\"alt-root-status/status mismatch\\\", \\\"value\\\", { root: result.root, status: result.status });\\n                    }\\n                    result.status = value_1;\\n                    delete result.root;\\n                }\\n                else {\\n                    logger.throwArgumentError(\\\"invalid alt-root-status\\\", \\\"value.root\\\", result.root);\\n                }\\n            }\\n            else if (result.root.length !== 66) {\\n                // Must be a valid bytes32\\n                logger.throwArgumentError(\\\"invalid root hash\\\", \\\"value.root\\\", result.root);\\n            }\\n        }\\n        if (result.status != null) {\\n            result.byzantium = true;\\n        }\\n        return result;\\n    };\\n    Formatter.prototype.topics = function (value) {\\n        var _this = this;\\n        if (Array.isArray(value)) {\\n            return value.map(function (v) { return _this.topics(v); });\\n        }\\n        else if (value != null) {\\n            return this.hash(value, true);\\n        }\\n        return null;\\n    };\\n    Formatter.prototype.filter = function (value) {\\n        return Formatter.check(this.formats.filter, value);\\n    };\\n    Formatter.prototype.filterLog = function (value) {\\n        return Formatter.check(this.formats.filterLog, value);\\n    };\\n    Formatter.check = function (format, object) {\\n        var result = {};\\n        for (var key in format) {\\n            try {\\n                var value = format[key](object[key]);\\n                if (value !== undefined) {\\n                    result[key] = value;\\n                }\\n            }\\n            catch (error) {\\n                error.checkKey = key;\\n                error.checkValue = object[key];\\n                throw error;\\n            }\\n        }\\n        return result;\\n    };\\n    // if value is null-ish, nullValue is returned\\n    Formatter.allowNull = function (format, nullValue) {\\n        return (function (value) {\\n            if (value == null) {\\n                return nullValue;\\n            }\\n            return format(value);\\n        });\\n    };\\n    // If value is false-ish, replaceValue is returned\\n    Formatter.allowFalsish = function (format, replaceValue) {\\n        return (function (value) {\\n            if (!value) {\\n                return replaceValue;\\n            }\\n            return format(value);\\n        });\\n    };\\n    // Requires an Array satisfying check\\n    Formatter.arrayOf = function (format) {\\n        return (function (array) {\\n            if (!Array.isArray(array)) {\\n                throw new Error(\\\"not an array\\\");\\n            }\\n            var result = [];\\n            array.forEach(function (value) {\\n                result.push(format(value));\\n            });\\n            return result;\\n        });\\n    };\\n    return Formatter;\\n}());\\nexports.Formatter = Formatter;\\nfunction isCommunityResourcable(value) {\\n    return (value && typeof (value.isCommunityResource) === \\\"function\\\");\\n}\\nexports.isCommunityResourcable = isCommunityResourcable;\\nfunction isCommunityResource(value) {\\n    return (isCommunityResourcable(value) && value.isCommunityResource());\\n}\\nexports.isCommunityResource = isCommunityResource;\\n// Show the throttle message only once\\nvar throttleMessage = false;\\nfunction showThrottleMessage() {\\n    if (throttleMessage) {\\n        return;\\n    }\\n    throttleMessage = true;\\n    console.log(\\\"========= NOTICE =========\\\");\\n    console.log(\\\"Request-Rate Exceeded  (this message will not be repeated)\\\");\\n    console.log(\\\"\\\");\\n    console.log(\\\"The default API keys for each service are provided as a highly-throttled,\\\");\\n    console.log(\\\"community resource for low-traffic projects and early prototyping.\\\");\\n    console.log(\\\"\\\");\\n    console.log(\\\"While your application will continue to function, we highly recommended\\\");\\n    console.log(\\\"signing up for your own API keys to improve performance, increase your\\\");\\n    console.log(\\\"request rate/limit and enable other perks, such as metrics and advanced APIs.\\\");\\n    console.log(\\\"\\\");\\n    console.log(\\\"For more details: https:/\\\\/docs.ethers.io/api-keys/\\\");\\n    console.log(\\\"==========================\\\");\\n}\\nexports.showThrottleMessage = showThrottleMessage;\\n//# sourceMappingURL=formatter.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"isCommunityResourcable\",\"value\",\"isCommunityResource\",\"Object\",\"defineProperty\",\"showThrottleMessage\",\"Formatter\",\"address_1\",\"bignumber_1\",\"bytes_1\",\"constants_1\",\"properties_1\",\"transactions_1\",\"logger_1\",\"_version_1\",\"logger\",\"Logger\",\"version\",\"formats\",\"getDefaultFormats\",\"prototype\",\"Formatter.prototype.getDefaultFormats\",\"_this\",\"address\",\"bind\",\"bigNumber\",\"blockTag\",\"data\",\"hash\",\"hex\",\"number\",\"type\",\"transaction\",\"accessList\",\"allowNull\",\"blockHash\",\"blockNumber\",\"transactionIndex\",\"confirmations\",\"from\",\"gasPrice\",\"maxPriorityFeePerGas\",\"maxFeePerGas\",\"gasLimit\",\"to\",\"nonce\",\"r\",\"uint256\",\"s\",\"v\",\"creates\",\"raw\",\"transactionRequest\",\"strictData\",\"receiptLog\",\"transactionHash\",\"topics\",\"arrayOf\",\"logIndex\",\"receipt\",\"contractAddress\",\"root\",\"gasUsed\",\"logsBloom\",\"logs\",\"cumulativeGasUsed\",\"effectiveGasPrice\",\"status\",\"block\",\"parentHash\",\"timestamp\",\"difficulty\",\"miner\",\"extraData\",\"transactions\",\"baseFeePerGas\",\"blockWithTransactions\",\"shallowCopy\",\"transactionResponse\",\"filter\",\"fromBlock\",\"undefined\",\"toBlock\",\"filterLog\",\"removed\",\"boolean\",\"allowFalsish\",\"Formatter.prototype.accessList\",\"accessListify\",\"Formatter.prototype.number\",\"BigNumber\",\"toNumber\",\"Formatter.prototype.type\",\"Formatter.prototype.bigNumber\",\"Formatter.prototype.boolean\",\"toLowerCase\",\"Error\",\"Formatter.prototype.hex\",\"strict\",\"substring\",\"isHexString\",\"throwArgumentError\",\"Formatter.prototype.data\",\"result\",\"length\",\"Formatter.prototype.address\",\"getAddress\",\"callAddress\",\"Formatter.prototype.callAddress\",\"hexDataSlice\",\"AddressZero\",\"Formatter.prototype.contractAddress\",\"getContractAddress\",\"Formatter.prototype.blockTag\",\"hexValue\",\"Formatter.prototype.hash\",\"hexDataLength\",\"Formatter.prototype.difficulty\",\"error\",\"Formatter.prototype.uint256\",\"hexZeroPad\",\"_block\",\"Formatter.prototype._block\",\"format\",\"author\",\"_difficulty\",\"check\",\"Formatter.prototype.block\",\"Formatter.prototype.blockWithTransactions\",\"Formatter.prototype.transactionRequest\",\"Formatter.prototype.transactionResponse\",\"gas\",\"isZero\",\"input\",\"chainId\",\"networkId\",\"parseInt\",\"replace\",\"Formatter.prototype.transaction\",\"parse\",\"Formatter.prototype.receiptLog\",\"Formatter.prototype.receipt\",\"value_1\",\"byzantium\",\"Formatter.prototype.topics\",\"Array\",\"isArray\",\"map\",\"Formatter.prototype.filter\",\"Formatter.prototype.filterLog\",\"Formatter.check\",\"object\",\"key\",\"checkKey\",\"checkValue\",\"Formatter.allowNull\",\"nullValue\",\"Formatter.allowFalsish\",\"replaceValue\",\"Formatter.arrayOf\",\"array\",\"forEach\",\"push\",\"throttleMessage\",\"console\",\"log\"]\n}\n"]