["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/browserify-sign/browser/sign.js"],"~:js","shadow$provide[248]=function(S,A,V,q){function F(k,t,B,E){k=y.from(k.toArray());if(k.length<t.byteLength()){var H=y.alloc(t.byteLength()-k.length);k=y.concat([H,k])}H=B.length;B=G(B,t);B=B.mod(t);B=y.from(B.toArray());B.length<t.byteLength()&&(t=y.alloc(t.byteLength()-B.length),B=y.concat([t,B]));t=B;B=y.alloc(H);B.fill(1);H=y.alloc(H);H=e(E,H).update(B).update(y.from([0])).update(k).update(t).digest();B=e(E,H).update(B).digest();H=e(E,H).update(B).update(y.from([1])).update(k).update(t).digest();\nB=e(E,H).update(B).digest();return{k:H,v:B}}function G(k,t){var B=new n(k);k=(k.length<<3)-t.bitLength();0<k&&B.ishrn(k);return B}function r(k,t,B){var E;do{for(E=y.alloc(0);8*E.length<k.bitLength();)t.v=e(B,t.k).update(t.v).digest(),E=y.concat([E,t.v]);E=G(E,k);t.k=e(B,t.k).update(t.v).update(y.from([0])).digest();t.v=e(B,t.k).update(t.v).digest()}while(-1!==E.cmp(k));return E}var y=A(111).Buffer,e=A(166),u=A(225),p=A(102).ec,n=A(7),l=A(246),h=A(247);V.exports=function(k,t,B,E,H){t=l(t);if(t.curve){if(\"ecdsa\"!==\nE&&\"ecdsa/rsa\"!==E)throw Error(\"wrong private key type\");B=k;k=h[t.curve.join(\".\")];if(!k)throw Error(\"unknown curve \"+t.curve.join(\".\"));B=(new p(k)).keyFromPrivate(t.privateKey).sign(B);return y.from(B.toDER())}if(\"dsa\"===t.type){if(\"dsa\"!==E)throw Error(\"wrong private key type\");var D=k;k=t.params.priv_key;E=t.params.p;H=t.params.q;t=t.params.g;var C=new n(0),I=G(D,H).mod(H);var M=!1;for(D=F(k,H,D,B);!1===M;){C=M=r(H,D,B);var P=H;C=t.toRed(n.mont(E)).redPow(C).fromRed().mod(P);M=M.invm(H).imul(I.add(k.mul(C))).mod(H);\n0===M.cmpn(0)&&(M=!1,C=new n(0))}B=M;t=C.toArray();B=B.toArray();t[0]&128&&(t=[0].concat(t));B[0]&128&&(B=[0].concat(B));k=[48,t.length+B.length+4,2,t.length];k=k.concat(t,[2,B.length],B);return y.from(k)}if(\"rsa\"!==E&&\"ecdsa/rsa\"!==E)throw Error(\"wrong private key type\");k=y.concat([H,k]);E=t.modulus.byteLength();for(B=[0,1];k.length+B.length+1<E;)B.push(255);B.push(0);for(E=-1;++E<k.length;)B.push(k[E]);return u(B,t)};V.exports.getKey=F;V.exports.makeKey=r}","~:source","shadow$provide[248] = function(global,require,module,exports) {\n// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar Buffer = require('safe-buffer').Buffer\nvar createHmac = require('create-hmac')\nvar crt = require('browserify-rsa')\nvar EC = require('elliptic').ec\nvar BN = require('bn.js')\nvar parseKeys = require('parse-asn1')\nvar curves = require('./curves.json')\n\nfunction sign (hash, key, hashType, signType, tag) {\n  var priv = parseKeys(key)\n  if (priv.curve) {\n    // rsa keys can be interpreted as ecdsa ones in openssl\n    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')\n    return ecSign(hash, priv)\n  } else if (priv.type === 'dsa') {\n    if (signType !== 'dsa') throw new Error('wrong private key type')\n    return dsaSign(hash, priv, hashType)\n  } else {\n    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')\n  }\n  hash = Buffer.concat([tag, hash])\n  var len = priv.modulus.byteLength()\n  var pad = [0, 1]\n  while (hash.length + pad.length + 1 < len) pad.push(0xff)\n  pad.push(0x00)\n  var i = -1\n  while (++i < hash.length) pad.push(hash[i])\n\n  var out = crt(pad, priv)\n  return out\n}\n\nfunction ecSign (hash, priv) {\n  var curveId = curves[priv.curve.join('.')]\n  if (!curveId) throw new Error('unknown curve ' + priv.curve.join('.'))\n\n  var curve = new EC(curveId)\n  var key = curve.keyFromPrivate(priv.privateKey)\n  var out = key.sign(hash)\n\n  return Buffer.from(out.toDER())\n}\n\nfunction dsaSign (hash, priv, algo) {\n  var x = priv.params.priv_key\n  var p = priv.params.p\n  var q = priv.params.q\n  var g = priv.params.g\n  var r = new BN(0)\n  var k\n  var H = bits2int(hash, q).mod(q)\n  var s = false\n  var kv = getKey(x, q, hash, algo)\n  while (s === false) {\n    k = makeKey(q, kv, algo)\n    r = makeR(g, k, p, q)\n    s = k.invm(q).imul(H.add(x.mul(r))).mod(q)\n    if (s.cmpn(0) === 0) {\n      s = false\n      r = new BN(0)\n    }\n  }\n  return toDER(r, s)\n}\n\nfunction toDER (r, s) {\n  r = r.toArray()\n  s = s.toArray()\n\n  // Pad values\n  if (r[0] & 0x80) r = [0].concat(r)\n  if (s[0] & 0x80) s = [0].concat(s)\n\n  var total = r.length + s.length + 4\n  var res = [0x30, total, 0x02, r.length]\n  res = res.concat(r, [0x02, s.length], s)\n  return Buffer.from(res)\n}\n\nfunction getKey (x, q, hash, algo) {\n  x = Buffer.from(x.toArray())\n  if (x.length < q.byteLength()) {\n    var zeros = Buffer.alloc(q.byteLength() - x.length)\n    x = Buffer.concat([zeros, x])\n  }\n  var hlen = hash.length\n  var hbits = bits2octets(hash, q)\n  var v = Buffer.alloc(hlen)\n  v.fill(1)\n  var k = Buffer.alloc(hlen)\n  k = createHmac(algo, k).update(v).update(Buffer.from([0])).update(x).update(hbits).digest()\n  v = createHmac(algo, k).update(v).digest()\n  k = createHmac(algo, k).update(v).update(Buffer.from([1])).update(x).update(hbits).digest()\n  v = createHmac(algo, k).update(v).digest()\n  return { k: k, v: v }\n}\n\nfunction bits2int (obits, q) {\n  var bits = new BN(obits)\n  var shift = (obits.length << 3) - q.bitLength()\n  if (shift > 0) bits.ishrn(shift)\n  return bits\n}\n\nfunction bits2octets (bits, q) {\n  bits = bits2int(bits, q)\n  bits = bits.mod(q)\n  var out = Buffer.from(bits.toArray())\n  if (out.length < q.byteLength()) {\n    var zeros = Buffer.alloc(q.byteLength() - out.length)\n    out = Buffer.concat([zeros, out])\n  }\n  return out\n}\n\nfunction makeKey (q, kv, algo) {\n  var t\n  var k\n\n  do {\n    t = Buffer.alloc(0)\n\n    while (t.length * 8 < q.bitLength()) {\n      kv.v = createHmac(algo, kv.k).update(kv.v).digest()\n      t = Buffer.concat([t, kv.v])\n    }\n\n    k = bits2int(t, q)\n    kv.k = createHmac(algo, kv.k).update(kv.v).update(Buffer.from([0])).digest()\n    kv.v = createHmac(algo, kv.k).update(kv.v).digest()\n  } while (k.cmp(q) !== -1)\n\n  return k\n}\n\nfunction makeR (g, k, p, q) {\n  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q)\n}\n\nmodule.exports = sign\nmodule.exports.getKey = getKey\nmodule.exports.makeKey = makeKey\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$browserify_sign$browser$curves_json","~$module$node_modules$create_hmac$browser","~$module$node_modules$elliptic$lib$elliptic","~$shadow.js","~$module$node_modules$safe_buffer$index","~$module$node_modules$parse_asn1$index","~$module$node_modules$bn_DOT_js$lib$bn","~$module$node_modules$browserify_rsa$index"]],"~:properties",["^5",["v","getKey","k","makeKey"]],"~:compiled-at",1695041440861,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$browserify_sign$browser$sign.js\",\n\"lineCount\":4,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/browserify-sign/browser/sign.js\"],\n\"sourcesContent\":[\"shadow$provide[248] = function(global,require,module,exports) {\\n// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\\nvar Buffer = require('safe-buffer').Buffer\\nvar createHmac = require('create-hmac')\\nvar crt = require('browserify-rsa')\\nvar EC = require('elliptic').ec\\nvar BN = require('bn.js')\\nvar parseKeys = require('parse-asn1')\\nvar curves = require('./curves.json')\\n\\nfunction sign (hash, key, hashType, signType, tag) {\\n  var priv = parseKeys(key)\\n  if (priv.curve) {\\n    // rsa keys can be interpreted as ecdsa ones in openssl\\n    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')\\n    return ecSign(hash, priv)\\n  } else if (priv.type === 'dsa') {\\n    if (signType !== 'dsa') throw new Error('wrong private key type')\\n    return dsaSign(hash, priv, hashType)\\n  } else {\\n    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')\\n  }\\n  hash = Buffer.concat([tag, hash])\\n  var len = priv.modulus.byteLength()\\n  var pad = [0, 1]\\n  while (hash.length + pad.length + 1 < len) pad.push(0xff)\\n  pad.push(0x00)\\n  var i = -1\\n  while (++i < hash.length) pad.push(hash[i])\\n\\n  var out = crt(pad, priv)\\n  return out\\n}\\n\\nfunction ecSign (hash, priv) {\\n  var curveId = curves[priv.curve.join('.')]\\n  if (!curveId) throw new Error('unknown curve ' + priv.curve.join('.'))\\n\\n  var curve = new EC(curveId)\\n  var key = curve.keyFromPrivate(priv.privateKey)\\n  var out = key.sign(hash)\\n\\n  return Buffer.from(out.toDER())\\n}\\n\\nfunction dsaSign (hash, priv, algo) {\\n  var x = priv.params.priv_key\\n  var p = priv.params.p\\n  var q = priv.params.q\\n  var g = priv.params.g\\n  var r = new BN(0)\\n  var k\\n  var H = bits2int(hash, q).mod(q)\\n  var s = false\\n  var kv = getKey(x, q, hash, algo)\\n  while (s === false) {\\n    k = makeKey(q, kv, algo)\\n    r = makeR(g, k, p, q)\\n    s = k.invm(q).imul(H.add(x.mul(r))).mod(q)\\n    if (s.cmpn(0) === 0) {\\n      s = false\\n      r = new BN(0)\\n    }\\n  }\\n  return toDER(r, s)\\n}\\n\\nfunction toDER (r, s) {\\n  r = r.toArray()\\n  s = s.toArray()\\n\\n  // Pad values\\n  if (r[0] & 0x80) r = [0].concat(r)\\n  if (s[0] & 0x80) s = [0].concat(s)\\n\\n  var total = r.length + s.length + 4\\n  var res = [0x30, total, 0x02, r.length]\\n  res = res.concat(r, [0x02, s.length], s)\\n  return Buffer.from(res)\\n}\\n\\nfunction getKey (x, q, hash, algo) {\\n  x = Buffer.from(x.toArray())\\n  if (x.length < q.byteLength()) {\\n    var zeros = Buffer.alloc(q.byteLength() - x.length)\\n    x = Buffer.concat([zeros, x])\\n  }\\n  var hlen = hash.length\\n  var hbits = bits2octets(hash, q)\\n  var v = Buffer.alloc(hlen)\\n  v.fill(1)\\n  var k = Buffer.alloc(hlen)\\n  k = createHmac(algo, k).update(v).update(Buffer.from([0])).update(x).update(hbits).digest()\\n  v = createHmac(algo, k).update(v).digest()\\n  k = createHmac(algo, k).update(v).update(Buffer.from([1])).update(x).update(hbits).digest()\\n  v = createHmac(algo, k).update(v).digest()\\n  return { k: k, v: v }\\n}\\n\\nfunction bits2int (obits, q) {\\n  var bits = new BN(obits)\\n  var shift = (obits.length << 3) - q.bitLength()\\n  if (shift > 0) bits.ishrn(shift)\\n  return bits\\n}\\n\\nfunction bits2octets (bits, q) {\\n  bits = bits2int(bits, q)\\n  bits = bits.mod(q)\\n  var out = Buffer.from(bits.toArray())\\n  if (out.length < q.byteLength()) {\\n    var zeros = Buffer.alloc(q.byteLength() - out.length)\\n    out = Buffer.concat([zeros, out])\\n  }\\n  return out\\n}\\n\\nfunction makeKey (q, kv, algo) {\\n  var t\\n  var k\\n\\n  do {\\n    t = Buffer.alloc(0)\\n\\n    while (t.length * 8 < q.bitLength()) {\\n      kv.v = createHmac(algo, kv.k).update(kv.v).digest()\\n      t = Buffer.concat([t, kv.v])\\n    }\\n\\n    k = bits2int(t, q)\\n    kv.k = createHmac(algo, kv.k).update(kv.v).update(Buffer.from([0])).digest()\\n    kv.v = createHmac(algo, kv.k).update(kv.v).digest()\\n  } while (k.cmp(q) !== -1)\\n\\n  return k\\n}\\n\\nfunction makeR (g, k, p, q) {\\n  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q)\\n}\\n\\nmodule.exports = sign\\nmodule.exports.getKey = getKey\\nmodule.exports.makeKey = makeKey\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"getKey\",\"x\",\"q\",\"hash\",\"algo\",\"Buffer\",\"from\",\"toArray\",\"length\",\"byteLength\",\"zeros\",\"alloc\",\"concat\",\"hlen\",\"bits\",\"bits2int\",\"mod\",\"out\",\"v\",\"fill\",\"k\",\"createHmac\",\"update\",\"hbits\",\"digest\",\"obits\",\"BN\",\"shift\",\"bitLength\",\"ishrn\",\"makeKey\",\"kv\",\"t\",\"cmp\",\"crt\",\"EC\",\"ec\",\"parseKeys\",\"curves\",\"sign\",\"key\",\"hashType\",\"signType\",\"tag\",\"priv\",\"curve\",\"Error\",\"curveId\",\"join\",\"keyFromPrivate\",\"privateKey\",\"toDER\",\"type\",\"params\",\"priv_key\",\"p\",\"g\",\"r\",\"H\",\"s\",\"toRed\",\"mont\",\"redPow\",\"fromRed\",\"invm\",\"imul\",\"add\",\"mul\",\"cmpn\",\"res\",\"len\",\"modulus\",\"pad\",\"push\",\"i\"]\n}\n"]