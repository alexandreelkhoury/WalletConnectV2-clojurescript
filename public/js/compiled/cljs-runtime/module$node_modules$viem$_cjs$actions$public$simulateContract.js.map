{
"version":3,
"file":"module$node_modules$viem$_cjs$actions$public$simulateContract.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,6DAAA,CAAkF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAE1HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAQI,CAAAA,gBAAR,CAA2B,IAAK,EAChC,OAAMC,kBAAoBP,OAAA,CAAQ,2DAAR,CAA1B,CACMQ,0BAA4BR,OAAA,CAAQ,8DAAR,CADlC,CAEMS,wBAA0BT,OAAA,CAAQ,4DAAR,CAFhC,CAGMU;AAAwBV,OAAA,CAAQ,6DAAR,CAH9B,CAIMW,UAAYX,OAAA,CAAQ,mDAAR,CA8ClBE,QAAQI,CAAAA,gBAAR,CA7CAA,cAA+B,CAACM,MAAD,CAAS,CAAEC,GAAF,CAAOC,OAAP,CAAgBC,IAAhB,CAAsBC,UAAtB,CAAkCC,YAAlC,CAAgD,GAAGC,WAAnD,CAAT,CAA2E,CACtG,MAAMC,QAAUD,WAAYC,CAAAA,OAAZ,CACV,GAAIZ,iBAAkBa,CAAAA,YAAtB,EAAoCF,WAAYC,CAAAA,OAAhD,CADU,CAEVE,IAAAA,EAFN,CAGMC,SAAW,GAAIb,uBAAwBc,CAAAA,kBAA5B,EAAgD,CAC7DV,GAD6D,CAE7DE,IAF6D,CAG7DE,YAH6D,CAAhD,CAKjB,IAAI,CACA,MAAM,CAAEO,IAAF,CAAA,CAAW,MAAM,GAAIb,SAAUc,CAAAA,IAAd,EAAoBb,MAApB,CAA4B,CAC/Cc,MAAO,CAAA,CADwC,CAE/CF,KAAO,GAAEF,QAAF,GAAaN,UAAA;AAAaA,UAAWW,CAAAA,OAAX,CAAmB,IAAnB,CAAyB,EAAzB,CAAb,CAA4C,EAAzD,EAFwC,CAG/CC,GAAId,OAH2C,CAI/C,GAAGI,WAJ4C,CAA5B,CAYvB,OAAO,CACHW,OAPWA,GAAIrB,yBAA0BsB,CAAAA,oBAA9BD,EAAoD,CAC/DhB,GAD+D,CAE/DE,IAF+D,CAG/DE,YAH+D,CAI/DO,KAAMA,IAANA,EAAc,IAJiD,CAApDK,CAMR,CAEHE,QAAS,CACLlB,GADK,CAELC,OAFK,CAGLC,IAHK,CAILC,UAJK,CAKLC,YALK,CAML,GAAGC,WANE,CAFN,CAbP,CAyBJ,MAAOc,GAAP,CAAY,CACR,KAAM,GAAItB,qBAAsBuB,CAAAA,gBAA1B,EAA4CD,GAA5C,CAAiD,CAC9CnB,GAD8C,CAEnDC,OAFmD,CAGnDC,IAHmD,CAInDmB,SAAU,iCAJyC,CAKnDjB,YALmD,CAMnDkB,OAAQhB,OAASL,EAAAA,OANkC,CAAjD,CAAN,CADQ,CAlC0F,CATgB;",
"sources":["node_modules/viem/_cjs/actions/public/simulateContract.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$viem$_cjs$actions$public$simulateContract\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.simulateContract = void 0;\nconst parseAccount_js_1 = require(\"../../accounts/utils/parseAccount.js\");\nconst decodeFunctionResult_js_1 = require(\"../../utils/abi/decodeFunctionResult.js\");\nconst encodeFunctionData_js_1 = require(\"../../utils/abi/encodeFunctionData.js\");\nconst getContractError_js_1 = require(\"../../utils/errors/getContractError.js\");\nconst call_js_1 = require(\"./call.js\");\nasync function simulateContract(client, { abi, address, args, dataSuffix, functionName, ...callRequest }) {\n    const account = callRequest.account\n        ? (0, parseAccount_js_1.parseAccount)(callRequest.account)\n        : undefined;\n    const calldata = (0, encodeFunctionData_js_1.encodeFunctionData)({\n        abi,\n        args,\n        functionName,\n    });\n    try {\n        const { data } = await (0, call_js_1.call)(client, {\n            batch: false,\n            data: `${calldata}${dataSuffix ? dataSuffix.replace('0x', '') : ''}`,\n            to: address,\n            ...callRequest,\n        });\n        const result = (0, decodeFunctionResult_js_1.decodeFunctionResult)({\n            abi,\n            args,\n            functionName,\n            data: data || '0x',\n        });\n        return {\n            result,\n            request: {\n                abi,\n                address,\n                args,\n                dataSuffix,\n                functionName,\n                ...callRequest,\n            },\n        };\n    }\n    catch (err) {\n        throw (0, getContractError_js_1.getContractError)(err, {\n            abi: abi,\n            address,\n            args,\n            docsPath: '/docs/contract/simulateContract',\n            functionName,\n            sender: account?.address,\n        });\n    }\n}\nexports.simulateContract = simulateContract;\n//# sourceMappingURL=simulateContract.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","simulateContract","parseAccount_js_1","decodeFunctionResult_js_1","encodeFunctionData_js_1","getContractError_js_1","call_js_1","client","abi","address","args","dataSuffix","functionName","callRequest","account","parseAccount","undefined","calldata","encodeFunctionData","data","call","batch","replace","to","result","decodeFunctionResult","request","err","getContractError","docsPath","sender"]
}
