{
"version":3,
"file":"module$node_modules$viem$node_modules$abitype$dist$cjs$human_readable$runtime$structs.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/viem/node_modules/abitype/dist/cjs/human-readable/runtime/structs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$viem$node_modules$abitype$dist$cjs$human_readable$runtime$structs\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseStructs = void 0;\nconst regex_js_1 = require(\"../../regex.js\");\nconst abiItem_js_1 = require(\"../errors/abiItem.js\");\nconst abiParameter_js_1 = require(\"../errors/abiParameter.js\");\nconst signature_js_1 = require(\"../errors/signature.js\");\nconst struct_js_1 = require(\"../errors/struct.js\");\nconst signatures_js_1 = require(\"./signatures.js\");\nconst utils_js_1 = require(\"./utils.js\");\nfunction parseStructs(signatures) {\n    const shallowStructs = {};\n    const signaturesLength = signatures.length;\n    for (let i = 0; i < signaturesLength; i++) {\n        const signature = signatures[i];\n        if (!(0, signatures_js_1.isStructSignature)(signature))\n            continue;\n        const match = (0, signatures_js_1.execStructSignature)(signature);\n        if (!match)\n            throw new signature_js_1.InvalidSignatureError({ signature, type: 'struct' });\n        const properties = match.properties.split(';');\n        const components = [];\n        const propertiesLength = properties.length;\n        for (let k = 0; k < propertiesLength; k++) {\n            const property = properties[k];\n            const trimmed = property.trim();\n            if (!trimmed)\n                continue;\n            const abiParameter = (0, utils_js_1.parseAbiParameter)(trimmed, {\n                type: 'struct',\n            });\n            components.push(abiParameter);\n        }\n        if (!components.length)\n            throw new signature_js_1.InvalidStructSignatureError({ signature });\n        shallowStructs[match.name] = components;\n    }\n    const resolvedStructs = {};\n    const entries = Object.entries(shallowStructs);\n    const entriesLength = entries.length;\n    for (let i = 0; i < entriesLength; i++) {\n        const [name, parameters] = entries[i];\n        resolvedStructs[name] = resolveStructs(parameters, shallowStructs);\n    }\n    return resolvedStructs;\n}\nexports.parseStructs = parseStructs;\nconst typeWithoutTupleRegex = /^(?<type>[a-zA-Z$_][a-zA-Z0-9$_]*)(?<array>(?:\\[\\d*?\\])+?)?$/;\nfunction resolveStructs(abiParameters, structs, ancestors = new Set()) {\n    const components = [];\n    const length = abiParameters.length;\n    for (let i = 0; i < length; i++) {\n        const abiParameter = abiParameters[i];\n        const isTuple = regex_js_1.isTupleRegex.test(abiParameter.type);\n        if (isTuple)\n            components.push(abiParameter);\n        else {\n            const match = (0, regex_js_1.execTyped)(typeWithoutTupleRegex, abiParameter.type);\n            if (!match?.type)\n                throw new abiParameter_js_1.InvalidAbiTypeParameterError({ abiParameter });\n            const { array, type } = match;\n            if (type in structs) {\n                if (ancestors.has(type))\n                    throw new struct_js_1.CircularReferenceError({ type });\n                components.push({\n                    ...abiParameter,\n                    type: `tuple${array ?? ''}`,\n                    components: resolveStructs(structs[type] ?? [], structs, new Set([...ancestors, type])),\n                });\n            }\n            else {\n                if ((0, utils_js_1.isSolidityType)(type))\n                    components.push(abiParameter);\n                else\n                    throw new abiItem_js_1.UnknownTypeError({ type });\n            }\n        }\n    }\n    return components;\n}\n//# sourceMappingURL=structs.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","resolveStructs","abiParameters","structs","ancestors","Set","components","length","i","abiParameter","regex_js_1","isTupleRegex","test","isTuple","type","push","match","execTyped","typeWithoutTupleRegex","abiParameter_js_1","InvalidAbiTypeParameterError","array","has","struct_js_1","CircularReferenceError","utils_js_1","isSolidityType","abiItem_js_1","UnknownTypeError","Object","defineProperty","value","parseStructs","signature_js_1","signatures_js_1","signatures","shallowStructs","signaturesLength","signature","isStructSignature","execStructSignature","InvalidSignatureError","properties","split","propertiesLength","k","trimmed","property","trim","parseAbiParameter","InvalidStructSignatureError","name","resolvedStructs","entries","entriesLength","parameters"]
}
