{
"version":3,
"file":"module$node_modules$viem$_cjs$utils$encoding$fromHex.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/viem/_cjs/utils/encoding/fromHex.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$viem$_cjs$utils$encoding$fromHex\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hexToString = exports.hexToNumber = exports.hexToBool = exports.hexToBigInt = exports.fromHex = exports.assertSize = void 0;\nconst encoding_js_1 = require(\"../../errors/encoding.js\");\nconst size_js_1 = require(\"../data/size.js\");\nconst trim_js_1 = require(\"../data/trim.js\");\nconst toBytes_js_1 = require(\"./toBytes.js\");\nfunction assertSize(hexOrBytes, { size }) {\n    if ((0, size_js_1.size)(hexOrBytes) > size)\n        throw new encoding_js_1.SizeOverflowError({\n            givenSize: (0, size_js_1.size)(hexOrBytes),\n            maxSize: size,\n        });\n}\nexports.assertSize = assertSize;\nfunction fromHex(hex, toOrOpts) {\n    const opts = typeof toOrOpts === 'string' ? { to: toOrOpts } : toOrOpts;\n    const to = opts.to;\n    if (to === 'number')\n        return hexToNumber(hex, opts);\n    if (to === 'bigint')\n        return hexToBigInt(hex, opts);\n    if (to === 'string')\n        return hexToString(hex, opts);\n    if (to === 'boolean')\n        return hexToBool(hex, opts);\n    return (0, toBytes_js_1.hexToBytes)(hex, opts);\n}\nexports.fromHex = fromHex;\nfunction hexToBigInt(hex, opts = {}) {\n    const { signed } = opts;\n    if (opts.size)\n        assertSize(hex, { size: opts.size });\n    const value = BigInt(hex);\n    if (!signed)\n        return value;\n    const size = (hex.length - 2) / 2;\n    const max = (1n << (BigInt(size) * 8n - 1n)) - 1n;\n    if (value <= max)\n        return value;\n    return value - BigInt(`0x${'f'.padStart(size * 2, 'f')}`) - 1n;\n}\nexports.hexToBigInt = hexToBigInt;\nfunction hexToBool(hex_, opts = {}) {\n    let hex = hex_;\n    if (opts.size) {\n        assertSize(hex, { size: opts.size });\n        hex = (0, trim_js_1.trim)(hex);\n    }\n    if ((0, trim_js_1.trim)(hex) === '0x00')\n        return false;\n    if ((0, trim_js_1.trim)(hex) === '0x01')\n        return true;\n    throw new encoding_js_1.InvalidHexBooleanError(hex);\n}\nexports.hexToBool = hexToBool;\nfunction hexToNumber(hex, opts = {}) {\n    return Number(hexToBigInt(hex, opts));\n}\nexports.hexToNumber = hexToNumber;\nfunction hexToString(hex, opts = {}) {\n    let bytes = (0, toBytes_js_1.hexToBytes)(hex);\n    if (opts.size) {\n        assertSize(bytes, { size: opts.size });\n        bytes = (0, trim_js_1.trim)(bytes, { dir: 'right' });\n    }\n    return new TextDecoder().decode(bytes);\n}\nexports.hexToString = hexToString;\n//# sourceMappingURL=fromHex.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","assertSize","hexOrBytes","size","size_js_1","encoding_js_1","SizeOverflowError","givenSize","maxSize","hexToBigInt","hex","opts","signed","value","BigInt","length","padStart","hexToBool","hex_","trim_js_1","trim","InvalidHexBooleanError","hexToNumber","Number","hexToString","bytes","toBytes_js_1","hexToBytes","dir","decode","TextDecoder","Object","defineProperty","fromHex","toOrOpts","to"]
}
