["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/viem/_cjs/utils/transaction/serializeTransaction.js"],"~:js","shadow$provide.module$node_modules$viem$_cjs$utils$transaction$serializeTransaction=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.serializeTransaction=void 0;const transaction_js_1=require(\"module$node_modules$viem$_cjs$errors$transaction\"),concat_js_1=require(\"module$node_modules$viem$_cjs$utils$data$concat\"),trim_js_1=require(\"module$node_modules$viem$_cjs$utils$data$trim\"),toHex_js_1=require(\"module$node_modules$viem$_cjs$utils$encoding$toHex\"),\ntoRlp_js_1=require(\"module$node_modules$viem$_cjs$utils$encoding$toRlp\"),assertTransaction_js_1=require(\"module$node_modules$viem$_cjs$utils$transaction$assertTransaction\"),getTransactionType_js_1=require(\"module$node_modules$viem$_cjs$utils$transaction$getTransactionType\"),serializeAccessList_js_1=require(\"module$node_modules$viem$_cjs$utils$transaction$serializeAccessList\");exports.serializeTransaction=function(transaction,signature){var type=(0,getTransactionType_js_1.getTransactionType)(transaction);\nif(\"eip1559\"===type){const {chainId,gas,nonce,to,value,maxFeePerGas,maxPriorityFeePerGas,accessList,data}=transaction;(0,assertTransaction_js_1.assertTransactionEIP1559)(transaction);transaction=(0,serializeAccessList_js_1.serializeAccessList)(accessList);transaction=[(0,toHex_js_1.toHex)(chainId),nonce?(0,toHex_js_1.toHex)(nonce):\"0x\",maxPriorityFeePerGas?(0,toHex_js_1.toHex)(maxPriorityFeePerGas):\"0x\",maxFeePerGas?(0,toHex_js_1.toHex)(maxFeePerGas):\"0x\",gas?(0,toHex_js_1.toHex)(gas):\"0x\",to??\"0x\",\nvalue?(0,toHex_js_1.toHex)(value):\"0x\",data??\"0x\",transaction];signature&&transaction.push(27n===signature.v?\"0x\":(0,toHex_js_1.toHex)(1),(0,trim_js_1.trim)(signature.r),(0,trim_js_1.trim)(signature.s));return(0,concat_js_1.concatHex)([\"0x02\",(0,toRlp_js_1.toRlp)(transaction)])}if(\"eip2930\"===type){const {chainId,gas,data,nonce,to,value,accessList,gasPrice}=transaction;(0,assertTransaction_js_1.assertTransactionEIP2930)(transaction);transaction=(0,serializeAccessList_js_1.serializeAccessList)(accessList);\ntransaction=[(0,toHex_js_1.toHex)(chainId),nonce?(0,toHex_js_1.toHex)(nonce):\"0x\",gasPrice?(0,toHex_js_1.toHex)(gasPrice):\"0x\",gas?(0,toHex_js_1.toHex)(gas):\"0x\",to??\"0x\",value?(0,toHex_js_1.toHex)(value):\"0x\",data??\"0x\",transaction];signature&&transaction.push(27n===signature.v?\"0x\":(0,toHex_js_1.toHex)(1),signature.r,signature.s);return(0,concat_js_1.concatHex)([\"0x01\",(0,toRlp_js_1.toRlp)(transaction)])}const {chainId:chainId$jscomp$0=0,gas:gas$jscomp$0,data:data$jscomp$0,nonce:nonce$jscomp$0,\nto:to$jscomp$0,value:value$jscomp$0,gasPrice:gasPrice$jscomp$0}=transaction;(0,assertTransaction_js_1.assertTransactionLegacy)(transaction);transaction=[nonce$jscomp$0?(0,toHex_js_1.toHex)(nonce$jscomp$0):\"0x\",gasPrice$jscomp$0?(0,toHex_js_1.toHex)(gasPrice$jscomp$0):\"0x\",gas$jscomp$0?(0,toHex_js_1.toHex)(gas$jscomp$0):\"0x\",to$jscomp$0??\"0x\",value$jscomp$0?(0,toHex_js_1.toHex)(value$jscomp$0):\"0x\",data$jscomp$0??\"0x\"];if(signature){type=27n+(27n===signature.v?0n:1n);if(0<chainId$jscomp$0)type=BigInt(2*\nchainId$jscomp$0)+BigInt(35n+signature.v-27n);else if(signature.v!==type)throw new transaction_js_1.InvalidLegacyVError({v:signature.v});transaction=[...transaction,(0,toHex_js_1.toHex)(type),signature.r,signature.s]}else 0<chainId$jscomp$0&&(transaction=[...transaction,(0,toHex_js_1.toHex)(chainId$jscomp$0),\"0x\",\"0x\"]);return(0,toRlp_js_1.toRlp)(transaction)}}","~:source","shadow$provide[\"module$node_modules$viem$_cjs$utils$transaction$serializeTransaction\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializeTransaction = void 0;\nconst transaction_js_1 = require(\"../../errors/transaction.js\");\nconst concat_js_1 = require(\"../data/concat.js\");\nconst trim_js_1 = require(\"../data/trim.js\");\nconst toHex_js_1 = require(\"../encoding/toHex.js\");\nconst toRlp_js_1 = require(\"../encoding/toRlp.js\");\nconst assertTransaction_js_1 = require(\"./assertTransaction.js\");\nconst getTransactionType_js_1 = require(\"./getTransactionType.js\");\nconst serializeAccessList_js_1 = require(\"./serializeAccessList.js\");\nfunction serializeTransaction(transaction, signature) {\n    const type = (0, getTransactionType_js_1.getTransactionType)(transaction);\n    if (type === 'eip1559')\n        return serializeTransactionEIP1559(transaction, signature);\n    if (type === 'eip2930')\n        return serializeTransactionEIP2930(transaction, signature);\n    return serializeTransactionLegacy(transaction, signature);\n}\nexports.serializeTransaction = serializeTransaction;\nfunction serializeTransactionEIP1559(transaction, signature) {\n    const { chainId, gas, nonce, to, value, maxFeePerGas, maxPriorityFeePerGas, accessList, data, } = transaction;\n    (0, assertTransaction_js_1.assertTransactionEIP1559)(transaction);\n    const serializedAccessList = (0, serializeAccessList_js_1.serializeAccessList)(accessList);\n    const serializedTransaction = [\n        (0, toHex_js_1.toHex)(chainId),\n        nonce ? (0, toHex_js_1.toHex)(nonce) : '0x',\n        maxPriorityFeePerGas ? (0, toHex_js_1.toHex)(maxPriorityFeePerGas) : '0x',\n        maxFeePerGas ? (0, toHex_js_1.toHex)(maxFeePerGas) : '0x',\n        gas ? (0, toHex_js_1.toHex)(gas) : '0x',\n        to ?? '0x',\n        value ? (0, toHex_js_1.toHex)(value) : '0x',\n        data ?? '0x',\n        serializedAccessList,\n    ];\n    if (signature)\n        serializedTransaction.push(signature.v === 27n ? '0x' : (0, toHex_js_1.toHex)(1), (0, trim_js_1.trim)(signature.r), (0, trim_js_1.trim)(signature.s));\n    return (0, concat_js_1.concatHex)([\n        '0x02',\n        (0, toRlp_js_1.toRlp)(serializedTransaction),\n    ]);\n}\nfunction serializeTransactionEIP2930(transaction, signature) {\n    const { chainId, gas, data, nonce, to, value, accessList, gasPrice } = transaction;\n    (0, assertTransaction_js_1.assertTransactionEIP2930)(transaction);\n    const serializedAccessList = (0, serializeAccessList_js_1.serializeAccessList)(accessList);\n    const serializedTransaction = [\n        (0, toHex_js_1.toHex)(chainId),\n        nonce ? (0, toHex_js_1.toHex)(nonce) : '0x',\n        gasPrice ? (0, toHex_js_1.toHex)(gasPrice) : '0x',\n        gas ? (0, toHex_js_1.toHex)(gas) : '0x',\n        to ?? '0x',\n        value ? (0, toHex_js_1.toHex)(value) : '0x',\n        data ?? '0x',\n        serializedAccessList,\n    ];\n    if (signature)\n        serializedTransaction.push(signature.v === 27n ? '0x' : (0, toHex_js_1.toHex)(1), signature.r, signature.s);\n    return (0, concat_js_1.concatHex)([\n        '0x01',\n        (0, toRlp_js_1.toRlp)(serializedTransaction),\n    ]);\n}\nfunction serializeTransactionLegacy(transaction, signature) {\n    const { chainId = 0, gas, data, nonce, to, value, gasPrice } = transaction;\n    (0, assertTransaction_js_1.assertTransactionLegacy)(transaction);\n    let serializedTransaction = [\n        nonce ? (0, toHex_js_1.toHex)(nonce) : '0x',\n        gasPrice ? (0, toHex_js_1.toHex)(gasPrice) : '0x',\n        gas ? (0, toHex_js_1.toHex)(gas) : '0x',\n        to ?? '0x',\n        value ? (0, toHex_js_1.toHex)(value) : '0x',\n        data ?? '0x',\n    ];\n    if (signature) {\n        let v = 27n + (signature.v === 27n ? 0n : 1n);\n        if (chainId > 0)\n            v = BigInt(chainId * 2) + BigInt(35n + signature.v - 27n);\n        else if (signature.v !== v)\n            throw new transaction_js_1.InvalidLegacyVError({ v: signature.v });\n        serializedTransaction = [\n            ...serializedTransaction,\n            (0, toHex_js_1.toHex)(v),\n            signature.r,\n            signature.s,\n        ];\n    }\n    else if (chainId > 0) {\n        serializedTransaction = [\n            ...serializedTransaction,\n            (0, toHex_js_1.toHex)(chainId),\n            '0x',\n            '0x',\n        ];\n    }\n    return (0, toRlp_js_1.toRlp)(serializedTransaction);\n}\n//# sourceMappingURL=serializeTransaction.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$viem$_cjs$utils$transaction$assertTransaction","~$module$node_modules$viem$_cjs$utils$transaction$serializeAccessList","~$module$node_modules$viem$_cjs$utils$encoding$toRlp","~$module$node_modules$viem$_cjs$utils$data$trim","~$module$node_modules$viem$_cjs$utils$data$concat","~$shadow.js","~$module$node_modules$viem$_cjs$errors$transaction","~$module$node_modules$viem$_cjs$utils$transaction$getTransactionType","~$module$node_modules$viem$_cjs$utils$encoding$toHex"]],"~:properties",["^5",["serializeTransaction","__esModule","v","value"]],"~:compiled-at",1695064956417,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$viem$_cjs$utils$transaction$serializeTransaction.js\",\n\"lineCount\":7,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/viem/_cjs/utils/transaction/serializeTransaction.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$viem$_cjs$utils$transaction$serializeTransaction\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.serializeTransaction = void 0;\\nconst transaction_js_1 = require(\\\"../../errors/transaction.js\\\");\\nconst concat_js_1 = require(\\\"../data/concat.js\\\");\\nconst trim_js_1 = require(\\\"../data/trim.js\\\");\\nconst toHex_js_1 = require(\\\"../encoding/toHex.js\\\");\\nconst toRlp_js_1 = require(\\\"../encoding/toRlp.js\\\");\\nconst assertTransaction_js_1 = require(\\\"./assertTransaction.js\\\");\\nconst getTransactionType_js_1 = require(\\\"./getTransactionType.js\\\");\\nconst serializeAccessList_js_1 = require(\\\"./serializeAccessList.js\\\");\\nfunction serializeTransaction(transaction, signature) {\\n    const type = (0, getTransactionType_js_1.getTransactionType)(transaction);\\n    if (type === 'eip1559')\\n        return serializeTransactionEIP1559(transaction, signature);\\n    if (type === 'eip2930')\\n        return serializeTransactionEIP2930(transaction, signature);\\n    return serializeTransactionLegacy(transaction, signature);\\n}\\nexports.serializeTransaction = serializeTransaction;\\nfunction serializeTransactionEIP1559(transaction, signature) {\\n    const { chainId, gas, nonce, to, value, maxFeePerGas, maxPriorityFeePerGas, accessList, data, } = transaction;\\n    (0, assertTransaction_js_1.assertTransactionEIP1559)(transaction);\\n    const serializedAccessList = (0, serializeAccessList_js_1.serializeAccessList)(accessList);\\n    const serializedTransaction = [\\n        (0, toHex_js_1.toHex)(chainId),\\n        nonce ? (0, toHex_js_1.toHex)(nonce) : '0x',\\n        maxPriorityFeePerGas ? (0, toHex_js_1.toHex)(maxPriorityFeePerGas) : '0x',\\n        maxFeePerGas ? (0, toHex_js_1.toHex)(maxFeePerGas) : '0x',\\n        gas ? (0, toHex_js_1.toHex)(gas) : '0x',\\n        to ?? '0x',\\n        value ? (0, toHex_js_1.toHex)(value) : '0x',\\n        data ?? '0x',\\n        serializedAccessList,\\n    ];\\n    if (signature)\\n        serializedTransaction.push(signature.v === 27n ? '0x' : (0, toHex_js_1.toHex)(1), (0, trim_js_1.trim)(signature.r), (0, trim_js_1.trim)(signature.s));\\n    return (0, concat_js_1.concatHex)([\\n        '0x02',\\n        (0, toRlp_js_1.toRlp)(serializedTransaction),\\n    ]);\\n}\\nfunction serializeTransactionEIP2930(transaction, signature) {\\n    const { chainId, gas, data, nonce, to, value, accessList, gasPrice } = transaction;\\n    (0, assertTransaction_js_1.assertTransactionEIP2930)(transaction);\\n    const serializedAccessList = (0, serializeAccessList_js_1.serializeAccessList)(accessList);\\n    const serializedTransaction = [\\n        (0, toHex_js_1.toHex)(chainId),\\n        nonce ? (0, toHex_js_1.toHex)(nonce) : '0x',\\n        gasPrice ? (0, toHex_js_1.toHex)(gasPrice) : '0x',\\n        gas ? (0, toHex_js_1.toHex)(gas) : '0x',\\n        to ?? '0x',\\n        value ? (0, toHex_js_1.toHex)(value) : '0x',\\n        data ?? '0x',\\n        serializedAccessList,\\n    ];\\n    if (signature)\\n        serializedTransaction.push(signature.v === 27n ? '0x' : (0, toHex_js_1.toHex)(1), signature.r, signature.s);\\n    return (0, concat_js_1.concatHex)([\\n        '0x01',\\n        (0, toRlp_js_1.toRlp)(serializedTransaction),\\n    ]);\\n}\\nfunction serializeTransactionLegacy(transaction, signature) {\\n    const { chainId = 0, gas, data, nonce, to, value, gasPrice } = transaction;\\n    (0, assertTransaction_js_1.assertTransactionLegacy)(transaction);\\n    let serializedTransaction = [\\n        nonce ? (0, toHex_js_1.toHex)(nonce) : '0x',\\n        gasPrice ? (0, toHex_js_1.toHex)(gasPrice) : '0x',\\n        gas ? (0, toHex_js_1.toHex)(gas) : '0x',\\n        to ?? '0x',\\n        value ? (0, toHex_js_1.toHex)(value) : '0x',\\n        data ?? '0x',\\n    ];\\n    if (signature) {\\n        let v = 27n + (signature.v === 27n ? 0n : 1n);\\n        if (chainId > 0)\\n            v = BigInt(chainId * 2) + BigInt(35n + signature.v - 27n);\\n        else if (signature.v !== v)\\n            throw new transaction_js_1.InvalidLegacyVError({ v: signature.v });\\n        serializedTransaction = [\\n            ...serializedTransaction,\\n            (0, toHex_js_1.toHex)(v),\\n            signature.r,\\n            signature.s,\\n        ];\\n    }\\n    else if (chainId > 0) {\\n        serializedTransaction = [\\n            ...serializedTransaction,\\n            (0, toHex_js_1.toHex)(chainId),\\n            '0x',\\n            '0x',\\n        ];\\n    }\\n    return (0, toRlp_js_1.toRlp)(serializedTransaction);\\n}\\n//# sourceMappingURL=serializeTransaction.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"serializeTransaction\",\"transaction_js_1\",\"concat_js_1\",\"trim_js_1\",\"toHex_js_1\",\"toRlp_js_1\",\"assertTransaction_js_1\",\"getTransactionType_js_1\",\"serializeAccessList_js_1\",\"transaction\",\"signature\",\"type\",\"getTransactionType\",\"chainId\",\"gas\",\"nonce\",\"to\",\"maxFeePerGas\",\"maxPriorityFeePerGas\",\"accessList\",\"data\",\"assertTransactionEIP1559\",\"serializedAccessList\",\"serializeAccessList\",\"serializedTransaction\",\"toHex\",\"push\",\"v\",\"trim\",\"r\",\"s\",\"concatHex\",\"toRlp\",\"gasPrice\",\"assertTransactionEIP2930\",\"assertTransactionLegacy\",\"BigInt\",\"InvalidLegacyVError\"]\n}\n"]