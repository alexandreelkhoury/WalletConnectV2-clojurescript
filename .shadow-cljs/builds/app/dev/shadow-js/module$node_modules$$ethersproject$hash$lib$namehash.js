["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@ethersproject/hash/lib/namehash.js"],"~:js","shadow$provide.module$node_modules$$ethersproject$hash$lib$namehash=function(global,require,module,exports){function checkComponent(comp){if(0===comp.length)throw Error(\"invalid ENS name; empty component\");return comp}function ensNameSplit(name){var bytes=(0,strings_1.toUtf8Bytes)((0,lib_1.ens_normalize)(name)),comps=[];if(0===name.length)return comps;for(var i=name=0;i<bytes.length;i++)46===bytes[i]&&(comps.push(checkComponent(bytes.slice(name,i))),name=i+1);if(name>=bytes.length)throw Error(\"invalid ENS name; empty component\");\ncomps.push(checkComponent(bytes.slice(name)));return comps}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.dnsEncode=exports.namehash=exports.isValidName=exports.ensNormalize=void 0;var bytes_1=require(\"module$node_modules$$ethersproject$bytes$lib$index\"),strings_1=require(\"module$node_modules$$ethersproject$strings$lib$index\"),keccak256_1=require(\"module$node_modules$$ethersproject$keccak256$lib$index\");global=require(\"module$node_modules$$ethersproject$logger$lib$index\");module=require(\"module$node_modules$$ethersproject$hash$lib$_version\");\nvar logger=new global.Logger(module.version),lib_1=require(\"module$node_modules$$ethersproject$hash$lib$ens_normalize$lib\"),Zeros=new Uint8Array(32);Zeros.fill(0);exports.ensNormalize=function(name){return ensNameSplit(name).map(function(comp){return(0,strings_1.toUtf8String)(comp)}).join(\".\")};exports.isValidName=function(name){try{return 0!==ensNameSplit(name).length}catch(error){}return!1};exports.namehash=function(name){\"string\"!==typeof name&&logger.throwArgumentError(\"invalid ENS name; not a string\",\n\"name\",name);var result=Zeros;for(name=ensNameSplit(name);name.length;)result=(0,keccak256_1.keccak256)((0,bytes_1.concat)([result,(0,keccak256_1.keccak256)(name.pop())]));return(0,bytes_1.hexlify)(result)};exports.dnsEncode=function(name){return(0,bytes_1.hexlify)((0,bytes_1.concat)(ensNameSplit(name).map(function(comp){if(63<comp.length)throw Error(\"invalid DNS encoded entry; length exceeds 63 bytes\");var bytes=new Uint8Array(comp.length+1);bytes.set(comp,1);bytes[0]=bytes.length-1;return bytes})))+\n\"00\"}}","~:source","shadow$provide[\"module$node_modules$$ethersproject$hash$lib$namehash\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.dnsEncode = exports.namehash = exports.isValidName = exports.ensNormalize = void 0;\nvar bytes_1 = require(\"@ethersproject/bytes\");\nvar strings_1 = require(\"@ethersproject/strings\");\nvar keccak256_1 = require(\"@ethersproject/keccak256\");\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\nvar lib_1 = require(\"./ens-normalize/lib\");\nvar Zeros = new Uint8Array(32);\nZeros.fill(0);\nfunction checkComponent(comp) {\n    if (comp.length === 0) {\n        throw new Error(\"invalid ENS name; empty component\");\n    }\n    return comp;\n}\nfunction ensNameSplit(name) {\n    var bytes = (0, strings_1.toUtf8Bytes)((0, lib_1.ens_normalize)(name));\n    var comps = [];\n    if (name.length === 0) {\n        return comps;\n    }\n    var last = 0;\n    for (var i = 0; i < bytes.length; i++) {\n        var d = bytes[i];\n        // A separator (i.e. \".\"); copy this component\n        if (d === 0x2e) {\n            comps.push(checkComponent(bytes.slice(last, i)));\n            last = i + 1;\n        }\n    }\n    // There was a stray separator at the end of the name\n    if (last >= bytes.length) {\n        throw new Error(\"invalid ENS name; empty component\");\n    }\n    comps.push(checkComponent(bytes.slice(last)));\n    return comps;\n}\nfunction ensNormalize(name) {\n    return ensNameSplit(name).map(function (comp) { return (0, strings_1.toUtf8String)(comp); }).join(\".\");\n}\nexports.ensNormalize = ensNormalize;\nfunction isValidName(name) {\n    try {\n        return (ensNameSplit(name).length !== 0);\n    }\n    catch (error) { }\n    return false;\n}\nexports.isValidName = isValidName;\nfunction namehash(name) {\n    /* istanbul ignore if */\n    if (typeof (name) !== \"string\") {\n        logger.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n    }\n    var result = Zeros;\n    var comps = ensNameSplit(name);\n    while (comps.length) {\n        result = (0, keccak256_1.keccak256)((0, bytes_1.concat)([result, (0, keccak256_1.keccak256)(comps.pop())]));\n    }\n    return (0, bytes_1.hexlify)(result);\n}\nexports.namehash = namehash;\nfunction dnsEncode(name) {\n    return (0, bytes_1.hexlify)((0, bytes_1.concat)(ensNameSplit(name).map(function (comp) {\n        // DNS does not allow components over 63 bytes in length\n        if (comp.length > 63) {\n            throw new Error(\"invalid DNS encoded entry; length exceeds 63 bytes\");\n        }\n        var bytes = new Uint8Array(comp.length + 1);\n        bytes.set(comp, 1);\n        bytes[0] = bytes.length - 1;\n        return bytes;\n    }))) + \"00\";\n}\nexports.dnsEncode = dnsEncode;\n//# sourceMappingURL=namehash.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$ethersproject$hash$lib$_version","~$module$node_modules$$ethersproject$strings$lib$index","~$shadow.js","~$module$node_modules$$ethersproject$bytes$lib$index","~$module$node_modules$$ethersproject$keccak256$lib$index","~$module$node_modules$$ethersproject$hash$lib$ens_normalize$lib","~$module$node_modules$$ethersproject$logger$lib$index"]],"~:properties",["^5",["__esModule","ensNormalize","isValidName","value","namehash","dnsEncode"]],"~:compiled-at",1695040653446,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$ethersproject$hash$lib$namehash.js\",\n\"lineCount\":5,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@ethersproject/hash/lib/namehash.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$ethersproject$hash$lib$namehash\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.dnsEncode = exports.namehash = exports.isValidName = exports.ensNormalize = void 0;\\nvar bytes_1 = require(\\\"@ethersproject/bytes\\\");\\nvar strings_1 = require(\\\"@ethersproject/strings\\\");\\nvar keccak256_1 = require(\\\"@ethersproject/keccak256\\\");\\nvar logger_1 = require(\\\"@ethersproject/logger\\\");\\nvar _version_1 = require(\\\"./_version\\\");\\nvar logger = new logger_1.Logger(_version_1.version);\\nvar lib_1 = require(\\\"./ens-normalize/lib\\\");\\nvar Zeros = new Uint8Array(32);\\nZeros.fill(0);\\nfunction checkComponent(comp) {\\n    if (comp.length === 0) {\\n        throw new Error(\\\"invalid ENS name; empty component\\\");\\n    }\\n    return comp;\\n}\\nfunction ensNameSplit(name) {\\n    var bytes = (0, strings_1.toUtf8Bytes)((0, lib_1.ens_normalize)(name));\\n    var comps = [];\\n    if (name.length === 0) {\\n        return comps;\\n    }\\n    var last = 0;\\n    for (var i = 0; i < bytes.length; i++) {\\n        var d = bytes[i];\\n        // A separator (i.e. \\\".\\\"); copy this component\\n        if (d === 0x2e) {\\n            comps.push(checkComponent(bytes.slice(last, i)));\\n            last = i + 1;\\n        }\\n    }\\n    // There was a stray separator at the end of the name\\n    if (last >= bytes.length) {\\n        throw new Error(\\\"invalid ENS name; empty component\\\");\\n    }\\n    comps.push(checkComponent(bytes.slice(last)));\\n    return comps;\\n}\\nfunction ensNormalize(name) {\\n    return ensNameSplit(name).map(function (comp) { return (0, strings_1.toUtf8String)(comp); }).join(\\\".\\\");\\n}\\nexports.ensNormalize = ensNormalize;\\nfunction isValidName(name) {\\n    try {\\n        return (ensNameSplit(name).length !== 0);\\n    }\\n    catch (error) { }\\n    return false;\\n}\\nexports.isValidName = isValidName;\\nfunction namehash(name) {\\n    /* istanbul ignore if */\\n    if (typeof (name) !== \\\"string\\\") {\\n        logger.throwArgumentError(\\\"invalid ENS name; not a string\\\", \\\"name\\\", name);\\n    }\\n    var result = Zeros;\\n    var comps = ensNameSplit(name);\\n    while (comps.length) {\\n        result = (0, keccak256_1.keccak256)((0, bytes_1.concat)([result, (0, keccak256_1.keccak256)(comps.pop())]));\\n    }\\n    return (0, bytes_1.hexlify)(result);\\n}\\nexports.namehash = namehash;\\nfunction dnsEncode(name) {\\n    return (0, bytes_1.hexlify)((0, bytes_1.concat)(ensNameSplit(name).map(function (comp) {\\n        // DNS does not allow components over 63 bytes in length\\n        if (comp.length > 63) {\\n            throw new Error(\\\"invalid DNS encoded entry; length exceeds 63 bytes\\\");\\n        }\\n        var bytes = new Uint8Array(comp.length + 1);\\n        bytes.set(comp, 1);\\n        bytes[0] = bytes.length - 1;\\n        return bytes;\\n    }))) + \\\"00\\\";\\n}\\nexports.dnsEncode = dnsEncode;\\n//# sourceMappingURL=namehash.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"checkComponent\",\"comp\",\"length\",\"Error\",\"ensNameSplit\",\"name\",\"bytes\",\"strings_1\",\"toUtf8Bytes\",\"lib_1\",\"ens_normalize\",\"comps\",\"i\",\"last\",\"d\",\"push\",\"slice\",\"Object\",\"defineProperty\",\"value\",\"dnsEncode\",\"namehash\",\"isValidName\",\"ensNormalize\",\"bytes_1\",\"keccak256_1\",\"logger_1\",\"_version_1\",\"logger\",\"Logger\",\"version\",\"Zeros\",\"Uint8Array\",\"fill\",\"map\",\"toUtf8String\",\"join\",\"error\",\"throwArgumentError\",\"result\",\"keccak256\",\"concat\",\"pop\",\"hexlify\",\"set\"]\n}\n"]