["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@ethersproject/sha2/lib/sha2.js"],"~:js","shadow$provide.module$node_modules$$ethersproject$sha2$lib$sha2=function(global,require,module,exports){var Buffer=require(\"module$node_modules$buffer$index\").Buffer;\"use strict\";global=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{\"default\":mod}};Object.defineProperty(exports,\"__esModule\",{value:!0});exports.computeHmac=exports.sha512=exports.sha256=exports.ripemd160=void 0;var crypto_1=require(\"module$node_modules$crypto_browserify$index\"),hash_js_1=global(require(\"module$node_modules$hash_DOT_js$lib$hash\")),\nbytes_1=require(\"module$node_modules$$ethersproject$bytes$lib$index\"),types_1=require(\"module$node_modules$$ethersproject$sha2$lib$types\"),logger_1=require(\"module$node_modules$$ethersproject$logger$lib$index\");require=require(\"module$node_modules$$ethersproject$sha2$lib$_version\");var logger=new logger_1.Logger(require.version);exports.ripemd160=function(data){return\"0x\"+hash_js_1.default.ripemd160().update((0,bytes_1.arrayify)(data)).digest(\"hex\")};exports.sha256=function(data){return\"0x\"+(0,crypto_1.createHash)(\"sha256\").update(Buffer.from((0,bytes_1.arrayify)(data))).digest(\"hex\")};\nexports.sha512=function(data){return\"0x\"+(0,crypto_1.createHash)(\"sha512\").update(Buffer.from((0,bytes_1.arrayify)(data))).digest(\"hex\")};exports.computeHmac=function(algorithm,key,data){types_1.SupportedAlgorithm[algorithm]||logger.throwError(\"unsupported algorithm - \"+algorithm,logger_1.Logger.errors.UNSUPPORTED_OPERATION,{operation:\"computeHmac\",algorithm});return\"0x\"+(0,crypto_1.createHmac)(algorithm,Buffer.from((0,bytes_1.arrayify)(key))).update(Buffer.from((0,bytes_1.arrayify)(data))).digest(\"hex\")}}","~:source","shadow$provide[\"module$node_modules$$ethersproject$sha2$lib$sha2\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.computeHmac = exports.sha512 = exports.sha256 = exports.ripemd160 = void 0;\nvar crypto_1 = require(\"crypto\");\nvar hash_js_1 = __importDefault(require(\"hash.js\"));\nvar bytes_1 = require(\"@ethersproject/bytes\");\nvar types_1 = require(\"./types\");\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\nfunction ripemd160(data) {\n    return \"0x\" + (hash_js_1.default.ripemd160().update((0, bytes_1.arrayify)(data)).digest(\"hex\"));\n}\nexports.ripemd160 = ripemd160;\nfunction sha256(data) {\n    return \"0x\" + (0, crypto_1.createHash)(\"sha256\").update(Buffer.from((0, bytes_1.arrayify)(data))).digest(\"hex\");\n}\nexports.sha256 = sha256;\nfunction sha512(data) {\n    return \"0x\" + (0, crypto_1.createHash)(\"sha512\").update(Buffer.from((0, bytes_1.arrayify)(data))).digest(\"hex\");\n}\nexports.sha512 = sha512;\nfunction computeHmac(algorithm, key, data) {\n    /* istanbul ignore if */\n    if (!types_1.SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm - \" + algorithm, logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"computeHmac\",\n            algorithm: algorithm\n        });\n    }\n    return \"0x\" + (0, crypto_1.createHmac)(algorithm, Buffer.from((0, bytes_1.arrayify)(key))).update(Buffer.from((0, bytes_1.arrayify)(data))).digest(\"hex\");\n}\nexports.computeHmac = computeHmac;\n//# sourceMappingURL=sha2.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$$ethersproject$bytes$lib$index","~$module$node_modules$$ethersproject$sha2$lib$types","~$module$node_modules$hash_DOT_js$lib$hash","~$module$node_modules$crypto_browserify$index","~$module$node_modules$$ethersproject$logger$lib$index","~$module$node_modules$buffer$index","~$module$node_modules$$ethersproject$sha2$lib$_version"]],"~:properties",["^5",["__esModule","sha256","algorithm","sha512","value","operation","ripemd160","computeHmac"]],"~:compiled-at",1695040653703,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$ethersproject$sha2$lib$sha2.js\",\n\"lineCount\":3,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@ethersproject/sha2/lib/sha2.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$ethersproject$sha2$lib$sha2\\\"] = function(global,require,module,exports) {\\nvar Buffer = require('buffer').Buffer;\\n\\\"use strict\\\";\\nvar __importDefault = (this && this.__importDefault) || function (mod) {\\n    return (mod && mod.__esModule) ? mod : { \\\"default\\\": mod };\\n};\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.computeHmac = exports.sha512 = exports.sha256 = exports.ripemd160 = void 0;\\nvar crypto_1 = require(\\\"crypto\\\");\\nvar hash_js_1 = __importDefault(require(\\\"hash.js\\\"));\\nvar bytes_1 = require(\\\"@ethersproject/bytes\\\");\\nvar types_1 = require(\\\"./types\\\");\\nvar logger_1 = require(\\\"@ethersproject/logger\\\");\\nvar _version_1 = require(\\\"./_version\\\");\\nvar logger = new logger_1.Logger(_version_1.version);\\nfunction ripemd160(data) {\\n    return \\\"0x\\\" + (hash_js_1.default.ripemd160().update((0, bytes_1.arrayify)(data)).digest(\\\"hex\\\"));\\n}\\nexports.ripemd160 = ripemd160;\\nfunction sha256(data) {\\n    return \\\"0x\\\" + (0, crypto_1.createHash)(\\\"sha256\\\").update(Buffer.from((0, bytes_1.arrayify)(data))).digest(\\\"hex\\\");\\n}\\nexports.sha256 = sha256;\\nfunction sha512(data) {\\n    return \\\"0x\\\" + (0, crypto_1.createHash)(\\\"sha512\\\").update(Buffer.from((0, bytes_1.arrayify)(data))).digest(\\\"hex\\\");\\n}\\nexports.sha512 = sha512;\\nfunction computeHmac(algorithm, key, data) {\\n    /* istanbul ignore if */\\n    if (!types_1.SupportedAlgorithm[algorithm]) {\\n        logger.throwError(\\\"unsupported algorithm - \\\" + algorithm, logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\\n            operation: \\\"computeHmac\\\",\\n            algorithm: algorithm\\n        });\\n    }\\n    return \\\"0x\\\" + (0, crypto_1.createHmac)(algorithm, Buffer.from((0, bytes_1.arrayify)(key))).update(Buffer.from((0, bytes_1.arrayify)(data))).digest(\\\"hex\\\");\\n}\\nexports.computeHmac = computeHmac;\\n//# sourceMappingURL=sha2.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Buffer\",\"__importDefault\",\"mod\",\"__esModule\",\"Object\",\"defineProperty\",\"value\",\"computeHmac\",\"sha512\",\"sha256\",\"ripemd160\",\"crypto_1\",\"hash_js_1\",\"bytes_1\",\"types_1\",\"logger_1\",\"_version_1\",\"logger\",\"Logger\",\"version\",\"data\",\"default\",\"update\",\"arrayify\",\"digest\",\"createHash\",\"from\",\"algorithm\",\"key\",\"SupportedAlgorithm\",\"throwError\",\"errors\",\"UNSUPPORTED_OPERATION\",\"operation\",\"createHmac\"]\n}\n"]