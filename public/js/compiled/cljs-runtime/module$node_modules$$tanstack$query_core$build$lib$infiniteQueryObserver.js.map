{
"version":3,
"file":"module$node_modules$$tanstack$query_core$build$lib$infiniteQueryObserver.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/@tanstack/query-core/build/lib/infiniteQueryObserver.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$tanstack$query_core$build$lib$infiniteQueryObserver\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar queryObserver = require('./queryObserver.js');\nvar infiniteQueryBehavior = require('./infiniteQueryBehavior.js');\n\nclass InfiniteQueryObserver extends queryObserver.QueryObserver {\n  // Type override\n  // Type override\n  // Type override\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(client, options) {\n    super(client, options);\n  }\n\n  bindMethods() {\n    super.bindMethods();\n    this.fetchNextPage = this.fetchNextPage.bind(this);\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n  }\n\n  setOptions(options, notifyOptions) {\n    super.setOptions({ ...options,\n      behavior: infiniteQueryBehavior.infiniteQueryBehavior()\n    }, notifyOptions);\n  }\n\n  getOptimisticResult(options) {\n    options.behavior = infiniteQueryBehavior.infiniteQueryBehavior();\n    return super.getOptimisticResult(options);\n  }\n\n  fetchNextPage({\n    pageParam,\n    ...options\n  } = {}) {\n    return this.fetch({ ...options,\n      meta: {\n        fetchMore: {\n          direction: 'forward',\n          pageParam\n        }\n      }\n    });\n  }\n\n  fetchPreviousPage({\n    pageParam,\n    ...options\n  } = {}) {\n    return this.fetch({ ...options,\n      meta: {\n        fetchMore: {\n          direction: 'backward',\n          pageParam\n        }\n      }\n    });\n  }\n\n  createResult(query, options) {\n    var _state$fetchMeta, _state$fetchMeta$fetc, _state$fetchMeta2, _state$fetchMeta2$fet, _state$data, _state$data2;\n\n    const {\n      state\n    } = query;\n    const result = super.createResult(query, options);\n    const {\n      isFetching,\n      isRefetching\n    } = result;\n    const isFetchingNextPage = isFetching && ((_state$fetchMeta = state.fetchMeta) == null ? void 0 : (_state$fetchMeta$fetc = _state$fetchMeta.fetchMore) == null ? void 0 : _state$fetchMeta$fetc.direction) === 'forward';\n    const isFetchingPreviousPage = isFetching && ((_state$fetchMeta2 = state.fetchMeta) == null ? void 0 : (_state$fetchMeta2$fet = _state$fetchMeta2.fetchMore) == null ? void 0 : _state$fetchMeta2$fet.direction) === 'backward';\n    return { ...result,\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: infiniteQueryBehavior.hasNextPage(options, (_state$data = state.data) == null ? void 0 : _state$data.pages),\n      hasPreviousPage: infiniteQueryBehavior.hasPreviousPage(options, (_state$data2 = state.data) == null ? void 0 : _state$data2.pages),\n      isFetchingNextPage,\n      isFetchingPreviousPage,\n      isRefetching: isRefetching && !isFetchingNextPage && !isFetchingPreviousPage\n    };\n  }\n\n}\n\nexports.InfiniteQueryObserver = InfiniteQueryObserver;\n//# sourceMappingURL=infiniteQueryObserver.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","queryObserver","infiniteQueryBehavior","InfiniteQueryObserver","QueryObserver","constructor","client","options","bindMethods","fetchNextPage","bind","fetchPreviousPage","setOptions","notifyOptions","behavior","getOptimisticResult","pageParam","fetch","meta","fetchMore","direction","createResult","query","_state$fetchMeta","_state$fetchMeta$fetc","_state$fetchMeta2","_state$fetchMeta2$fet","_state$data","_state$data2","state","result","isFetching","isRefetching","isFetchingNextPage","fetchMeta","isFetchingPreviousPage","hasNextPage","data","pages","hasPreviousPage"]
}
