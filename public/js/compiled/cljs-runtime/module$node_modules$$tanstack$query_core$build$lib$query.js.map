{
"version":3,
"file":"module$node_modules$$tanstack$query_core$build$lib$query.js",
"lineCount":18,
"mappings":"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",
"sources":["node_modules/@tanstack/query-core/build/lib/query.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$tanstack$query_core$build$lib$query\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar utils = require('./utils.js');\nvar logger = require('./logger');\nvar notifyManager = require('./notifyManager.js');\nvar retryer = require('./retryer.js');\nvar removable = require('./removable.js');\n\n// CLASS\nclass Query extends removable.Removable {\n  constructor(config) {\n    super();\n    this.abortSignalConsumed = false;\n    this.defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.cache = config.cache;\n    this.logger = config.logger || logger.defaultLogger;\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.initialState = config.state || getDefaultState(this.options);\n    this.state = this.initialState;\n    this.scheduleGc();\n  }\n\n  get meta() {\n    return this.options.meta;\n  }\n\n  setOptions(options) {\n    this.options = { ...this.defaultOptions,\n      ...options\n    };\n    this.updateCacheTime(this.options.cacheTime);\n  }\n\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === 'idle') {\n      this.cache.remove(this);\n    }\n  }\n\n  setData(newData, options) {\n    const data = utils.replaceData(this.state.data, newData, this.options); // Set data and mark it as cached\n\n    this.dispatch({\n      data,\n      type: 'success',\n      dataUpdatedAt: options == null ? void 0 : options.updatedAt,\n      manual: options == null ? void 0 : options.manual\n    });\n    return data;\n  }\n\n  setState(state, setStateOptions) {\n    this.dispatch({\n      type: 'setState',\n      state,\n      setStateOptions\n    });\n  }\n\n  cancel(options) {\n    var _this$retryer;\n\n    const promise = this.promise;\n    (_this$retryer = this.retryer) == null ? void 0 : _this$retryer.cancel(options);\n    return promise ? promise.then(utils.noop).catch(utils.noop) : Promise.resolve();\n  }\n\n  destroy() {\n    super.destroy();\n    this.cancel({\n      silent: true\n    });\n  }\n\n  reset() {\n    this.destroy();\n    this.setState(this.initialState);\n  }\n\n  isActive() {\n    return this.observers.some(observer => observer.options.enabled !== false);\n  }\n\n  isDisabled() {\n    return this.getObserversCount() > 0 && !this.isActive();\n  }\n\n  isStale() {\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || this.observers.some(observer => observer.getCurrentResult().isStale);\n  }\n\n  isStaleByTime(staleTime = 0) {\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || !utils.timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n\n  onFocus() {\n    var _this$retryer2;\n\n    const observer = this.observers.find(x => x.shouldFetchOnWindowFocus());\n\n    if (observer) {\n      observer.refetch({\n        cancelRefetch: false\n      });\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer2 = this.retryer) == null ? void 0 : _this$retryer2.continue();\n  }\n\n  onOnline() {\n    var _this$retryer3;\n\n    const observer = this.observers.find(x => x.shouldFetchOnReconnect());\n\n    if (observer) {\n      observer.refetch({\n        cancelRefetch: false\n      });\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer3 = this.retryer) == null ? void 0 : _this$retryer3.continue();\n  }\n\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer); // Stop the query from being garbage collected\n\n      this.clearGcTimeout();\n      this.cache.notify({\n        type: 'observerAdded',\n        query: this,\n        observer\n      });\n    }\n  }\n\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter(x => x !== observer);\n\n      if (!this.observers.length) {\n        // If the transport layer does not support cancellation\n        // we'll let the query continue so the result can be cached\n        if (this.retryer) {\n          if (this.abortSignalConsumed) {\n            this.retryer.cancel({\n              revert: true\n            });\n          } else {\n            this.retryer.cancelRetry();\n          }\n        }\n\n        this.scheduleGc();\n      }\n\n      this.cache.notify({\n        type: 'observerRemoved',\n        query: this,\n        observer\n      });\n    }\n  }\n\n  getObserversCount() {\n    return this.observers.length;\n  }\n\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.dispatch({\n        type: 'invalidate'\n      });\n    }\n  }\n\n  fetch(options, fetchOptions) {\n    var _this$options$behavio, _context$fetchOptions;\n\n    if (this.state.fetchStatus !== 'idle') {\n      if (this.state.dataUpdatedAt && fetchOptions != null && fetchOptions.cancelRefetch) {\n        // Silently cancel current fetch if the user wants to cancel refetches\n        this.cancel({\n          silent: true\n        });\n      } else if (this.promise) {\n        var _this$retryer4;\n\n        // make sure that retries that were potentially cancelled due to unmounts can continue\n        (_this$retryer4 = this.retryer) == null ? void 0 : _this$retryer4.continueRetry(); // Return current promise if we are already fetching\n\n        return this.promise;\n      }\n    } // Update config if passed, otherwise the config from the last execution is used\n\n\n    if (options) {\n      this.setOptions(options);\n    } // Use the options from the first observer with a query function if no function is found.\n    // This can happen when the query is hydrated or created with setQueryData.\n\n\n    if (!this.options.queryFn) {\n      const observer = this.observers.find(x => x.options.queryFn);\n\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!Array.isArray(this.options.queryKey)) {\n        this.logger.error(\"As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']\");\n      }\n    }\n\n    const abortController = utils.getAbortController(); // Create query function context\n\n    const queryFnContext = {\n      queryKey: this.queryKey,\n      pageParam: undefined,\n      meta: this.meta\n    }; // Adds an enumerable signal property to the object that\n    // which sets abortSignalConsumed to true when the signal\n    // is read.\n\n    const addSignalProperty = object => {\n      Object.defineProperty(object, 'signal', {\n        enumerable: true,\n        get: () => {\n          if (abortController) {\n            this.abortSignalConsumed = true;\n            return abortController.signal;\n          }\n\n          return undefined;\n        }\n      });\n    };\n\n    addSignalProperty(queryFnContext); // Create fetch function\n\n    const fetchFn = () => {\n      if (!this.options.queryFn) {\n        return Promise.reject(\"Missing queryFn for queryKey '\" + this.options.queryHash + \"'\");\n      }\n\n      this.abortSignalConsumed = false;\n      return this.options.queryFn(queryFnContext);\n    }; // Trigger behavior hook\n\n\n    const context = {\n      fetchOptions,\n      options: this.options,\n      queryKey: this.queryKey,\n      state: this.state,\n      fetchFn\n    };\n    addSignalProperty(context);\n    (_this$options$behavio = this.options.behavior) == null ? void 0 : _this$options$behavio.onFetch(context); // Store state in case the current fetch needs to be reverted\n\n    this.revertState = this.state; // Set to fetching state if not already in it\n\n    if (this.state.fetchStatus === 'idle' || this.state.fetchMeta !== ((_context$fetchOptions = context.fetchOptions) == null ? void 0 : _context$fetchOptions.meta)) {\n      var _context$fetchOptions2;\n\n      this.dispatch({\n        type: 'fetch',\n        meta: (_context$fetchOptions2 = context.fetchOptions) == null ? void 0 : _context$fetchOptions2.meta\n      });\n    }\n\n    const onError = error => {\n      // Optimistically update state if needed\n      if (!(retryer.isCancelledError(error) && error.silent)) {\n        this.dispatch({\n          type: 'error',\n          error: error\n        });\n      }\n\n      if (!retryer.isCancelledError(error)) {\n        var _this$cache$config$on, _this$cache$config, _this$cache$config$on2, _this$cache$config2;\n\n        // Notify cache callback\n        (_this$cache$config$on = (_this$cache$config = this.cache.config).onError) == null ? void 0 : _this$cache$config$on.call(_this$cache$config, error, this);\n        (_this$cache$config$on2 = (_this$cache$config2 = this.cache.config).onSettled) == null ? void 0 : _this$cache$config$on2.call(_this$cache$config2, this.state.data, error, this);\n\n        if (process.env.NODE_ENV !== 'production') {\n          this.logger.error(error);\n        }\n      }\n\n      if (!this.isFetchingOptimistic) {\n        // Schedule query gc after fetching\n        this.scheduleGc();\n      }\n\n      this.isFetchingOptimistic = false;\n    }; // Try to fetch the data\n\n\n    this.retryer = retryer.createRetryer({\n      fn: context.fetchFn,\n      abort: abortController == null ? void 0 : abortController.abort.bind(abortController),\n      onSuccess: data => {\n        var _this$cache$config$on3, _this$cache$config3, _this$cache$config$on4, _this$cache$config4;\n\n        if (typeof data === 'undefined') {\n          if (process.env.NODE_ENV !== 'production') {\n            this.logger.error(\"Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: \" + this.queryHash);\n          }\n\n          onError(new Error(this.queryHash + \" data is undefined\"));\n          return;\n        }\n\n        this.setData(data); // Notify cache callback\n\n        (_this$cache$config$on3 = (_this$cache$config3 = this.cache.config).onSuccess) == null ? void 0 : _this$cache$config$on3.call(_this$cache$config3, data, this);\n        (_this$cache$config$on4 = (_this$cache$config4 = this.cache.config).onSettled) == null ? void 0 : _this$cache$config$on4.call(_this$cache$config4, data, this.state.error, this);\n\n        if (!this.isFetchingOptimistic) {\n          // Schedule query gc after fetching\n          this.scheduleGc();\n        }\n\n        this.isFetchingOptimistic = false;\n      },\n      onError,\n      onFail: (failureCount, error) => {\n        this.dispatch({\n          type: 'failed',\n          failureCount,\n          error\n        });\n      },\n      onPause: () => {\n        this.dispatch({\n          type: 'pause'\n        });\n      },\n      onContinue: () => {\n        this.dispatch({\n          type: 'continue'\n        });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode\n    });\n    this.promise = this.retryer.promise;\n    return this.promise;\n  }\n\n  dispatch(action) {\n    const reducer = state => {\n      var _action$meta, _action$dataUpdatedAt;\n\n      switch (action.type) {\n        case 'failed':\n          return { ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n\n        case 'pause':\n          return { ...state,\n            fetchStatus: 'paused'\n          };\n\n        case 'continue':\n          return { ...state,\n            fetchStatus: 'fetching'\n          };\n\n        case 'fetch':\n          return { ...state,\n            fetchFailureCount: 0,\n            fetchFailureReason: null,\n            fetchMeta: (_action$meta = action.meta) != null ? _action$meta : null,\n            fetchStatus: retryer.canFetch(this.options.networkMode) ? 'fetching' : 'paused',\n            ...(!state.dataUpdatedAt && {\n              error: null,\n              status: 'loading'\n            })\n          };\n\n        case 'success':\n          return { ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: (_action$dataUpdatedAt = action.dataUpdatedAt) != null ? _action$dataUpdatedAt : Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: 'success',\n            ...(!action.manual && {\n              fetchStatus: 'idle',\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            })\n          };\n\n        case 'error':\n          const error = action.error;\n\n          if (retryer.isCancelledError(error) && error.revert && this.revertState) {\n            return { ...this.revertState,\n              fetchStatus: 'idle'\n            };\n          }\n\n          return { ...state,\n            error: error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: 'idle',\n            status: 'error'\n          };\n\n        case 'invalidate':\n          return { ...state,\n            isInvalidated: true\n          };\n\n        case 'setState':\n          return { ...state,\n            ...action.state\n          };\n      }\n    };\n\n    this.state = reducer(this.state);\n    notifyManager.notifyManager.batch(() => {\n      this.observers.forEach(observer => {\n        observer.onQueryUpdate(action);\n      });\n      this.cache.notify({\n        query: this,\n        type: 'updated',\n        action\n      });\n    });\n  }\n\n}\n\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === 'function' ? options.initialData() : options.initialData;\n  const hasData = typeof data !== 'undefined';\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === 'function' ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt != null ? initialDataUpdatedAt : Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? 'success' : 'loading',\n    fetchStatus: 'idle'\n  };\n}\n\nexports.Query = Query;\n//# sourceMappingURL=query.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","utils","logger","notifyManager","retryer","removable","Query","Removable","constructor","config","abortSignalConsumed","defaultOptions","setOptions","options","observers","cache","defaultLogger","queryKey","queryHash","state","data","initialData","hasData","initialDataUpdatedAt","dataUpdateCount","dataUpdatedAt","Date","now","error","errorUpdateCount","errorUpdatedAt","fetchFailureCount","fetchFailureReason","fetchMeta","isInvalidated","status","fetchStatus","initialState","scheduleGc","meta","updateCacheTime","cacheTime","optionalRemove","length","remove","setData","newData","replaceData","dispatch","type","updatedAt","manual","setState","setStateOptions","cancel","_this$retryer","promise","then","noop","catch","Promise","resolve","destroy","silent","reset","isActive","some","observer","enabled","isDisabled","getObserversCount","isStale","getCurrentResult","isStaleByTime","staleTime","timeUntilStale","onFocus","_this$retryer2","find","x","shouldFetchOnWindowFocus","refetch","cancelRefetch","continue","onOnline","_this$retryer3","shouldFetchOnReconnect","addObserver","includes","push","clearGcTimeout","notify","query","removeObserver","filter","revert","cancelRetry","invalidate","fetch","fetchOptions","_this$options$behavio","_context$fetchOptions","_this$retryer4","continueRetry","queryFn","Array","isArray","abortController","getAbortController","queryFnContext","pageParam","undefined","addSignalProperty","object","enumerable","get","signal","context","fetchFn","reject","behavior","onFetch","revertState","_context$fetchOptions2","onError","isCancelledError","_this$cache$config$on","_this$cache$config","_this$cache$config$on2","_this$cache$config2","call","onSettled","isFetchingOptimistic","createRetryer","fn","abort","bind","onSuccess","_this$cache$config$on3","_this$cache$config3","_this$cache$config$on4","_this$cache$config4","Error","onFail","failureCount","onPause","onContinue","retry","retryDelay","networkMode","action","reducer","_action$meta","_action$dataUpdatedAt","canFetch","batch","forEach","onQueryUpdate"]
}
