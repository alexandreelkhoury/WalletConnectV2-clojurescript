["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@ethersproject/hash/lib/ens-normalize/decoder.js"],"~:js","shadow$provide.module$node_modules$$ethersproject$hash$lib$ens_normalize$decoder=function(global,require,module,exports){function flat(array,depth$jscomp$0){null==depth$jscomp$0&&(depth$jscomp$0=1);var result=[],forEach=result.forEach,flatDeep=function(arr,depth){forEach.call(arr,function(val){0<depth&&Array.isArray(val)?flatDeep(val,depth-1):result.push(val)})};flatDeep(array,depth$jscomp$0);return result}function decode_arithmetic(bytes){function u16(){return bytes[pos++]<<8|bytes[pos++]}function read_bit(){0==\nread_width&&(read_buffer=read_buffer<<8|bytes[pos++],read_width=8);return read_buffer>>--read_width&1}for(var pos=0,symbol_count=u16(),total=1,acc=[0,1],i=1;i<symbol_count;i++)acc.push(total+=u16());var skip=u16(),pos_payload=pos;pos+=skip;var read_width=0,read_buffer=0,FULL=Math.pow(2,31);skip=FULL>>>1;var QRTR=skip>>1,MASK=FULL-1,register=0;for(i=0;31>i;i++)register=register<<1|read_bit();i=[];for(var low=0;;){for(var value=Math.floor(((register-low+1)*total-1)/FULL),start=0,end=symbol_count;1<\nend-start;){var mid=start+end>>>1;value<acc[mid]?end=mid:start=mid}if(0==start)break;i.push(start);value=low+Math.floor(FULL*acc[start]/total);for(FULL=low+Math.floor(FULL*acc[start+1]/total)-1;0==((value^FULL)&skip);)register=register<<1&MASK|read_bit(),value=value<<1&MASK,FULL=FULL<<1&MASK|1;for(;value&~FULL&QRTR;)register=register&skip|register<<1&MASK>>>1|read_bit(),value=value<<1^skip,FULL=(FULL^skip)<<1|skip|1;low=value;FULL=1+FULL-value}var offset=symbol_count-4;return i.map(function(x){switch(x-\noffset){case 3:return offset+65792+(bytes[pos_payload++]<<16|bytes[pos_payload++]<<8|bytes[pos_payload++]);case 2:return offset+256+(bytes[pos_payload++]<<8|bytes[pos_payload++]);case 1:return offset+bytes[pos_payload++];default:return x-1}})}function read_payload(v){var pos=0;return function(){return v[pos++]}}function signed(i){return i&1?~i>>1:i>>1}function read_counts(n,next){for(var v=Array(n),i=0;i<n;i++)v[i]=1+next();return v}function read_ascending(n,next){for(var v=Array(n),i=0,x=-1;i<n;i++)v[i]=\nx+=1+next();return v}function read_deltas(n,next){for(var v=Array(n),i=0,x=0;i<n;i++)v[i]=x+=signed(next());return v}function read_member_array(next,lookup){var v=read_ascending(next(),next),n=next(),vX=read_ascending(n,next);next=read_counts(n,next);for(var i=0;i<n;i++)for(var j=0;j<next[i];j++)v.push(vX[i]+j);return lookup?v.map(function(x){return lookup[x]}):v}function read_zero_terminated_array(next){for(var v=[];;){var i=next();if(0==i)break;v.push(i)}return v}function read_transposed(n,w,next){for(var m=\nArray(n).fill(void 0).map(function(){return[]}),i=0;i<w;i++)read_deltas(n,next).forEach(function(x,j){return m[j].push(x)});return m}function read_linear_table(w,next){var dx=1+next(),dy=next(),vN=read_zero_terminated_array(next);w=read_transposed(vN.length,1+w,next);return flat(w.map(function(v,i){var x=v[0],ys=v.slice(1);return Array(vN[i]).fill(void 0).map(function(_,j){var j_dy=j*dy;return[x+j*dx,ys.map(function(y){return y+j_dy})]})}))}function read_replacement_table(w,next){var n=1+next();return read_transposed(n,\n1+w,next).map(function(v){return[v[0],v.slice(1)]})}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.read_emoji_trie=exports.read_zero_terminated_array=exports.read_mapped_map=exports.read_member_array=exports.signed=exports.read_compressed_payload=exports.read_payload=exports.decode_arithmetic=void 0;exports.decode_arithmetic=decode_arithmetic;exports.read_payload=read_payload;exports.read_compressed_payload=function(bytes){return read_payload(decode_arithmetic(bytes))};exports.signed=\nsigned;exports.read_member_array=read_member_array;exports.read_mapped_map=function(next){for(var ret=[];;){var w=next();if(0==w)break;ret.push(read_linear_table(w,next))}for(;;){w=next()-1;if(0>w)break;ret.push(read_replacement_table(w,next))}next=flat(ret);ret={};for(w=0;w<next.length;w++){var value=next[w];ret[value[0]]=value[1]}return ret};exports.read_zero_terminated_array=read_zero_terminated_array;exports.read_emoji_trie=function(next){function read(){for(var branches=[];;){var keys=read_member_array(next,\nsorted);if(0==keys.length)break;branches.push({set:new Set(keys),node:read()})}branches.sort(function(a,b){return b.set.size-a.set.size});keys=next();var valid=keys%3;keys=keys/3|0;var fe0f=!!(keys&1);keys>>=1;return{branches,valid,fe0f,save:1==keys,check:2==keys}}var sorted=read_member_array(next).sort(function(a,b){return a-b});return read()}}","~:source","shadow$provide[\"module$node_modules$$ethersproject$hash$lib$ens_normalize$decoder\"] = function(global,require,module,exports) {\n\"use strict\";\n/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.read_emoji_trie = exports.read_zero_terminated_array = exports.read_mapped_map = exports.read_member_array = exports.signed = exports.read_compressed_payload = exports.read_payload = exports.decode_arithmetic = void 0;\n// https://github.com/behnammodi/polyfill/blob/master/array.polyfill.js\nfunction flat(array, depth) {\n    if (depth == null) {\n        depth = 1;\n    }\n    var result = [];\n    var forEach = result.forEach;\n    var flatDeep = function (arr, depth) {\n        forEach.call(arr, function (val) {\n            if (depth > 0 && Array.isArray(val)) {\n                flatDeep(val, depth - 1);\n            }\n            else {\n                result.push(val);\n            }\n        });\n    };\n    flatDeep(array, depth);\n    return result;\n}\nfunction fromEntries(array) {\n    var result = {};\n    for (var i = 0; i < array.length; i++) {\n        var value = array[i];\n        result[value[0]] = value[1];\n    }\n    return result;\n}\nfunction decode_arithmetic(bytes) {\n    var pos = 0;\n    function u16() { return (bytes[pos++] << 8) | bytes[pos++]; }\n    // decode the frequency table\n    var symbol_count = u16();\n    var total = 1;\n    var acc = [0, 1]; // first symbol has frequency 1\n    for (var i = 1; i < symbol_count; i++) {\n        acc.push(total += u16());\n    }\n    // skip the sized-payload that the last 3 symbols index into\n    var skip = u16();\n    var pos_payload = pos;\n    pos += skip;\n    var read_width = 0;\n    var read_buffer = 0;\n    function read_bit() {\n        if (read_width == 0) {\n            // this will read beyond end of buffer\n            // but (undefined|0) => zero pad\n            read_buffer = (read_buffer << 8) | bytes[pos++];\n            read_width = 8;\n        }\n        return (read_buffer >> --read_width) & 1;\n    }\n    var N = 31;\n    var FULL = Math.pow(2, N);\n    var HALF = FULL >>> 1;\n    var QRTR = HALF >> 1;\n    var MASK = FULL - 1;\n    // fill register\n    var register = 0;\n    for (var i = 0; i < N; i++)\n        register = (register << 1) | read_bit();\n    var symbols = [];\n    var low = 0;\n    var range = FULL; // treat like a float\n    while (true) {\n        var value = Math.floor((((register - low + 1) * total) - 1) / range);\n        var start = 0;\n        var end = symbol_count;\n        while (end - start > 1) { // binary search\n            var mid = (start + end) >>> 1;\n            if (value < acc[mid]) {\n                end = mid;\n            }\n            else {\n                start = mid;\n            }\n        }\n        if (start == 0)\n            break; // first symbol is end mark\n        symbols.push(start);\n        var a = low + Math.floor(range * acc[start] / total);\n        var b = low + Math.floor(range * acc[start + 1] / total) - 1;\n        while (((a ^ b) & HALF) == 0) {\n            register = (register << 1) & MASK | read_bit();\n            a = (a << 1) & MASK;\n            b = (b << 1) & MASK | 1;\n        }\n        while (a & ~b & QRTR) {\n            register = (register & HALF) | ((register << 1) & (MASK >>> 1)) | read_bit();\n            a = (a << 1) ^ HALF;\n            b = ((b ^ HALF) << 1) | HALF | 1;\n        }\n        low = a;\n        range = 1 + b - a;\n    }\n    var offset = symbol_count - 4;\n    return symbols.map(function (x) {\n        switch (x - offset) {\n            case 3: return offset + 0x10100 + ((bytes[pos_payload++] << 16) | (bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n            case 2: return offset + 0x100 + ((bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n            case 1: return offset + bytes[pos_payload++];\n            default: return x - 1;\n        }\n    });\n}\nexports.decode_arithmetic = decode_arithmetic;\n// returns an iterator which returns the next symbol\nfunction read_payload(v) {\n    var pos = 0;\n    return function () { return v[pos++]; };\n}\nexports.read_payload = read_payload;\nfunction read_compressed_payload(bytes) {\n    return read_payload(decode_arithmetic(bytes));\n}\nexports.read_compressed_payload = read_compressed_payload;\n// eg. [0,1,2,3...] => [0,-1,1,-2,...]\nfunction signed(i) {\n    return (i & 1) ? (~i >> 1) : (i >> 1);\n}\nexports.signed = signed;\nfunction read_counts(n, next) {\n    var v = Array(n);\n    for (var i = 0; i < n; i++)\n        v[i] = 1 + next();\n    return v;\n}\nfunction read_ascending(n, next) {\n    var v = Array(n);\n    for (var i = 0, x = -1; i < n; i++)\n        v[i] = x += 1 + next();\n    return v;\n}\nfunction read_deltas(n, next) {\n    var v = Array(n);\n    for (var i = 0, x = 0; i < n; i++)\n        v[i] = x += signed(next());\n    return v;\n}\nfunction read_member_array(next, lookup) {\n    var v = read_ascending(next(), next);\n    var n = next();\n    var vX = read_ascending(n, next);\n    var vN = read_counts(n, next);\n    for (var i = 0; i < n; i++) {\n        for (var j = 0; j < vN[i]; j++) {\n            v.push(vX[i] + j);\n        }\n    }\n    return lookup ? v.map(function (x) { return lookup[x]; }) : v;\n}\nexports.read_member_array = read_member_array;\n// returns array of \n// [x, ys] => single replacement rule\n// [x, ys, n, dx, dx] => linear map\nfunction read_mapped_map(next) {\n    var ret = [];\n    while (true) {\n        var w = next();\n        if (w == 0)\n            break;\n        ret.push(read_linear_table(w, next));\n    }\n    while (true) {\n        var w = next() - 1;\n        if (w < 0)\n            break;\n        ret.push(read_replacement_table(w, next));\n    }\n    return fromEntries(flat(ret));\n}\nexports.read_mapped_map = read_mapped_map;\nfunction read_zero_terminated_array(next) {\n    var v = [];\n    while (true) {\n        var i = next();\n        if (i == 0)\n            break;\n        v.push(i);\n    }\n    return v;\n}\nexports.read_zero_terminated_array = read_zero_terminated_array;\nfunction read_transposed(n, w, next) {\n    var m = Array(n).fill(undefined).map(function () { return []; });\n    for (var i = 0; i < w; i++) {\n        read_deltas(n, next).forEach(function (x, j) { return m[j].push(x); });\n    }\n    return m;\n}\nfunction read_linear_table(w, next) {\n    var dx = 1 + next();\n    var dy = next();\n    var vN = read_zero_terminated_array(next);\n    var m = read_transposed(vN.length, 1 + w, next);\n    return flat(m.map(function (v, i) {\n        var x = v[0], ys = v.slice(1);\n        //let [x, ...ys] = v;\n        //return Array(vN[i]).fill().map((_, j) => {\n        return Array(vN[i]).fill(undefined).map(function (_, j) {\n            var j_dy = j * dy;\n            return [x + j * dx, ys.map(function (y) { return y + j_dy; })];\n        });\n    }));\n}\nfunction read_replacement_table(w, next) {\n    var n = 1 + next();\n    var m = read_transposed(n, 1 + w, next);\n    return m.map(function (v) { return [v[0], v.slice(1)]; });\n}\nfunction read_emoji_trie(next) {\n    var sorted = read_member_array(next).sort(function (a, b) { return a - b; });\n    return read();\n    function read() {\n        var branches = [];\n        while (true) {\n            var keys = read_member_array(next, sorted);\n            if (keys.length == 0)\n                break;\n            branches.push({ set: new Set(keys), node: read() });\n        }\n        branches.sort(function (a, b) { return b.set.size - a.set.size; }); // sort by likelihood\n        var temp = next();\n        var valid = temp % 3;\n        temp = (temp / 3) | 0;\n        var fe0f = !!(temp & 1);\n        temp >>= 1;\n        var save = temp == 1;\n        var check = temp == 2;\n        return { branches: branches, valid: valid, fe0f: fe0f, save: save, check: check };\n    }\n}\nexports.read_emoji_trie = read_emoji_trie;\n//# sourceMappingURL=decoder.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["branches","save","read_mapped_map","read_member_array","fe0f","decode_arithmetic","signed","__esModule","read_compressed_payload","read_zero_terminated_array","value","check","valid","read_payload","read_emoji_trie","set","node"]],"~:compiled-at",1695040653444,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$ethersproject$hash$lib$ens_normalize$decoder.js\",\n\"lineCount\":9,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@ethersproject/hash/lib/ens-normalize/decoder.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$ethersproject$hash$lib$ens_normalize$decoder\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n/**\\n * MIT License\\n *\\n * Copyright (c) 2021 Andrew Raffensperger\\n *\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\n * in the Software without restriction, including without limitation the rights\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n * copies of the Software, and to permit persons to whom the Software is\\n * furnished to do so, subject to the following conditions:\\n *\\n * The above copyright notice and this permission notice shall be included in all\\n * copies or substantial portions of the Software.\\n *\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n * SOFTWARE.\\n *\\n * This is a near carbon-copy of the original source (link below) with the\\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\\n *\\n * See: https://github.com/adraffy/ens-normalize.js\\n */\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.read_emoji_trie = exports.read_zero_terminated_array = exports.read_mapped_map = exports.read_member_array = exports.signed = exports.read_compressed_payload = exports.read_payload = exports.decode_arithmetic = void 0;\\n// https://github.com/behnammodi/polyfill/blob/master/array.polyfill.js\\nfunction flat(array, depth) {\\n    if (depth == null) {\\n        depth = 1;\\n    }\\n    var result = [];\\n    var forEach = result.forEach;\\n    var flatDeep = function (arr, depth) {\\n        forEach.call(arr, function (val) {\\n            if (depth > 0 && Array.isArray(val)) {\\n                flatDeep(val, depth - 1);\\n            }\\n            else {\\n                result.push(val);\\n            }\\n        });\\n    };\\n    flatDeep(array, depth);\\n    return result;\\n}\\nfunction fromEntries(array) {\\n    var result = {};\\n    for (var i = 0; i < array.length; i++) {\\n        var value = array[i];\\n        result[value[0]] = value[1];\\n    }\\n    return result;\\n}\\nfunction decode_arithmetic(bytes) {\\n    var pos = 0;\\n    function u16() { return (bytes[pos++] << 8) | bytes[pos++]; }\\n    // decode the frequency table\\n    var symbol_count = u16();\\n    var total = 1;\\n    var acc = [0, 1]; // first symbol has frequency 1\\n    for (var i = 1; i < symbol_count; i++) {\\n        acc.push(total += u16());\\n    }\\n    // skip the sized-payload that the last 3 symbols index into\\n    var skip = u16();\\n    var pos_payload = pos;\\n    pos += skip;\\n    var read_width = 0;\\n    var read_buffer = 0;\\n    function read_bit() {\\n        if (read_width == 0) {\\n            // this will read beyond end of buffer\\n            // but (undefined|0) => zero pad\\n            read_buffer = (read_buffer << 8) | bytes[pos++];\\n            read_width = 8;\\n        }\\n        return (read_buffer >> --read_width) & 1;\\n    }\\n    var N = 31;\\n    var FULL = Math.pow(2, N);\\n    var HALF = FULL >>> 1;\\n    var QRTR = HALF >> 1;\\n    var MASK = FULL - 1;\\n    // fill register\\n    var register = 0;\\n    for (var i = 0; i < N; i++)\\n        register = (register << 1) | read_bit();\\n    var symbols = [];\\n    var low = 0;\\n    var range = FULL; // treat like a float\\n    while (true) {\\n        var value = Math.floor((((register - low + 1) * total) - 1) / range);\\n        var start = 0;\\n        var end = symbol_count;\\n        while (end - start > 1) { // binary search\\n            var mid = (start + end) >>> 1;\\n            if (value < acc[mid]) {\\n                end = mid;\\n            }\\n            else {\\n                start = mid;\\n            }\\n        }\\n        if (start == 0)\\n            break; // first symbol is end mark\\n        symbols.push(start);\\n        var a = low + Math.floor(range * acc[start] / total);\\n        var b = low + Math.floor(range * acc[start + 1] / total) - 1;\\n        while (((a ^ b) & HALF) == 0) {\\n            register = (register << 1) & MASK | read_bit();\\n            a = (a << 1) & MASK;\\n            b = (b << 1) & MASK | 1;\\n        }\\n        while (a & ~b & QRTR) {\\n            register = (register & HALF) | ((register << 1) & (MASK >>> 1)) | read_bit();\\n            a = (a << 1) ^ HALF;\\n            b = ((b ^ HALF) << 1) | HALF | 1;\\n        }\\n        low = a;\\n        range = 1 + b - a;\\n    }\\n    var offset = symbol_count - 4;\\n    return symbols.map(function (x) {\\n        switch (x - offset) {\\n            case 3: return offset + 0x10100 + ((bytes[pos_payload++] << 16) | (bytes[pos_payload++] << 8) | bytes[pos_payload++]);\\n            case 2: return offset + 0x100 + ((bytes[pos_payload++] << 8) | bytes[pos_payload++]);\\n            case 1: return offset + bytes[pos_payload++];\\n            default: return x - 1;\\n        }\\n    });\\n}\\nexports.decode_arithmetic = decode_arithmetic;\\n// returns an iterator which returns the next symbol\\nfunction read_payload(v) {\\n    var pos = 0;\\n    return function () { return v[pos++]; };\\n}\\nexports.read_payload = read_payload;\\nfunction read_compressed_payload(bytes) {\\n    return read_payload(decode_arithmetic(bytes));\\n}\\nexports.read_compressed_payload = read_compressed_payload;\\n// eg. [0,1,2,3...] => [0,-1,1,-2,...]\\nfunction signed(i) {\\n    return (i & 1) ? (~i >> 1) : (i >> 1);\\n}\\nexports.signed = signed;\\nfunction read_counts(n, next) {\\n    var v = Array(n);\\n    for (var i = 0; i < n; i++)\\n        v[i] = 1 + next();\\n    return v;\\n}\\nfunction read_ascending(n, next) {\\n    var v = Array(n);\\n    for (var i = 0, x = -1; i < n; i++)\\n        v[i] = x += 1 + next();\\n    return v;\\n}\\nfunction read_deltas(n, next) {\\n    var v = Array(n);\\n    for (var i = 0, x = 0; i < n; i++)\\n        v[i] = x += signed(next());\\n    return v;\\n}\\nfunction read_member_array(next, lookup) {\\n    var v = read_ascending(next(), next);\\n    var n = next();\\n    var vX = read_ascending(n, next);\\n    var vN = read_counts(n, next);\\n    for (var i = 0; i < n; i++) {\\n        for (var j = 0; j < vN[i]; j++) {\\n            v.push(vX[i] + j);\\n        }\\n    }\\n    return lookup ? v.map(function (x) { return lookup[x]; }) : v;\\n}\\nexports.read_member_array = read_member_array;\\n// returns array of \\n// [x, ys] => single replacement rule\\n// [x, ys, n, dx, dx] => linear map\\nfunction read_mapped_map(next) {\\n    var ret = [];\\n    while (true) {\\n        var w = next();\\n        if (w == 0)\\n            break;\\n        ret.push(read_linear_table(w, next));\\n    }\\n    while (true) {\\n        var w = next() - 1;\\n        if (w < 0)\\n            break;\\n        ret.push(read_replacement_table(w, next));\\n    }\\n    return fromEntries(flat(ret));\\n}\\nexports.read_mapped_map = read_mapped_map;\\nfunction read_zero_terminated_array(next) {\\n    var v = [];\\n    while (true) {\\n        var i = next();\\n        if (i == 0)\\n            break;\\n        v.push(i);\\n    }\\n    return v;\\n}\\nexports.read_zero_terminated_array = read_zero_terminated_array;\\nfunction read_transposed(n, w, next) {\\n    var m = Array(n).fill(undefined).map(function () { return []; });\\n    for (var i = 0; i < w; i++) {\\n        read_deltas(n, next).forEach(function (x, j) { return m[j].push(x); });\\n    }\\n    return m;\\n}\\nfunction read_linear_table(w, next) {\\n    var dx = 1 + next();\\n    var dy = next();\\n    var vN = read_zero_terminated_array(next);\\n    var m = read_transposed(vN.length, 1 + w, next);\\n    return flat(m.map(function (v, i) {\\n        var x = v[0], ys = v.slice(1);\\n        //let [x, ...ys] = v;\\n        //return Array(vN[i]).fill().map((_, j) => {\\n        return Array(vN[i]).fill(undefined).map(function (_, j) {\\n            var j_dy = j * dy;\\n            return [x + j * dx, ys.map(function (y) { return y + j_dy; })];\\n        });\\n    }));\\n}\\nfunction read_replacement_table(w, next) {\\n    var n = 1 + next();\\n    var m = read_transposed(n, 1 + w, next);\\n    return m.map(function (v) { return [v[0], v.slice(1)]; });\\n}\\nfunction read_emoji_trie(next) {\\n    var sorted = read_member_array(next).sort(function (a, b) { return a - b; });\\n    return read();\\n    function read() {\\n        var branches = [];\\n        while (true) {\\n            var keys = read_member_array(next, sorted);\\n            if (keys.length == 0)\\n                break;\\n            branches.push({ set: new Set(keys), node: read() });\\n        }\\n        branches.sort(function (a, b) { return b.set.size - a.set.size; }); // sort by likelihood\\n        var temp = next();\\n        var valid = temp % 3;\\n        temp = (temp / 3) | 0;\\n        var fe0f = !!(temp & 1);\\n        temp >>= 1;\\n        var save = temp == 1;\\n        var check = temp == 2;\\n        return { branches: branches, valid: valid, fe0f: fe0f, save: save, check: check };\\n    }\\n}\\nexports.read_emoji_trie = read_emoji_trie;\\n//# sourceMappingURL=decoder.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"flat\",\"array\",\"depth\",\"result\",\"forEach\",\"flatDeep\",\"arr\",\"call\",\"val\",\"Array\",\"isArray\",\"push\",\"decode_arithmetic\",\"bytes\",\"u16\",\"pos\",\"read_bit\",\"read_width\",\"read_buffer\",\"symbol_count\",\"total\",\"acc\",\"i\",\"skip\",\"pos_payload\",\"FULL\",\"Math\",\"pow\",\"N\",\"HALF\",\"QRTR\",\"MASK\",\"register\",\"symbols\",\"low\",\"value\",\"floor\",\"range\",\"start\",\"end\",\"mid\",\"a\",\"b\",\"offset\",\"map\",\"x\",\"read_payload\",\"v\",\"signed\",\"read_counts\",\"n\",\"next\",\"read_ascending\",\"read_deltas\",\"read_member_array\",\"lookup\",\"vX\",\"vN\",\"j\",\"read_zero_terminated_array\",\"read_transposed\",\"w\",\"m\",\"fill\",\"undefined\",\"read_linear_table\",\"dx\",\"dy\",\"length\",\"ys\",\"slice\",\"_\",\"j_dy\",\"y\",\"read_replacement_table\",\"Object\",\"defineProperty\",\"read_emoji_trie\",\"read_mapped_map\",\"read_compressed_payload\",\"ret\",\"read\",\"branches\",\"keys\",\"sorted\",\"set\",\"Set\",\"node\",\"sort\",\"size\",\"temp\",\"valid\",\"fe0f\",\"save\",\"check\"]\n}\n"]