shadow$provide.module$node_modules$viem$_cjs$actions$ens$getEnsText=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.getEnsText=void 0;const abis_js_1=require("module$node_modules$viem$_cjs$constants$abis"),decodeFunctionResult_js_1=require("module$node_modules$viem$_cjs$utils$abi$decodeFunctionResult"),encodeFunctionData_js_1=require("module$node_modules$viem$_cjs$utils$abi$encodeFunctionData"),chain_js_1=require("module$node_modules$viem$_cjs$utils$chain"),
toHex_js_1=require("module$node_modules$viem$_cjs$utils$encoding$toHex"),errors_js_1=require("module$node_modules$viem$_cjs$utils$ens$errors"),namehash_js_1=require("module$node_modules$viem$_cjs$utils$ens$namehash"),packetToBytes_js_1=require("module$node_modules$viem$_cjs$utils$ens$packetToBytes"),readContract_js_1=require("module$node_modules$viem$_cjs$actions$public$readContract");exports.getEnsText=async function(client,{blockNumber,blockTag,name,key,universalResolverAddress:universalResolverAddress_}){if(!universalResolverAddress_){if(!client.chain)throw Error("client chain not configured. universalResolverAddress is required.");
universalResolverAddress_=(0,chain_js_1.getChainContractAddress)({blockNumber,chain:client.chain,contract:"ensUniversalResolver"})}try{const res=await (0,readContract_js_1.readContract)(client,{address:universalResolverAddress_,abi:abis_js_1.universalResolverResolveAbi,functionName:"resolve",args:[(0,toHex_js_1.toHex)((0,packetToBytes_js_1.packetToBytes)(name)),(0,encodeFunctionData_js_1.encodeFunctionData)({abi:abis_js_1.textResolverAbi,functionName:"text",args:[(0,namehash_js_1.namehash)(name),
key]})],blockNumber,blockTag});if("0x"===res[0])return null;const record=(0,decodeFunctionResult_js_1.decodeFunctionResult)({abi:abis_js_1.textResolverAbi,functionName:"text",data:res[0]});return""===record?null:record}catch(err){if((0,errors_js_1.isNullUniversalResolverError)(err,"resolve"))return null;throw err;}}}
//# sourceMappingURL=module$node_modules$viem$_cjs$actions$ens$getEnsText.js.map
