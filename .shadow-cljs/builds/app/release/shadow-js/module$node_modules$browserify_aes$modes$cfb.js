["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/browserify-aes/modes/cfb.js"],"~:js","shadow$provide[185]=function(S,A,V,q){function F(y,e,u){var p=e.length,n=r(e,y._cache);y._cache=y._cache.slice(p);y._prev=G.concat([y._prev,u?e:n]);return n}var G=A(111).Buffer,r=A(183);q.encrypt=function(y,e,u){for(var p=G.allocUnsafe(0),n;e.length;)if(0===y._cache.length&&(y._cache=y._cipher.encryptBlock(y._prev),y._prev=G.allocUnsafe(0)),y._cache.length<=e.length)n=y._cache.length,p=G.concat([p,F(y,e.slice(0,n),u)]),e=e.slice(n);else{p=G.concat([p,F(y,e,u)]);break}return p}}","~:source","shadow$provide[185] = function(global,require,module,exports) {\nvar Buffer = require('safe-buffer').Buffer\nvar xor = require('buffer-xor')\n\nfunction encryptStart (self, data, decrypt) {\n  var len = data.length\n  var out = xor(data, self._cache)\n  self._cache = self._cache.slice(len)\n  self._prev = Buffer.concat([self._prev, decrypt ? data : out])\n  return out\n}\n\nexports.encrypt = function (self, data, decrypt) {\n  var out = Buffer.allocUnsafe(0)\n  var len\n\n  while (data.length) {\n    if (self._cache.length === 0) {\n      self._cache = self._cipher.encryptBlock(self._prev)\n      self._prev = Buffer.allocUnsafe(0)\n    }\n\n    if (self._cache.length <= data.length) {\n      len = self._cache.length\n      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])\n      data = data.slice(len)\n    } else {\n      out = Buffer.concat([out, encryptStart(self, data, decrypt)])\n      break\n    }\n  }\n\n  return out\n}\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$buffer_xor$index","~$module$node_modules$safe_buffer$index"]],"~:properties",["^5",["encrypt","_prev","_cache"]],"~:compiled-at",1695041440824,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$browserify_aes$modes$cfb.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAI9DC,QAASA,EAAa,CAACC,CAAD,CAAOC,CAAP,CAAaC,CAAb,CAAsB,CAC1C,IAAIC,EAAMF,CAAKG,CAAAA,MAAf,CACIC,EAAMC,CAAA,CAAIL,CAAJ,CAAUD,CAAKO,CAAAA,MAAf,CACVP,EAAKO,CAAAA,MAAL,CAAcP,CAAKO,CAAAA,MAAOC,CAAAA,KAAZ,CAAkBL,CAAlB,CACdH,EAAKS,CAAAA,KAAL,CAAaC,CAAOC,CAAAA,MAAP,CAAc,CAACX,CAAKS,CAAAA,KAAN,CAAaP,CAAA,CAAUD,CAAV,CAAiBI,CAA9B,CAAd,CACb,OAAOA,EALmC,CAH5C,IAAIK,EAASd,CAAA,CAAQ,GAAR,CAAuBc,CAAAA,MAApC,CACIJ,EAAMV,CAAA,CAAQ,GAAR,CAUVE,EAAQc,CAAAA,OAAR,CAAkBC,QAAS,CAACb,CAAD,CAAOC,CAAP,CAAaC,CAAb,CAAsB,CAI/C,IAHA,IAAIG,EAAMK,CAAOI,CAAAA,WAAP,CAAmB,CAAnB,CAAV,CACIX,CAEJ,CAAOF,CAAKG,CAAAA,MAAZ,CAAA,CAME,GAL2B,CAKvB,GALAJ,CAAKO,CAAAA,MAAOH,CAAAA,MAKZ,GAJFJ,CAAKO,CAAAA,MACL,CADcP,CAAKe,CAAAA,OAAQC,CAAAA,YAAb,CAA0BhB,CAAKS,CAAAA,KAA/B,CACd,CAAAT,CAAKS,CAAAA,KAAL,CAAaC,CAAOI,CAAAA,WAAP,CAAmB,CAAnB,CAGX,EAAAd,CAAKO,CAAAA,MAAOH,CAAAA,MAAZ,EAAsBH,CAAKG,CAAAA,MAA/B,CACED,CAEA,CAFMH,CAAKO,CAAAA,MAAOH,CAAAA,MAElB,CADAC,CACA,CADMK,CAAOC,CAAAA,MAAP,CAAc,CAACN,CAAD,CAAMN,CAAA,CAAaC,CAAb,CAAmBC,CAAKO,CAAAA,KAAL,CAAW,CAAX,CAAcL,CAAd,CAAnB,CAAuCD,CAAvC,CAAN,CAAd,CACN,CAAAD,CAAA,CAAOA,CAAKO,CAAAA,KAAL,CAAWL,CAAX,CAHT,KAIO,CACLE,CAAA,CAAMK,CAAOC,CAAAA,MAAP,CAAc,CAACN,CAAD,CAAMN,CAAA,CAAaC,CAAb,CAAmBC,CAAnB,CAAyBC,CAAzB,CAAN,CAAd,CACN,MAFK,CAMT,MAAOG,EApBwC,CAZa;\",\n\"sources\":[\"node_modules/browserify-aes/modes/cfb.js\"],\n\"sourcesContent\":[\"shadow$provide[185] = function(global,require,module,exports) {\\nvar Buffer = require('safe-buffer').Buffer\\nvar xor = require('buffer-xor')\\n\\nfunction encryptStart (self, data, decrypt) {\\n  var len = data.length\\n  var out = xor(data, self._cache)\\n  self._cache = self._cache.slice(len)\\n  self._prev = Buffer.concat([self._prev, decrypt ? data : out])\\n  return out\\n}\\n\\nexports.encrypt = function (self, data, decrypt) {\\n  var out = Buffer.allocUnsafe(0)\\n  var len\\n\\n  while (data.length) {\\n    if (self._cache.length === 0) {\\n      self._cache = self._cipher.encryptBlock(self._prev)\\n      self._prev = Buffer.allocUnsafe(0)\\n    }\\n\\n    if (self._cache.length <= data.length) {\\n      len = self._cache.length\\n      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])\\n      data = data.slice(len)\\n    } else {\\n      out = Buffer.concat([out, encryptStart(self, data, decrypt)])\\n      break\\n    }\\n  }\\n\\n  return out\\n}\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"encryptStart\",\"self\",\"data\",\"decrypt\",\"len\",\"length\",\"out\",\"xor\",\"_cache\",\"slice\",\"_prev\",\"Buffer\",\"concat\",\"encrypt\",\"exports.encrypt\",\"allocUnsafe\",\"_cipher\",\"encryptBlock\"]\n}\n"]