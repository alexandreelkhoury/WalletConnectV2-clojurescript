shadow$provide.module$node_modules$$tanstack$query_persist_client_core$build$lib$persist=function(global,require,module,exports){async function persistQueryClientRestore({queryClient,persister,maxAge=864E5,buster="",hydrateOptions}){try{const persistedClient=await persister.restoreClient();if(persistedClient)if(persistedClient.timestamp){const expired=Date.now()-persistedClient.timestamp>maxAge,busted=persistedClient.buster!==buster;expired||busted?persister.removeClient():queryCore.hydrate(queryClient,
persistedClient.clientState,hydrateOptions)}else persister.removeClient()}catch(err){queryClient.getLogger().error(err),queryClient.getLogger().warn("Encountered an error attempting to restore client cache from persisted location. As a precaution, the persisted cache will be discarded."),persister.removeClient()}}async function persistQueryClientSave({queryClient,persister,buster="",dehydrateOptions}){queryClient={buster,timestamp:Date.now(),clientState:queryCore.dehydrate(queryClient,dehydrateOptions)};
await persister.persistClient(queryClient)}function persistQueryClientSubscribe(props){const unsubscribeQueryCache=props.queryClient.getQueryCache().subscribe(event=>{cacheableEventTypes.includes(event.type)&&persistQueryClientSave(props)}),unusbscribeMutationCache=props.queryClient.getMutationCache().subscribe(event=>{cacheableEventTypes.includes(event.type)&&persistQueryClientSave(props)});return()=>{unsubscribeQueryCache();unusbscribeMutationCache()}}Object.defineProperty(exports,"__esModule",
{value:!0});var queryCore=require("module$node_modules$$tanstack$query_core$build$lib$index");const cacheableEventTypes=["added","removed","updated"];exports.persistQueryClient=function(props){let hasUnsubscribed=!1,persistQueryClientUnsubscribe;return[()=>{hasUnsubscribed=!0;null==persistQueryClientUnsubscribe?void 0:persistQueryClientUnsubscribe()},persistQueryClientRestore(props).then(()=>{hasUnsubscribed||(persistQueryClientUnsubscribe=persistQueryClientSubscribe(props))})]};exports.persistQueryClientRestore=
persistQueryClientRestore;exports.persistQueryClientSave=persistQueryClientSave;exports.persistQueryClientSubscribe=persistQueryClientSubscribe}
//# sourceMappingURL=module$node_modules$$tanstack$query_persist_client_core$build$lib$persist.js.map
