shadow$provide.module$node_modules$viem$_cjs$chains$celo$serializers=function(global,require,module,exports){function assertTransactionCIP42(transaction){const {chainId,maxPriorityFeePerGas,gasPrice,maxFeePerGas,to,feeCurrency,gatewayFee,gatewayFeeRecipient}=transaction;if(0>=chainId)throw new chain_js_1.InvalidChainIdError({chainId});if(to&&!(0,isAddress_js_1.isAddress)(to))throw new address_js_1.InvalidAddressError({address:to});if(gasPrice)throw new base_js_1.BaseError("`gasPrice` is not a valid CIP-42 Transaction attribute.");
if(maxFeePerGas&&115792089237316195423570985008687907853269984665640564039457584007913129639935n<maxFeePerGas)throw new node_js_1.FeeCapTooHighError({maxFeePerGas});if(maxPriorityFeePerGas&&maxFeePerGas&&maxPriorityFeePerGas>maxFeePerGas)throw new node_js_1.TipAboveFeeCapError({maxFeePerGas,maxPriorityFeePerGas});if(gatewayFee&&!gatewayFeeRecipient||gatewayFeeRecipient&&!gatewayFee)throw new base_js_1.BaseError("`gatewayFee` and `gatewayFeeRecipient` must be provided together.");if(feeCurrency&&!feeCurrency?.startsWith("0x"))throw new base_js_1.BaseError("`feeCurrency` MUST be a token address for CIP-42 transactions.");
if(!feeCurrency&&!gatewayFeeRecipient)throw new base_js_1.BaseError("Either `feeCurrency` or `gatewayFeeRecipient` must be provided for CIP-42 transactions.");}Object.defineProperty(exports,"__esModule",{value:!0});exports.assertTransactionCIP42=exports.serializersCelo=exports.serializeTransactionCelo=void 0;const address_js_1=require("module$node_modules$viem$_cjs$errors$address"),base_js_1=require("module$node_modules$viem$_cjs$errors$base"),chain_js_1=require("module$node_modules$viem$_cjs$errors$chain"),
node_js_1=require("module$node_modules$viem$_cjs$errors$node"),isAddress_js_1=require("module$node_modules$viem$_cjs$utils$address$isAddress"),concat_js_1=require("module$node_modules$viem$_cjs$utils$data$concat"),trim_js_1=require("module$node_modules$viem$_cjs$utils$data$trim"),toHex_js_1=require("module$node_modules$viem$_cjs$utils$encoding$toHex"),toRlp_js_1=require("module$node_modules$viem$_cjs$utils$encoding$toRlp"),serializeAccessList_js_1=require("module$node_modules$viem$_cjs$utils$transaction$serializeAccessList"),
serializeTransaction_js_1=require("module$node_modules$viem$_cjs$utils$transaction$serializeTransaction");exports.serializeTransactionCelo=(tx,signature)=>{if("maxFeePerGas"in tx&&"maxPriorityFeePerGas"in tx&&("feeCurrency"in tx||"gatewayFee"in tx||"gatewayFeeRecipient"in tx)){assertTransactionCIP42(tx);const {chainId,gas,nonce,to,value,maxFeePerGas,maxPriorityFeePerGas,accessList,feeCurrency,gatewayFeeRecipient,gatewayFee,data}=tx;tx=[(0,toHex_js_1.toHex)(chainId),nonce?(0,toHex_js_1.toHex)(nonce):
"0x",maxPriorityFeePerGas?(0,toHex_js_1.toHex)(maxPriorityFeePerGas):"0x",maxFeePerGas?(0,toHex_js_1.toHex)(maxFeePerGas):"0x",gas?(0,toHex_js_1.toHex)(gas):"0x",feeCurrency??"0x",gatewayFeeRecipient??"0x",gatewayFee?(0,toHex_js_1.toHex)(gatewayFee):"0x",to??"0x",value?(0,toHex_js_1.toHex)(value):"0x",data??"0x",(0,serializeAccessList_js_1.serializeAccessList)(accessList)];signature&&tx.push(27n===signature.v?"0x":(0,toHex_js_1.toHex)(1),(0,trim_js_1.trim)(signature.r),(0,trim_js_1.trim)(signature.s));
return(0,concat_js_1.concatHex)(["0x7c",(0,toRlp_js_1.toRlp)(tx)])}return(0,serializeTransaction_js_1.serializeTransaction)(tx,signature)};exports.serializersCelo={transaction:exports.serializeTransactionCelo};exports.assertTransactionCIP42=assertTransactionCIP42}
//# sourceMappingURL=module$node_modules$viem$_cjs$chains$celo$serializers.js.map
