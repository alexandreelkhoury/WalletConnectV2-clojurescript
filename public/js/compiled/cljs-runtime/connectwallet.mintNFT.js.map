{"version":3,"sources":["connectwallet/mintNFT.cljs"],"mappings":";AAGA,AAAKA,+BACH,AAAU,oDAAA,aAAA,qDAAA,CAAA,UAAA,gBAAA,+BAAA,wBAAA,eAAA,uBAAA,9OAACC;AAab,gCAAA,hCAAMC;AAAN,AACE,IAAMC,QAAM,AAAS,AAACC,6CAAiBJ;AAAvC,AAAA,0FAAA,iDAAA,mFAAA,wDAAA,mFAAA,yDAAA,2CAAA,2EAAA,dAGqBG","names":["connectwallet.mintNFT/config","js/shadow.js.shim.module$wagmi.usePrepareContractWrite","connectwallet.mintNFT/MintNFT","write","js/shadow.js.shim.module$wagmi.useContractWrite"],"sourcesContent":["(ns connectwallet.mintNFT\n  (:require [\"wagmi\" :refer (useContractWrite usePrepareContractWrite useWaitForTransaction)]))\n\n(def config\n  (.-config (usePrepareContractWrite\n             #js\n              {:address\n               \"0x61A153b3C68fE58738e8af19608D3418A8Ae05be\",\n               :abi #js [#js {:name \"mint\",\n                              :type \"function\",\n                              :stateMutability \"nonpayable\",\n                              :inputs #js [],\n                              :outputs #js []}],\n               :functionName \"mint\"})))\n\n;; (def write (.-write (useContractWrite config)))\n\n(defn MintNFT []\n  (let [write (.-write (useContractWrite config))]\n  [:<>\n   [:br]\n   [:button {:on-click write} \"Mint some ALX tokens ;)\"]]))"]}