["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/pbkdf2/lib/to-buffer.js"],"~:js","shadow$provide[171]=function(S,A,V,q){var F=A(111).Buffer;V.exports=function(G,r,y){if(F.isBuffer(G))return G;if(\"string\"===typeof G)return F.from(G,r);if(ArrayBuffer.isView(G))return F.from(G.buffer);throw new TypeError(y+\" must be a string, a Buffer, a typed array or a DataView\");}}","~:source","shadow$provide[171] = function(global,require,module,exports) {\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (thing, encoding, name) {\n  if (Buffer.isBuffer(thing)) {\n    return thing\n  } else if (typeof thing === 'string') {\n    return Buffer.from(thing, encoding)\n  } else if (ArrayBuffer.isView(thing)) {\n    return Buffer.from(thing.buffer)\n  } else {\n    throw new TypeError(name + ' must be a string, a Buffer, a typed array or a DataView')\n  }\n}\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$safe_buffer$index"]],"~:properties",["^5",[]],"~:compiled-at",1695041440819,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$pbkdf2$lib$to_buffer.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAC9D,IAAIC,EAASH,CAAA,CAAQ,GAAR,CAAuBG,CAAAA,MAEpCF,EAAOC,CAAAA,OAAP,CAAiBE,QAAS,CAACC,CAAD,CAAQC,CAAR,CAAkBC,CAAlB,CAAwB,CAChD,GAAIJ,CAAOK,CAAAA,QAAP,CAAgBH,CAAhB,CAAJ,CACE,MAAOA,EACF,IAAqB,QAArB,GAAI,MAAOA,EAAX,CACL,MAAOF,EAAOM,CAAAA,IAAP,CAAYJ,CAAZ,CAAmBC,CAAnB,CACF,IAAII,WAAYC,CAAAA,MAAZ,CAAmBN,CAAnB,CAAJ,CACL,MAAOF,EAAOM,CAAAA,IAAP,CAAYJ,CAAMO,CAAAA,MAAlB,CAEP,MAAM,KAAIC,SAAJ,CAAcN,CAAd,CAAqB,0DAArB,CAAN,CAR8C,CAHY;\",\n\"sources\":[\"node_modules/pbkdf2/lib/to-buffer.js\"],\n\"sourcesContent\":[\"shadow$provide[171] = function(global,require,module,exports) {\\nvar Buffer = require('safe-buffer').Buffer\\n\\nmodule.exports = function (thing, encoding, name) {\\n  if (Buffer.isBuffer(thing)) {\\n    return thing\\n  } else if (typeof thing === 'string') {\\n    return Buffer.from(thing, encoding)\\n  } else if (ArrayBuffer.isView(thing)) {\\n    return Buffer.from(thing.buffer)\\n  } else {\\n    throw new TypeError(name + ' must be a string, a Buffer, a typed array or a DataView')\\n  }\\n}\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Buffer\",\"module.exports\",\"thing\",\"encoding\",\"name\",\"isBuffer\",\"from\",\"ArrayBuffer\",\"isView\",\"buffer\",\"TypeError\"]\n}\n"]