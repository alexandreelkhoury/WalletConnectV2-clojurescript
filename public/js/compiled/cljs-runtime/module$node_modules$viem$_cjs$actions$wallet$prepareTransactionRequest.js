shadow$provide.module$node_modules$viem$_cjs$actions$wallet$prepareTransactionRequest=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.prepareTransactionRequest=void 0;const parseAccount_js_1=require("module$node_modules$viem$_cjs$accounts$utils$parseAccount"),estimateFeesPerGas_js_1=require("module$node_modules$viem$_cjs$actions$public$estimateFeesPerGas"),estimateGas_js_1=require("module$node_modules$viem$_cjs$actions$public$estimateGas"),getBlock_js_1=
require("module$node_modules$viem$_cjs$actions$public$getBlock"),getTransactionCount_js_1=require("module$node_modules$viem$_cjs$actions$public$getTransactionCount"),account_js_1=require("module$node_modules$viem$_cjs$errors$account"),fee_js_1=require("module$node_modules$viem$_cjs$errors$fee"),assertRequest_js_1=require("module$node_modules$viem$_cjs$utils$transaction$assertRequest"),getTransactionType_js_1=require("module$node_modules$viem$_cjs$utils$transaction$getTransactionType");exports.prepareTransactionRequest=
async function(client,args){const {account:account_=client.account,chain,gas,nonce,type}=args;if(!account_)throw new account_js_1.AccountNotFoundError;const account=(0,parseAccount_js_1.parseAccount)(account_),block=await (0,getBlock_js_1.getBlock)(client,{blockTag:"latest"}),request={...args,from:account.address};"undefined"===typeof nonce&&(request.nonce=await (0,getTransactionCount_js_1.getTransactionCount)(client,{address:account.address,blockTag:"pending"}));if("undefined"===typeof type)try{request.type=
(0,getTransactionType_js_1.getTransactionType)(request)}catch{request.type="bigint"===typeof block.baseFeePerGas?"eip1559":"legacy"}if("eip1559"===request.type){const {maxFeePerGas,maxPriorityFeePerGas}=await (0,estimateFeesPerGas_js_1.internal_estimateFeesPerGas)(client,{block,chain,request});if("undefined"===typeof args.maxPriorityFeePerGas&&args.maxFeePerGas&&args.maxFeePerGas<maxPriorityFeePerGas)throw new fee_js_1.MaxFeePerGasTooLowError({maxPriorityFeePerGas});request.maxPriorityFeePerGas=maxPriorityFeePerGas;
request.maxFeePerGas=maxFeePerGas}else{if("undefined"!==typeof args.maxFeePerGas||"undefined"!==typeof args.maxPriorityFeePerGas)throw new fee_js_1.Eip1559FeesNotSupportedError;({gasPrice:args}=await (0,estimateFeesPerGas_js_1.internal_estimateFeesPerGas)(client,{block,chain,request,type:"legacy"}));request.gasPrice=args}"undefined"===typeof gas&&(request.gas=await (0,estimateGas_js_1.estimateGas)(client,{...request,account:{address:account.address,type:"json-rpc"}}));(0,assertRequest_js_1.assertRequest)(request);
return request}}
//# sourceMappingURL=module$node_modules$viem$_cjs$actions$wallet$prepareTransactionRequest.js.map
