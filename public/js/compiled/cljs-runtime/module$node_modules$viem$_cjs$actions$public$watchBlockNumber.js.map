{
"version":3,
"file":"module$node_modules$viem$_cjs$actions$public$watchBlockNumber.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/viem/_cjs/actions/public/watchBlockNumber.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$viem$_cjs$actions$public$watchBlockNumber\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.watchBlockNumber = void 0;\nconst fromHex_js_1 = require(\"../../utils/encoding/fromHex.js\");\nconst observe_js_1 = require(\"../../utils/observe.js\");\nconst poll_js_1 = require(\"../../utils/poll.js\");\nconst stringify_js_1 = require(\"../../utils/stringify.js\");\nconst getBlockNumber_js_1 = require(\"./getBlockNumber.js\");\nfunction watchBlockNumber(client, { emitOnBegin = false, emitMissed = false, onBlockNumber, onError, poll: poll_, pollingInterval = client.pollingInterval, }) {\n    const enablePolling = typeof poll_ !== 'undefined' ? poll_ : client.transport.type !== 'webSocket';\n    let prevBlockNumber;\n    const pollBlockNumber = () => {\n        const observerId = (0, stringify_js_1.stringify)([\n            'watchBlockNumber',\n            client.uid,\n            emitOnBegin,\n            emitMissed,\n            pollingInterval,\n        ]);\n        return (0, observe_js_1.observe)(observerId, { onBlockNumber, onError }, (emit) => (0, poll_js_1.poll)(async () => {\n            try {\n                const blockNumber = await (0, getBlockNumber_js_1.getBlockNumber)(client, { cacheTime: 0 });\n                if (prevBlockNumber) {\n                    if (blockNumber === prevBlockNumber)\n                        return;\n                    if (blockNumber - prevBlockNumber > 1 && emitMissed) {\n                        for (let i = prevBlockNumber + 1n; i < blockNumber; i++) {\n                            emit.onBlockNumber(i, prevBlockNumber);\n                            prevBlockNumber = i;\n                        }\n                    }\n                }\n                if (!prevBlockNumber || blockNumber > prevBlockNumber) {\n                    emit.onBlockNumber(blockNumber, prevBlockNumber);\n                    prevBlockNumber = blockNumber;\n                }\n            }\n            catch (err) {\n                emit.onError?.(err);\n            }\n        }, {\n            emitOnBegin,\n            interval: pollingInterval,\n        }));\n    };\n    const subscribeBlockNumber = () => {\n        let active = true;\n        let unsubscribe = () => (active = false);\n        (async () => {\n            try {\n                const { unsubscribe: unsubscribe_ } = await client.transport.subscribe({\n                    params: ['newHeads'],\n                    onData(data) {\n                        if (!active)\n                            return;\n                        const blockNumber = (0, fromHex_js_1.hexToBigInt)(data.result?.number);\n                        onBlockNumber(blockNumber, prevBlockNumber);\n                        prevBlockNumber = blockNumber;\n                    },\n                    onError(error) {\n                        onError?.(error);\n                    },\n                });\n                unsubscribe = unsubscribe_;\n                if (!active)\n                    unsubscribe();\n            }\n            catch (err) {\n                onError?.(err);\n            }\n        })();\n        return unsubscribe;\n    };\n    return enablePolling ? pollBlockNumber() : subscribeBlockNumber();\n}\nexports.watchBlockNumber = watchBlockNumber;\n//# sourceMappingURL=watchBlockNumber.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","watchBlockNumber","fromHex_js_1","observe_js_1","poll_js_1","stringify_js_1","getBlockNumber_js_1","client","emitOnBegin","emitMissed","onBlockNumber","onError","poll_","pollingInterval","prevBlockNumber","pollBlockNumber","observerId","stringify","uid","observe","emit","poll","blockNumber","getBlockNumber","cacheTime","i","err","interval","subscribeBlockNumber","active","unsubscribe","unsubscribe_","transport","subscribe","params","onData","data","hexToBigInt","result","number","error","enablePolling","type"]
}
