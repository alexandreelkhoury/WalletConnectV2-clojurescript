shadow$provide.module$node_modules$$tanstack$query_core$build$lib$focusManager=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});global=require("module$node_modules$$tanstack$query_core$build$lib$subscribable");var utils=require("module$node_modules$$tanstack$query_core$build$lib$utils");class FocusManager extends global.Subscribable{constructor(){super();this.setup=onFocus=>{if(!utils.isServer&&window.addEventListener){const listener=()=>onFocus();window.addEventListener("visibilitychange",
listener,!1);window.addEventListener("focus",listener,!1);return()=>{window.removeEventListener("visibilitychange",listener);window.removeEventListener("focus",listener)}}}}onSubscribe(){this.cleanup||this.setEventListener(this.setup)}onUnsubscribe(){if(!this.hasListeners()){var _this$cleanup;null==(_this$cleanup=this.cleanup)?void 0:_this$cleanup.call(this);this.cleanup=void 0}}setEventListener(setup){var _this$cleanup2;this.setup=setup;null==(_this$cleanup2=this.cleanup)?void 0:_this$cleanup2.call(this);
this.cleanup=setup(focused=>{if("boolean"===typeof focused)this.setFocused(focused);else this.onFocus()})}setFocused(focused){this.focused!==focused&&(this.focused=focused,this.onFocus())}onFocus(){this.listeners.forEach(({listener})=>{listener()})}isFocused(){return"boolean"===typeof this.focused?this.focused:"undefined"===typeof document?!0:[void 0,"visible","prerender"].includes(document.visibilityState)}}require=new FocusManager;exports.FocusManager=FocusManager;exports.focusManager=require}
//# sourceMappingURL=module$node_modules$$tanstack$query_core$build$lib$focusManager.js.map
