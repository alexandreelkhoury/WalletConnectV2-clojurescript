["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@ethersproject/providers/lib/alchemy-provider.js"],"~:js","shadow$provide[341]=function(S,A,V,q){var F=this&&this.__extends||function(){var n=function(l,h){n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(k,t){k.__proto__=t}||function(k,t){for(var B in t)Object.prototype.hasOwnProperty.call(t,B)&&(k[B]=t[B])};return n(l,h)};return function(l,h){function k(){this.constructor=l}if(\"function\"!==typeof h&&null!==h)throw new TypeError(\"Class extends value \"+String(h)+\" is not a constructor or null\");n(l,h);l.prototype=null===h?Object.create(h):\n(k.prototype=h.prototype,new k)}}();Object.defineProperty(q,\"__esModule\",{value:!0});q.AlchemyProvider=q.AlchemyWebSocketProvider=void 0;var G=A(17),r=A(334);S=A(339);V=A(9);var y=A(333),e=new V.Logger(y.version);A=A(340);var u=function(n){function l(h,k){h=new p(h,k);k=h.connection.url.replace(/^http/i,\"ws\").replace(\".alchemyapi.\",\".ws.alchemyapi.\");k=n.call(this,k,h.network)||this;(0,G.defineReadOnly)(k,\"apiKey\",h.apiKey);return k}F(l,n);l.prototype.isCommunityResource=function(){return\"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\"===\nthis.apiKey};return l}(S.WebSocketProvider);q.AlchemyWebSocketProvider=u;var p=function(n){function l(){return null!==n&&n.apply(this,arguments)||this}F(l,n);l.getWebSocketProvider=function(h,k){return new u(h,k)};l.getApiKey=function(h){if(null==h)return\"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\";h&&\"string\"!==typeof h&&e.throwArgumentError(\"invalid apiKey\",\"apiKey\",h);return h};l.getUrl=function(h,k){var t=null;switch(h.name){case \"homestead\":t=\"eth-mainnet.alchemyapi.io/v2/\";break;case \"goerli\":t=\"eth-goerli.g.alchemy.com/v2/\";\nbreak;case \"matic\":t=\"polygon-mainnet.g.alchemy.com/v2/\";break;case \"maticmum\":t=\"polygon-mumbai.g.alchemy.com/v2/\";break;case \"arbitrum\":t=\"arb-mainnet.g.alchemy.com/v2/\";break;case \"arbitrum-goerli\":t=\"arb-goerli.g.alchemy.com/v2/\";break;case \"optimism\":t=\"opt-mainnet.g.alchemy.com/v2/\";break;case \"optimism-goerli\":t=\"opt-goerli.g.alchemy.com/v2/\";break;default:e.throwArgumentError(\"unsupported network\",\"network\",h)}return{allowGzip:!0,url:\"https://\"+t+k,throttleCallback:function(B,E){\"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\"===\nk&&(0,r.showThrottleMessage)();return Promise.resolve(!0)}}};l.prototype.isCommunityResource=function(){return\"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\"===this.apiKey};return l}(A.UrlJsonRpcProvider);q.AlchemyProvider=p}","~:source","shadow$provide[341] = function(global,require,module,exports) {\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AlchemyProvider = exports.AlchemyWebSocketProvider = void 0;\nvar properties_1 = require(\"@ethersproject/properties\");\nvar formatter_1 = require(\"./formatter\");\nvar websocket_provider_1 = require(\"./websocket-provider\");\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\nvar url_json_rpc_provider_1 = require(\"./url-json-rpc-provider\");\n// This key was provided to ethers.js by Alchemy to be used by the\n// default provider, but it is recommended that for your own\n// production environments, that you acquire your own API key at:\n//   https://dashboard.alchemyapi.io\nvar defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\";\nvar AlchemyWebSocketProvider = /** @class */ (function (_super) {\n    __extends(AlchemyWebSocketProvider, _super);\n    function AlchemyWebSocketProvider(network, apiKey) {\n        var _this = this;\n        var provider = new AlchemyProvider(network, apiKey);\n        var url = provider.connection.url.replace(/^http/i, \"ws\")\n            .replace(\".alchemyapi.\", \".ws.alchemyapi.\");\n        _this = _super.call(this, url, provider.network) || this;\n        (0, properties_1.defineReadOnly)(_this, \"apiKey\", provider.apiKey);\n        return _this;\n    }\n    AlchemyWebSocketProvider.prototype.isCommunityResource = function () {\n        return (this.apiKey === defaultApiKey);\n    };\n    return AlchemyWebSocketProvider;\n}(websocket_provider_1.WebSocketProvider));\nexports.AlchemyWebSocketProvider = AlchemyWebSocketProvider;\nvar AlchemyProvider = /** @class */ (function (_super) {\n    __extends(AlchemyProvider, _super);\n    function AlchemyProvider() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AlchemyProvider.getWebSocketProvider = function (network, apiKey) {\n        return new AlchemyWebSocketProvider(network, apiKey);\n    };\n    AlchemyProvider.getApiKey = function (apiKey) {\n        if (apiKey == null) {\n            return defaultApiKey;\n        }\n        if (apiKey && typeof (apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey;\n    };\n    AlchemyProvider.getUrl = function (network, apiKey) {\n        var host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"eth-mainnet.alchemyapi.io/v2/\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.g.alchemy.com/v2/\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum\":\n                host = \"arb-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum-goerli\":\n                host = \"arb-goerli.g.alchemy.com/v2/\";\n                break;\n            case \"optimism\":\n                host = \"opt-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"optimism-goerli\":\n                host = \"opt-goerli.g.alchemy.com/v2/\";\n                break;\n            default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + apiKey),\n            throttleCallback: function (attempt, url) {\n                if (apiKey === defaultApiKey) {\n                    (0, formatter_1.showThrottleMessage)();\n                }\n                return Promise.resolve(true);\n            }\n        };\n    };\n    AlchemyProvider.prototype.isCommunityResource = function () {\n        return (this.apiKey === defaultApiKey);\n    };\n    return AlchemyProvider;\n}(url_json_rpc_provider_1.UrlJsonRpcProvider));\nexports.AlchemyProvider = AlchemyProvider;\n//# sourceMappingURL=alchemy-provider.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$$ethersproject$providers$lib$_version","~$module$node_modules$$ethersproject$logger$lib$index","~$module$node_modules$$ethersproject$providers$lib$websocket_provider","~$module$node_modules$$ethersproject$providers$lib$url_json_rpc_provider","~$module$node_modules$$ethersproject$properties$lib$index","~$module$node_modules$$ethersproject$providers$lib$formatter"]],"~:properties",["^5",["url","AlchemyWebSocketProvider","getUrl","prototype","__esModule","allowGzip","value","getApiKey","__proto__","isCommunityResource","AlchemyProvider","getWebSocketProvider","constructor","throttleCallback"]],"~:compiled-at",1695041440919,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$ethersproject$providers$lib$alchemy_provider.js\",\n\"lineCount\":5,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@ethersproject/providers/lib/alchemy-provider.js\"],\n\"sourcesContent\":[\"shadow$provide[341] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        if (typeof b !== \\\"function\\\" && b !== null)\\n            throw new TypeError(\\\"Class extends value \\\" + String(b) + \\\" is not a constructor or null\\\");\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.AlchemyProvider = exports.AlchemyWebSocketProvider = void 0;\\nvar properties_1 = require(\\\"@ethersproject/properties\\\");\\nvar formatter_1 = require(\\\"./formatter\\\");\\nvar websocket_provider_1 = require(\\\"./websocket-provider\\\");\\nvar logger_1 = require(\\\"@ethersproject/logger\\\");\\nvar _version_1 = require(\\\"./_version\\\");\\nvar logger = new logger_1.Logger(_version_1.version);\\nvar url_json_rpc_provider_1 = require(\\\"./url-json-rpc-provider\\\");\\n// This key was provided to ethers.js by Alchemy to be used by the\\n// default provider, but it is recommended that for your own\\n// production environments, that you acquire your own API key at:\\n//   https://dashboard.alchemyapi.io\\nvar defaultApiKey = \\\"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\\\";\\nvar AlchemyWebSocketProvider = /** @class */ (function (_super) {\\n    __extends(AlchemyWebSocketProvider, _super);\\n    function AlchemyWebSocketProvider(network, apiKey) {\\n        var _this = this;\\n        var provider = new AlchemyProvider(network, apiKey);\\n        var url = provider.connection.url.replace(/^http/i, \\\"ws\\\")\\n            .replace(\\\".alchemyapi.\\\", \\\".ws.alchemyapi.\\\");\\n        _this = _super.call(this, url, provider.network) || this;\\n        (0, properties_1.defineReadOnly)(_this, \\\"apiKey\\\", provider.apiKey);\\n        return _this;\\n    }\\n    AlchemyWebSocketProvider.prototype.isCommunityResource = function () {\\n        return (this.apiKey === defaultApiKey);\\n    };\\n    return AlchemyWebSocketProvider;\\n}(websocket_provider_1.WebSocketProvider));\\nexports.AlchemyWebSocketProvider = AlchemyWebSocketProvider;\\nvar AlchemyProvider = /** @class */ (function (_super) {\\n    __extends(AlchemyProvider, _super);\\n    function AlchemyProvider() {\\n        return _super !== null && _super.apply(this, arguments) || this;\\n    }\\n    AlchemyProvider.getWebSocketProvider = function (network, apiKey) {\\n        return new AlchemyWebSocketProvider(network, apiKey);\\n    };\\n    AlchemyProvider.getApiKey = function (apiKey) {\\n        if (apiKey == null) {\\n            return defaultApiKey;\\n        }\\n        if (apiKey && typeof (apiKey) !== \\\"string\\\") {\\n            logger.throwArgumentError(\\\"invalid apiKey\\\", \\\"apiKey\\\", apiKey);\\n        }\\n        return apiKey;\\n    };\\n    AlchemyProvider.getUrl = function (network, apiKey) {\\n        var host = null;\\n        switch (network.name) {\\n            case \\\"homestead\\\":\\n                host = \\\"eth-mainnet.alchemyapi.io/v2/\\\";\\n                break;\\n            case \\\"goerli\\\":\\n                host = \\\"eth-goerli.g.alchemy.com/v2/\\\";\\n                break;\\n            case \\\"matic\\\":\\n                host = \\\"polygon-mainnet.g.alchemy.com/v2/\\\";\\n                break;\\n            case \\\"maticmum\\\":\\n                host = \\\"polygon-mumbai.g.alchemy.com/v2/\\\";\\n                break;\\n            case \\\"arbitrum\\\":\\n                host = \\\"arb-mainnet.g.alchemy.com/v2/\\\";\\n                break;\\n            case \\\"arbitrum-goerli\\\":\\n                host = \\\"arb-goerli.g.alchemy.com/v2/\\\";\\n                break;\\n            case \\\"optimism\\\":\\n                host = \\\"opt-mainnet.g.alchemy.com/v2/\\\";\\n                break;\\n            case \\\"optimism-goerli\\\":\\n                host = \\\"opt-goerli.g.alchemy.com/v2/\\\";\\n                break;\\n            default:\\n                logger.throwArgumentError(\\\"unsupported network\\\", \\\"network\\\", arguments[0]);\\n        }\\n        return {\\n            allowGzip: true,\\n            url: (\\\"https:/\\\" + \\\"/\\\" + host + apiKey),\\n            throttleCallback: function (attempt, url) {\\n                if (apiKey === defaultApiKey) {\\n                    (0, formatter_1.showThrottleMessage)();\\n                }\\n                return Promise.resolve(true);\\n            }\\n        };\\n    };\\n    AlchemyProvider.prototype.isCommunityResource = function () {\\n        return (this.apiKey === defaultApiKey);\\n    };\\n    return AlchemyProvider;\\n}(url_json_rpc_provider_1.UrlJsonRpcProvider));\\nexports.AlchemyProvider = AlchemyProvider;\\n//# sourceMappingURL=alchemy-provider.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"__extends\",\"extendStatics\",\"d\",\"b\",\"Object\",\"setPrototypeOf\",\"__proto__\",\"Array\",\"p\",\"prototype\",\"hasOwnProperty\",\"call\",\"__\",\"constructor\",\"TypeError\",\"String\",\"create\",\"defineProperty\",\"value\",\"AlchemyProvider\",\"AlchemyWebSocketProvider\",\"properties_1\",\"formatter_1\",\"websocket_provider_1\",\"logger_1\",\"_version_1\",\"logger\",\"Logger\",\"version\",\"url_json_rpc_provider_1\",\"_super\",\"network\",\"apiKey\",\"provider\",\"url\",\"connection\",\"replace\",\"_this\",\"defineReadOnly\",\"isCommunityResource\",\"AlchemyWebSocketProvider.prototype.isCommunityResource\",\"defaultApiKey\",\"WebSocketProvider\",\"apply\",\"arguments\",\"getWebSocketProvider\",\"AlchemyProvider.getWebSocketProvider\",\"getApiKey\",\"AlchemyProvider.getApiKey\",\"throwArgumentError\",\"getUrl\",\"AlchemyProvider.getUrl\",\"host\",\"name\",\"allowGzip\",\"throttleCallback\",\"attempt\",\"showThrottleMessage\",\"Promise\",\"resolve\",\"AlchemyProvider.prototype.isCommunityResource\",\"UrlJsonRpcProvider\"]\n}\n"]