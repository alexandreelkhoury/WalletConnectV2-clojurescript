{
"version":3,
"file":"module$node_modules$viem$_cjs$actions$wallet$sendTransaction.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/viem/_cjs/actions/wallet/sendTransaction.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$viem$_cjs$actions$wallet$sendTransaction\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sendTransaction = void 0;\nconst parseAccount_js_1 = require(\"../../accounts/utils/parseAccount.js\");\nconst account_js_1 = require(\"../../errors/account.js\");\nconst chain_js_1 = require(\"../../utils/chain.js\");\nconst getTransactionError_js_1 = require(\"../../utils/errors/getTransactionError.js\");\nconst extract_js_1 = require(\"../../utils/formatters/extract.js\");\nconst transactionRequest_js_1 = require(\"../../utils/formatters/transactionRequest.js\");\nconst assertRequest_js_1 = require(\"../../utils/transaction/assertRequest.js\");\nconst getChainId_js_1 = require(\"../public/getChainId.js\");\nconst prepareTransactionRequest_js_1 = require(\"./prepareTransactionRequest.js\");\nconst sendRawTransaction_js_1 = require(\"./sendRawTransaction.js\");\nasync function sendTransaction(client, args) {\n    const { account: account_ = client.account, chain = client.chain, accessList, data, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, ...rest } = args;\n    if (!account_)\n        throw new account_js_1.AccountNotFoundError({\n            docsPath: '/docs/actions/wallet/sendTransaction',\n        });\n    const account = (0, parseAccount_js_1.parseAccount)(account_);\n    try {\n        (0, assertRequest_js_1.assertRequest)(args);\n        let chainId;\n        if (chain !== null) {\n            chainId = await (0, getChainId_js_1.getChainId)(client);\n            (0, chain_js_1.assertCurrentChain)({\n                currentChainId: chainId,\n                chain,\n            });\n        }\n        if (account.type === 'local') {\n            const request = await (0, prepareTransactionRequest_js_1.prepareTransactionRequest)(client, {\n                account,\n                accessList,\n                chain,\n                data,\n                gas,\n                gasPrice,\n                maxFeePerGas,\n                maxPriorityFeePerGas,\n                nonce,\n                to,\n                value,\n                ...rest,\n            });\n            if (!chainId)\n                chainId = await (0, getChainId_js_1.getChainId)(client);\n            const serializer = chain?.serializers?.transaction;\n            const serializedTransaction = (await account.signTransaction({\n                ...request,\n                chainId,\n            }, { serializer }));\n            return await (0, sendRawTransaction_js_1.sendRawTransaction)(client, {\n                serializedTransaction,\n            });\n        }\n        const format = chain?.formatters?.transactionRequest?.format || transactionRequest_js_1.formatTransactionRequest;\n        const request = format({\n            ...(0, extract_js_1.extract)(rest, { format }),\n            accessList,\n            data,\n            from: account.address,\n            gas,\n            gasPrice,\n            maxFeePerGas,\n            maxPriorityFeePerGas,\n            nonce,\n            to,\n            value,\n        });\n        return await client.request({\n            method: 'eth_sendTransaction',\n            params: [request],\n        });\n    }\n    catch (err) {\n        throw (0, getTransactionError_js_1.getTransactionError)(err, {\n            ...args,\n            account,\n            chain: args.chain || undefined,\n        });\n    }\n}\nexports.sendTransaction = sendTransaction;\n//# sourceMappingURL=sendTransaction.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","sendTransaction","parseAccount_js_1","account_js_1","chain_js_1","getTransactionError_js_1","extract_js_1","transactionRequest_js_1","assertRequest_js_1","getChainId_js_1","prepareTransactionRequest_js_1","sendRawTransaction_js_1","client","args","account_","account","chain","accessList","data","gas","gasPrice","maxFeePerGas","maxPriorityFeePerGas","nonce","to","rest","AccountNotFoundError","docsPath","parseAccount","assertRequest","chainId","getChainId","assertCurrentChain","currentChainId","type","request","prepareTransactionRequest","serializedTransaction","signTransaction","serializer","serializers","transaction","sendRawTransaction","format","formatters","transactionRequest","formatTransactionRequest","extract","from","address","method","params","err","getTransactionError","undefined"]
}
