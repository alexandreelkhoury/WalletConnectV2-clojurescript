{
"version":3,
"file":"module$node_modules$viem$_cjs$utils$contract$extractFunctionParts.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,iEAAA,CAAsF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAK9HC,QAASA,qBAAoB,CAACC,GAAD,CAAM,CACzBC,GAAAA,CAAQD,GAAIE,CAAAA,KAAJ,CAAUC,WAAV,CAId,OAAO,CAAEC,KAHIH,GAAA,GAAQ,CAAR,CAGJG,EAHkBC,IAAAA,EAGpB,CAAQC,KAFFL,GAAAK,GAAQ,CAARA,CAEN,CAAcC,OADNN,GAAA,GAAQ,CAAR,CACMM,EADQF,IAAAA,EACtB,CALwB,CAHnCG,MAAOC,CAAAA,cAAP,CAAsBX,OAAtB,CAA+B,YAA/B,CAA6C,CAAEY,MAAO,CAAA,CAAT,CAA7C,CACAZ,QAAQa,CAAAA,mBAAR,CAA8Bb,OAAQc,CAAAA,qBAAtC,CAA8Dd,OAAQe,CAAAA,mBAAtE,CAA4Ff,OAAQC,CAAAA,oBAApG,CAA2H,IAAK,EAChI,OAAMI,YAAc,qCAQpBL,QAAQC,CAAAA,oBAAR;AAA+BA,oBAI/BD,QAAQe,CAAAA,mBAAR,CAHAA,QAA4B,CAACb,GAAD,CAAM,CAC9B,MAAOD,qBAAA,CAAqBC,GAArB,CAA0BM,CAAAA,IADH,CAalCR,QAAQc,CAAAA,qBAAR,CATAA,QAA8B,CAACZ,GAAD,CAAM,CAGhC,MAFeD,qBAAA,CAAqBC,GAArB,CAA0BO,CAAAA,MACbO,EAAAA,KAAR,CAAc,GAAd,CAAmBC,CAAAA,GAAnBC,CAAwBC,CAAD,EAAOA,CAAEC,CAAAA,IAAF,EAASJ,CAAAA,KAAT,CAAe,GAAf,CAA9BE,CACAD,EAAAA,GAAb,CAAkBI,KAAD,EAAY,EAChCf,KAAMe,KAAA,CAAM,CAAN,CAD0B,CAEhCb,KAAmB,SAAb,GAAAa,KAAA,CAAM,CAAN,CAAA,CAAyBA,KAAA,CAAM,CAAN,CAAzB,CAAoCA,KAAA,CAAM,CAAN,CAFV,CAGhC,IAAiB,SAAb,GAAAA,KAAA,CAAM,CAAN,CAAA,CAAyB,CAAEC,QAAS,CAAA,CAAX,CAAzB,CAA6C,EAAjD,CAHgC,EAA7B,CAHyB,CAapCtB,QAAQa,CAAAA,mBAAR,CAHAA,QAA4B,CAACX,GAAD,CAAM,CAC9B,MAAOD,qBAAA,CAAqBC,GAArB,CAA0BI,CAAAA,IADH,CA3B4F;",
"sources":["node_modules/viem/_cjs/utils/contract/extractFunctionParts.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$viem$_cjs$utils$contract$extractFunctionParts\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extractFunctionType = exports.extractFunctionParams = exports.extractFunctionName = exports.extractFunctionParts = void 0;\nconst paramsRegex = /((function|event)\\s)?(.*)(\\((.*)\\))/;\nfunction extractFunctionParts(def) {\n    const parts = def.match(paramsRegex);\n    const type = parts?.[2] || undefined;\n    const name = parts?.[3];\n    const params = parts?.[5] || undefined;\n    return { type, name, params };\n}\nexports.extractFunctionParts = extractFunctionParts;\nfunction extractFunctionName(def) {\n    return extractFunctionParts(def).name;\n}\nexports.extractFunctionName = extractFunctionName;\nfunction extractFunctionParams(def) {\n    const params = extractFunctionParts(def).params;\n    const splitParams = params?.split(',').map((x) => x.trim().split(' '));\n    return splitParams?.map((param) => ({\n        type: param[0],\n        name: param[1] === 'indexed' ? param[2] : param[1],\n        ...(param[1] === 'indexed' ? { indexed: true } : {}),\n    }));\n}\nexports.extractFunctionParams = extractFunctionParams;\nfunction extractFunctionType(def) {\n    return extractFunctionParts(def).type;\n}\nexports.extractFunctionType = extractFunctionType;\n//# sourceMappingURL=extractFunctionParts.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","extractFunctionParts","def","parts","match","paramsRegex","type","undefined","name","params","Object","defineProperty","value","extractFunctionType","extractFunctionParams","extractFunctionName","split","map","splitParams","x","trim","param","indexed"]
}
