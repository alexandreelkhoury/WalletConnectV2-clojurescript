["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@ethersproject/hash/lib/ens-normalize/decoder.js"],"~:js","shadow$provide[56]=function(S,A,V,q){function F(B,E){null==E&&(E=1);var H=[],D=H.forEach,C=function(I,M){D.call(I,function(P){0<M&&Array.isArray(P)?C(P,M-1):H.push(P)})};C(B,E);return H}function G(B){function E(){return B[D++]<<8|B[D++]}function H(){0==N&&(a=a<<8|B[D++],N=8);return a>>--N&1}for(var D=0,C=E(),I=1,M=[0,1],P=1;P<C;P++)M.push(I+=E());var J=E(),T=D;D+=J;var N=0,a=0,b=Math.pow(2,31);J=b>>>1;var c=J>>1,d=b-1,f=0;for(P=0;31>P;P++)f=f<<1|H();P=[];for(var g=0;;){for(var m=Math.floor(((f-g+\n1)*I-1)/b),w=0,x=C;1<x-w;){var z=w+x>>>1;m<M[z]?x=z:w=z}if(0==w)break;P.push(w);m=g+Math.floor(b*M[w]/I);for(b=g+Math.floor(b*M[w+1]/I)-1;0==((m^b)&J);)f=f<<1&d|H(),m=m<<1&d,b=b<<1&d|1;for(;m&~b&c;)f=f&J|f<<1&d>>>1|H(),m=m<<1^J,b=(b^J)<<1|J|1;g=m;b=1+b-m}var v=C-4;return P.map(function(R){switch(R-v){case 3:return v+65792+(B[T++]<<16|B[T++]<<8|B[T++]);case 2:return v+256+(B[T++]<<8|B[T++]);case 1:return v+B[T++];default:return R-1}})}function r(B){var E=0;return function(){return B[E++]}}function y(B){return B&\n1?~B>>1:B>>1}function e(B,E){for(var H=Array(B),D=0;D<B;D++)H[D]=1+E();return H}function u(B,E){for(var H=Array(B),D=0,C=-1;D<B;D++)H[D]=C+=1+E();return H}function p(B,E){for(var H=Array(B),D=0,C=0;D<B;D++)H[D]=C+=y(E());return H}function n(B,E){var H=u(B(),B),D=B(),C=u(D,B);B=e(D,B);for(var I=0;I<D;I++)for(var M=0;M<B[I];M++)H.push(C[I]+M);return E?H.map(function(P){return E[P]}):H}function l(B){for(var E=[];;){var H=B();if(0==H)break;E.push(H)}return E}function h(B,E,H){for(var D=Array(B).fill(void 0).map(function(){return[]}),\nC=0;C<E;C++)p(B,H).forEach(function(I,M){return D[M].push(I)});return D}function k(B,E){var H=1+E(),D=E(),C=l(E);B=h(C.length,1+B,E);return F(B.map(function(I,M){var P=I[0],J=I.slice(1);return Array(C[M]).fill(void 0).map(function(T,N){var a=N*D;return[P+N*H,J.map(function(b){return b+a})]})}))}function t(B,E){var H=1+E();return h(H,1+B,E).map(function(D){return[D[0],D.slice(1)]})}Object.defineProperty(q,\"__esModule\",{value:!0});q.read_emoji_trie=q.read_zero_terminated_array=q.read_mapped_map=q.read_member_array=\nq.signed=q.read_compressed_payload=q.read_payload=q.decode_arithmetic=void 0;q.decode_arithmetic=G;q.read_payload=r;q.read_compressed_payload=function(B){return r(G(B))};q.signed=y;q.read_member_array=n;q.read_mapped_map=function(B){for(var E=[];;){var H=B();if(0==H)break;E.push(k(H,B))}for(;;){H=B()-1;if(0>H)break;E.push(t(H,B))}B=F(E);E={};for(H=0;H<B.length;H++){var D=B[H];E[D[0]]=D[1]}return E};q.read_zero_terminated_array=l;q.read_emoji_trie=function(B){function E(){for(var D=[];;){var C=n(B,\nH);if(0==C.length)break;D.push({set:new Set(C),node:E()})}D.sort(function(P,J){return J.set.size-P.set.size});C=B();var I=C%3;C=C/3|0;var M=!!(C&1);C>>=1;return{branches:D,valid:I,fe0f:M,save:1==C,check:2==C}}var H=n(B).sort(function(D,C){return D-C});return E()}}","~:source","shadow$provide[56] = function(global,require,module,exports) {\n\"use strict\";\n/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.read_emoji_trie = exports.read_zero_terminated_array = exports.read_mapped_map = exports.read_member_array = exports.signed = exports.read_compressed_payload = exports.read_payload = exports.decode_arithmetic = void 0;\n// https://github.com/behnammodi/polyfill/blob/master/array.polyfill.js\nfunction flat(array, depth) {\n    if (depth == null) {\n        depth = 1;\n    }\n    var result = [];\n    var forEach = result.forEach;\n    var flatDeep = function (arr, depth) {\n        forEach.call(arr, function (val) {\n            if (depth > 0 && Array.isArray(val)) {\n                flatDeep(val, depth - 1);\n            }\n            else {\n                result.push(val);\n            }\n        });\n    };\n    flatDeep(array, depth);\n    return result;\n}\nfunction fromEntries(array) {\n    var result = {};\n    for (var i = 0; i < array.length; i++) {\n        var value = array[i];\n        result[value[0]] = value[1];\n    }\n    return result;\n}\nfunction decode_arithmetic(bytes) {\n    var pos = 0;\n    function u16() { return (bytes[pos++] << 8) | bytes[pos++]; }\n    // decode the frequency table\n    var symbol_count = u16();\n    var total = 1;\n    var acc = [0, 1]; // first symbol has frequency 1\n    for (var i = 1; i < symbol_count; i++) {\n        acc.push(total += u16());\n    }\n    // skip the sized-payload that the last 3 symbols index into\n    var skip = u16();\n    var pos_payload = pos;\n    pos += skip;\n    var read_width = 0;\n    var read_buffer = 0;\n    function read_bit() {\n        if (read_width == 0) {\n            // this will read beyond end of buffer\n            // but (undefined|0) => zero pad\n            read_buffer = (read_buffer << 8) | bytes[pos++];\n            read_width = 8;\n        }\n        return (read_buffer >> --read_width) & 1;\n    }\n    var N = 31;\n    var FULL = Math.pow(2, N);\n    var HALF = FULL >>> 1;\n    var QRTR = HALF >> 1;\n    var MASK = FULL - 1;\n    // fill register\n    var register = 0;\n    for (var i = 0; i < N; i++)\n        register = (register << 1) | read_bit();\n    var symbols = [];\n    var low = 0;\n    var range = FULL; // treat like a float\n    while (true) {\n        var value = Math.floor((((register - low + 1) * total) - 1) / range);\n        var start = 0;\n        var end = symbol_count;\n        while (end - start > 1) { // binary search\n            var mid = (start + end) >>> 1;\n            if (value < acc[mid]) {\n                end = mid;\n            }\n            else {\n                start = mid;\n            }\n        }\n        if (start == 0)\n            break; // first symbol is end mark\n        symbols.push(start);\n        var a = low + Math.floor(range * acc[start] / total);\n        var b = low + Math.floor(range * acc[start + 1] / total) - 1;\n        while (((a ^ b) & HALF) == 0) {\n            register = (register << 1) & MASK | read_bit();\n            a = (a << 1) & MASK;\n            b = (b << 1) & MASK | 1;\n        }\n        while (a & ~b & QRTR) {\n            register = (register & HALF) | ((register << 1) & (MASK >>> 1)) | read_bit();\n            a = (a << 1) ^ HALF;\n            b = ((b ^ HALF) << 1) | HALF | 1;\n        }\n        low = a;\n        range = 1 + b - a;\n    }\n    var offset = symbol_count - 4;\n    return symbols.map(function (x) {\n        switch (x - offset) {\n            case 3: return offset + 0x10100 + ((bytes[pos_payload++] << 16) | (bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n            case 2: return offset + 0x100 + ((bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n            case 1: return offset + bytes[pos_payload++];\n            default: return x - 1;\n        }\n    });\n}\nexports.decode_arithmetic = decode_arithmetic;\n// returns an iterator which returns the next symbol\nfunction read_payload(v) {\n    var pos = 0;\n    return function () { return v[pos++]; };\n}\nexports.read_payload = read_payload;\nfunction read_compressed_payload(bytes) {\n    return read_payload(decode_arithmetic(bytes));\n}\nexports.read_compressed_payload = read_compressed_payload;\n// eg. [0,1,2,3...] => [0,-1,1,-2,...]\nfunction signed(i) {\n    return (i & 1) ? (~i >> 1) : (i >> 1);\n}\nexports.signed = signed;\nfunction read_counts(n, next) {\n    var v = Array(n);\n    for (var i = 0; i < n; i++)\n        v[i] = 1 + next();\n    return v;\n}\nfunction read_ascending(n, next) {\n    var v = Array(n);\n    for (var i = 0, x = -1; i < n; i++)\n        v[i] = x += 1 + next();\n    return v;\n}\nfunction read_deltas(n, next) {\n    var v = Array(n);\n    for (var i = 0, x = 0; i < n; i++)\n        v[i] = x += signed(next());\n    return v;\n}\nfunction read_member_array(next, lookup) {\n    var v = read_ascending(next(), next);\n    var n = next();\n    var vX = read_ascending(n, next);\n    var vN = read_counts(n, next);\n    for (var i = 0; i < n; i++) {\n        for (var j = 0; j < vN[i]; j++) {\n            v.push(vX[i] + j);\n        }\n    }\n    return lookup ? v.map(function (x) { return lookup[x]; }) : v;\n}\nexports.read_member_array = read_member_array;\n// returns array of \n// [x, ys] => single replacement rule\n// [x, ys, n, dx, dx] => linear map\nfunction read_mapped_map(next) {\n    var ret = [];\n    while (true) {\n        var w = next();\n        if (w == 0)\n            break;\n        ret.push(read_linear_table(w, next));\n    }\n    while (true) {\n        var w = next() - 1;\n        if (w < 0)\n            break;\n        ret.push(read_replacement_table(w, next));\n    }\n    return fromEntries(flat(ret));\n}\nexports.read_mapped_map = read_mapped_map;\nfunction read_zero_terminated_array(next) {\n    var v = [];\n    while (true) {\n        var i = next();\n        if (i == 0)\n            break;\n        v.push(i);\n    }\n    return v;\n}\nexports.read_zero_terminated_array = read_zero_terminated_array;\nfunction read_transposed(n, w, next) {\n    var m = Array(n).fill(undefined).map(function () { return []; });\n    for (var i = 0; i < w; i++) {\n        read_deltas(n, next).forEach(function (x, j) { return m[j].push(x); });\n    }\n    return m;\n}\nfunction read_linear_table(w, next) {\n    var dx = 1 + next();\n    var dy = next();\n    var vN = read_zero_terminated_array(next);\n    var m = read_transposed(vN.length, 1 + w, next);\n    return flat(m.map(function (v, i) {\n        var x = v[0], ys = v.slice(1);\n        //let [x, ...ys] = v;\n        //return Array(vN[i]).fill().map((_, j) => {\n        return Array(vN[i]).fill(undefined).map(function (_, j) {\n            var j_dy = j * dy;\n            return [x + j * dx, ys.map(function (y) { return y + j_dy; })];\n        });\n    }));\n}\nfunction read_replacement_table(w, next) {\n    var n = 1 + next();\n    var m = read_transposed(n, 1 + w, next);\n    return m.map(function (v) { return [v[0], v.slice(1)]; });\n}\nfunction read_emoji_trie(next) {\n    var sorted = read_member_array(next).sort(function (a, b) { return a - b; });\n    return read();\n    function read() {\n        var branches = [];\n        while (true) {\n            var keys = read_member_array(next, sorted);\n            if (keys.length == 0)\n                break;\n            branches.push({ set: new Set(keys), node: read() });\n        }\n        branches.sort(function (a, b) { return b.set.size - a.set.size; }); // sort by likelihood\n        var temp = next();\n        var valid = temp % 3;\n        temp = (temp / 3) | 0;\n        var fe0f = !!(temp & 1);\n        temp >>= 1;\n        var save = temp == 1;\n        var check = temp == 2;\n        return { branches: branches, valid: valid, fe0f: fe0f, save: save, check: check };\n    }\n}\nexports.read_emoji_trie = read_emoji_trie;\n//# sourceMappingURL=decoder.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["branches","save","read_mapped_map","read_member_array","fe0f","decode_arithmetic","signed","__esModule","read_compressed_payload","read_zero_terminated_array","value","check","valid","read_payload","read_emoji_trie","set","node"]],"~:compiled-at",1695041440707,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$ethersproject$hash$lib$ens_normalize$decoder.js\",\n\"lineCount\":6,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@ethersproject/hash/lib/ens-normalize/decoder.js\"],\n\"sourcesContent\":[\"shadow$provide[56] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n/**\\n * MIT License\\n *\\n * Copyright (c) 2021 Andrew Raffensperger\\n *\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\n * in the Software without restriction, including without limitation the rights\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n * copies of the Software, and to permit persons to whom the Software is\\n * furnished to do so, subject to the following conditions:\\n *\\n * The above copyright notice and this permission notice shall be included in all\\n * copies or substantial portions of the Software.\\n *\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n * SOFTWARE.\\n *\\n * This is a near carbon-copy of the original source (link below) with the\\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\\n *\\n * See: https://github.com/adraffy/ens-normalize.js\\n */\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.read_emoji_trie = exports.read_zero_terminated_array = exports.read_mapped_map = exports.read_member_array = exports.signed = exports.read_compressed_payload = exports.read_payload = exports.decode_arithmetic = void 0;\\n// https://github.com/behnammodi/polyfill/blob/master/array.polyfill.js\\nfunction flat(array, depth) {\\n    if (depth == null) {\\n        depth = 1;\\n    }\\n    var result = [];\\n    var forEach = result.forEach;\\n    var flatDeep = function (arr, depth) {\\n        forEach.call(arr, function (val) {\\n            if (depth > 0 && Array.isArray(val)) {\\n                flatDeep(val, depth - 1);\\n            }\\n            else {\\n                result.push(val);\\n            }\\n        });\\n    };\\n    flatDeep(array, depth);\\n    return result;\\n}\\nfunction fromEntries(array) {\\n    var result = {};\\n    for (var i = 0; i < array.length; i++) {\\n        var value = array[i];\\n        result[value[0]] = value[1];\\n    }\\n    return result;\\n}\\nfunction decode_arithmetic(bytes) {\\n    var pos = 0;\\n    function u16() { return (bytes[pos++] << 8) | bytes[pos++]; }\\n    // decode the frequency table\\n    var symbol_count = u16();\\n    var total = 1;\\n    var acc = [0, 1]; // first symbol has frequency 1\\n    for (var i = 1; i < symbol_count; i++) {\\n        acc.push(total += u16());\\n    }\\n    // skip the sized-payload that the last 3 symbols index into\\n    var skip = u16();\\n    var pos_payload = pos;\\n    pos += skip;\\n    var read_width = 0;\\n    var read_buffer = 0;\\n    function read_bit() {\\n        if (read_width == 0) {\\n            // this will read beyond end of buffer\\n            // but (undefined|0) => zero pad\\n            read_buffer = (read_buffer << 8) | bytes[pos++];\\n            read_width = 8;\\n        }\\n        return (read_buffer >> --read_width) & 1;\\n    }\\n    var N = 31;\\n    var FULL = Math.pow(2, N);\\n    var HALF = FULL >>> 1;\\n    var QRTR = HALF >> 1;\\n    var MASK = FULL - 1;\\n    // fill register\\n    var register = 0;\\n    for (var i = 0; i < N; i++)\\n        register = (register << 1) | read_bit();\\n    var symbols = [];\\n    var low = 0;\\n    var range = FULL; // treat like a float\\n    while (true) {\\n        var value = Math.floor((((register - low + 1) * total) - 1) / range);\\n        var start = 0;\\n        var end = symbol_count;\\n        while (end - start > 1) { // binary search\\n            var mid = (start + end) >>> 1;\\n            if (value < acc[mid]) {\\n                end = mid;\\n            }\\n            else {\\n                start = mid;\\n            }\\n        }\\n        if (start == 0)\\n            break; // first symbol is end mark\\n        symbols.push(start);\\n        var a = low + Math.floor(range * acc[start] / total);\\n        var b = low + Math.floor(range * acc[start + 1] / total) - 1;\\n        while (((a ^ b) & HALF) == 0) {\\n            register = (register << 1) & MASK | read_bit();\\n            a = (a << 1) & MASK;\\n            b = (b << 1) & MASK | 1;\\n        }\\n        while (a & ~b & QRTR) {\\n            register = (register & HALF) | ((register << 1) & (MASK >>> 1)) | read_bit();\\n            a = (a << 1) ^ HALF;\\n            b = ((b ^ HALF) << 1) | HALF | 1;\\n        }\\n        low = a;\\n        range = 1 + b - a;\\n    }\\n    var offset = symbol_count - 4;\\n    return symbols.map(function (x) {\\n        switch (x - offset) {\\n            case 3: return offset + 0x10100 + ((bytes[pos_payload++] << 16) | (bytes[pos_payload++] << 8) | bytes[pos_payload++]);\\n            case 2: return offset + 0x100 + ((bytes[pos_payload++] << 8) | bytes[pos_payload++]);\\n            case 1: return offset + bytes[pos_payload++];\\n            default: return x - 1;\\n        }\\n    });\\n}\\nexports.decode_arithmetic = decode_arithmetic;\\n// returns an iterator which returns the next symbol\\nfunction read_payload(v) {\\n    var pos = 0;\\n    return function () { return v[pos++]; };\\n}\\nexports.read_payload = read_payload;\\nfunction read_compressed_payload(bytes) {\\n    return read_payload(decode_arithmetic(bytes));\\n}\\nexports.read_compressed_payload = read_compressed_payload;\\n// eg. [0,1,2,3...] => [0,-1,1,-2,...]\\nfunction signed(i) {\\n    return (i & 1) ? (~i >> 1) : (i >> 1);\\n}\\nexports.signed = signed;\\nfunction read_counts(n, next) {\\n    var v = Array(n);\\n    for (var i = 0; i < n; i++)\\n        v[i] = 1 + next();\\n    return v;\\n}\\nfunction read_ascending(n, next) {\\n    var v = Array(n);\\n    for (var i = 0, x = -1; i < n; i++)\\n        v[i] = x += 1 + next();\\n    return v;\\n}\\nfunction read_deltas(n, next) {\\n    var v = Array(n);\\n    for (var i = 0, x = 0; i < n; i++)\\n        v[i] = x += signed(next());\\n    return v;\\n}\\nfunction read_member_array(next, lookup) {\\n    var v = read_ascending(next(), next);\\n    var n = next();\\n    var vX = read_ascending(n, next);\\n    var vN = read_counts(n, next);\\n    for (var i = 0; i < n; i++) {\\n        for (var j = 0; j < vN[i]; j++) {\\n            v.push(vX[i] + j);\\n        }\\n    }\\n    return lookup ? v.map(function (x) { return lookup[x]; }) : v;\\n}\\nexports.read_member_array = read_member_array;\\n// returns array of \\n// [x, ys] => single replacement rule\\n// [x, ys, n, dx, dx] => linear map\\nfunction read_mapped_map(next) {\\n    var ret = [];\\n    while (true) {\\n        var w = next();\\n        if (w == 0)\\n            break;\\n        ret.push(read_linear_table(w, next));\\n    }\\n    while (true) {\\n        var w = next() - 1;\\n        if (w < 0)\\n            break;\\n        ret.push(read_replacement_table(w, next));\\n    }\\n    return fromEntries(flat(ret));\\n}\\nexports.read_mapped_map = read_mapped_map;\\nfunction read_zero_terminated_array(next) {\\n    var v = [];\\n    while (true) {\\n        var i = next();\\n        if (i == 0)\\n            break;\\n        v.push(i);\\n    }\\n    return v;\\n}\\nexports.read_zero_terminated_array = read_zero_terminated_array;\\nfunction read_transposed(n, w, next) {\\n    var m = Array(n).fill(undefined).map(function () { return []; });\\n    for (var i = 0; i < w; i++) {\\n        read_deltas(n, next).forEach(function (x, j) { return m[j].push(x); });\\n    }\\n    return m;\\n}\\nfunction read_linear_table(w, next) {\\n    var dx = 1 + next();\\n    var dy = next();\\n    var vN = read_zero_terminated_array(next);\\n    var m = read_transposed(vN.length, 1 + w, next);\\n    return flat(m.map(function (v, i) {\\n        var x = v[0], ys = v.slice(1);\\n        //let [x, ...ys] = v;\\n        //return Array(vN[i]).fill().map((_, j) => {\\n        return Array(vN[i]).fill(undefined).map(function (_, j) {\\n            var j_dy = j * dy;\\n            return [x + j * dx, ys.map(function (y) { return y + j_dy; })];\\n        });\\n    }));\\n}\\nfunction read_replacement_table(w, next) {\\n    var n = 1 + next();\\n    var m = read_transposed(n, 1 + w, next);\\n    return m.map(function (v) { return [v[0], v.slice(1)]; });\\n}\\nfunction read_emoji_trie(next) {\\n    var sorted = read_member_array(next).sort(function (a, b) { return a - b; });\\n    return read();\\n    function read() {\\n        var branches = [];\\n        while (true) {\\n            var keys = read_member_array(next, sorted);\\n            if (keys.length == 0)\\n                break;\\n            branches.push({ set: new Set(keys), node: read() });\\n        }\\n        branches.sort(function (a, b) { return b.set.size - a.set.size; }); // sort by likelihood\\n        var temp = next();\\n        var valid = temp % 3;\\n        temp = (temp / 3) | 0;\\n        var fe0f = !!(temp & 1);\\n        temp >>= 1;\\n        var save = temp == 1;\\n        var check = temp == 2;\\n        return { branches: branches, valid: valid, fe0f: fe0f, save: save, check: check };\\n    }\\n}\\nexports.read_emoji_trie = read_emoji_trie;\\n//# sourceMappingURL=decoder.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"flat\",\"array\",\"depth\",\"result\",\"forEach\",\"flatDeep\",\"arr\",\"call\",\"val\",\"Array\",\"isArray\",\"push\",\"decode_arithmetic\",\"bytes\",\"u16\",\"pos\",\"read_bit\",\"read_width\",\"read_buffer\",\"symbol_count\",\"total\",\"acc\",\"i\",\"skip\",\"pos_payload\",\"FULL\",\"Math\",\"pow\",\"N\",\"HALF\",\"QRTR\",\"MASK\",\"register\",\"symbols\",\"low\",\"value\",\"floor\",\"range\",\"start\",\"end\",\"mid\",\"a\",\"b\",\"offset\",\"map\",\"x\",\"read_payload\",\"v\",\"signed\",\"read_counts\",\"n\",\"next\",\"read_ascending\",\"read_deltas\",\"read_member_array\",\"lookup\",\"vX\",\"vN\",\"j\",\"read_zero_terminated_array\",\"read_transposed\",\"w\",\"m\",\"fill\",\"undefined\",\"read_linear_table\",\"dx\",\"dy\",\"length\",\"ys\",\"slice\",\"_\",\"j_dy\",\"y\",\"read_replacement_table\",\"Object\",\"defineProperty\",\"read_emoji_trie\",\"read_mapped_map\",\"read_compressed_payload\",\"ret\",\"read\",\"branches\",\"keys\",\"sorted\",\"set\",\"Set\",\"node\",\"sort\",\"size\",\"temp\",\"valid\",\"fe0f\",\"save\",\"check\"]\n}\n"]