{
"version":3,
"file":"module$node_modules$$ethersproject$json_wallets$lib$inspect.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,2DAAA,CAAgF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAKxHC,QAASA,kBAAiB,CAACC,IAAD,CAAO,CAC7B,IAAIC,KAAO,IACX,IAAI,CACAA,IAAA,CAAOC,IAAKC,CAAAA,KAAL,CAAWH,IAAX,CADP,CAGJ,MAAOI,KAAP,CAAc,CACV,MAAO,CAAA,CADG,CAGd,MAAQH,KAAKI,CAAAA,OAAb,EAAwBJ,IAAKK,CAAAA,OARA,CAWjCC,QAASA,iBAAgB,CAACP,IAAD,CAAO,CAC5B,IAAIC,KAAO,IACX,IAAI,CACAA,IAAA,CAAOC,IAAKC,CAAAA,KAAL,CAAWH,IAAX,CADP,CAGJ,MAAOI,KAAP,CAAc,CACV,MAAO,CAAA,CADG,CAGd,MAAKH,KAAKO,CAAAA,OAAV,EAAqBC,QAAA,CAASR,IAAKO,CAAAA,OAAd,CAArB,GAAgDP,IAAKO,CAAAA,OAArD,EAA2F,CAA3F,GAAgEC,QAAA,CAASR,IAAKO,CAAAA,OAAd,CAAhE,CAIO,CAAA,CAJP,CACW,CAAA,CATiB,CAdhCE,MAAOC,CAAAA,cAAP,CAAsBb,OAAtB,CAA+B,YAA/B,CAA6C,CAAEc,MAAO,CAAA,CAAT,CAA7C,CACAd,QAAQe,CAAAA,oBAAR;AAA+Bf,OAAQS,CAAAA,gBAAvC,CAA0DT,OAAQC,CAAAA,iBAAlE,CAAsF,IAAK,EAC3F,KAAIe,UAAYlB,OAAA,CAAQ,sDAAR,CAWhBE,QAAQC,CAAAA,iBAAR,CAA4BA,iBAe5BD,QAAQS,CAAAA,gBAAR,CAA2BA,gBAuB3BT,QAAQe,CAAAA,oBAAR,CAnBAA,QAA6B,CAACb,IAAD,CAAO,CAChC,GAAID,iBAAA,CAAkBC,IAAlB,CAAJ,CACI,GAAI,CACA,MAAO,GAAIc,SAAUC,CAAAA,UAAd,EAA0Bb,IAAKC,CAAAA,KAAL,CAAWH,IAAX,CAAiBM,CAAAA,OAA3C,CADP,CAGJ,MAAOF,KAAP,CAAc,CACV,MAAO,KADG,CAIlB,GAAIG,gBAAA,CAAiBP,IAAjB,CAAJ,CACI,GAAI,CACA,MAAO,GAAIc,SAAUC,CAAAA,UAAd,EAA0Bb,IAAKC,CAAAA,KAAL,CAAWH,IAAX,CAAiBgB,CAAAA,OAA3C,CADP,CAGJ,MAAOZ,KAAP,CAAc,EAIlB,MAAO,KAjByB,CAlCoF;",
"sources":["node_modules/@ethersproject/json-wallets/lib/inspect.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$ethersproject$json_wallets$lib$inspect\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getJsonWalletAddress = exports.isKeystoreWallet = exports.isCrowdsaleWallet = void 0;\nvar address_1 = require(\"@ethersproject/address\");\nfunction isCrowdsaleWallet(json) {\n    var data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    return (data.encseed && data.ethaddr);\n}\nexports.isCrowdsaleWallet = isCrowdsaleWallet;\nfunction isKeystoreWallet(json) {\n    var data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n        return false;\n    }\n    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n    return true;\n}\nexports.isKeystoreWallet = isKeystoreWallet;\n//export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\nfunction getJsonWalletAddress(json) {\n    if (isCrowdsaleWallet(json)) {\n        try {\n            return (0, address_1.getAddress)(JSON.parse(json).ethaddr);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    if (isKeystoreWallet(json)) {\n        try {\n            return (0, address_1.getAddress)(JSON.parse(json).address);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    return null;\n}\nexports.getJsonWalletAddress = getJsonWalletAddress;\n//# sourceMappingURL=inspect.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","isCrowdsaleWallet","json","data","JSON","parse","error","encseed","ethaddr","isKeystoreWallet","version","parseInt","Object","defineProperty","value","getJsonWalletAddress","address_1","getAddress","address"]
}
