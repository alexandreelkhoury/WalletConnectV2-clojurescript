shadow$provide.module$node_modules$viem$_cjs$errors$node=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.UnknownNodeError=exports.TipAboveFeeCapError=exports.TransactionTypeNotSupportedError=exports.IntrinsicGasTooLowError=exports.IntrinsicGasTooHighError=exports.InsufficientFundsError=exports.NonceMaxValueError=exports.NonceTooLowError=exports.NonceTooHighError=exports.FeeCapTooLowError=exports.FeeCapTooHighError=exports.ExecutionRevertedError=
void 0;const formatGwei_js_1=require("module$node_modules$viem$_cjs$utils$unit$formatGwei");global=require("module$node_modules$viem$_cjs$errors$base");class ExecutionRevertedError extends global.BaseError{constructor({cause,message}={}){message=message?.replace("execution reverted: ","")?.replace("execution reverted","");super(`Execution reverted ${message?`with reason: ${message}`:"for an unknown reason"}.`,{cause});Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"ExecutionRevertedError"})}}
exports.ExecutionRevertedError=ExecutionRevertedError;Object.defineProperty(ExecutionRevertedError,"code",{enumerable:!0,configurable:!0,writable:!0,value:3});Object.defineProperty(ExecutionRevertedError,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/execution reverted/});class FeeCapTooHighError extends global.BaseError{constructor({cause,maxFeePerGas}={}){super(`The fee cap (\`maxFeePerGas\`${maxFeePerGas?` = ${(0,formatGwei_js_1.formatGwei)(maxFeePerGas)} gwei`:""}) cannot be higher than the maximum allowed value (2^256-1).`,
{cause});Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"FeeCapTooHigh"})}}exports.FeeCapTooHighError=FeeCapTooHighError;Object.defineProperty(FeeCapTooHighError,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/max fee per gas higher than 2\^256-1|fee cap higher than 2\^256-1/});class FeeCapTooLowError extends global.BaseError{constructor({cause,maxFeePerGas}={}){super(`The fee cap (\`maxFeePerGas\`${maxFeePerGas?` = ${(0,formatGwei_js_1.formatGwei)(maxFeePerGas)}`:
""} gwei) cannot be lower than the block base fee.`,{cause});Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"FeeCapTooLow"})}}exports.FeeCapTooLowError=FeeCapTooLowError;Object.defineProperty(FeeCapTooLowError,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/});class NonceTooHighError extends global.BaseError{constructor({cause,nonce}={}){super(`Nonce provided for the transaction ${nonce?
`(${nonce}) `:""}is higher than the next one expected.`,{cause});Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"NonceTooHighError"})}}exports.NonceTooHighError=NonceTooHighError;Object.defineProperty(NonceTooHighError,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/nonce too high/});class NonceTooLowError extends global.BaseError{constructor({cause,nonce}={}){super([`Nonce provided for the transaction ${nonce?`(${nonce}) `:""}is lower than the current nonce of the account.`,
"Try increasing the nonce or find the latest nonce with `getTransactionCount`."].join("\n"),{cause});Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"NonceTooLowError"})}}exports.NonceTooLowError=NonceTooLowError;Object.defineProperty(NonceTooLowError,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/nonce too low|transaction already imported|already known/});class NonceMaxValueError extends global.BaseError{constructor({cause,nonce}={}){super(`Nonce provided for the transaction ${nonce?
`(${nonce}) `:""}exceeds the maximum allowed nonce.`,{cause});Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"NonceMaxValueError"})}}exports.NonceMaxValueError=NonceMaxValueError;Object.defineProperty(NonceMaxValueError,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/nonce has max value/});class InsufficientFundsError extends global.BaseError{constructor({cause}={}){super("The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.",
{cause,metaMessages:"This error could arise when the account does not have enough funds to:; - pay for the total gas fee,; - pay for the value to send.; ;The cost of the transaction is calculated as `gas * gas fee + value`, where:; - `gas` is the amount of gas needed for transaction to execute,; - `gas fee` is the gas fee,; - `value` is the amount of ether to send to the recipient.".split(";")});Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"InsufficientFundsError"})}}
exports.InsufficientFundsError=InsufficientFundsError;Object.defineProperty(InsufficientFundsError,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/insufficient funds/});class IntrinsicGasTooHighError extends global.BaseError{constructor({cause,gas}={}){super(`The amount of gas ${gas?`(${gas}) `:""}provided for the transaction exceeds the limit allowed for the block.`,{cause});Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"IntrinsicGasTooHighError"})}}
exports.IntrinsicGasTooHighError=IntrinsicGasTooHighError;Object.defineProperty(IntrinsicGasTooHighError,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/intrinsic gas too high|gas limit reached/});class IntrinsicGasTooLowError extends global.BaseError{constructor({cause,gas}={}){super(`The amount of gas ${gas?`(${gas}) `:""}provided for the transaction is too low.`,{cause});Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"IntrinsicGasTooLowError"})}}
exports.IntrinsicGasTooLowError=IntrinsicGasTooLowError;Object.defineProperty(IntrinsicGasTooLowError,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/intrinsic gas too low/});class TransactionTypeNotSupportedError extends global.BaseError{constructor({cause}){super("The transaction type is not supported for this chain.",{cause});Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"TransactionTypeNotSupportedError"})}}exports.TransactionTypeNotSupportedError=
TransactionTypeNotSupportedError;Object.defineProperty(TransactionTypeNotSupportedError,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/transaction type not valid/});class TipAboveFeeCapError extends global.BaseError{constructor({cause,maxPriorityFeePerGas,maxFeePerGas}={}){super([`The provided tip (\`maxPriorityFeePerGas\`${maxPriorityFeePerGas?` = ${(0,formatGwei_js_1.formatGwei)(maxPriorityFeePerGas)} gwei`:""}) cannot be higher than the fee cap (\`maxFeePerGas\`${maxFeePerGas?
` = ${(0,formatGwei_js_1.formatGwei)(maxFeePerGas)} gwei`:""}).`].join("\n"),{cause});Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"TipAboveFeeCapError"})}}exports.TipAboveFeeCapError=TipAboveFeeCapError;Object.defineProperty(TipAboveFeeCapError,"nodeMessage",{enumerable:!0,configurable:!0,writable:!0,value:/max priority fee per gas higher than max fee per gas|tip higher than fee cap/});class UnknownNodeError extends global.BaseError{constructor({cause}){super(`An error occurred while executing: ${cause?.shortMessage}`,
{cause});Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"UnknownNodeError"})}}exports.UnknownNodeError=UnknownNodeError}
//# sourceMappingURL=module$node_modules$viem$_cjs$errors$node.js.map
