["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/viem/_cjs/actions/public/getBlockTransactionCount.js"],"~:js","shadow$provide.module$node_modules$viem$_cjs$actions$public$getBlockTransactionCount=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.getBlockTransactionCount=void 0;const fromHex_js_1=require(\"module$node_modules$viem$_cjs$utils$encoding$fromHex\"),toHex_js_1=require(\"module$node_modules$viem$_cjs$utils$encoding$toHex\");exports.getBlockTransactionCount=async function(client,{blockHash,blockNumber,blockTag=\"latest\"}={}){blockNumber=void 0!==blockNumber?\n(0,toHex_js_1.numberToHex)(blockNumber):void 0;client=blockHash?await client.request({method:\"eth_getBlockTransactionCountByHash\",params:[blockHash]}):await client.request({method:\"eth_getBlockTransactionCountByNumber\",params:[blockNumber||blockTag]});return(0,fromHex_js_1.hexToNumber)(client)}}","~:source","shadow$provide[\"module$node_modules$viem$_cjs$actions$public$getBlockTransactionCount\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getBlockTransactionCount = void 0;\nconst fromHex_js_1 = require(\"../../utils/encoding/fromHex.js\");\nconst toHex_js_1 = require(\"../../utils/encoding/toHex.js\");\nasync function getBlockTransactionCount(client, { blockHash, blockNumber, blockTag = 'latest', } = {}) {\n    const blockNumberHex = blockNumber !== undefined ? (0, toHex_js_1.numberToHex)(blockNumber) : undefined;\n    let count;\n    if (blockHash) {\n        count = await client.request({\n            method: 'eth_getBlockTransactionCountByHash',\n            params: [blockHash],\n        });\n    }\n    else {\n        count = await client.request({\n            method: 'eth_getBlockTransactionCountByNumber',\n            params: [blockNumberHex || blockTag],\n        });\n    }\n    return (0, fromHex_js_1.hexToNumber)(count);\n}\nexports.getBlockTransactionCount = getBlockTransactionCount;\n//# sourceMappingURL=getBlockTransactionCount.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$viem$_cjs$utils$encoding$fromHex","~$module$node_modules$viem$_cjs$utils$encoding$toHex"]],"~:properties",["^5",["params","method","__esModule","getBlockTransactionCount","value"]],"~:compiled-at",1695111490297,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$viem$_cjs$actions$public$getBlockTransactionCount.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,qEAAA,CAA0F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAElIC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAQI,CAAAA,wBAAR,CAAmC,IAAK,EACxC,OAAMC,aAAeP,OAAA,CAAQ,sDAAR,CAArB,CACMQ,WAAaR,OAAA,CAAQ,oDAAR,CAkBnBE,QAAQI,CAAAA,wBAAR,CAjBAA,cAAuC,CAACG,MAAD,CAAS,CAAEC,SAAF,CAAaC,WAAb,CAA0BC,QAAA,CAAW,QAArC,CAAA,CAAmD,EAA5D,CAAgE,CAC7FC,WAAAA,CAAiCC,IAAAA,EAAhB,GAAAH,WAAA;AAA4B,GAAIH,UAAWO,CAAAA,WAAf,EAA4BJ,WAA5B,CAA5B,CAAuEG,IAAAA,EAG1FE,OAAA,CADAN,SAAJ,CACY,MAAMD,MAAOQ,CAAAA,OAAP,CAAe,CACzBC,OAAQ,oCADiB,CAEzBC,OAAQ,CAACT,SAAD,CAFiB,CAAf,CADlB,CAOY,MAAMD,MAAOQ,CAAAA,OAAP,CAAe,CACzBC,OAAQ,sCADiB,CAEzBC,OAAQ,CAACN,WAAD,EAAmBD,QAAnB,CAFiB,CAAf,CAKlB,OAAO,GAAIL,YAAaa,CAAAA,WAAjB,EAA8BJ,MAA9B,CAf4F,CAN2B;\",\n\"sources\":[\"node_modules/viem/_cjs/actions/public/getBlockTransactionCount.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$viem$_cjs$actions$public$getBlockTransactionCount\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.getBlockTransactionCount = void 0;\\nconst fromHex_js_1 = require(\\\"../../utils/encoding/fromHex.js\\\");\\nconst toHex_js_1 = require(\\\"../../utils/encoding/toHex.js\\\");\\nasync function getBlockTransactionCount(client, { blockHash, blockNumber, blockTag = 'latest', } = {}) {\\n    const blockNumberHex = blockNumber !== undefined ? (0, toHex_js_1.numberToHex)(blockNumber) : undefined;\\n    let count;\\n    if (blockHash) {\\n        count = await client.request({\\n            method: 'eth_getBlockTransactionCountByHash',\\n            params: [blockHash],\\n        });\\n    }\\n    else {\\n        count = await client.request({\\n            method: 'eth_getBlockTransactionCountByNumber',\\n            params: [blockNumberHex || blockTag],\\n        });\\n    }\\n    return (0, fromHex_js_1.hexToNumber)(count);\\n}\\nexports.getBlockTransactionCount = getBlockTransactionCount;\\n//# sourceMappingURL=getBlockTransactionCount.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"getBlockTransactionCount\",\"fromHex_js_1\",\"toHex_js_1\",\"client\",\"blockHash\",\"blockNumber\",\"blockTag\",\"blockNumberHex\",\"undefined\",\"numberToHex\",\"count\",\"request\",\"method\",\"params\",\"hexToNumber\"]\n}\n"]