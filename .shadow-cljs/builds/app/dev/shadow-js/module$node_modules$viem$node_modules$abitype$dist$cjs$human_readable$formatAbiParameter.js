["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/viem/node_modules/abitype/dist/cjs/human-readable/formatAbiParameter.js"],"~:js","shadow$provide.module$node_modules$viem$node_modules$abitype$dist$cjs$human_readable$formatAbiParameter=function(global,require,module,exports){function formatAbiParameter(abiParameter){let type=abiParameter.type;if(tupleRegex.test(abiParameter.type)&&\"components\"in abiParameter){type=\"(\";var length=abiParameter.components.length;for(let i=0;i<length;i++)type+=formatAbiParameter(abiParameter.components[i]),i<length-1&&(type+=\", \");length=(0,regex_js_1.execTyped)(tupleRegex,abiParameter.type);type+=\n`)${length?.array??\"\"}`;return formatAbiParameter({...abiParameter,type})}\"indexed\"in abiParameter&&abiParameter.indexed&&(type=`${type} indexed`);return abiParameter.name?`${type} ${abiParameter.name}`:type}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.formatAbiParameter=void 0;const regex_js_1=require(\"module$node_modules$viem$node_modules$abitype$dist$cjs$regex\"),tupleRegex=/^tuple(?<array>(\\[(\\d*)\\])*)$/;exports.formatAbiParameter=formatAbiParameter}","~:source","shadow$provide[\"module$node_modules$viem$node_modules$abitype$dist$cjs$human_readable$formatAbiParameter\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatAbiParameter = void 0;\nconst regex_js_1 = require(\"../regex.js\");\nconst tupleRegex = /^tuple(?<array>(\\[(\\d*)\\])*)$/;\nfunction formatAbiParameter(abiParameter) {\n    let type = abiParameter.type;\n    if (tupleRegex.test(abiParameter.type) && 'components' in abiParameter) {\n        type = '(';\n        const length = abiParameter.components.length;\n        for (let i = 0; i < length; i++) {\n            const component = abiParameter.components[i];\n            type += formatAbiParameter(component);\n            if (i < length - 1)\n                type += ', ';\n        }\n        const result = (0, regex_js_1.execTyped)(tupleRegex, abiParameter.type);\n        type += `)${result?.array ?? ''}`;\n        return formatAbiParameter({\n            ...abiParameter,\n            type,\n        });\n    }\n    if ('indexed' in abiParameter && abiParameter.indexed)\n        type = `${type} indexed`;\n    if (abiParameter.name)\n        return `${type} ${abiParameter.name}`;\n    return type;\n}\nexports.formatAbiParameter = formatAbiParameter;\n//# sourceMappingURL=formatAbiParameter.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$viem$node_modules$abitype$dist$cjs$regex"]],"~:properties",["^5",["__esModule","value","type","formatAbiParameter"]],"~:compiled-at",1695111490203,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$viem$node_modules$abitype$dist$cjs$human_readable$formatAbiParameter.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,wFAAA,CAA6G,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAMrJC,QAASA,mBAAkB,CAACC,YAAD,CAAe,CACtC,IAAIC,KAAOD,YAAaC,CAAAA,IACxB,IAAIC,UAAWC,CAAAA,IAAX,CAAgBH,YAAaC,CAAAA,IAA7B,CAAJ,EAA0C,YAA1C,EAA0DD,aAA1D,CAAwE,CACpEC,IAAA,CAAO,GACP,KAAMG,OAASJ,YAAaK,CAAAA,UAAWD,CAAAA,MACvC,KAAK,IAAIE,EAAI,CAAb,CAAgBA,CAAhB,CAAoBF,MAApB,CAA4BE,CAAA,EAA5B,CAEIL,IACA,EADQF,kBAAA,CADUC,YAAaK,CAAAA,UAAbE,CAAwBD,CAAxBC,CACV,CACR,CAAID,CAAJ,CAAQF,MAAR,CAAiB,CAAjB,GACIH,IADJ,EACY,IADZ,CAGEO,OAAAA,CAAS,GAAIC,UAAWC,CAAAA,SAAf,EAA0BR,UAA1B,CAAsCF,YAAaC,CAAAA,IAAnD,CACfA,KAAA;AAAS,IAAGO,MAAQG,EAAAA,KAAX,EAAoB,EAApB,EACT,OAAOZ,mBAAA,CAAmB,CACtB,GAAGC,YADmB,CAEtBC,IAFsB,CAAnB,CAX6D,CAgBpE,SAAJ,EAAiBD,aAAjB,EAAiCA,YAAaY,CAAAA,OAA9C,GACIX,IADJ,CACY,GAAEA,IAAF,UADZ,CAEA,OAAID,aAAaa,CAAAA,IAAjB,CACY,GAAEZ,IAAF,IAAUD,YAAaa,CAAAA,IAAvB,EADZ,CAEOZ,IAtB+B,CAJ1Ca,MAAOC,CAAAA,cAAP,CAAsBjB,OAAtB,CAA+B,YAA/B,CAA6C,CAAEkB,MAAO,CAAA,CAAT,CAA7C,CACAlB,QAAQC,CAAAA,kBAAR,CAA6B,IAAK,EAClC,OAAMU,WAAab,OAAA,CAAQ,8DAAR,CAAnB,CACMM,WAAa,+BAyBnBJ,QAAQC,CAAAA,kBAAR,CAA6BA,kBA9BwH;\",\n\"sources\":[\"node_modules/viem/node_modules/abitype/dist/cjs/human-readable/formatAbiParameter.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$viem$node_modules$abitype$dist$cjs$human_readable$formatAbiParameter\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.formatAbiParameter = void 0;\\nconst regex_js_1 = require(\\\"../regex.js\\\");\\nconst tupleRegex = /^tuple(?<array>(\\\\[(\\\\d*)\\\\])*)$/;\\nfunction formatAbiParameter(abiParameter) {\\n    let type = abiParameter.type;\\n    if (tupleRegex.test(abiParameter.type) && 'components' in abiParameter) {\\n        type = '(';\\n        const length = abiParameter.components.length;\\n        for (let i = 0; i < length; i++) {\\n            const component = abiParameter.components[i];\\n            type += formatAbiParameter(component);\\n            if (i < length - 1)\\n                type += ', ';\\n        }\\n        const result = (0, regex_js_1.execTyped)(tupleRegex, abiParameter.type);\\n        type += `)${result?.array ?? ''}`;\\n        return formatAbiParameter({\\n            ...abiParameter,\\n            type,\\n        });\\n    }\\n    if ('indexed' in abiParameter && abiParameter.indexed)\\n        type = `${type} indexed`;\\n    if (abiParameter.name)\\n        return `${type} ${abiParameter.name}`;\\n    return type;\\n}\\nexports.formatAbiParameter = formatAbiParameter;\\n//# sourceMappingURL=formatAbiParameter.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"formatAbiParameter\",\"abiParameter\",\"type\",\"tupleRegex\",\"test\",\"length\",\"components\",\"i\",\"component\",\"result\",\"regex_js_1\",\"execTyped\",\"array\",\"indexed\",\"name\",\"Object\",\"defineProperty\",\"value\"]\n}\n"]