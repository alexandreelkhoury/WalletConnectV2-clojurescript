["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/viem/_cjs/utils/promise/withRetry.js"],"~:js","shadow$provide.module$node_modules$viem$_cjs$utils$promise$withRetry=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.withRetry=void 0;const wait_js_1=require(\"module$node_modules$viem$_cjs$utils$wait\");exports.withRetry=function(fn,{delay:delay_=100,retryCount=2,shouldRetry=()=>!0}={}){return new Promise((resolve,reject)=>{const attemptRetry=async({count=0}={})=>{const retry=async({error})=>{(error=\"function\"===typeof delay_?delay_({count,error}):\ndelay_)&&await (0,wait_js_1.wait)(error);attemptRetry({count:count+1})};try{const data=await fn();resolve(data)}catch(err){if(count<retryCount&&await shouldRetry({count,error:err}))return retry({error:err});reject(err)}};attemptRetry()})}}","~:source","shadow$provide[\"module$node_modules$viem$_cjs$utils$promise$withRetry\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.withRetry = void 0;\nconst wait_js_1 = require(\"../wait.js\");\nfunction withRetry(fn, { delay: delay_ = 100, retryCount = 2, shouldRetry = () => true, } = {}) {\n    return new Promise((resolve, reject) => {\n        const attemptRetry = async ({ count = 0 } = {}) => {\n            const retry = async ({ error }) => {\n                const delay = typeof delay_ === 'function' ? delay_({ count, error }) : delay_;\n                if (delay)\n                    await (0, wait_js_1.wait)(delay);\n                attemptRetry({ count: count + 1 });\n            };\n            try {\n                const data = await fn();\n                resolve(data);\n            }\n            catch (err) {\n                if (count < retryCount &&\n                    (await shouldRetry({ count, error: err })))\n                    return retry({ error: err });\n                reject(err);\n            }\n        };\n        attemptRetry();\n    });\n}\nexports.withRetry = withRetry;\n//# sourceMappingURL=withRetry.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$viem$_cjs$utils$wait"]],"~:properties",["^5",["__esModule","error","withRetry","count","value"]],"~:compiled-at",1695111490282,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$viem$_cjs$utils$promise$withRetry.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,qDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAElHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAQI,CAAAA,SAAR,CAAoB,IAAK,EACzB,OAAMC,UAAYP,OAAA,CAAQ,0CAAR,CAwBlBE,QAAQI,CAAAA,SAAR,CAvBAA,QAAkB,CAACE,EAAD,CAAK,CAAE,MAAOC,MAAA,CAAS,GAAlB,CAAuBC,UAAA,CAAa,CAApC,CAAuCC,WAAA,CAAc,EAAA,EAAM,CAAA,CAA3D,CAAA,CAAqE,EAA1E,CAA8E,CAC5F,MAAO,KAAIC,OAAJ,CAAY,CAACC,OAAD,CAAUC,MAAV,CAAA,EAAqB,CACpC,MAAMC,aAAeA,KAAM,CAAC,CAAEC,KAAA,CAAQ,CAAV,CAAA,CAAgB,EAAjB,CAAND,EAA8B,CAC/C,MAAME,MAAQA,KAAM,CAAC,CAAEC,KAAF,CAAD,CAAND,EAAqB,CAE/B,CADME,KACN,CADgC,UAAlB,GAAA,MAAOV,OAAP,CAA+BA,MAAA,CAAO,CAAEO,KAAF,CAASE,KAAT,CAAP,CAA/B;AAA0DT,MACxE,GACI,MAAM,GAAIF,SAAUa,CAAAA,IAAd,EAAoBD,KAApB,CACVJ,aAAA,CAAa,CAAEC,MAAOA,KAAPA,CAAe,CAAjB,CAAb,CAJ+B,CAMnC,IAAI,CACA,MAAMK,KAAO,MAAMb,EAAA,EACnBK,QAAA,CAAQQ,IAAR,CAFA,CAIJ,MAAOC,GAAP,CAAY,CACR,GAAIN,KAAJ,CAAYN,UAAZ,EACK,MAAMC,WAAA,CAAY,CAAEK,KAAF,CAASE,MAAOI,GAAhB,CAAZ,CADX,CAEI,MAAOL,MAAA,CAAM,CAAEC,MAAOI,GAAT,CAAN,CACXR,OAAA,CAAOQ,GAAP,CAJQ,CAXmC,CAkBnDP,aAAA,EAnBoC,CAAjC,CADqF,CALkB;\",\n\"sources\":[\"node_modules/viem/_cjs/utils/promise/withRetry.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$viem$_cjs$utils$promise$withRetry\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.withRetry = void 0;\\nconst wait_js_1 = require(\\\"../wait.js\\\");\\nfunction withRetry(fn, { delay: delay_ = 100, retryCount = 2, shouldRetry = () => true, } = {}) {\\n    return new Promise((resolve, reject) => {\\n        const attemptRetry = async ({ count = 0 } = {}) => {\\n            const retry = async ({ error }) => {\\n                const delay = typeof delay_ === 'function' ? delay_({ count, error }) : delay_;\\n                if (delay)\\n                    await (0, wait_js_1.wait)(delay);\\n                attemptRetry({ count: count + 1 });\\n            };\\n            try {\\n                const data = await fn();\\n                resolve(data);\\n            }\\n            catch (err) {\\n                if (count < retryCount &&\\n                    (await shouldRetry({ count, error: err })))\\n                    return retry({ error: err });\\n                reject(err);\\n            }\\n        };\\n        attemptRetry();\\n    });\\n}\\nexports.withRetry = withRetry;\\n//# sourceMappingURL=withRetry.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"withRetry\",\"wait_js_1\",\"fn\",\"delay_\",\"retryCount\",\"shouldRetry\",\"Promise\",\"resolve\",\"reject\",\"attemptRetry\",\"count\",\"retry\",\"error\",\"delay\",\"wait\",\"data\",\"err\"]\n}\n"]