shadow$provide.module$node_modules$wagmi$dist$index=function(global,require,module,exports){function createConfig({queryClient=new require$_CIRCA_tanstack_SLASH_react_query.QueryClient({defaultOptions:{queries:{cacheTime:864E5,networkMode:"offlineFirst",refetchOnWindowFocus:!1,retry:0},mutations:{networkMode:"offlineFirst"}}}),storage=(0,require$_CIRCA_wagmi_SLASH_core.createStorage)({storage:"undefined"!==typeof window&&window.localStorage?window.localStorage:require$_CIRCA_wagmi_SLASH_core.noopStorage}),
persister="undefined"!==typeof window?(0,require$_CIRCA_tanstack_SLASH_query_sync_storage_persister.createSyncStoragePersister)({key:"cache",storage,serialize:x=>x,deserialize:x=>x}):void 0,...args}){storage=(0,require$_CIRCA_wagmi_SLASH_core.createConfig)({...args,storage});persister&&(0,require$_CIRCA_tanstack_SLASH_react_query_persist_client.persistQueryClient)({queryClient,persister,dehydrateOptions:{shouldDehydrateQuery:query=>0!==query.cacheTime&&!1!==query.queryKey[0].persist}});return Object.assign(storage,
{queryClient})}function WagmiConfig({children,config}){return React.createElement(Context.Provider,{children:React.createElement(require$_CIRCA_tanstack_SLASH_react_query.QueryClientProvider,{children,client:config.queryClient,context:queryClientContext}),value:config})}function useConfig(){const config=React.useContext(Context);if(!config)throw Error("`useConfig` must be used within `WagmiConfig`.\n\nRead more: https://wagmi.sh/react/WagmiConfig");return config}function isPlainObject(o){if("[object Object]"!==
Object.prototype.toString.call(o))return!1;o=o.constructor;if("undefined"===typeof o)return!0;o=o.prototype;return"[object Object]"===Object.prototype.toString.call(o)&&o.hasOwnProperty("isPrototypeOf")?!0:!1}function parseQueryArgs(arg1,arg2,arg3){return Array.isArray(arg1)?"function"===typeof arg2?{...arg3,queryKey:arg1,queryFn:arg2}:{...arg2,queryKey:arg1}:arg1}function queryKeyHashFn(queryKey17){return JSON.stringify(queryKey17,(_,val)=>isPlainObject(val)?Object.keys(val).sort().reduce((result,
key)=>{result[key]=val[key];return result},{}):"bigint"===typeof val?val.toString():val)}function shouldThrowError(_useErrorBoundary,params){return"function"===typeof _useErrorBoundary?_useErrorBoundary(...params):!!_useErrorBoundary}function trackResult(result,observer){const trackedResult={};Object.keys(result).forEach(key=>{Object.defineProperty(trackedResult,key,{configurable:!1,enumerable:!0,get:()=>{observer.trackedProps.add(key);return result[key]}})});return trackedResult}function useBaseQuery(options,
Observer){const queryClient=(0,require$_CIRCA_tanstack_SLASH_react_query.useQueryClient)({context:options.context}),isRestoring=(0,require$_CIRCA_tanstack_SLASH_react_query.useIsRestoring)(),errorResetBoundary=(0,require$_CIRCA_tanstack_SLASH_react_query.useQueryErrorResetBoundary)(),defaultedOptions=queryClient.defaultQueryOptions({...options,queryKeyHashFn});defaultedOptions._optimisticResults=isRestoring?"isRestoring":"optimistic";defaultedOptions.onError&&(defaultedOptions.onError=require$_CIRCA_tanstack_SLASH_react_query.notifyManager.batchCalls(defaultedOptions.onError));
defaultedOptions.onSuccess&&(defaultedOptions.onSuccess=require$_CIRCA_tanstack_SLASH_react_query.notifyManager.batchCalls(defaultedOptions.onSuccess));defaultedOptions.onSettled&&(defaultedOptions.onSettled=require$_CIRCA_tanstack_SLASH_react_query.notifyManager.batchCalls(defaultedOptions.onSettled));defaultedOptions.suspense&&"number"!==typeof defaultedOptions.staleTime&&(defaultedOptions.staleTime=1E3);!defaultedOptions.suspense&&!defaultedOptions.useErrorBoundary||errorResetBoundary.isReset()||
(defaultedOptions.retryOnMount=!1);const [observer]=React2.useState(()=>new Observer(queryClient,defaultedOptions));options=observer.getOptimisticResult(defaultedOptions);useSyncExternalStore2(React2.useCallback(onStoreChange=>isRestoring?()=>{}:observer.subscribe(require$_CIRCA_tanstack_SLASH_react_query.notifyManager.batchCalls(onStoreChange)),[observer,isRestoring]),()=>observer.getCurrentResult(),()=>observer.getCurrentResult());React2.useEffect(()=>{errorResetBoundary.clearReset()},[errorResetBoundary]);
React2.useEffect(()=>{observer.setOptions(defaultedOptions,{listeners:!1})},[defaultedOptions,observer]);if(defaultedOptions.suspense&&options.isLoading&&options.isFetching&&!isRestoring)throw observer.fetchOptimistic(defaultedOptions).then(({data})=>{defaultedOptions.onSuccess?.(data);defaultedOptions.onSettled?.(data,null)}).catch(error=>{errorResetBoundary.clearReset();defaultedOptions.onError?.(error);defaultedOptions.onSettled?.(void 0,error)});if(options.isError&&!errorResetBoundary.isReset()&&
!options.isFetching&&shouldThrowError(defaultedOptions.useErrorBoundary,[options.error,observer.getCurrentQuery()]))throw options.error;const status="loading"===options.status&&"idle"===options.fetchStatus?"idle":options.status;return{...options,defaultedOptions,isIdle:"idle"===status,isLoading:"loading"===status&&"fetching"===options.fetchStatus,observer,status}}function useInfiniteQuery(arg1,arg2,arg3){arg1=parseQueryArgs(arg1,arg2,arg3);arg1=useBaseQuery({context:queryClientContext,...arg1},require$_CIRCA_tanstack_SLASH_react_query.InfiniteQueryObserver);
arg2={data:arg1.data,error:arg1.error,fetchNextPage:arg1.fetchNextPage,fetchStatus:arg1.fetchStatus,hasNextPage:arg1.hasNextPage,isError:arg1.isError,isFetched:arg1.isFetched,isFetchedAfterMount:arg1.isFetchedAfterMount,isFetching:arg1.isFetching,isFetchingNextPage:arg1.isFetchingNextPage,isIdle:arg1.isIdle,isLoading:arg1.isLoading,isRefetching:arg1.isRefetching,isSuccess:arg1.isSuccess,refetch:arg1.refetch,status:arg1.status,internal:{dataUpdatedAt:arg1.dataUpdatedAt,errorUpdatedAt:arg1.errorUpdatedAt,
failureCount:arg1.failureCount,isFetchedAfterMount:arg1.isFetchedAfterMount,isLoadingError:arg1.isLoadingError,isPaused:arg1.isPaused,isPlaceholderData:arg1.isPlaceholderData,isPreviousData:arg1.isPreviousData,isRefetchError:arg1.isRefetchError,isStale:arg1.isStale,remove:arg1.remove}};return arg1.defaultedOptions.notifyOnChangeProps?arg2:trackResult(arg2,arg1.observer)}function useMutation(arg1,arg2,arg3){arg1=(0,require$_CIRCA_tanstack_SLASH_react_query.parseMutationArgs)(arg1,arg2,arg3);return(0,require$_CIRCA_tanstack_SLASH_react_query.useMutation)({context:queryClientContext,
...arg1})}function useQuery(arg1,arg2,arg3){arg1=parseQueryArgs(arg1,arg2,arg3);arg1=useBaseQuery({context:queryClientContext,...arg1},require$_CIRCA_tanstack_SLASH_react_query.QueryObserver);arg2={data:arg1.data,error:arg1.error,fetchStatus:arg1.fetchStatus,isError:arg1.isError,isFetched:arg1.isFetched,isFetchedAfterMount:arg1.isFetchedAfterMount,isFetching:arg1.isFetching,isIdle:arg1.isIdle,isLoading:arg1.isLoading,isRefetching:arg1.isRefetching,isSuccess:arg1.isSuccess,refetch:arg1.refetch,status:arg1.status,
internal:{dataUpdatedAt:arg1.dataUpdatedAt,errorUpdatedAt:arg1.errorUpdatedAt,failureCount:arg1.failureCount,isFetchedAfterMount:arg1.isFetchedAfterMount,isLoadingError:arg1.isLoadingError,isPaused:arg1.isPaused,isPlaceholderData:arg1.isPlaceholderData,isPreviousData:arg1.isPreviousData,isRefetchError:arg1.isRefetchError,isStale:arg1.isStale,remove:arg1.remove}};return arg1.defaultedOptions.notifyOnChangeProps?arg2:trackResult(arg2,arg1.observer)}function usePublicClient({chainId}={}){return(0,require$use_sync_external_store_SLASH_shim_SLASH_with_selector_DOT_js.useSyncExternalStoreWithSelector)(cb=>
(0,require$_CIRCA_wagmi_SLASH_core.watchPublicClient)({chainId},cb),()=>(0,require$_CIRCA_wagmi_SLASH_core.getPublicClient)({chainId}),()=>(0,require$_CIRCA_wagmi_SLASH_core.getPublicClient)({chainId}),x=>x,(a,b)=>a.uid===b.uid)}function queryKey({chainId}){return[{entity:"walletClient",chainId,persist:!1}]}function queryFn({queryKey:[{chainId}]}){return(0,require$_CIRCA_wagmi_SLASH_core.getWalletClient)({chainId})}function useWalletClient({chainId:chainId_,suspense,onError,onSettled,onSuccess}={}){const {connector}=
useAccount(),chainId=useChainId({chainId:chainId_});chainId_=useQuery(queryKey({chainId}),queryFn,{cacheTime:0,enabled:!!connector,staleTime:Infinity,suspense,onError,onSettled,onSuccess});const queryClient=useQueryClient2();React3.useEffect(()=>(0,require$_CIRCA_wagmi_SLASH_core.watchWalletClient)({chainId},walletClient=>{walletClient?queryClient.invalidateQueries(queryKey({chainId})):queryClient.removeQueries(queryKey({chainId}))}),[queryClient,chainId]);return chainId_}function useWebSocketPublicClient({chainId}=
{}){return(0,require$use_sync_external_store_SLASH_shim_SLASH_with_selector_DOT_js.useSyncExternalStoreWithSelector)(cb=>(0,require$_CIRCA_wagmi_SLASH_core.watchWebSocketPublicClient)({chainId},cb),()=>(0,require$_CIRCA_wagmi_SLASH_core.getWebSocketPublicClient)({chainId}),()=>(0,require$_CIRCA_wagmi_SLASH_core.getWebSocketPublicClient)({chainId}),x=>x,(a,b)=>a?.uid===b?.uid)}function useChainId({chainId}={}){return usePublicClient({chainId}).chain.id}function useForceUpdate(){const [,forceUpdate]=
React4.useReducer(x=>x+1,0);return forceUpdate}function queryKey2({chainId,scopeKey}){return[{entity:"blockNumber",chainId,scopeKey}]}function queryFn2({queryKey:[{chainId}]}){return(0,require$_CIRCA_wagmi_SLASH_core.fetchBlockNumber)({chainId})}function useBlockNumber({cacheTime=0,chainId:chainId_,enabled=!0,scopeKey,staleTime,suspense,watch=!1,onBlock,onError,onSettled,onSuccess}={}){const chainId=useChainId({chainId:chainId_}),publicClient=usePublicClient({chainId}),webSocketPublicClient=useWebSocketPublicClient({chainId}),
queryClient=useQueryClient2();React5.useEffect(()=>{if(enabled&&(watch||onBlock))return(webSocketPublicClient??publicClient).watchBlockNumber({onBlockNumber:blockNumber=>{watch&&queryClient.setQueryData(queryKey2({chainId,scopeKey}),blockNumber);onBlock&&onBlock(blockNumber)},emitOnBegin:!0})},[chainId,scopeKey,onBlock,publicClient,queryClient,watch,webSocketPublicClient,enabled]);return useQuery(queryKey2({scopeKey,chainId}),queryFn2,{cacheTime,enabled,staleTime,suspense,onError,onSettled,onSuccess})}
function queryKey3({chainId,formatUnits,scopeKey}){return[{entity:"feeData",chainId,formatUnits,scopeKey}]}function queryFn3({queryKey:[{chainId,formatUnits}]}){return(0,require$_CIRCA_wagmi_SLASH_core.fetchFeeData)({chainId,formatUnits})}function useFeeData({cacheTime,chainId:chainId_,enabled=!0,formatUnits="gwei",scopeKey,staleTime,suspense,watch,onError,onSettled,onSuccess}={}){const chainId=useChainId({chainId:chainId_});chainId_=React6.useMemo(()=>queryKey3({chainId,formatUnits,scopeKey}),[chainId,
formatUnits,scopeKey]);cacheTime=useQuery(chainId_,queryFn3,{cacheTime,enabled,staleTime,suspense,onError,onSettled,onSuccess});useInvalidateOnBlock({chainId,enabled:!(!enabled||!watch),queryKey:chainId_});return cacheTime}function useInvalidateOnBlock({chainId,enabled,queryKey:queryKey17}){const queryClient=useQueryClient2(),onBlock=React7.useCallback(()=>queryClient.invalidateQueries({queryKey:queryKey17},{cancelRefetch:!1}),[queryClient,queryKey17]);useBlockNumber({chainId,enabled,onBlock:enabled?
onBlock:void 0,scopeKey:enabled?void 0:"idle"})}function useSyncExternalStoreWithTracked(subscribe,getSnapshot,getServerSnapshot=getSnapshot,isEqual=require$_CIRCA_wagmi_SLASH_core.deepEqual){const trackedKeys=React8.useRef([]);subscribe=(0,require$use_sync_external_store_SLASH_shim_SLASH_with_selector_DOT_js.useSyncExternalStoreWithSelector)(subscribe,getSnapshot,getServerSnapshot,x=>x,(a,b)=>{if("object"===typeof a&&!Array.isArray(a)&&"object"===typeof b&&!Array.isArray(b)&&trackedKeys.current.length){for(const key of trackedKeys.current)if(!isEqual(a[key],
b[key]))return!1;return!0}return isEqual(a,b)});return"object"!==typeof subscribe||Array.isArray(subscribe)?subscribe:(subscribe={...subscribe},Object.defineProperties(subscribe,Object.entries(subscribe).reduce((res,[key,value])=>({...res,[key]:{configurable:!1,enumerable:!0,get:()=>{trackedKeys.current.includes(key)||trackedKeys.current.push(key);return value}}}),{})),subscribe)}function useAccount({onConnect,onDisconnect}={}){var config=useConfig();config=React9.useCallback(callback=>(0,require$_CIRCA_wagmi_SLASH_core.watchAccount)(callback),
[config]);const account=useSyncExternalStoreWithTracked(config,require$_CIRCA_wagmi_SLASH_core.getAccount),previousAccountRef=React9.useRef(),previousAccount=previousAccountRef.current;React9.useEffect(()=>{"connected"!==previousAccount?.status&&"connected"===account.status&&onConnect?.({address:account.address,connector:account.connector,isReconnected:"reconnecting"===previousAccount?.status||void 0===previousAccount?.status});"connected"===previousAccount?.status&&"disconnected"===account.status&&
onDisconnect?.();previousAccountRef.current=account},[onConnect,onDisconnect,previousAccount,account]);return account}function queryKey4({address,chainId,formatUnits,scopeKey,token}){return[{entity:"balance",address,chainId,formatUnits,scopeKey,token}]}function queryFn4({queryKey:[{address,chainId,formatUnits,token}]}){if(!address)throw Error("address is required");return(0,require$_CIRCA_wagmi_SLASH_core.fetchBalance)({address,chainId,formatUnits,token})}function useBalance({address,cacheTime,chainId:chainId_,
enabled=!0,formatUnits,scopeKey,staleTime,suspense,token,watch,onError,onSettled,onSuccess}={}){const chainId=useChainId({chainId:chainId_});chainId_=React10.useMemo(()=>queryKey4({address,chainId,formatUnits,scopeKey,token}),[address,chainId,formatUnits,scopeKey,token]);cacheTime=useQuery(chainId_,queryFn4,{cacheTime,enabled:!(!enabled||!address),staleTime,suspense,onError,onSettled,onSuccess});useInvalidateOnBlock({chainId,enabled:!!(enabled&&watch&&address),queryKey:chainId_});return cacheTime}
function useConnect({chainId,connector,onError,onMutate,onSettled,onSuccess}={}){const config=useConfig(),{data,error,isError,isIdle,isLoading,isSuccess,mutate,mutateAsync,reset,status,variables}=useMutation([{entity:"connect",connector,chainId}],mutationFn,{onError,onMutate,onSettled,onSuccess});onError=React11.useCallback(args=>mutate({chainId:args?.chainId??chainId,connector:args?.connector??connector}),[chainId,connector,mutate]);onMutate=React11.useCallback(args=>mutateAsync({chainId:args?.chainId??
chainId,connector:args?.connector??connector}),[chainId,connector,mutateAsync]);return{connect:onError,connectAsync:onMutate,connectors:config.connectors,data,error,isError,isIdle,isLoading,isSuccess,pendingConnector:variables?.connector,reset,status,variables}}function useDisconnect({onError,onMutate,onSettled,onSuccess}={}){const {error,isError,isIdle,isLoading,isSuccess,mutate:disconnect2,mutateAsync:disconnectAsync,reset,status}=useMutation(mutationKey2,mutationFn2,{...(onError?{onError(error2,
_variables,context){onError(error2,context)}}:{}),onMutate,...(onSettled?{onSettled(_data,error2,_variables,context){onSettled(error2,context)}}:{}),...(onSuccess?{onSuccess(_data,_variables,context){onSuccess(context)}}:{})});return{disconnect:disconnect2,disconnectAsync,error,isError,isIdle,isLoading,isSuccess,reset,status}}function useNetwork(){var config=useConfig();config=(0,require$react.useCallback)(callback=>(0,require$_CIRCA_wagmi_SLASH_core.watchNetwork)(callback),[config]);return useSyncExternalStoreWithTracked(config,
require$_CIRCA_wagmi_SLASH_core.getNetwork)}function useSignMessage({message,onError,onMutate,onSettled,onSuccess}={}){const {data,error,isError,isIdle,isLoading,isSuccess,mutate,mutateAsync,reset,status,variables}=useMutation([{entity:"signMessage",message}],mutationFn3,{onError,onMutate,onSettled,onSuccess});onError=React12.useCallback(args=>mutate(args||{message}),[message,mutate]);onMutate=React12.useCallback(args=>mutateAsync(args||{message}),[message,mutateAsync]);return{data,error,isError,
isIdle,isLoading,isSuccess,reset,signMessage:onError,signMessageAsync:onMutate,status,variables}}function mutationKey4({domain,types,message,primaryType}){return[{entity:"signTypedData",domain,types,message,primaryType}]}function mutationFn4(args){const {domain,types,primaryType,message}=args;if(!domain)throw Error("domain is required");if(!types)throw Error("types is required");if(!primaryType)throw Error("primaryType is required");if(!message)throw Error("message is required");return(0,require$_CIRCA_wagmi_SLASH_core.signTypedData)({domain,
message,primaryType,types})}function useSignTypedData({domain,types,message,primaryType,onError,onMutate,onSettled,onSuccess}={}){const {data,error,isError,isIdle,isLoading,isSuccess,mutate,mutateAsync,reset,status,variables}=useMutation(mutationKey4({domain,message,primaryType,types}),mutationFn4,{onError,onMutate,onSettled,onSuccess});onError=React13.useCallback(args=>mutate({domain:args?.domain??domain,types:args?.types??types,message:args?.message??message,primaryType:args?.primaryType??primaryType}),
[domain,types,primaryType,message,mutate]);onMutate=React13.useCallback(args=>mutateAsync({domain:args?.domain??domain,types:args?.types??types,message:args?.message??message,primaryType:args?.primaryType??primaryType}),[domain,types,primaryType,message,mutateAsync]);return{data,error,isError,isIdle,isLoading,isSuccess,reset,signTypedData:onError,signTypedDataAsync:onMutate,status,variables}}function useSwitchNetwork({chainId,throwForSwitchChainNotSupported,onError,onMutate,onSettled,onSuccess}={}){const config=
useConfig(),forceUpdate=useForceUpdate(),{data,error,isError,isIdle,isLoading,isSuccess,mutate,mutateAsync,reset,status,variables}=useMutation([{entity:"switchNetwork",chainId}],mutationFn5,{onError,onMutate,onSettled,onSuccess});onError=React14.useCallback(chainId_=>mutate({chainId:chainId_??chainId}),[chainId,mutate]);onMutate=React14.useCallback(chainId_=>mutateAsync({chainId:chainId_??chainId}),[chainId,mutateAsync]);React14.useEffect(()=>config.subscribe(({chains,connector})=>({chains,connector}),
forceUpdate),[config,forceUpdate]);let switchNetwork2,switchNetworkAsync;onSettled=!!config.connector?.switchChain;if(throwForSwitchChainNotSupported||onSettled)switchNetwork2=onError,switchNetworkAsync=onMutate;return{chains:config.chains??[],data,error,isError,isIdle,isLoading,isSuccess,pendingChainId:variables?.chainId,reset,status,switchNetwork:switchNetwork2,switchNetworkAsync,variables}}function useContractEvent({address,chainId,abi,listener,eventName}={}){const publicClient=usePublicClient({chainId}),
webSocketPublicClient=useWebSocketPublicClient({chainId}),unwatch=React15.useRef();React15.useEffect(()=>{if(abi&&address&&eventName)return unwatch.current=(webSocketPublicClient||publicClient).watchContractEvent({abi,address,eventName,onLogs:listener}),unwatch.current},[abi,address,eventName,publicClient.uid,webSocketPublicClient?.uid]);return unwatch.current}function queryKey5({allowFailure,blockNumber,blockTag,cacheKey,scopeKey}){return[{entity:"readContractsInfinite",allowFailure,blockNumber,
blockTag,cacheKey,scopeKey}]}function queryFn5({contracts}){return({queryKey:[{allowFailure,blockNumber,blockTag}],pageParam})=>(0,require$_CIRCA_wagmi_SLASH_core.readContracts)({allowFailure,blockNumber,blockTag,contracts:contracts(pageParam||void 0)})}function useContractInfiniteReads({allowFailure,blockNumber,blockTag,cacheKey,cacheTime,contracts,enabled:enabled_=!0,getNextPageParam,isDataEqual,keepPreviousData,onError,onSettled,onSuccess,scopeKey,select,staleTime,structuralSharing=(oldData,newData)=>
(0,require$_CIRCA_wagmi_SLASH_core.deepEqual)(oldData,newData)?oldData:(0,require$_CIRCA_tanstack_SLASH_react_query.replaceEqualDeep)(oldData,newData),suspense}){const queryKey_=React16.useMemo(()=>queryKey5({allowFailure,blockNumber,blockTag,cacheKey,scopeKey}),[allowFailure,blockNumber,blockTag,cacheKey,scopeKey]),enabled=React16.useMemo(()=>!(!enabled_||!contracts),[contracts,enabled_]);return useInfiniteQuery(queryKey_,queryFn5({contracts}),{cacheTime,enabled,getNextPageParam,isDataEqual,keepPreviousData,
select,staleTime,structuralSharing,suspense,onError,onSettled,onSuccess})}function paginatedIndexesConfig(fn,{perPage,start,direction}){return{contracts:(page=0)=>[...Array(perPage).keys()].map(index=>"increment"===direction?start+index+page*perPage:start-index-page*perPage).filter(index=>0<=index).flatMap(fn),getNextPageParam(lastPage,pages){return lastPage?.length===perPage?pages.length:void 0}}}function queryKey6({account,address,args,blockNumber,blockTag,chainId,functionName,scopeKey}){return[{entity:"readContract",
account,address,args,blockNumber,blockTag,chainId,functionName,scopeKey}]}function queryFn6({abi}){return async({queryKey:[{account,address,args,blockNumber,blockTag,chainId,functionName}]})=>{if(!abi)throw Error("abi is required");if(!address)throw Error("address is required");return await (0,require$_CIRCA_wagmi_SLASH_core.readContract)({account,address,args,blockNumber,blockTag,chainId,abi,functionName})??null}}function useContractRead({abi,address,account,args,blockNumber:blockNumberOverride,
blockTag,cacheOnBlock=!1,cacheTime,chainId:chainId_,enabled:enabled_=!0,functionName,isDataEqual,keepPreviousData,onError,onSettled,onSuccess,scopeKey,select,staleTime,structuralSharing=(oldData,newData)=>(0,require$_CIRCA_wagmi_SLASH_core.deepEqual)(oldData,newData)?oldData:(0,require$_CIRCA_tanstack_SLASH_react_query.replaceEqualDeep)(oldData,newData),suspense,watch}={}){const chainId=useChainId({chainId:chainId_});({data:chainId_}=useBlockNumber({chainId,enabled:watch||cacheOnBlock,scopeKey:watch||
cacheOnBlock?void 0:"idle",watch}));const blockNumber=blockNumberOverride??chainId_;blockNumberOverride=React17.useMemo(()=>queryKey6({account,address,args,blockNumber:cacheOnBlock?blockNumber:void 0,blockTag,chainId,functionName,scopeKey}),[account,address,args,blockNumber,blockTag,cacheOnBlock,chainId,functionName,scopeKey]);chainId_=React17.useMemo(()=>{let enabled2=!!(enabled_&&abi&&address&&functionName);cacheOnBlock&&(enabled2=!(!enabled2||!blockNumber));return enabled2},[abi,address,blockNumber,
cacheOnBlock,enabled_,functionName]);useInvalidateOnBlock({chainId,enabled:!(!chainId_||!watch||cacheOnBlock),queryKey:blockNumberOverride});return useQuery(blockNumberOverride,queryFn6({abi}),{cacheTime,enabled:chainId_,isDataEqual,keepPreviousData,select,staleTime,structuralSharing,suspense,onError,onSettled,onSuccess})}function queryKey7({allowFailure,blockNumber,blockTag,chainId,contracts,scopeKey}){return[{entity:"readContracts",allowFailure,blockNumber,blockTag,chainId,scopeKey,contracts:(contracts??
[]).map(({address,args,chainId:chainId2,functionName})=>({address,args,chainId:chainId2,functionName}))}]}function queryFn7({abis}){return({queryKey:[{allowFailure,blockNumber,blockTag,contracts:contracts_}]})=>{contracts_=contracts_.map((contract,i)=>({...contract,abi:abis[i]}));return(0,require$_CIRCA_wagmi_SLASH_core.readContracts)({allowFailure,contracts:contracts_,blockNumber,blockTag})}}function useContractReads({allowFailure:allowFailure_,blockNumber:blockNumberOverride,blockTag,cacheOnBlock=
!1,cacheTime,contracts,enabled:enabled_=!0,isDataEqual,keepPreviousData,onError,onSettled,onSuccess,scopeKey,select,staleTime,structuralSharing=(oldData,newData)=>(0,require$_CIRCA_wagmi_SLASH_core.deepEqual)(oldData,newData)?oldData:(0,require$_CIRCA_tanstack_SLASH_react_query.replaceEqualDeep)(oldData,newData),suspense,watch}={}){const allowFailure=allowFailure_??!0;({data:allowFailure_}=useBlockNumber({enabled:watch||cacheOnBlock,watch}));const chainId=useChainId(),blockNumber=blockNumberOverride??
allowFailure_;blockNumberOverride=React18.useMemo(()=>queryKey7({allowFailure,blockNumber:cacheOnBlock?blockNumber:void 0,blockTag,chainId,contracts,scopeKey}),[allowFailure,blockNumber,blockTag,cacheOnBlock,chainId,scopeKey,contracts]);allowFailure_=React18.useMemo(()=>{let enabled2=!(!enabled_||!contracts?.every(x=>x.abi&&x.address&&x.functionName));cacheOnBlock&&(enabled2=!(!enabled2||!blockNumber));return enabled2},[blockNumber,cacheOnBlock,contracts,enabled_]);useInvalidateOnBlock({enabled:!(!allowFailure_||
!watch||cacheOnBlock),queryKey:blockNumberOverride});watch=(contracts??[]).map(({abi})=>abi);return useQuery(blockNumberOverride,queryFn7({abis:watch}),{cacheTime,enabled:allowFailure_,isDataEqual,keepPreviousData,staleTime,select,structuralSharing,suspense,onError,onSettled,onSuccess})}function mutationKey6({address,abi,functionName,...config}){const {args,accessList,account,gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,nonce,request,value}=config;return[{entity:"writeContract",address,args,abi,
accessList,account,functionName,gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,nonce,request,value}]}function mutationFn6(config){if("prepared"===config.mode){if(!config.request)throw Error("request is required");return(0,require$_CIRCA_wagmi_SLASH_core.writeContract)({mode:"prepared",request:config.request})}if(!config.address)throw Error("address is required");if(!config.abi)throw Error("abi is required");if(!config.functionName)throw Error("functionName is required");return(0,require$_CIRCA_wagmi_SLASH_core.writeContract)({address:config.address,
args:config.args,chainId:config.chainId,abi:config.abi,functionName:config.functionName,accessList:config.accessList,account:config.account,gas:config.gas,gasPrice:config.gasPrice,maxFeePerGas:config.maxFeePerGas,maxPriorityFeePerGas:config.maxPriorityFeePerGas,nonce:config.nonce,value:config.value})}function useContractWrite(config){const {address,abi,args,chainId,functionName,mode,request}=config,{accessList,account,gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,nonce,value}=(0,require$_CIRCA_wagmi_SLASH_core_SLASH_internal.getSendTransactionParameters)(config),
{data,error,isError,isIdle,isLoading,isSuccess,mutate,mutateAsync,reset,status,variables}=useMutation(mutationKey6({address,abi,functionName,chainId,mode,args,accessList,account,gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,nonce,request,value}),mutationFn6,{onError:config.onError,onMutate:config.onMutate,onSettled:config.onSettled,onSuccess:config.onSuccess}),write=React19.useMemo(()=>"prepared"===config.mode?request?()=>mutate({mode:"prepared",request:config.request,chainId:config.chainId}):void 0:
overrideConfig=>mutate({address,args,abi,functionName,chainId,accessList,account,gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,nonce,value,...overrideConfig}),[accessList,account,abi,address,args,chainId,config.chainId,config.mode,config.request,functionName,gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,mutate,nonce,request,value]),writeAsync=React19.useMemo(()=>"prepared"===config.mode?request?()=>mutateAsync({mode:"prepared",request:config.request}):void 0:overrideConfig=>mutateAsync({address,
args,abi,chainId,functionName,accessList,account,gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,nonce,value,...overrideConfig}),[accessList,account,abi,address,args,chainId,config.mode,config.request,functionName,gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,mutateAsync,nonce,request,value]);return{data,error,isError,isIdle,isLoading,isSuccess,reset,status,variables,write,writeAsync}}function queryKey8({accessList,account,activeChainId,args,address,blockNumber,blockTag,chainId,functionName,gas,gasPrice,
maxFeePerGas,maxPriorityFeePerGas,nonce,scopeKey,walletClientAddress,value}){return[{entity:"prepareContractTransaction",accessList,account,activeChainId,address,args,blockNumber,blockTag,chainId,functionName,gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,nonce,scopeKey,walletClientAddress,value}]}function queryFn8({abi,walletClient}){return({queryKey:[{accessList,account,args,address,blockNumber,blockTag,chainId,functionName,gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,nonce,value}]})=>{if(!abi)throw Error("abi is required");
if(!address)throw Error("address is required");if(!functionName)throw Error("functionName is required");return(0,require$_CIRCA_wagmi_SLASH_core.prepareWriteContract)({abi,accessList,account,args,address,blockNumber,blockTag,chainId,functionName,gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,nonce,walletClient,value})}}function usePrepareContractWrite({address,abi,functionName,chainId,args,cacheTime,enabled=!0,scopeKey,staleTime,suspense,onError,onSettled,onSuccess,...config}={}){const {chain:activeChain}=
useNetwork(),{data:walletClient}=useWalletClient({chainId}),{accessList,account,blockNumber,blockTag,gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,nonce,value}=(0,require$_CIRCA_wagmi_SLASH_core_SLASH_internal.getCallParameters)(config);address=useQuery(queryKey8({accessList,account,activeChainId:activeChain?.id,address,args,blockNumber,blockTag,chainId,functionName,gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,nonce,scopeKey,walletClientAddress:walletClient?.account.address,value}),queryFn8({abi,
walletClient}),{cacheTime,enabled:!!(enabled&&abi&&address&&functionName&&walletClient),staleTime,suspense,onError,onSettled,onSuccess});return Object.assign(address,{config:{chainId,mode:"prepared",request:void 0,...address.data}})}function queryKey9({address,chainId,formatUnits,scopeKey}){return[{entity:"token",address,chainId,formatUnits,scopeKey}]}function queryFn9({queryKey:[{address,chainId,formatUnits}]}){if(!address)throw Error("address is required");return(0,require$_CIRCA_wagmi_SLASH_core.fetchToken)({address,
chainId,formatUnits})}function useToken({address,chainId:chainId_,formatUnits="ether",cacheTime,enabled=!0,scopeKey,staleTime=864E5,suspense,onError,onSettled,onSuccess}={}){chainId_=useChainId({chainId:chainId_});return useQuery(queryKey9({address,chainId:chainId_,formatUnits,scopeKey}),queryFn9,{cacheTime,enabled:!(!enabled||!address),staleTime,suspense,onError,onSettled,onSuccess})}function queryKey10({chainId,name,scopeKey}){return[{entity:"ensAddress",chainId,name,scopeKey}]}function queryFn10({queryKey:[{chainId,
name}]}){if(!name)throw Error("name is required");return(0,require$_CIRCA_wagmi_SLASH_core.fetchEnsAddress)({chainId,name})}function useEnsAddress({cacheTime,chainId:chainId_,enabled=!0,name,scopeKey,staleTime=864E5,suspense,onError,onSettled,onSuccess}={}){chainId_=useChainId({chainId:chainId_});return useQuery(queryKey10({chainId:chainId_,name,scopeKey}),queryFn10,{cacheTime,enabled:!!(enabled&&chainId_&&name),staleTime,suspense,onError,onSettled,onSuccess})}function queryKey11({name,chainId,scopeKey}){return[{entity:"ensAvatar",
name,chainId,scopeKey}]}function queryFn11({queryKey:[{name,chainId}]}){if(!name)throw Error("name is required");return(0,require$_CIRCA_wagmi_SLASH_core.fetchEnsAvatar)({name,chainId})}function useEnsAvatar({cacheTime,chainId:chainId_,enabled=!0,name,scopeKey,staleTime=864E5,suspense,onError,onSettled,onSuccess}={}){chainId_=useChainId({chainId:chainId_});return useQuery(queryKey11({name,chainId:chainId_,scopeKey}),queryFn11,{cacheTime,enabled:!!(enabled&&name&&chainId_),staleTime,suspense,onError,
onSettled,onSuccess})}function queryKey12({address,chainId,scopeKey}){return[{entity:"ensName",address,chainId,scopeKey}]}function queryFn12({queryKey:[{address,chainId}]}){if(!address)throw Error("address is required");return(0,require$_CIRCA_wagmi_SLASH_core.fetchEnsName)({address,chainId})}function useEnsName({address,cacheTime,chainId:chainId_,enabled=!0,scopeKey,staleTime=864E5,suspense,onError,onSettled,onSuccess}={}){chainId_=useChainId({chainId:chainId_});return useQuery(queryKey12({address,
chainId:chainId_,scopeKey}),queryFn12,{cacheTime,enabled:!!(enabled&&address&&chainId_),staleTime,suspense,onError,onSettled,onSuccess})}function queryKey13({chainId,name,scopeKey}){return[{entity:"ensResolver",chainId,name,scopeKey,persist:!1}]}function queryFn13({queryKey:[{chainId,name}]}){if(!name)throw Error("name is required");return(0,require$_CIRCA_wagmi_SLASH_core.fetchEnsResolver)({chainId,name})}function useEnsResolver({chainId:chainId_,name,enabled=!0,scopeKey,suspense,onError,onSettled,
onSuccess}={}){chainId_=useChainId({chainId:chainId_});return useQuery(queryKey13({chainId:chainId_,name,scopeKey}),queryFn13,{cacheTime:0,enabled:!!(enabled&&chainId_&&name),suspense,onError,onSettled,onSuccess})}function queryKey14({accessList,account,activeChainId,chainId,data,gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,nonce,to,value,scopeKey,walletClientAddress}){return[{entity:"prepareSendTransaction",activeChainId,accessList,account,chainId,data,gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,
nonce,to,value,scopeKey,walletClientAddress}]}function queryFn14({walletClient}){return({queryKey:[{accessList,account,chainId,data,gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,nonce,to,value}]})=>{if(!to)throw Error("to is required");return(0,require$_CIRCA_wagmi_SLASH_core.prepareSendTransaction)({accessList,account,chainId,data,gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,nonce,to,value,walletClient})}}function usePrepareSendTransaction({accessList,account,chainId,cacheTime,data,enabled=!0,
gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,nonce,scopeKey,staleTime,suspense,to,value,onError,onSettled,onSuccess}={}){const {chain:activeChain}=useNetwork(),{data:walletClient}=useWalletClient({chainId});accessList=useQuery(queryKey14({accessList,activeChainId:activeChain?.id,account,chainId,data,gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,nonce,scopeKey,to,value,walletClientAddress:walletClient?.account.address}),queryFn14({walletClient}),{cacheTime,enabled:!!(enabled&&walletClient&&to),
staleTime,suspense,onError,onSettled,onSuccess});return Object.assign(accessList,{config:{mode:"prepared",...(accessList.isSuccess?accessList.data:void 0)}})}function useSendTransaction({accessList,account,chainId,data:data_,gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,mode,nonce,to,value,onError,onMutate,onSettled,onSuccess}={}){const {data,error,isError,isIdle,isLoading,isSuccess,mutate,mutateAsync,reset,status,variables}=useMutation([{entity:"sendTransaction",accessList,account,chainId,data:data_,
gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,mode,nonce,to,value}],mutationFn7,{onError,onMutate,onSettled,onSuccess});onError=React20.useCallback(args=>mutate({chainId,mode,...(args||{accessList,account,chainId,data:data_,gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,mode,nonce,value,to})}),[accessList,account,chainId,data_,gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,mode,mutate,nonce,to,value]);onMutate=React20.useCallback(args=>mutateAsync({chainId,mode,...(args||{accessList,account,chainId,
data:data_,gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,mode,nonce,value,to})}),[accessList,account,chainId,data_,gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,mode,mutateAsync,nonce,to,value]);return{data,error,isError,isIdle,isLoading,isSuccess,reset,sendTransaction:"prepared"!==mode||to?onError:void 0,sendTransactionAsync:"prepared"!==mode||to?onMutate:void 0,status,variables}}function queryKey15({chainId,hash,scopeKey}){return[{entity:"transaction",chainId,hash,scopeKey}]}function queryFn15({queryKey:[{chainId,
hash}]}){if(!hash)throw Error("hash is required");return(0,require$_CIRCA_wagmi_SLASH_core.fetchTransaction)({chainId,hash})}function useTransaction({cacheTime=0,chainId:chainId_,enabled=!0,hash,scopeKey,staleTime,suspense,onError,onSettled,onSuccess}={}){chainId_=useChainId({chainId:chainId_});return useQuery(queryKey15({chainId:chainId_,hash,scopeKey}),queryFn15,{cacheTime,enabled:!(!enabled||!hash),staleTime,suspense,onError,onSettled,onSuccess})}function queryKey16({confirmations,chainId,hash,
scopeKey,timeout}){return[{entity:"waitForTransaction",confirmations,chainId,hash,scopeKey,timeout}]}function queryFn16({onReplaced}){return({queryKey:[{chainId,confirmations,hash,timeout}]})=>{if(!hash)throw Error("hash is required");return(0,require$_CIRCA_wagmi_SLASH_core.waitForTransaction)({chainId,confirmations,hash,onReplaced,timeout})}}function useWaitForTransaction({chainId:chainId_,confirmations,hash,timeout,cacheTime,enabled=!0,scopeKey,staleTime,suspense,onError,onReplaced,onSettled,onSuccess}=
{}){chainId_=useChainId({chainId:chainId_});return useQuery(queryKey16({chainId:chainId_,confirmations,hash,scopeKey,timeout}),queryFn16({onReplaced}),{cacheTime,enabled:!(!enabled||!hash),staleTime,suspense,onError,onSettled,onSuccess})}function useWatchPendingTransactions({chainId:chainId_,enabled=!0,listener}){chainId_=useChainId({chainId:chainId_});const publicClient=usePublicClient({chainId:chainId_}),webSocketPublicClient=useWebSocketPublicClient({chainId:chainId_});React21.useEffect(()=>{if(enabled)return(webSocketPublicClient??
publicClient).watchPendingTransactions({onTransactions:listener})},[enabled,listener,publicClient,webSocketPublicClient])}Object.defineProperties(exports,{__esModule:{enumerable:!0,value:!0},ChainMismatchError:{enumerable:!0,get:function(){return require$_CIRCA_wagmi_SLASH_core.ChainMismatchError}},ChainNotConfiguredError:{enumerable:!0,get:function(){return require$_CIRCA_wagmi_SLASH_core.ChainNotConfiguredError}},ConfigChainsNotFound:{enumerable:!0,get:function(){return require$_CIRCA_wagmi_SLASH_core.ConfigChainsNotFound}},
Connector:{enumerable:!0,get:function(){return require$_CIRCA_wagmi_SLASH_core.Connector}},ConnectorAlreadyConnectedError:{enumerable:!0,get:function(){return require$_CIRCA_wagmi_SLASH_core.ConnectorAlreadyConnectedError}},ConnectorNotFoundError:{enumerable:!0,get:function(){return require$_CIRCA_wagmi_SLASH_core.ConnectorNotFoundError}},Context:{enumerable:!0,get:function(){return Context}},SwitchChainNotSupportedError:{enumerable:!0,get:function(){return require$_CIRCA_wagmi_SLASH_core.SwitchChainNotSupportedError}},
WagmiConfig:{enumerable:!0,get:function(){return WagmiConfig}},configureChains:{enumerable:!0,get:function(){return require$_CIRCA_wagmi_SLASH_core.configureChains}},createConfig:{enumerable:!0,get:function(){return createConfig}},createStorage:{enumerable:!0,get:function(){return require$_CIRCA_wagmi_SLASH_core.createStorage}},deepEqual:{enumerable:!0,get:function(){return require$_CIRCA_wagmi_SLASH_core.deepEqual}},deserialize:{enumerable:!0,get:function(){return require$_CIRCA_wagmi_SLASH_core.deserialize}},
erc20ABI:{enumerable:!0,get:function(){return require$_CIRCA_wagmi_SLASH_core.erc20ABI}},erc4626ABI:{enumerable:!0,get:function(){return require$_CIRCA_wagmi_SLASH_core.erc4626ABI}},erc721ABI:{enumerable:!0,get:function(){return require$_CIRCA_wagmi_SLASH_core.erc721ABI}},mainnet:{enumerable:!0,get:function(){return require$viem_SLASH_chains.mainnet}},paginatedIndexesConfig:{enumerable:!0,get:function(){return paginatedIndexesConfig}},readContracts:{enumerable:!0,get:function(){return require$_CIRCA_wagmi_SLASH_core.readContracts}},
sepolia:{enumerable:!0,get:function(){return require$viem_SLASH_chains.sepolia}},serialize:{enumerable:!0,get:function(){return require$_CIRCA_wagmi_SLASH_core.serialize}},useAccount:{enumerable:!0,get:function(){return useAccount}},useBalance:{enumerable:!0,get:function(){return useBalance}},useBlockNumber:{enumerable:!0,get:function(){return useBlockNumber}},useChainId:{enumerable:!0,get:function(){return useChainId}},useConfig:{enumerable:!0,get:function(){return useConfig}},useConnect:{enumerable:!0,
get:function(){return useConnect}},useContractEvent:{enumerable:!0,get:function(){return useContractEvent}},useContractInfiniteReads:{enumerable:!0,get:function(){return useContractInfiniteReads}},useContractRead:{enumerable:!0,get:function(){return useContractRead}},useContractReads:{enumerable:!0,get:function(){return useContractReads}},useContractWrite:{enumerable:!0,get:function(){return useContractWrite}},useDisconnect:{enumerable:!0,get:function(){return useDisconnect}},useEnsAddress:{enumerable:!0,
get:function(){return useEnsAddress}},useEnsAvatar:{enumerable:!0,get:function(){return useEnsAvatar}},useEnsName:{enumerable:!0,get:function(){return useEnsName}},useEnsResolver:{enumerable:!0,get:function(){return useEnsResolver}},useFeeData:{enumerable:!0,get:function(){return useFeeData}},useInfiniteQuery:{enumerable:!0,get:function(){return useInfiniteQuery}},useMutation:{enumerable:!0,get:function(){return useMutation}},useNetwork:{enumerable:!0,get:function(){return useNetwork}},usePrepareContractWrite:{enumerable:!0,
get:function(){return usePrepareContractWrite}},usePrepareSendTransaction:{enumerable:!0,get:function(){return usePrepareSendTransaction}},usePublicClient:{enumerable:!0,get:function(){return usePublicClient}},useQuery:{enumerable:!0,get:function(){return useQuery}},useQueryClient:{enumerable:!0,get:function(){return useQueryClient2}},useSendTransaction:{enumerable:!0,get:function(){return useSendTransaction}},useSignMessage:{enumerable:!0,get:function(){return useSignMessage}},useSignTypedData:{enumerable:!0,
get:function(){return useSignTypedData}},useSwitchNetwork:{enumerable:!0,get:function(){return useSwitchNetwork}},useToken:{enumerable:!0,get:function(){return useToken}},useTransaction:{enumerable:!0,get:function(){return useTransaction}},useWaitForTransaction:{enumerable:!0,get:function(){return useWaitForTransaction}},useWalletClient:{enumerable:!0,get:function(){return useWalletClient}},useWatchPendingTransactions:{enumerable:!0,get:function(){return useWatchPendingTransactions}},useWebSocketPublicClient:{enumerable:!0,
get:function(){return useWebSocketPublicClient}}});var require$_CIRCA_tanstack_SLASH_query_sync_storage_persister=require("module$node_modules$$tanstack$query_sync_storage_persister$build$lib$index"),require$_CIRCA_tanstack_SLASH_react_query=require("module$node_modules$$tanstack$react_query$build$lib$index"),require$_CIRCA_tanstack_SLASH_react_query_persist_client=require("module$node_modules$$tanstack$react_query_persist_client$build$lib$index"),require$_CIRCA_wagmi_SLASH_core=require("module$node_modules$$wagmi$core$dist$index"),
React=require("module$node_modules$react$index"),React9=require("module$node_modules$react$index"),React2=require("module$node_modules$react$index"),pkg=require("module$node_modules$use_sync_external_store$shim$index"),require$use_sync_external_store_SLASH_shim_SLASH_with_selector_DOT_js=require("module$node_modules$use_sync_external_store$shim$with_selector"),React3=require("module$node_modules$react$index"),React4=require("module$node_modules$react$index"),React7=require("module$node_modules$react$index"),
React5=require("module$node_modules$react$index"),React6=require("module$node_modules$react$index"),React8=require("module$node_modules$react$index"),React10=require("module$node_modules$react$index"),React11=require("module$node_modules$react$index"),require$react=require("module$node_modules$react$index"),React12=require("module$node_modules$react$index"),React13=require("module$node_modules$react$index"),React14=require("module$node_modules$react$index"),React15=require("module$node_modules$react$index"),
React16=require("module$node_modules$react$index"),React17=require("module$node_modules$react$index"),React18=require("module$node_modules$react$index"),require$_CIRCA_wagmi_SLASH_core_SLASH_internal=require("module$node_modules$$wagmi$core$dist$internal$index"),React19=require("module$node_modules$react$index"),React20=require("module$node_modules$react$index"),React21=require("module$node_modules$react$index"),require$viem_SLASH_chains=require("module$node_modules$viem$_cjs$chains$index");"use client";
var Context=React.createContext(void 0),queryClientContext=React.createContext(void 0),useSyncExternalStore2=pkg.useSyncExternalStore,useQueryClient2=()=>(0,require$_CIRCA_tanstack_SLASH_react_query.useQueryClient)({context:queryClientContext}),mutationFn=args=>{const {connector,chainId}=args;if(!connector)throw Error("connector is required");return(0,require$_CIRCA_wagmi_SLASH_core.connect)({connector,chainId})},mutationKey2=[{entity:"disconnect"}],mutationFn2=()=>(0,require$_CIRCA_wagmi_SLASH_core.disconnect)(),
mutationFn3=args=>{({message:args}=args);if(!args)throw Error("message is required");return(0,require$_CIRCA_wagmi_SLASH_core.signMessage)({message:args})},mutationFn5=args=>{({chainId:args}=args);if(!args)throw Error("chainId is required");return(0,require$_CIRCA_wagmi_SLASH_core.switchNetwork)({chainId:args})},mutationFn7=({accessList,account,chainId,data,gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,mode,nonce,to,value})=>{if(!to)throw Error("to is required.");return(0,require$_CIRCA_wagmi_SLASH_core.sendTransaction)({accessList,
account,chainId,data,gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,mode,nonce,to,value})}}
//# sourceMappingURL=module$node_modules$wagmi$dist$index.js.map
