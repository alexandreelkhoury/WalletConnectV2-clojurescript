shadow$provide.module$node_modules$zustand$middleware=function(global,require,module,exports){function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i],key;for(key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target};return _extends.apply(this,arguments)}function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var target={},sourceKeys=Object.keys(source),
i;for(i=0;i<sourceKeys.length;i++){var key=sourceKeys[i];0<=excluded.indexOf(key)||(target[key]=source[key])}return target}function createJSONStorage(getStorage,options){try{var storage=getStorage()}catch(e){return}return{getItem:function(name){var _getItem,parse=function(str){return null===str?null:JSON.parse(str,null==options?void 0:options.reviver)};name=null!=(_getItem=storage.getItem(name))?_getItem:null;return name instanceof Promise?name.then(parse):parse(name)},setItem:function(name,newValue){return storage.setItem(name,
JSON.stringify(newValue,null==options?void 0:options.replacer))},removeItem:function(name){return storage.removeItem(name)}}}var _excluded=["enabled","anonymousActionType","store"],_excluded2=["connection"],trackedConnections=new Map,getTrackedConnectionState=function(name){return(name=trackedConnections.get(name))?Object.fromEntries(Object.entries(name.stores).map(function(_ref){return[_ref[0],_ref[1].getState()]})):{}},extractConnectionInformation=function(store,extensionConnector,options){if(void 0===
store)return{type:"untracked",connection:extensionConnector.connect(options)};var existingConnection=trackedConnections.get(options.name);if(existingConnection)return _extends({type:"tracked",store},existingConnection);extensionConnector={connection:extensionConnector.connect(options),stores:{}};trackedConnections.set(options.name,extensionConnector);return _extends({type:"tracked",store},extensionConnector)},parseJsonThen=function(stringified,f){try{var parsed=JSON.parse(stringified)}catch(e){console.error("[zustand devtools middleware] Could not parse the received json",
e)}void 0!==parsed&&f(parsed)},toThenable=function toThenable(fn){return function(input){try{var result=fn(input);return result instanceof Promise?result:{then:function(onFulfilled){return toThenable(onFulfilled)(result)},catch:function(_onRejected){return this}}}catch(e){return{then:function(_onFulfilled){return this},catch:function(onRejected){return toThenable(onRejected)(e)}}}}},oldImpl=function(config,baseOptions){return function(set,get,api){var options=_extends({getStorage:function(){return localStorage},
serialize:JSON.stringify,deserialize:JSON.parse,partialize:function(state){return state},version:0,merge:function(persistedState,currentState){return _extends({},currentState,persistedState)}},baseOptions),_hasHydrated=!1,hydrationListeners=new Set,finishHydrationListeners=new Set;try{var storage=options.getStorage()}catch(e){}if(!storage)return config(function(){console.warn("[zustand persist middleware] Unable to update item '"+options.name+"', the given storage is currently unavailable.");set.apply(void 0,
arguments)},get,api);var thenableSerialize=toThenable(options.serialize),setItem=function(){var state=options.partialize(_extends({},get())),errorInSync;state=thenableSerialize({state,version:options.version}).then(function(serializedValue){return storage.setItem(options.name,serializedValue)}).catch(function(e){errorInSync=e});if(errorInSync)throw errorInSync;return state},savedSetState=api.setState;api.setState=function(state,replace){savedSetState(state,replace);void setItem()};var configResult=
config(function(){set.apply(void 0,arguments);void setItem()},get,api),stateFromStorage,hydrate=function(){if(storage){_hasHydrated=!1;hydrationListeners.forEach(function(cb){return cb(get())});var postRehydrationCallback=(null==options.onRehydrateStorage?void 0:options.onRehydrateStorage(get()))||void 0;return toThenable(storage.getItem.bind(storage))(options.name).then(function(storageValue){if(storageValue)return options.deserialize(storageValue)}).then(function(deserializedStorageValue){if(deserializedStorageValue)if("number"===
typeof deserializedStorageValue.version&&deserializedStorageValue.version!==options.version){if(options.migrate)return options.migrate(deserializedStorageValue.state,deserializedStorageValue.version);console.error("State loaded from storage couldn't be migrated since no migrate function was provided")}else return deserializedStorageValue.state}).then(function(migratedState){var _get;stateFromStorage=options.merge(migratedState,null!=(_get=get())?_get:configResult);set(stateFromStorage,!0);return setItem()}).then(function(){null==
postRehydrationCallback?void 0:postRehydrationCallback(stateFromStorage,void 0);_hasHydrated=!0;finishHydrationListeners.forEach(function(cb){return cb(stateFromStorage)})}).catch(function(e){null==postRehydrationCallback?void 0:postRehydrationCallback(void 0,e)})}};api.persist={setOptions:function(newOptions){options=_extends({},options,newOptions);newOptions.getStorage&&(storage=newOptions.getStorage())},clearStorage:function(){var _storage;null==(_storage=storage)?void 0:_storage.removeItem(options.name)},
getOptions:function(){return options},rehydrate:function(){return hydrate()},hasHydrated:function(){return _hasHydrated},onHydrate:function(cb){hydrationListeners.add(cb);return function(){hydrationListeners.delete(cb)}},onFinishHydration:function(cb){finishHydrationListeners.add(cb);return function(){finishHydrationListeners.delete(cb)}}};hydrate();return stateFromStorage||configResult}},newImpl=function(config,baseOptions){return function(set,get,api){var options=_extends({storage:createJSONStorage(function(){return localStorage}),
partialize:function(state){return state},version:0,merge:function(persistedState,currentState){return _extends({},currentState,persistedState)}},baseOptions),_hasHydrated2=!1,hydrationListeners=new Set,finishHydrationListeners=new Set,storage=options.storage;if(!storage)return config(function(){console.warn("[zustand persist middleware] Unable to update item '"+options.name+"', the given storage is currently unavailable.");set.apply(void 0,arguments)},get,api);var setItem=function(){var state=options.partialize(_extends({},
get()));return storage.setItem(options.name,{state,version:options.version})},savedSetState=api.setState;api.setState=function(state,replace){savedSetState(state,replace);void setItem()};var configResult=config(function(){set.apply(void 0,arguments);void setItem()},get,api),stateFromStorage,hydrate=function(){var _get3;if(storage){_hasHydrated2=!1;hydrationListeners.forEach(function(cb){var _get2;return cb(null!=(_get2=get())?_get2:configResult)});var postRehydrationCallback=(null==options.onRehydrateStorage?
void 0:options.onRehydrateStorage(null!=(_get3=get())?_get3:configResult))||void 0;return toThenable(storage.getItem.bind(storage))(options.name).then(function(deserializedStorageValue){if(deserializedStorageValue)if("number"===typeof deserializedStorageValue.version&&deserializedStorageValue.version!==options.version){if(options.migrate)return options.migrate(deserializedStorageValue.state,deserializedStorageValue.version);console.error("State loaded from storage couldn't be migrated since no migrate function was provided")}else return deserializedStorageValue.state}).then(function(migratedState){var _get4;
stateFromStorage=options.merge(migratedState,null!=(_get4=get())?_get4:configResult);set(stateFromStorage,!0);return setItem()}).then(function(){null==postRehydrationCallback?void 0:postRehydrationCallback(stateFromStorage,void 0);stateFromStorage=get();_hasHydrated2=!0;finishHydrationListeners.forEach(function(cb){return cb(stateFromStorage)})}).catch(function(e){null==postRehydrationCallback?void 0:postRehydrationCallback(void 0,e)})}};api.persist={setOptions:function(newOptions){options=_extends({},
options,newOptions);newOptions.storage&&(storage=newOptions.storage)},clearStorage:function(){var _storage2;null==(_storage2=storage)?void 0:_storage2.removeItem(options.name)},getOptions:function(){return options},rehydrate:function(){return hydrate()},hasHydrated:function(){return _hasHydrated2},onHydrate:function(cb){hydrationListeners.add(cb);return function(){hydrationListeners.delete(cb)}},onFinishHydration:function(cb){finishHydrationListeners.add(cb);return function(){finishHydrationListeners.delete(cb)}}};
options.skipHydration||hydrate();return stateFromStorage||configResult}};exports.combine=function(initialState,create){return function(){return Object.assign({},initialState,create.apply(void 0,arguments))}};exports.createJSONStorage=createJSONStorage;exports.devtools=function(fn,devtoolsOptions){void 0===devtoolsOptions&&(devtoolsOptions={});return function(set,get,api){var _devtoolsOptions=devtoolsOptions,enabled=_devtoolsOptions.enabled,anonymousActionType=_devtoolsOptions.anonymousActionType,
store=_devtoolsOptions.store,options=_objectWithoutPropertiesLoose(_devtoolsOptions,_excluded);try{var extensionConnector=(null!=enabled?enabled:!0)&&window.__REDUX_DEVTOOLS_EXTENSION__}catch(e){}if(!extensionConnector)return enabled&&console.warn("[zustand devtools middleware] Please install/enable Redux devtools extension"),fn(set,get,api);_devtoolsOptions=extractConnectionInformation(store,extensionConnector,options);var connection=_devtoolsOptions.connection,connectionInformation=_objectWithoutPropertiesLoose(_devtoolsOptions,
_excluded2),isRecording=!0;api.setState=function(state,replace,nameOrAction){var _extends2;state=set(state,replace);if(!isRecording)return state;nameOrAction=void 0===nameOrAction?{type:anonymousActionType||"anonymous"}:"string"===typeof nameOrAction?{type:nameOrAction}:nameOrAction;if(void 0===store)return null==connection?void 0:connection.send(nameOrAction,get()),state;null==connection?void 0:connection.send(_extends({},nameOrAction,{type:store+"/"+nameOrAction.type}),_extends({},getTrackedConnectionState(options.name),
(_extends2={},_extends2[store]=api.getState(),_extends2)));return state};var setStateFromDevtools=function(){var originalIsRecording=isRecording;isRecording=!1;set.apply(void 0,arguments);isRecording=originalIsRecording},initialState=fn(api.setState,get,api);"untracked"===connectionInformation.type?null==connection?void 0:connection.init(initialState):(connectionInformation.stores[connectionInformation.store]=api,null==connection?void 0:connection.init(Object.fromEntries(Object.entries(connectionInformation.stores).map(function(_ref2){var key=
_ref2[0];_ref2=_ref2[1];return[key,key===connectionInformation.store?initialState:_ref2.getState()]}))));if(api.dispatchFromDevtools&&"function"===typeof api.dispatch){var didWarnAboutReservedActionType=!1,originalDispatch=api.dispatch;api.dispatch=function(){for(var _len=arguments.length,a=Array(_len),_key=0;_key<_len;_key++)a[_key]=arguments[_key];"__setState"!==a[0].type||didWarnAboutReservedActionType||(console.warn('[zustand devtools middleware] "__setState" action type is reserved to set state from the devtools. Avoid using it.'),
didWarnAboutReservedActionType=!0);originalDispatch.apply(void 0,a)}}connection.subscribe(function(message){switch(message.type){case "ACTION":if("string"!==typeof message.payload){console.error("[zustand devtools middleware] Unsupported action format");break}return parseJsonThen(message.payload,function(action){"__setState"===action.type?void 0===store?setStateFromDevtools(action.state):(1!==Object.keys(action.state).length&&console.error('\n                    [zustand devtools middleware] Unsupported __setState action format. \n                    When using \'store\' option in devtools(), the \'state\' should have only one key, which is a value of \'store\' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { "type": "__setState", "state": { "abc123Store": { "foo": "bar" } } }\n                    '),
action=action.state[store],void 0!==action&&null!==action&&JSON.stringify(api.getState())!==JSON.stringify(action)&&setStateFromDevtools(action)):api.dispatchFromDevtools&&"function"===typeof api.dispatch&&api.dispatch(action)});case "DISPATCH":switch(message.payload.type){case "RESET":return setStateFromDevtools(initialState),void 0===store?null==connection?void 0:connection.init(api.getState()):null==connection?void 0:connection.init(getTrackedConnectionState(options.name));case "COMMIT":if(void 0===
store){null==connection?void 0:connection.init(api.getState());break}return null==connection?void 0:connection.init(getTrackedConnectionState(options.name));case "ROLLBACK":return parseJsonThen(message.state,function(state){void 0===store?(setStateFromDevtools(state),null==connection?void 0:connection.init(api.getState())):(setStateFromDevtools(state[store]),null==connection?void 0:connection.init(getTrackedConnectionState(options.name)))});case "JUMP_TO_STATE":case "JUMP_TO_ACTION":return parseJsonThen(message.state,
function(state){void 0===store?setStateFromDevtools(state):JSON.stringify(api.getState())!==JSON.stringify(state[store])&&setStateFromDevtools(state[store])});case "IMPORT_STATE":var _nextLiftedState$comp;message=message.payload.nextLiftedState;var lastComputedState=null==(_nextLiftedState$comp=message.computedStates.slice(-1)[0])?void 0:_nextLiftedState$comp.state;if(!lastComputedState)break;void 0===store?setStateFromDevtools(lastComputedState):setStateFromDevtools(lastComputedState[store]);null==
connection?void 0:connection.send(null,message);break;case "PAUSE_RECORDING":return isRecording=!isRecording}}});return initialState}};exports.persist=function(config,baseOptions){return"getStorage"in baseOptions||"serialize"in baseOptions||"deserialize"in baseOptions?(console.warn("[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead."),oldImpl(config,baseOptions)):newImpl(config,baseOptions)};exports.redux=function(reducer,initial){return function(set,
_get,api){api.dispatch=function(action){set(function(state){return reducer(state,action)},!1,action);return action};api.dispatchFromDevtools=!0;return _extends({dispatch:function(){return api.dispatch.apply(api,arguments)}},initial)}};exports.subscribeWithSelector=function(fn){return function(set,get,api){var origSubscribe=api.subscribe;api.subscribe=function(selector,optListener,options){var listener=selector;if(optListener){var equalityFn=(null==options?void 0:options.equalityFn)||Object.is,currentSlice=
selector(api.getState());listener=function(state){state=selector(state);if(!equalityFn(currentSlice,state)){var previousSlice=currentSlice;optListener(currentSlice=state,previousSlice)}};null!=options&&options.fireImmediately&&optListener(currentSlice,currentSlice)}return origSubscribe(listener)};return fn(set,get,api)}}}
//# sourceMappingURL=module$node_modules$zustand$middleware.js.map
