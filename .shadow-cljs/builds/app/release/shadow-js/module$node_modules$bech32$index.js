["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/bech32/index.js"],"~:js","shadow$provide[332]=function(S,A,V,q){function F(u){var p=u>>25;return(u&33554431)<<5^-(p>>0&1)&996825010^-(p>>1&1)&642813549^-(p>>2&1)&513874426^-(p>>3&1)&1027748829^-(p>>4&1)&705979059}function G(u){for(var p=1,n=0;n<u.length;++n){var l=u.charCodeAt(n);if(33>l||126<l)return\"Invalid prefix (\"+u+\")\";p=F(p)^l>>5}p=F(p);for(n=0;n<u.length;++n)l=u.charCodeAt(n),p=F(p)^l&31;return p}function r(u,p){if(8>u.length)return u+\" too short\";if(u.length>(p||90))return\"Exceeds length limit\";p=u.toLowerCase();\nvar n=u.toUpperCase();if(u!==p&&u!==n)return\"Mixed-case string \"+u;u=p;n=u.lastIndexOf(\"1\");if(-1===n)return\"No separator character for \"+u;if(0===n)return\"Missing prefix for \"+u;p=u.slice(0,n);n=u.slice(n+1);if(6>n.length)return\"Data too short\";var l=G(p);if(\"string\"===typeof l)return l;for(var h=[],k=0;k<n.length;++k){var t=n.charAt(k),B=e[t];if(void 0===B)return\"Unknown character \"+t;l=F(l)^B;k+6>=n.length||h.push(B)}return 1!==l?\"Invalid checksum for \"+u:{prefix:p,words:h}}function y(u,p,n,l){for(var h=\n0,k=0,t=(1<<n)-1,B=[],E=0;E<u.length;++E)for(h=h<<p|u[E],k+=p;k>=n;)k-=n,B.push(h>>k&t);if(l)0<k&&B.push(h<<n-k&t);else{if(k>=p)return\"Excess padding\";if(h<<n-k&t)return\"Non-zero padding\"}return B}var e={};for(S=0;32>S;S++){A=\"qpzry9x8gf2tvdw0s3jn54khce6mua7l\".charAt(S);if(void 0!==e[A])throw new TypeError(A+\" is ambiguous\");e[A]=S}V.exports={decodeUnsafe:function(){var u=r.apply(null,arguments);if(\"object\"===typeof u)return u},decode:function(u){var p=r.apply(null,arguments);if(\"object\"===typeof p)return p;\nthrow Error(p);},encode:function(u,p,n){if(u.length+7+p.length>(n||90))throw new TypeError(\"Exceeds length limit\");u=u.toLowerCase();n=G(u);if(\"string\"===typeof n)throw Error(n);u+=\"1\";for(var l=0;l<p.length;++l){var h=p[l];if(0!==h>>5)throw Error(\"Non 5-bit word\");n=F(n)^h;u+=\"qpzry9x8gf2tvdw0s3jn54khce6mua7l\".charAt(h)}for(l=0;6>l;++l)n=F(n);n^=1;for(l=0;6>l;++l)u+=\"qpzry9x8gf2tvdw0s3jn54khce6mua7l\".charAt(n>>5*(5-l)&31);return u},toWordsUnsafe:function(u){u=y(u,8,5,!0);if(Array.isArray(u))return u},\ntoWords:function(u){u=y(u,8,5,!0);if(Array.isArray(u))return u;throw Error(u);},fromWordsUnsafe:function(u){u=y(u,5,8,!1);if(Array.isArray(u))return u},fromWords:function(u){u=y(u,5,8,!1);if(Array.isArray(u))return u;throw Error(u);}}}","~:source","shadow$provide[332] = function(global,require,module,exports) {\n'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') throw new Error(chk)\n\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction __decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) return str + ' too short'\n  if (str.length > LIMIT) return 'Exceeds length limit'\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) return 'No separator character for ' + str\n  if (split === 0) return 'Missing prefix for ' + str\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) return 'Data too short'\n\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') return chk\n\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) return 'Unknown character ' + c\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str\n  return { prefix: prefix, words: words }\n}\n\nfunction decodeUnsafe () {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n}\n\nfunction decode (str) {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n\n  throw new Error(res)\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding'\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\n  }\n\n  return result\n}\n\nfunction toWordsUnsafe (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n}\n\nfunction toWords (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nfunction fromWordsUnsafe (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n}\n\nfunction fromWords (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nmodule.exports = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode,\n  encode: encode,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n}\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["toWords","prefix","decode","words","fromWords","decodeUnsafe","fromWordsUnsafe","toWordsUnsafe","encode"]],"~:compiled-at",1695041440908,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$bech32$index.js\",\n\"lineCount\":5,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/bech32/index.js\"],\n\"sourcesContent\":[\"shadow$provide[332] = function(global,require,module,exports) {\\n'use strict'\\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\\n\\n// pre-compute lookup table\\nvar ALPHABET_MAP = {}\\nfor (var z = 0; z < ALPHABET.length; z++) {\\n  var x = ALPHABET.charAt(z)\\n\\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\\n  ALPHABET_MAP[x] = z\\n}\\n\\nfunction polymodStep (pre) {\\n  var b = pre >> 25\\n  return ((pre & 0x1FFFFFF) << 5) ^\\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\\n    (-((b >> 1) & 1) & 0x26508e6d) ^\\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\\n    (-((b >> 4) & 1) & 0x2a1462b3)\\n}\\n\\nfunction prefixChk (prefix) {\\n  var chk = 1\\n  for (var i = 0; i < prefix.length; ++i) {\\n    var c = prefix.charCodeAt(i)\\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\\n\\n    chk = polymodStep(chk) ^ (c >> 5)\\n  }\\n  chk = polymodStep(chk)\\n\\n  for (i = 0; i < prefix.length; ++i) {\\n    var v = prefix.charCodeAt(i)\\n    chk = polymodStep(chk) ^ (v & 0x1f)\\n  }\\n  return chk\\n}\\n\\nfunction encode (prefix, words, LIMIT) {\\n  LIMIT = LIMIT || 90\\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\\n\\n  prefix = prefix.toLowerCase()\\n\\n  // determine chk mod\\n  var chk = prefixChk(prefix)\\n  if (typeof chk === 'string') throw new Error(chk)\\n\\n  var result = prefix + '1'\\n  for (var i = 0; i < words.length; ++i) {\\n    var x = words[i]\\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\\n\\n    chk = polymodStep(chk) ^ x\\n    result += ALPHABET.charAt(x)\\n  }\\n\\n  for (i = 0; i < 6; ++i) {\\n    chk = polymodStep(chk)\\n  }\\n  chk ^= 1\\n\\n  for (i = 0; i < 6; ++i) {\\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\\n    result += ALPHABET.charAt(v)\\n  }\\n\\n  return result\\n}\\n\\nfunction __decode (str, LIMIT) {\\n  LIMIT = LIMIT || 90\\n  if (str.length < 8) return str + ' too short'\\n  if (str.length > LIMIT) return 'Exceeds length limit'\\n\\n  // don't allow mixed case\\n  var lowered = str.toLowerCase()\\n  var uppered = str.toUpperCase()\\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\\n  str = lowered\\n\\n  var split = str.lastIndexOf('1')\\n  if (split === -1) return 'No separator character for ' + str\\n  if (split === 0) return 'Missing prefix for ' + str\\n\\n  var prefix = str.slice(0, split)\\n  var wordChars = str.slice(split + 1)\\n  if (wordChars.length < 6) return 'Data too short'\\n\\n  var chk = prefixChk(prefix)\\n  if (typeof chk === 'string') return chk\\n\\n  var words = []\\n  for (var i = 0; i < wordChars.length; ++i) {\\n    var c = wordChars.charAt(i)\\n    var v = ALPHABET_MAP[c]\\n    if (v === undefined) return 'Unknown character ' + c\\n    chk = polymodStep(chk) ^ v\\n\\n    // not in the checksum?\\n    if (i + 6 >= wordChars.length) continue\\n    words.push(v)\\n  }\\n\\n  if (chk !== 1) return 'Invalid checksum for ' + str\\n  return { prefix: prefix, words: words }\\n}\\n\\nfunction decodeUnsafe () {\\n  var res = __decode.apply(null, arguments)\\n  if (typeof res === 'object') return res\\n}\\n\\nfunction decode (str) {\\n  var res = __decode.apply(null, arguments)\\n  if (typeof res === 'object') return res\\n\\n  throw new Error(res)\\n}\\n\\nfunction convert (data, inBits, outBits, pad) {\\n  var value = 0\\n  var bits = 0\\n  var maxV = (1 << outBits) - 1\\n\\n  var result = []\\n  for (var i = 0; i < data.length; ++i) {\\n    value = (value << inBits) | data[i]\\n    bits += inBits\\n\\n    while (bits >= outBits) {\\n      bits -= outBits\\n      result.push((value >> bits) & maxV)\\n    }\\n  }\\n\\n  if (pad) {\\n    if (bits > 0) {\\n      result.push((value << (outBits - bits)) & maxV)\\n    }\\n  } else {\\n    if (bits >= inBits) return 'Excess padding'\\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\\n  }\\n\\n  return result\\n}\\n\\nfunction toWordsUnsafe (bytes) {\\n  var res = convert(bytes, 8, 5, true)\\n  if (Array.isArray(res)) return res\\n}\\n\\nfunction toWords (bytes) {\\n  var res = convert(bytes, 8, 5, true)\\n  if (Array.isArray(res)) return res\\n\\n  throw new Error(res)\\n}\\n\\nfunction fromWordsUnsafe (words) {\\n  var res = convert(words, 5, 8, false)\\n  if (Array.isArray(res)) return res\\n}\\n\\nfunction fromWords (words) {\\n  var res = convert(words, 5, 8, false)\\n  if (Array.isArray(res)) return res\\n\\n  throw new Error(res)\\n}\\n\\nmodule.exports = {\\n  decodeUnsafe: decodeUnsafe,\\n  decode: decode,\\n  encode: encode,\\n  toWordsUnsafe: toWordsUnsafe,\\n  toWords: toWords,\\n  fromWordsUnsafe: fromWordsUnsafe,\\n  fromWords: fromWords\\n}\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"polymodStep\",\"pre\",\"b\",\"prefixChk\",\"prefix\",\"chk\",\"i\",\"length\",\"c\",\"charCodeAt\",\"v\",\"__decode\",\"str\",\"LIMIT\",\"lowered\",\"toLowerCase\",\"uppered\",\"toUpperCase\",\"split\",\"lastIndexOf\",\"slice\",\"wordChars\",\"words\",\"charAt\",\"ALPHABET_MAP\",\"undefined\",\"push\",\"convert\",\"data\",\"inBits\",\"outBits\",\"pad\",\"value\",\"bits\",\"maxV\",\"result\",\"z\",\"x\",\"ALPHABET\",\"TypeError\",\"decodeUnsafe\",\"res\",\"apply\",\"arguments\",\"decode\",\"Error\",\"encode\",\"toWordsUnsafe\",\"bytes\",\"Array\",\"isArray\",\"toWords\",\"fromWordsUnsafe\",\"fromWords\"]\n}\n"]