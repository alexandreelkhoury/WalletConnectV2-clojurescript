{
"version":3,
"file":"module$node_modules$$tanstack$react_query$build$lib$QueryClientProvider.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/@tanstack/react-query/build/lib/QueryClientProvider.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$tanstack$react_query$build$lib$QueryClientProvider\"] = function(global,require,module,exports) {\n'use client';\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar React = require('react');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nconst defaultContext = /*#__PURE__*/React__namespace.createContext(undefined);\nconst QueryClientSharingContext = /*#__PURE__*/React__namespace.createContext(false); // If we are given a context, we will use it.\n// Otherwise, if contextSharing is on, we share the first and at least one\n// instance of the context across the window\n// to ensure that if React Query is used across\n// different bundles or microfrontends they will\n// all use the same **instance** of context, regardless\n// of module scoping.\n\nfunction getQueryClientContext(context, contextSharing) {\n  if (context) {\n    return context;\n  }\n\n  if (contextSharing && typeof window !== 'undefined') {\n    if (!window.ReactQueryClientContext) {\n      window.ReactQueryClientContext = defaultContext;\n    }\n\n    return window.ReactQueryClientContext;\n  }\n\n  return defaultContext;\n}\n\nconst useQueryClient = ({\n  context\n} = {}) => {\n  const queryClient = React__namespace.useContext(getQueryClientContext(context, React__namespace.useContext(QueryClientSharingContext)));\n\n  if (!queryClient) {\n    throw new Error('No QueryClient set, use QueryClientProvider to set one');\n  }\n\n  return queryClient;\n};\nconst QueryClientProvider = ({\n  client,\n  children,\n  context,\n  contextSharing = false\n}) => {\n  React__namespace.useEffect(() => {\n    client.mount();\n    return () => {\n      client.unmount();\n    };\n  }, [client]);\n\n  if (process.env.NODE_ENV !== 'production' && contextSharing) {\n    client.getLogger().error(\"The contextSharing option has been deprecated and will be removed in the next major version\");\n  }\n\n  const Context = getQueryClientContext(context, contextSharing);\n  return /*#__PURE__*/React__namespace.createElement(QueryClientSharingContext.Provider, {\n    value: !context && contextSharing\n  }, /*#__PURE__*/React__namespace.createElement(Context.Provider, {\n    value: client\n  }, children));\n};\n\nexports.QueryClientProvider = QueryClientProvider;\nexports.defaultContext = defaultContext;\nexports.useQueryClient = useQueryClient;\n//# sourceMappingURL=QueryClientProvider.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","getQueryClientContext","context","contextSharing","window","ReactQueryClientContext","defaultContext","Object","defineProperty","value","React__namespace","_interopNamespace","e","__esModule","n","create","keys","forEach","k","d","getOwnPropertyDescriptor","get","enumerable","freeze","React","createContext","undefined","QueryClientSharingContext","QueryClientProvider","client","children","useEffect","mount","unmount","getLogger","error","Context","createElement","Provider","useQueryClient","queryClient","useContext","Error"]
}
