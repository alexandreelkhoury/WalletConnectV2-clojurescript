shadow$provide.module$node_modules$viem$_cjs$actions$public$watchEvent=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.watchEvent=void 0;const observe_js_1=require("module$node_modules$viem$_cjs$utils$observe"),poll_js_1=require("module$node_modules$viem$_cjs$utils$poll"),stringify_js_1=require("module$node_modules$viem$_cjs$utils$stringify"),abi_js_1=require("module$node_modules$viem$_cjs$errors$abi"),rpc_js_1=require("module$node_modules$viem$_cjs$errors$rpc"),
index_js_1=require("module$node_modules$viem$_cjs$utils$index"),createEventFilter_js_1=require("module$node_modules$viem$_cjs$actions$public$createEventFilter"),getBlockNumber_js_1=require("module$node_modules$viem$_cjs$actions$public$getBlockNumber"),getFilterChanges_js_1=require("module$node_modules$viem$_cjs$actions$public$getFilterChanges"),getLogs_js_1=require("module$node_modules$viem$_cjs$actions$public$getLogs"),uninstallFilter_js_1=require("module$node_modules$viem$_cjs$actions$public$uninstallFilter");
exports.watchEvent=function(client,{address,args:args$jscomp$0,batch=!0,event:event$jscomp$0,events,onError,onLogs,poll:poll_,pollingInterval=client.pollingInterval,strict:strict_}){const strict=strict_??!1,pollEvent=()=>{const observerId=(0,stringify_js_1.stringify)(["watchEvent",address,args$jscomp$0,batch,client.uid,event$jscomp$0,pollingInterval]);return(0,observe_js_1.observe)(observerId,{onLogs,onError},emit=>{let previousBlockNumber,filter,initialized=!1;const unwatch=(0,poll_js_1.poll)(async()=>
{if(initialized)try{let logs;if(filter)logs=await (0,getFilterChanges_js_1.getFilterChanges)(client,{filter});else{const blockNumber=await (0,getBlockNumber_js_1.getBlockNumber)(client);logs=previousBlockNumber&&previousBlockNumber!==blockNumber?await (0,getLogs_js_1.getLogs)(client,{address,args:args$jscomp$0,event:event$jscomp$0,events,fromBlock:previousBlockNumber+1n,toBlock:blockNumber}):[];previousBlockNumber=blockNumber}if(0!==logs.length)if(batch)emit.onLogs(logs);else logs.forEach(log=>emit.onLogs([log]))}catch(err){filter&&
err instanceof rpc_js_1.InvalidInputRpcError&&(initialized=!1),emit.onError?.(err)}else{try{filter=await (0,createEventFilter_js_1.createEventFilter)(client,{address,args:args$jscomp$0,event:event$jscomp$0,events,strict})}catch{}initialized=!0}},{emitOnBegin:!0,interval:pollingInterval});return async()=>{filter&&await (0,uninstallFilter_js_1.uninstallFilter)(client,{filter});unwatch()}})},subscribeEvent=()=>{let active=!0,unsubscribe=()=>active=!1;(async()=>{try{const events_=events??(event$jscomp$0?
[event$jscomp$0]:void 0);let topics=[];events_&&(topics=[events_.flatMap(event=>(0,index_js_1.encodeEventTopics)({abi:[event],eventName:event.name,args:args$jscomp$0}))],event$jscomp$0&&(topics=topics[0]));const {unsubscribe:unsubscribe_}=await client.transport.subscribe({params:["logs",{address,topics}],onData(data){if(active){data=data.result;try{const {eventName,args}=(0,index_js_1.decodeEventLog)({abi:events_,data:data.data,topics:data.topics,strict});var formatted=(0,index_js_1.formatLog)(data,
{args,eventName});onLogs([formatted])}catch(err){let eventName,isUnnamed;if(err instanceof abi_js_1.DecodeLogDataMismatch||err instanceof abi_js_1.DecodeLogTopicsMismatch){if(strict_)return;eventName=err.abiItem.name;isUnnamed=err.abiItem.inputs?.some(x=>!("name"in x&&x.name))}formatted=(0,index_js_1.formatLog)(data,{args:isUnnamed?[]:{},eventName});onLogs([formatted])}}},onError(error){onError?.(error)}});unsubscribe=unsubscribe_;active||unsubscribe()}catch(err){onError?.(err)}})();return unsubscribe};
return("undefined"!==typeof poll_?poll_:"webSocket"!==client.transport.type)?pollEvent():subscribeEvent()}}
//# sourceMappingURL=module$node_modules$viem$_cjs$actions$public$watchEvent.js.map
