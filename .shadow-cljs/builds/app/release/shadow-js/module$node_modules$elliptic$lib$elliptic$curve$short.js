["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/elliptic/lib/elliptic/curve/short.js"],"~:js","shadow$provide[77]=function(S,A,V,q){function F(p){e.call(this,\"short\",p);this.a=(new y(p.a,16)).toRed(this.red);this.b=(new y(p.b,16)).toRed(this.red);this.tinv=this.two.redInvm();this.zeroA=0===this.a.fromRed().cmpn(0);this.threeA=0===this.a.fromRed().sub(this.p).cmpn(-3);this.endo=this._getEndomorphism(p);this._endoWnafT1=Array(4);this._endoWnafT2=Array(4)}function G(p,n,l,h){e.BasePoint.call(this,p,\"affine\");null===n&&null===l?(this.y=this.x=null,this.inf=!0):(this.x=new y(n,16),this.y=new y(l,\n16),h&&(this.x.forceRed(this.curve.red),this.y.forceRed(this.curve.red)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.inf=!1)}function r(p,n,l,h){e.BasePoint.call(this,p,\"jacobian\");null===n&&null===l&&null===h?(this.y=this.x=this.curve.one,this.z=new y(0)):(this.x=new y(n,16),this.y=new y(l,16),this.z=new y(h,16));this.x.red||(this.x=this.x.toRed(this.curve.red));this.y.red||(this.y=this.y.toRed(this.curve.red));this.z.red||(this.z=this.z.toRed(this.curve.red));\nthis.zOne=this.z===this.curve.one}S=A(73);var y=A(70);q=A(76);var e=A(75),u=S.assert;q(F,e);V.exports=F;F.prototype._getEndomorphism=function(p){if(this.zeroA&&this.g&&this.n&&1===this.p.modn(3)){if(p.beta)var n=(new y(p.beta,16)).toRed(this.red);else n=this._getEndoRoots(this.p),n=0>n[0].cmp(n[1])?n[0]:n[1],n=n.toRed(this.red);if(p.lambda)var l=new y(p.lambda,16);else l=this._getEndoRoots(this.n),0===this.g.mul(l[0]).x.cmp(this.g.x.redMul(n))?l=l[0]:(l=l[1],u(0===this.g.mul(l).x.cmp(this.g.x.redMul(n))));\np=p.basis?p.basis.map(function(h){return{a:new y(h.a,16),b:new y(h.b,16)}}):this._getEndoBasis(l);return{beta:n,lambda:l,basis:p}}};F.prototype._getEndoRoots=function(p){var n=p===this.p?this.red:y.mont(p),l=(new y(2)).toRed(n).redInvm();p=l.redNeg();l=(new y(3)).toRed(n).redNeg().redSqrt().redMul(l);n=p.redAdd(l).fromRed();p=p.redSub(l).fromRed();return[n,p]};F.prototype._getEndoBasis=function(p){for(var n=this.n.ushrn(Math.floor(this.n.bitLength()/2)),l=this.n.clone(),h=new y(1),k=new y(0),t=new y(0),\nB=new y(1),E,H,D,C,I,M,P=0,J;0!==p.cmpn(0);){var T=l.div(p);J=l.sub(T.mul(p));I=t.sub(T.mul(h));T=B.sub(T.mul(k));if(!D&&0>J.cmp(n))E=M.neg(),H=h,D=J.neg(),C=I;else if(D&&2===++P)break;M=J;l=p;p=J;t=h;h=I;B=k;k=T}n=J.neg();M=D.sqr().add(C.sqr());0<=n.sqr().add(I.sqr()).cmp(M)&&(n=E,I=H);D.negative&&(D=D.neg(),C=C.neg());n.negative&&(n=n.neg(),I=I.neg());return[{a:D,b:C},{a:n,b:I}]};F.prototype._endoSplit=function(p){var n=this.endo.basis,l=n[0],h=n[1],k=h.b.mul(p).divRound(this.n),t=l.b.neg().mul(p).divRound(this.n);\nn=k.mul(l.a);var B=t.mul(h.a);l=k.mul(l.b);h=t.mul(h.b);p=p.sub(n).sub(B);n=l.add(h).neg();return{k1:p,k2:n}};F.prototype.pointFromX=function(p,n){p=new y(p,16);p.red||(p=p.toRed(this.red));var l=p.redSqr().redMul(p).redIAdd(p.redMul(this.a)).redIAdd(this.b),h=l.redSqrt();if(0!==h.redSqr().redSub(l).cmp(this.zero))throw Error(\"invalid point\");l=h.fromRed().isOdd();if(n&&!l||!n&&l)h=h.redNeg();return this.point(p,h)};F.prototype.validate=function(p){if(p.inf)return!0;var n=p.x;p=p.y;var l=this.a.redMul(n);\nn=n.redSqr().redMul(n).redIAdd(l).redIAdd(this.b);return 0===p.redSqr().redISub(n).cmpn(0)};F.prototype._endoWnafMulAdd=function(p,n,l){for(var h=this._endoWnafT1,k=this._endoWnafT2,t=0;t<p.length;t++){var B=this._endoSplit(n[t]),E=p[t],H=E._getBeta();B.k1.negative&&(B.k1.ineg(),E=E.neg(!0));B.k2.negative&&(B.k2.ineg(),H=H.neg(!0));h[2*t]=E;h[2*t+1]=H;k[2*t]=B.k1;k[2*t+1]=B.k2}p=this._wnafMulAdd(1,h,k,2*t,l);for(n=0;n<2*t;n++)h[n]=null,k[n]=null;return p};q(G,e.BasePoint);F.prototype.point=function(p,\nn,l){return new G(this,p,n,l)};F.prototype.pointFromJSON=function(p,n){return G.fromJSON(this,p,n)};G.prototype._getBeta=function(){if(this.curve.endo){var p=this.precomputed;if(p&&p.beta)return p.beta;var n=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(p){var l=this.curve,h=function(k){return l.point(k.x.redMul(l.endo.beta),k.y)};p.beta=n;n.precomputed={beta:null,naf:p.naf&&{wnd:p.naf.wnd,points:p.naf.points.map(h)},doubles:p.doubles&&{step:p.doubles.step,points:p.doubles.points.map(h)}}}return n}};\nG.prototype.toJSON=function(){return this.precomputed?[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}]:[this.x,this.y]};G.fromJSON=function(p,n,l){function h(t){return p.point(t[0],t[1],l)}\"string\"===typeof n&&(n=JSON.parse(n));var k=p.point(n[0],n[1],l);if(!n[2])return k;n=n[2];k.precomputed=\n{beta:null,doubles:n.doubles&&{step:n.doubles.step,points:[k].concat(n.doubles.points.map(h))},naf:n.naf&&{wnd:n.naf.wnd,points:[k].concat(n.naf.points.map(h))}};return k};G.prototype.inspect=function(){return this.isInfinity()?\"\\x3cEC Point Infinity\\x3e\":\"\\x3cEC Point x: \"+this.x.fromRed().toString(16,2)+\" y: \"+this.y.fromRed().toString(16,2)+\"\\x3e\"};G.prototype.isInfinity=function(){return this.inf};G.prototype.add=function(p){if(this.inf)return p;if(p.inf)return this;if(this.eq(p))return this.dbl();\nif(this.neg().eq(p)||0===this.x.cmp(p.x))return this.curve.point(null,null);var n=this.y.redSub(p.y);0!==n.cmpn(0)&&(n=n.redMul(this.x.redSub(p.x).redInvm()));p=n.redSqr().redISub(this.x).redISub(p.x);n=n.redMul(this.x.redSub(p)).redISub(this.y);return this.curve.point(p,n)};G.prototype.dbl=function(){if(this.inf)return this;var p=this.y.redAdd(this.y);if(0===p.cmpn(0))return this.curve.point(null,null);var n=this.curve.a,l=this.x.redSqr();p=p.redInvm();l=l.redAdd(l).redIAdd(l).redIAdd(n).redMul(p);\nn=l.redSqr().redISub(this.x.redAdd(this.x));l=l.redMul(this.x.redSub(n)).redISub(this.y);return this.curve.point(n,l)};G.prototype.getX=function(){return this.x.fromRed()};G.prototype.getY=function(){return this.y.fromRed()};G.prototype.mul=function(p){p=new y(p,16);return this.isInfinity()?this:this._hasDoubles(p)?this.curve._fixedNafMul(this,p):this.curve.endo?this.curve._endoWnafMulAdd([this],[p]):this.curve._wnafMul(this,p)};G.prototype.mulAdd=function(p,n,l){n=[this,n];p=[p,l];return this.curve.endo?\nthis.curve._endoWnafMulAdd(n,p):this.curve._wnafMulAdd(1,n,p,2)};G.prototype.jmulAdd=function(p,n,l){n=[this,n];p=[p,l];return this.curve.endo?this.curve._endoWnafMulAdd(n,p,!0):this.curve._wnafMulAdd(1,n,p,2,!0)};G.prototype.eq=function(p){return this===p||this.inf===p.inf&&(this.inf||0===this.x.cmp(p.x)&&0===this.y.cmp(p.y))};G.prototype.neg=function(p){if(this.inf)return this;var n=this.curve.point(this.x,this.y.redNeg());if(p&&this.precomputed){p=this.precomputed;var l=function(h){return h.neg()};\nn.precomputed={naf:p.naf&&{wnd:p.naf.wnd,points:p.naf.points.map(l)},doubles:p.doubles&&{step:p.doubles.step,points:p.doubles.points.map(l)}}}return n};G.prototype.toJ=function(){return this.inf?this.curve.jpoint(null,null,null):this.curve.jpoint(this.x,this.y,this.curve.one)};q(r,e.BasePoint);F.prototype.jpoint=function(p,n,l){return new r(this,p,n,l)};r.prototype.toP=function(){if(this.isInfinity())return this.curve.point(null,null);var p=this.z.redInvm(),n=p.redSqr(),l=this.x.redMul(n);p=this.y.redMul(n).redMul(p);\nreturn this.curve.point(l,p)};r.prototype.neg=function(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z)};r.prototype.add=function(p){if(this.isInfinity())return p;if(p.isInfinity())return this;var n=p.z.redSqr(),l=this.z.redSqr(),h=this.x.redMul(n),k=p.x.redMul(l);n=this.y.redMul(n.redMul(p.z));l=p.y.redMul(l.redMul(this.z));k=h.redSub(k);l=n.redSub(l);if(0===k.cmpn(0))return 0!==l.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var t=k.redSqr(),B=t.redMul(k);t=h.redMul(t);h=l.redSqr().redIAdd(B).redISub(t).redISub(t);\nn=l.redMul(t.redISub(h)).redISub(n.redMul(B));p=this.z.redMul(p.z).redMul(k);return this.curve.jpoint(h,n,p)};r.prototype.mixedAdd=function(p){if(this.isInfinity())return p.toJ();if(p.isInfinity())return this;var n=this.z.redSqr(),l=this.x,h=p.x.redMul(n),k=this.y;p=p.y.redMul(n).redMul(this.z);h=l.redSub(h);p=k.redSub(p);if(0===h.cmpn(0))return 0!==p.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var t=h.redSqr();n=t.redMul(h);t=l.redMul(t);l=p.redSqr().redIAdd(n).redISub(t).redISub(t);k=p.redMul(t.redISub(l)).redISub(k.redMul(n));\nh=this.z.redMul(h);return this.curve.jpoint(l,k,h)};r.prototype.dblp=function(p){if(0===p||this.isInfinity())return this;if(!p)return this.dbl();var n;if(this.curve.zeroA||this.curve.threeA){var l=this;for(n=0;n<p;n++)l=l.dbl();return l}l=this.curve.a;var h=this.curve.tinv,k=this.x;n=this.y;var t=this.z,B=t.redSqr().redSqr(),E=n.redAdd(n);for(n=0;n<p;n++){var H=k.redSqr(),D=E.redSqr(),C=D.redSqr();H=H.redAdd(H).redIAdd(H).redIAdd(l.redMul(B));D=k.redMul(D);k=H.redSqr().redISub(D.redAdd(D));D=D.redISub(k);\nH=H.redMul(D);H=H.redIAdd(H).redISub(C);t=E.redMul(t);n+1<p&&(B=B.redMul(C));E=H}return this.curve.jpoint(k,E.redMul(h),t)};r.prototype.dbl=function(){return this.isInfinity()?this:this.curve.zeroA?this._zeroDbl():this.curve.threeA?this._threeDbl():this._dbl()};r.prototype._zeroDbl=function(){if(this.zOne){var p=this.x.redSqr();var n=this.y.redSqr();var l=n.redSqr();n=this.x.redAdd(n).redSqr().redISub(p).redISub(l);n=n.redIAdd(n);p=p.redAdd(p).redIAdd(p);var h=p.redSqr().redISub(n).redISub(n),k=l.redIAdd(l);\nk=k.redIAdd(k);k=k.redIAdd(k);l=h;n=p.redMul(n.redISub(h)).redISub(k);p=this.y.redAdd(this.y)}else p=this.x.redSqr(),n=this.y.redSqr(),l=n.redSqr(),n=this.x.redAdd(n).redSqr().redISub(p).redISub(l),n=n.redIAdd(n),p=p.redAdd(p).redIAdd(p),h=p.redSqr(),k=l.redIAdd(l),k=k.redIAdd(k),k=k.redIAdd(k),l=h.redISub(n).redISub(n),n=p.redMul(n.redISub(l)).redISub(k),p=this.y.redMul(this.z),p=p.redIAdd(p);return this.curve.jpoint(l,n,p)};r.prototype._threeDbl=function(){var p;if(this.zOne){var n=this.x.redSqr();\nvar l=this.y.redSqr();var h=l.redSqr();l=this.x.redAdd(l).redSqr().redISub(n).redISub(h);l=l.redIAdd(l);var k=n.redAdd(n).redIAdd(n).redIAdd(this.curve.a);n=p=k.redSqr().redISub(l).redISub(l);h=h.redIAdd(h);h=h.redIAdd(h);h=h.redIAdd(h);h=k.redMul(l.redISub(p)).redISub(h);p=this.y.redAdd(this.y)}else p=this.z.redSqr(),l=this.y.redSqr(),n=this.x.redMul(l),h=this.x.redSub(p).redMul(this.x.redAdd(p)),h=h.redAdd(h).redIAdd(h),k=n.redIAdd(n),k=k.redIAdd(k),n=k.redAdd(k),n=h.redSqr().redISub(n),p=this.y.redAdd(this.z).redSqr().redISub(l).redISub(p),\nl=l.redSqr(),l=l.redIAdd(l),l=l.redIAdd(l),l=l.redIAdd(l),h=h.redMul(k.redISub(n)).redISub(l);return this.curve.jpoint(n,h,p)};r.prototype._dbl=function(){var p=this.curve.a,n=this.x,l=this.y,h=this.z,k=h.redSqr().redSqr(),t=n.redSqr(),B=l.redSqr();p=t.redAdd(t).redIAdd(t).redIAdd(p.redMul(k));n=n.redAdd(n);n=n.redIAdd(n);k=n.redMul(B);n=p.redSqr().redISub(k.redAdd(k));k=k.redISub(n);B=B.redSqr();B=B.redIAdd(B);B=B.redIAdd(B);B=B.redIAdd(B);B=p.redMul(k).redISub(B);l=l.redAdd(l).redMul(h);return this.curve.jpoint(n,\nB,l)};r.prototype.trpl=function(){if(!this.curve.zeroA)return this.dbl().add(this);var p=this.x.redSqr(),n=this.y.redSqr(),l=this.z.redSqr(),h=n.redSqr(),k=p.redAdd(p).redIAdd(p),t=k.redSqr();p=this.x.redAdd(n).redSqr().redISub(p).redISub(h);p=p.redIAdd(p);p=p.redAdd(p).redIAdd(p);p=p.redISub(t);var B=p.redSqr();h=h.redIAdd(h);h=h.redIAdd(h);h=h.redIAdd(h);h=h.redIAdd(h);k=k.redIAdd(p).redSqr().redISub(t).redISub(B).redISub(h);n=n.redMul(k);n=n.redIAdd(n);n=n.redIAdd(n);n=this.x.redMul(B).redISub(n);\nn=n.redIAdd(n);n=n.redIAdd(n);h=this.y.redMul(k.redMul(h.redISub(k)).redISub(p.redMul(B)));h=h.redIAdd(h);h=h.redIAdd(h);h=h.redIAdd(h);l=this.z.redAdd(p).redSqr().redISub(l).redISub(B);return this.curve.jpoint(n,h,l)};r.prototype.mul=function(p,n){p=new y(p,n);return this.curve._wnafMul(this,p)};r.prototype.eq=function(p){if(\"affine\"===p.type)return this.eq(p.toJ());if(this===p)return!0;var n=this.z.redSqr(),l=p.z.redSqr();if(0!==this.x.redMul(l).redISub(p.x.redMul(n)).cmpn(0))return!1;n=n.redMul(this.z);\nl=l.redMul(p.z);return 0===this.y.redMul(l).redISub(p.y.redMul(n)).cmpn(0)};r.prototype.eqXToP=function(p){var n=this.z.redSqr(),l=p.toRed(this.curve.red).redMul(n);if(0===this.x.cmp(l))return!0;p=p.clone();for(n=this.curve.redN.redMul(n);;){p.iadd(this.curve.n);if(0<=p.cmp(this.curve.p))return!1;l.redIAdd(n);if(0===this.x.cmp(l))return!0}};r.prototype.inspect=function(){return this.isInfinity()?\"\\x3cEC JPoint Infinity\\x3e\":\"\\x3cEC JPoint x: \"+this.x.toString(16,2)+\" y: \"+this.y.toString(16,2)+\" z: \"+\nthis.z.toString(16,2)+\"\\x3e\"};r.prototype.isInfinity=function(){return 0===this.z.cmpn(0)}}","~:source","shadow$provide[77] = function(global,require,module,exports) {\n'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$elliptic$node_modules$bn_js$lib$bn","~$module$node_modules$inherits$inherits_browser","~$module$node_modules$elliptic$lib$elliptic$utils","~$module$node_modules$elliptic$lib$elliptic$curve$base"]],"~:properties",["^5",["_endoWnafMulAdd","_zeroDbl","z","dblp","_getBeta","toJ","eqXToP","_getEndoRoots","fromJSON","inf","mixedAdd","eq","_threeDbl","validate","points","x","zeroA","inspect","_endoWnafT1","toP","_dbl","threeA","k1","doubles","trpl","mulAdd","getY","jmulAdd","pointFromX","neg","a","k2","getX","dbl","_getEndoBasis","mul","jpoint","wnd","b","y","basis","naf","isInfinity","tinv","_endoWnafT2","add","beta","precomputed","lambda","zOne","_getEndomorphism","point","endo","_endoSplit","step","toJSON","pointFromJSON"]],"~:compiled-at",1695041440741,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$elliptic$lib$elliptic$curve$short.js\",\n\"lineCount\":25,\n\"mappings\":\"AAAAA,cAAA,CAAe,EAAf,CAAA,CAAqB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAU7DC,QAASA,EAAU,CAACC,CAAD,CAAO,CACxBC,CAAKC,CAAAA,IAAL,CAAU,IAAV,CAAgB,OAAhB,CAAyBF,CAAzB,CAEA,KAAKG,CAAAA,CAAL,CAA4BC,CAAnB,IAAIC,CAAJ,CAAOL,CAAKG,CAAAA,CAAZ,CAAe,EAAf,CAAmBC,EAAAA,KAAnB,CAAyB,IAAKE,CAAAA,GAA9B,CACT,KAAKC,CAAAA,CAAL,CAA4BH,CAAnB,IAAIC,CAAJ,CAAOL,CAAKO,CAAAA,CAAZ,CAAe,EAAf,CAAmBH,EAAAA,KAAnB,CAAyB,IAAKE,CAAAA,GAA9B,CACT,KAAKE,CAAAA,IAAL,CAAY,IAAKC,CAAAA,GAAIC,CAAAA,OAAT,EAEZ,KAAKC,CAAAA,KAAL,CAA0C,CAA1C,GAAa,IAAKR,CAAAA,CAAES,CAAAA,OAAP,EAAiBC,CAAAA,IAAjB,CAAsB,CAAtB,CACb,KAAKC,CAAAA,MAAL,CAAwD,CAAxD,GAAc,IAAKX,CAAAA,CAAES,CAAAA,OAAP,EAAiBG,CAAAA,GAAjB,CAAqB,IAAKC,CAAAA,CAA1B,CAA6BH,CAAAA,IAA7B,CAAkC,CAAC,CAAnC,CAGd,KAAKI,CAAAA,IAAL,CAAY,IAAKC,CAAAA,gBAAL,CAAsBlB,CAAtB,CACZ,KAAKmB,CAAAA,WAAL,CAAuBC,KAAJ,CAAU,CAAV,CACnB,KAAKC,CAAAA,WAAL,CAAuBD,KAAJ,CAAU,CAAV,CAbK,CAiP1BE,QAASA,EAAK,CAACC,CAAD,CAAQC,CAAR,CAAWC,CAAX,CAAcC,CAAd,CAAqB,CACjCzB,CAAK0B,CAAAA,SAAUzB,CAAAA,IAAf,CAAoB,IAApB,CAA0BqB,CAA1B,CAAiC,QAAjC,CACU,KAAV,GAAIC,CAAJ,EAAwB,IAAxB,GAAkBC,CAAlB,EAEE,IAAKA,CAAAA,CACL,CAFA,IAAKD,CAAAA,CAEL,CAFS,IAET,CAAA,IAAKI,CAAAA,GAAL,CAAW,CAAA,CAHb,GAKE,IAAKJ,CAAAA,CAWL,CAXS,IAAInB,CAAJ,CAAOmB,CAAP,CAAU,EAAV,CAWT,CAVA,IAAKC,CAAAA,CAUL,CAVS,IAAIpB,CAAJ,CAAOoB,CAAP;AAAU,EAAV,CAUT,CARIC,CAQJ,GAPE,IAAKF,CAAAA,CAAEK,CAAAA,QAAP,CAAgB,IAAKN,CAAAA,KAAMjB,CAAAA,GAA3B,CACA,CAAA,IAAKmB,CAAAA,CAAEI,CAAAA,QAAP,CAAgB,IAAKN,CAAAA,KAAMjB,CAAAA,GAA3B,CAMF,EAJK,IAAKkB,CAAAA,CAAElB,CAAAA,GAIZ,GAHE,IAAKkB,CAAAA,CAGP,CAHW,IAAKA,CAAAA,CAAEpB,CAAAA,KAAP,CAAa,IAAKmB,CAAAA,KAAMjB,CAAAA,GAAxB,CAGX,EAFK,IAAKmB,CAAAA,CAAEnB,CAAAA,GAEZ,GADE,IAAKmB,CAAAA,CACP,CADW,IAAKA,CAAAA,CAAErB,CAAAA,KAAP,CAAa,IAAKmB,CAAAA,KAAMjB,CAAAA,GAAxB,CACX,EAAA,IAAKsB,CAAAA,GAAL,CAAW,CAAA,CAhBb,CAFiC,CA+OnCE,QAASA,EAAM,CAACP,CAAD,CAAQC,CAAR,CAAWC,CAAX,CAAcM,CAAd,CAAiB,CAC9B9B,CAAK0B,CAAAA,SAAUzB,CAAAA,IAAf,CAAoB,IAApB,CAA0BqB,CAA1B,CAAiC,UAAjC,CACU,KAAV,GAAIC,CAAJ,EAAwB,IAAxB,GAAkBC,CAAlB,EAAsC,IAAtC,GAAgCM,CAAhC,EAEE,IAAKN,CAAAA,CACL,CAFA,IAAKD,CAAAA,CAEL,CAFS,IAAKD,CAAAA,KAAMS,CAAAA,GAEpB,CAAA,IAAKD,CAAAA,CAAL,CAAS,IAAI1B,CAAJ,CAAO,CAAP,CAHX,GAKE,IAAKmB,CAAAA,CAEL,CAFS,IAAInB,CAAJ,CAAOmB,CAAP,CAAU,EAAV,CAET,CADA,IAAKC,CAAAA,CACL,CADS,IAAIpB,CAAJ,CAAOoB,CAAP,CAAU,EAAV,CACT,CAAA,IAAKM,CAAAA,CAAL,CAAS,IAAI1B,CAAJ,CAAO0B,CAAP,CAAU,EAAV,CAPX,CASK,KAAKP,CAAAA,CAAElB,CAAAA,GAAZ,GACE,IAAKkB,CAAAA,CADP,CACW,IAAKA,CAAAA,CAAEpB,CAAAA,KAAP,CAAa,IAAKmB,CAAAA,KAAMjB,CAAAA,GAAxB,CADX,CAEK,KAAKmB,CAAAA,CAAEnB,CAAAA,GAAZ,GACE,IAAKmB,CAAAA,CADP,CACW,IAAKA,CAAAA,CAAErB,CAAAA,KAAP,CAAa,IAAKmB,CAAAA,KAAMjB,CAAAA,GAAxB,CADX,CAEK,KAAKyB,CAAAA,CAAEzB,CAAAA,GAAZ,GACE,IAAKyB,CAAAA,CADP,CACW,IAAKA,CAAAA,CAAE3B,CAAAA,KAAP,CAAa,IAAKmB,CAAAA,KAAMjB,CAAAA,GAAxB,CADX,CAGA;IAAK2B,CAAAA,IAAL,CAAY,IAAKF,CAAAA,CAAjB,GAAuB,IAAKR,CAAAA,KAAMS,CAAAA,GAlBJ,CAve5BE,CAAAA,CAAQtC,CAAA,CAAQ,EAAR,CACZ,KAAIS,EAAKT,CAAA,CAAQ,EAAR,CACLuC,EAAAA,CAAWvC,CAAA,CAAQ,EAAR,CACf,KAAIK,EAAOL,CAAA,CAAQ,EAAR,CAAX,CAEIwC,EAASF,CAAME,CAAAA,MAiBnBD,EAAA,CAASpC,CAAT,CAAqBE,CAArB,CACAJ,EAAOC,CAAAA,OAAP,CAAiBC,CAEjBA,EAAWsC,CAAAA,SAAUnB,CAAAA,gBAArB,CAAwCoB,QAAyB,CAACtC,CAAD,CAAO,CAEtE,GAAK,IAAKW,CAAAA,KAAV,EAAoB,IAAK4B,CAAAA,CAAzB,EAA+B,IAAKC,CAAAA,CAApC,EAA4D,CAA5D,GAAyC,IAAKxB,CAAAA,CAAEyB,CAAAA,IAAP,CAAY,CAAZ,CAAzC,CAAA,CAMA,GAAIzC,CAAK0C,CAAAA,IAAT,CACE,IAAAA,EAA6BtC,CAAtB,IAAIC,CAAJ,CAAOL,CAAK0C,CAAAA,IAAZ,CAAkB,EAAlB,CAAsBtC,EAAAA,KAAtB,CAA4B,IAAKE,CAAAA,GAAjC,CADT,KAGMqC,EAGJ,CAHY,IAAKC,CAAAA,aAAL,CAAmB,IAAK5B,CAAAA,CAAxB,CAGZ,CADA0B,CACA,CADgC,CAAzB,CAAAC,CAAA,CAAM,CAAN,CAASE,CAAAA,GAAT,CAAaF,CAAA,CAAM,CAAN,CAAb,CAAA,CAA6BA,CAAA,CAAM,CAAN,CAA7B,CAAwCA,CAAA,CAAM,CAAN,CAC/C,CAAAD,CAAA,CAAOA,CAAKtC,CAAAA,KAAL,CAAW,IAAKE,CAAAA,GAAhB,CAET,IAAIN,CAAK8C,CAAAA,MAAT,CACE,IAAAA,EAAS,IAAIzC,CAAJ,CAAOL,CAAK8C,CAAAA,MAAZ,CAAoB,EAApB,CADX,KAIMC,EACJ,CADc,IAAKH,CAAAA,aAAL,CAAmB,IAAKJ,CAAAA,CAAxB,CACd,CAA4D,CAA5D,GAAI,IAAKD,CAAAA,CAAES,CAAAA,GAAP,CAAWD,CAAA,CAAQ,CAAR,CAAX,CAAuBvB,CAAAA,CAAEqB,CAAAA,GAAzB,CAA6B,IAAKN,CAAAA,CAAEf,CAAAA,CAAEyB,CAAAA,MAAT,CAAgBP,CAAhB,CAA7B,CAAJ,CACEI,CADF,CACWC,CAAA,CAAQ,CAAR,CADX,EAGED,CACA,CADSC,CAAA,CAAQ,CAAR,CACT,CAAAX,CAAA,CAA2D,CAA3D,GAAO,IAAKG,CAAAA,CAAES,CAAAA,GAAP,CAAWF,CAAX,CAAmBtB,CAAAA,CAAEqB,CAAAA,GAArB,CAAyB,IAAKN,CAAAA,CAAEf,CAAAA,CAAEyB,CAAAA,MAAT,CAAgBP,CAAhB,CAAzB,CAAP,CAJF,CAWAQ;CAAA,CADElD,CAAKkD,CAAAA,KAAT,CACUlD,CAAKkD,CAAAA,KAAMC,CAAAA,GAAX,CAAe,QAAQ,CAACC,CAAD,CAAM,CACnC,MAAO,CACLjD,EAAG,IAAIE,CAAJ,CAAO+C,CAAIjD,CAAAA,CAAX,CAAc,EAAd,CADE,CAELI,EAAG,IAAIF,CAAJ,CAAO+C,CAAI7C,CAAAA,CAAX,CAAc,EAAd,CAFE,CAD4B,CAA7B,CADV,CAQU,IAAK8C,CAAAA,aAAL,CAAmBP,CAAnB,CAGV,OAAO,CACLJ,KAAMA,CADD,CAELI,OAAQA,CAFH,CAGLI,MAAOA,CAHF,CAxCP,CAFsE,CAiDxEnD,EAAWsC,CAAAA,SAAUO,CAAAA,aAArB,CAAqCU,QAAsB,CAACC,CAAD,CAAM,CAI/D,IAAIjD,EAAMiD,CAAA,GAAQ,IAAKvC,CAAAA,CAAb,CAAiB,IAAKV,CAAAA,GAAtB,CAA4BD,CAAGmD,CAAAA,IAAH,CAAQD,CAAR,CAAtC,CACI/C,EAAiBJ,CAAV,IAAIC,CAAJ,CAAO,CAAP,CAAUD,EAAAA,KAAV,CAAgBE,CAAhB,CAAqBI,CAAAA,OAArB,EACP+C,EAAAA,CAAQjD,CAAKkD,CAAAA,MAAL,EAERC,EAAAA,CAAcvD,CAAV,IAAIC,CAAJ,CAAO,CAAP,CAAUD,EAAAA,KAAV,CAAgBE,CAAhB,CAAqBoD,CAAAA,MAArB,EAA8BE,CAAAA,OAA9B,EAAwCX,CAAAA,MAAxC,CAA+CzC,CAA/C,CAEJqD,EAAAA,CAAKJ,CAAMK,CAAAA,MAAN,CAAaH,CAAb,CAAgB/C,CAAAA,OAAhB,EACLmD,EAAAA,CAAKN,CAAMO,CAAAA,MAAN,CAAaL,CAAb,CAAgB/C,CAAAA,OAAhB,EACT,OAAO,CAAEiD,CAAF,CAAME,CAAN,CAZwD,CAejEhE,EAAWsC,CAAAA,SAAUgB,CAAAA,aAArB,CAAqCY,QAAsB,CAACnB,CAAD,CAAS,CA2BlE,IAzBA,IAAIoB,EAAW,IAAK1B,CAAAA,CAAE2B,CAAAA,KAAP,CAAaC,IAAKC,CAAAA,KAAL,CAAW,IAAK7B,CAAAA,CAAE8B,CAAAA,SAAP,EAAX,CAAgC,CAAhC,CAAb,CAAf,CAKIC,EAAI,IAAK/B,CAAAA,CAAEgC,CAAAA,KAAP,EALR,CAMIC,EAAK,IAAIpE,CAAJ,CAAO,CAAP,CANT,CAOIqE,EAAK,IAAIrE,CAAJ,CAAO,CAAP,CAPT,CAQIsE,EAAK,IAAItE,CAAJ,CAAO,CAAP,CART;AASIuE,EAAK,IAAIvE,CAAJ,CAAO,CAAP,CATT,CAYIwE,CAZJ,CAaIC,CAbJ,CAeIC,CAfJ,CAgBIC,CAhBJ,CAmBIC,CAnBJ,CAqBIC,CArBJ,CAsBIC,EAAI,CAtBR,CAuBIC,CAEJ,CAAqB,CAArB,GAAOC,CAAExE,CAAAA,IAAF,CAAO,CAAP,CAAP,CAAA,CAAwB,CACtB,IAAIyE,EAAIf,CAAEgB,CAAAA,GAAF,CAAMF,CAAN,CACRD,EAAA,CAAIb,CAAExD,CAAAA,GAAF,CAAMuE,CAAEtC,CAAAA,GAAF,CAAMqC,CAAN,CAAN,CACJ7D,EAAA,CAAImD,CAAG5D,CAAAA,GAAH,CAAOuE,CAAEtC,CAAAA,GAAF,CAAMyB,CAAN,CAAP,CACAhD,EAAAA,CAAImD,CAAG7D,CAAAA,GAAH,CAAOuE,CAAEtC,CAAAA,GAAF,CAAM0B,CAAN,CAAP,CAER,IAAI,CAACK,CAAL,EAA6B,CAA7B,CAAWK,CAAEvC,CAAAA,GAAF,CAAMqB,CAAN,CAAX,CACEW,CAGA,CAHKK,CAAMM,CAAAA,GAAN,EAGL,CAFAV,CAEA,CAFKL,CAEL,CADAM,CACA,CADKK,CAAEI,CAAAA,GAAF,EACL,CAAAR,CAAA,CAAKxD,CAJP,KAKO,IAAIuD,CAAJ,EAAkB,CAAlB,GAAU,EAAEI,CAAZ,CACL,KAEFD,EAAA,CAAQE,CAERb,EAAA,CAAIc,CACJA,EAAA,CAAID,CACJT,EAAA,CAAKF,CACLA,EAAA,CAAKjD,CACLoD,EAAA,CAAKF,CACLA,EAAA,CAAKjD,CArBiB,CAuBxBgE,CAAA,CAAKL,CAAEI,CAAAA,GAAF,EAGDE,EAAAA,CAAOX,CAAGY,CAAAA,GAAH,EAASC,CAAAA,GAAT,CAAaZ,CAAGW,CAAAA,GAAH,EAAb,CAEW,EAAtB,EADWF,CAAGE,CAAAA,GAAH,EAASC,CAAAA,GAATC,CAAaZ,CAAGU,CAAAA,GAAH,EAAbE,CACFhD,CAAAA,GAAL,CAAS6C,CAAT,CAAJ,GACED,CACA,CADKZ,CACL,CAAAI,CAAA,CAAKH,CAFP,CAMIC,EAAGe,CAAAA,QAAP,GACEf,CACA,CADKA,CAAGS,CAAAA,GAAH,EACL,CAAAR,CAAA,CAAKA,CAAGQ,CAAAA,GAAH,EAFP,CAIIC,EAAGK,CAAAA,QAAP,GACEL,CACA,CADKA,CAAGD,CAAAA,GAAH,EACL,CAAAP,CAAA,CAAKA,CAAGO,CAAAA,GAAH,EAFP,CAKA,OAAO,CACL,CAAErF,EAAG4E,CAAL,CAASxE,EAAGyE,CAAZ,CADK,CAEL,CAAE7E,EAAGsF,CAAL,CAASlF,EAAG0E,CAAZ,CAFK,CAtE2D,CA4EpElF,EAAWsC,CAAAA,SAAU0D,CAAAA,UAArB,CAAkCC,QAAmB,CAACC,CAAD,CAAI,CACvD,IAAI/C,EAAQ,IAAKjC,CAAAA,IAAKiC,CAAAA,KAAtB,CACIgD,EAAKhD,CAAA,CAAM,CAAN,CADT,CAEIiD,EAAKjD,CAAA,CAAM,CAAN,CAFT,CAIIkD,EAAKD,CAAG5F,CAAAA,CAAEyC,CAAAA,GAAL,CAASiD,CAAT,CAAYI,CAAAA,QAAZ,CAAqB,IAAK7D,CAAAA,CAA1B,CAJT,CAKI8D,EAAKJ,CAAG3F,CAAAA,CAAEiF,CAAAA,GAAL,EAAWxC,CAAAA,GAAX,CAAeiD,CAAf,CAAkBI,CAAAA,QAAlB,CAA2B,IAAK7D,CAAAA,CAAhC,CAEL+D;CAAAA,CAAKH,CAAGpD,CAAAA,GAAH,CAAOkD,CAAG/F,CAAAA,CAAV,CACT,KAAIqG,EAAKF,CAAGtD,CAAAA,GAAH,CAAOmD,CAAGhG,CAAAA,CAAV,CACLsG,EAAAA,CAAKL,CAAGpD,CAAAA,GAAH,CAAOkD,CAAG3F,CAAAA,CAAV,CACLmG,EAAAA,CAAKJ,CAAGtD,CAAAA,GAAH,CAAOmD,CAAG5F,CAAAA,CAAV,CAGLoG,EAAAA,CAAKV,CAAElF,CAAAA,GAAF,CAAMwF,CAAN,CAAUxF,CAAAA,GAAV,CAAcyF,CAAd,CACLI,EAAAA,CAAKH,CAAGb,CAAAA,GAAH,CAAOc,CAAP,CAAWlB,CAAAA,GAAX,EACT,OAAO,CAAEmB,GAAIA,CAAN,CAAUC,GAAIA,CAAd,CAhBgD,CAmBzD7G,EAAWsC,CAAAA,SAAUwE,CAAAA,UAArB,CAAkCC,QAAmB,CAACtF,CAAD,CAAIuF,CAAJ,CAAS,CAC5DvF,CAAA,CAAI,IAAInB,CAAJ,CAAOmB,CAAP,CAAU,EAAV,CACCA,EAAElB,CAAAA,GAAP,GACEkB,CADF,CACMA,CAAEpB,CAAAA,KAAF,CAAQ,IAAKE,CAAAA,GAAb,CADN,CAGA,KAAIsE,EAAKpD,CAAEwF,CAAAA,MAAF,EAAW/D,CAAAA,MAAX,CAAkBzB,CAAlB,CAAqByF,CAAAA,OAArB,CAA6BzF,CAAEyB,CAAAA,MAAF,CAAS,IAAK9C,CAAAA,CAAd,CAA7B,CAA+C8G,CAAAA,OAA/C,CAAuD,IAAK1G,CAAAA,CAA5D,CAAT,CACIkB,EAAImD,CAAGhB,CAAAA,OAAH,EACR,IAA6C,CAA7C,GAAInC,CAAEuF,CAAAA,MAAF,EAAWhD,CAAAA,MAAX,CAAkBY,CAAlB,CAAsB/B,CAAAA,GAAtB,CAA0B,IAAKqE,CAAAA,IAA/B,CAAJ,CACE,KAAUC,MAAJ,CAAU,eAAV,CAAN,CAIEC,CAAAA,CAAQ3F,CAAEb,CAAAA,OAAF,EAAYwG,CAAAA,KAAZ,EACZ,IAAIL,CAAJ,EAAW,CAACK,CAAZ,EAAqB,CAACL,CAAtB,EAA6BK,CAA7B,CACE3F,CAAA,CAAIA,CAAEiC,CAAAA,MAAF,EAEN,OAAO,KAAK2D,CAAAA,KAAL,CAAW7F,CAAX,CAAcC,CAAd,CAhBqD,CAmB9D1B,EAAWsC,CAAAA,SAAUiF,CAAAA,QAArB,CAAgCC,QAAiB,CAACF,CAAD,CAAQ,CACvD,GAAIA,CAAMzF,CAAAA,GAAV,CACE,MAAO,CAAA,CAET,KAAIJ,EAAI6F,CAAM7F,CAAAA,CACVC,EAAAA,CAAI4F,CAAM5F,CAAAA,CAEd,KAAI+F,EAAK,IAAKrH,CAAAA,CAAE8C,CAAAA,MAAP,CAAczB,CAAd,CACLiG;CAAAA,CAAMjG,CAAEwF,CAAAA,MAAF,EAAW/D,CAAAA,MAAX,CAAkBzB,CAAlB,CAAqByF,CAAAA,OAArB,CAA6BO,CAA7B,CAAiCP,CAAAA,OAAjC,CAAyC,IAAK1G,CAAAA,CAA9C,CACV,OAA2C,EAA3C,GAAOkB,CAAEuF,CAAAA,MAAF,EAAWU,CAAAA,OAAX,CAAmBD,CAAnB,CAAwB5G,CAAAA,IAAxB,CAA6B,CAA7B,CATgD,CAYzDd,EAAWsC,CAAAA,SAAUsF,CAAAA,eAArB,CACIC,QAAwB,CAACC,CAAD,CAASC,CAAT,CAAiBC,CAAjB,CAAiC,CAGvD,IAFA,IAAIC,EAAU,IAAK7G,CAAAA,WAAnB,CACI8G,EAAU,IAAK5G,CAAAA,WADnB,CAES8D,EAAI,CAAb,CAAgBA,CAAhB,CAAoB0C,CAAOK,CAAAA,MAA3B,CAAmC/C,CAAA,EAAnC,CAAwC,CACtC,IAAIgD,EAAQ,IAAKpC,CAAAA,UAAL,CAAgB+B,CAAA,CAAO3C,CAAP,CAAhB,CAAZ,CACInE,EAAI6G,CAAA,CAAO1C,CAAP,CADR,CAEIzC,EAAO1B,CAAEoH,CAAAA,QAAF,EAEPD,EAAMxB,CAAAA,EAAGb,CAAAA,QAAb,GACEqC,CAAMxB,CAAAA,EAAG0B,CAAAA,IAAT,EACA,CAAArH,CAAA,CAAIA,CAAEwE,CAAAA,GAAF,CAAM,CAAA,CAAN,CAFN,CAII2C,EAAMvB,CAAAA,EAAGd,CAAAA,QAAb,GACEqC,CAAMvB,CAAAA,EAAGyB,CAAAA,IAAT,EACA,CAAA3F,CAAA,CAAOA,CAAK8C,CAAAA,GAAL,CAAS,CAAA,CAAT,CAFT,CAKAwC,EAAA,CAAY,CAAZ,CAAQ7C,CAAR,CAAA,CAAiBnE,CACjBgH,EAAA,CAAY,CAAZ,CAAQ7C,CAAR,CAAgB,CAAhB,CAAA,CAAqBzC,CACrBuF,EAAA,CAAY,CAAZ,CAAQ9C,CAAR,CAAA,CAAiBgD,CAAMxB,CAAAA,EACvBsB,EAAA,CAAY,CAAZ,CAAQ9C,CAAR,CAAgB,CAAhB,CAAA,CAAqBgD,CAAMvB,CAAAA,EAjBW,CAmBpC0B,CAAAA,CAAM,IAAKC,CAAAA,WAAL,CAAiB,CAAjB,CAAoBP,CAApB,CAA6BC,CAA7B,CAA0C,CAA1C,CAAsC9C,CAAtC,CAA6C4C,CAA7C,CAGV,KAASS,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAwB,CAAxB,CAAoBrD,CAApB,CAA2BqD,CAAA,EAA3B,CACER,CAAA,CAAQQ,CAAR,CACA,CADa,IACb,CAAAP,CAAA,CAAQO,CAAR,CAAA,CAAa,IAEf,OAAOF,EA7BgD,CAqD7DnG,EAAA,CAASb,CAAT,CAAgBrB,CAAK0B,CAAAA,SAArB,CAEA5B,EAAWsC,CAAAA,SAAUgF,CAAAA,KAArB,CAA6BoB,QAAc,CAACjH,CAAD;AAAIC,CAAJ,CAAOC,CAAP,CAAc,CACvD,MAAO,KAAIJ,CAAJ,CAAU,IAAV,CAAgBE,CAAhB,CAAmBC,CAAnB,CAAsBC,CAAtB,CADgD,CAIzD3B,EAAWsC,CAAAA,SAAUqG,CAAAA,aAArB,CAAqCC,QAAsB,CAACC,CAAD,CAAMtI,CAAN,CAAW,CACpE,MAAOgB,EAAMuH,CAAAA,QAAN,CAAe,IAAf,CAAqBD,CAArB,CAA0BtI,CAA1B,CAD6D,CAItEgB,EAAMe,CAAAA,SAAU+F,CAAAA,QAAhB,CAA2BU,QAAiB,EAAG,CAC7C,GAAK,IAAKvH,CAAAA,KAAMN,CAAAA,IAAhB,CAAA,CAGA,IAAI8H,EAAM,IAAKC,CAAAA,WACf,IAAID,CAAJ,EAAWA,CAAIrG,CAAAA,IAAf,CACE,MAAOqG,EAAIrG,CAAAA,IAEb,KAAIA,EAAO,IAAKnB,CAAAA,KAAM8F,CAAAA,KAAX,CAAiB,IAAK7F,CAAAA,CAAEyB,CAAAA,MAAP,CAAc,IAAK1B,CAAAA,KAAMN,CAAAA,IAAKyB,CAAAA,IAA9B,CAAjB,CAAsD,IAAKjB,CAAAA,CAA3D,CACX,IAAIsH,CAAJ,CAAS,CACP,IAAIxH,EAAQ,IAAKA,CAAAA,KAAjB,CACI0H,EAAUA,QAAQ,CAACjI,CAAD,CAAI,CACxB,MAAOO,EAAM8F,CAAAA,KAAN,CAAYrG,CAAEQ,CAAAA,CAAEyB,CAAAA,MAAJ,CAAW1B,CAAMN,CAAAA,IAAKyB,CAAAA,IAAtB,CAAZ,CAAyC1B,CAAES,CAAAA,CAA3C,CADiB,CAG1BsH,EAAIrG,CAAAA,IAAJ,CAAWA,CACXA,EAAKsG,CAAAA,WAAL,CAAmB,CACjBtG,KAAM,IADW,CAEjBwG,IAAKH,CAAIG,CAAAA,GAATA,EAAgB,CACdC,IAAKJ,CAAIG,CAAAA,GAAIC,CAAAA,GADC,CAEdtB,OAAQkB,CAAIG,CAAAA,GAAIrB,CAAAA,MAAO1E,CAAAA,GAAf,CAAmB8F,CAAnB,CAFM,CAFC,CAMjBG,QAASL,CAAIK,CAAAA,OAAbA,EAAwB,CACtBC,KAAMN,CAAIK,CAAAA,OAAQC,CAAAA,IADI,CAEtBxB,OAAQkB,CAAIK,CAAAA,OAAQvB,CAAAA,MAAO1E,CAAAA,GAAnB,CAAuB8F,CAAvB,CAFc,CANP,CANZ,CAkBT,MAAOvG,EA1BP,CAD6C,CA8B/CpB;CAAMe,CAAAA,SAAUiH,CAAAA,MAAhB,CAAyBC,QAAe,EAAG,CACzC,MAAK,KAAKP,CAAAA,WAAV,CAGO,CAAE,IAAKxH,CAAAA,CAAP,CAAU,IAAKC,CAAAA,CAAf,CAAkB,IAAKuH,CAAAA,WAAvB,EAAsC,CAC3CI,QAAS,IAAKJ,CAAAA,WAAYI,CAAAA,OAA1BA,EAAqC,CACnCC,KAAM,IAAKL,CAAAA,WAAYI,CAAAA,OAAQC,CAAAA,IADI,CAEnCxB,OAAQ,IAAKmB,CAAAA,WAAYI,CAAAA,OAAQvB,CAAAA,MAAO2B,CAAAA,KAAhC,CAAsC,CAAtC,CAF2B,CADM,CAK3CN,IAAK,IAAKF,CAAAA,WAAYE,CAAAA,GAAtBA,EAA6B,CAC3BC,IAAK,IAAKH,CAAAA,WAAYE,CAAAA,GAAIC,CAAAA,GADC,CAE3BtB,OAAQ,IAAKmB,CAAAA,WAAYE,CAAAA,GAAIrB,CAAAA,MAAO2B,CAAAA,KAA5B,CAAkC,CAAlC,CAFmB,CALc,CAAtC,CAHP,CACS,CAAE,IAAKhI,CAAAA,CAAP,CAAU,IAAKC,CAAAA,CAAf,CAFgC,CAgB3CH,EAAMuH,CAAAA,QAAN,CAAiBY,QAAiB,CAAClI,CAAD,CAAQqH,CAAR,CAAatI,CAAb,CAAkB,CAOlDoJ,QAASA,EAAS,CAACd,CAAD,CAAM,CACtB,MAAOrH,EAAM8F,CAAAA,KAAN,CAAYuB,CAAA,CAAI,CAAJ,CAAZ,CAAoBA,CAAA,CAAI,CAAJ,CAApB,CAA4BtI,CAA5B,CADe,CANL,QAAnB,GAAI,MAAOsI,EAAX,GACEA,CADF,CACQe,IAAKC,CAAAA,KAAL,CAAWhB,CAAX,CADR,CAEA,KAAIN,EAAM/G,CAAM8F,CAAAA,KAAN,CAAYuB,CAAA,CAAI,CAAJ,CAAZ,CAAoBA,CAAA,CAAI,CAAJ,CAApB,CAA4BtI,CAA5B,CACV,IAAI,CAACsI,CAAA,CAAI,CAAJ,CAAL,CACE,MAAON,EAMLS,EAAAA,CAAMH,CAAA,CAAI,CAAJ,CACVN,EAAIU,CAAAA,WAAJ;AAAkB,CAChBtG,KAAM,IADU,CAEhB0G,QAASL,CAAIK,CAAAA,OAAbA,EAAwB,CACtBC,KAAMN,CAAIK,CAAAA,OAAQC,CAAAA,IADI,CAEtBxB,OAAQ,CAAES,CAAF,CAAQuB,CAAAA,MAAR,CAAed,CAAIK,CAAAA,OAAQvB,CAAAA,MAAO1E,CAAAA,GAAnB,CAAuBuG,CAAvB,CAAf,CAFc,CAFR,CAMhBR,IAAKH,CAAIG,CAAAA,GAATA,EAAgB,CACdC,IAAKJ,CAAIG,CAAAA,GAAIC,CAAAA,GADC,CAEdtB,OAAQ,CAAES,CAAF,CAAQuB,CAAAA,MAAR,CAAed,CAAIG,CAAAA,GAAIrB,CAAAA,MAAO1E,CAAAA,GAAf,CAAmBuG,CAAnB,CAAf,CAFM,CANA,CAWlB,OAAOpB,EAvB2C,CA0BpDhH,EAAMe,CAAAA,SAAUyH,CAAAA,OAAhB,CAA0BC,QAAgB,EAAG,CAC3C,MAAI,KAAKC,CAAAA,UAAL,EAAJ,CACS,2BADT,CAEO,kBAFP,CAEyB,IAAKxI,CAAAA,CAAEZ,CAAAA,OAAP,EAAiBqJ,CAAAA,QAAjB,CAA0B,EAA1B,CAA8B,CAA9B,CAFzB,CAGI,MAHJ,CAGa,IAAKxI,CAAAA,CAAEb,CAAAA,OAAP,EAAiBqJ,CAAAA,QAAjB,CAA0B,EAA1B,CAA8B,CAA9B,CAHb,CAGgD,MAJL,CAO7C3I,EAAMe,CAAAA,SAAU2H,CAAAA,UAAhB,CAA6BE,QAAmB,EAAG,CACjD,MAAO,KAAKtI,CAAAA,GADqC,CAInDN,EAAMe,CAAAA,SAAUuD,CAAAA,GAAhB,CAAsBuE,QAAY,CAACnJ,CAAD,CAAI,CAEpC,GAAI,IAAKY,CAAAA,GAAT,CACE,MAAOZ,EAGT,IAAIA,CAAEY,CAAAA,GAAN,CACE,MAAO,KAGT,IAAI,IAAKwI,CAAAA,EAAL,CAAQpJ,CAAR,CAAJ,CACE,MAAO,KAAKqJ,CAAAA,GAAL,EAOT;GAJI,IAAK7E,CAAAA,GAAL,EAAW4E,CAAAA,EAAX,CAAcpJ,CAAd,CAIJ,EAAwB,CAAxB,GAAI,IAAKQ,CAAAA,CAAEqB,CAAAA,GAAP,CAAW7B,CAAEQ,CAAAA,CAAb,CAAJ,CACE,MAAO,KAAKD,CAAAA,KAAM8F,CAAAA,KAAX,CAAiB,IAAjB,CAAuB,IAAvB,CAET,KAAIiD,EAAI,IAAK7I,CAAAA,CAAEuC,CAAAA,MAAP,CAAchD,CAAES,CAAAA,CAAhB,CACU,EAAlB,GAAI6I,CAAEzJ,CAAAA,IAAF,CAAO,CAAP,CAAJ,GACEyJ,CADF,CACMA,CAAErH,CAAAA,MAAF,CAAS,IAAKzB,CAAAA,CAAEwC,CAAAA,MAAP,CAAchD,CAAEQ,CAAAA,CAAhB,CAAmBd,CAAAA,OAAnB,EAAT,CADN,CAEI6J,EAAAA,CAAKD,CAAEtD,CAAAA,MAAF,EAAWU,CAAAA,OAAX,CAAmB,IAAKlG,CAAAA,CAAxB,CAA2BkG,CAAAA,OAA3B,CAAmC1G,CAAEQ,CAAAA,CAArC,CACLgJ,EAAAA,CAAKF,CAAErH,CAAAA,MAAF,CAAS,IAAKzB,CAAAA,CAAEwC,CAAAA,MAAP,CAAcuG,CAAd,CAAT,CAA4B7C,CAAAA,OAA5B,CAAoC,IAAKjG,CAAAA,CAAzC,CACT,OAAO,KAAKF,CAAAA,KAAM8F,CAAAA,KAAX,CAAiBkD,CAAjB,CAAqBC,CAArB,CA1B6B,CA6BtClJ,EAAMe,CAAAA,SAAUgI,CAAAA,GAAhB,CAAsBI,QAAY,EAAG,CACnC,GAAI,IAAK7I,CAAAA,GAAT,CACE,MAAO,KAGT,KAAI8I,EAAM,IAAKjJ,CAAAA,CAAEqC,CAAAA,MAAP,CAAc,IAAKrC,CAAAA,CAAnB,CACV,IAAoB,CAApB,GAAIiJ,CAAI7J,CAAAA,IAAJ,CAAS,CAAT,CAAJ,CACE,MAAO,KAAKU,CAAAA,KAAM8F,CAAAA,KAAX,CAAiB,IAAjB,CAAuB,IAAvB,CAET,KAAIlH,EAAI,IAAKoB,CAAAA,KAAMpB,CAAAA,CAAnB,CAEIwE,EAAK,IAAKnD,CAAAA,CAAEwF,CAAAA,MAAP,EACL2D,EAAAA,CAAQD,CAAIhK,CAAAA,OAAJ,EACR4J,EAAAA,CAAI3F,CAAGb,CAAAA,MAAH,CAAUa,CAAV,CAAcsC,CAAAA,OAAd,CAAsBtC,CAAtB,CAA0BsC,CAAAA,OAA1B,CAAkC9G,CAAlC,CAAqC8C,CAAAA,MAArC,CAA4C0H,CAA5C,CAEJJ;CAAAA,CAAKD,CAAEtD,CAAAA,MAAF,EAAWU,CAAAA,OAAX,CAAmB,IAAKlG,CAAAA,CAAEsC,CAAAA,MAAP,CAAc,IAAKtC,CAAAA,CAAnB,CAAnB,CACLgJ,EAAAA,CAAKF,CAAErH,CAAAA,MAAF,CAAS,IAAKzB,CAAAA,CAAEwC,CAAAA,MAAP,CAAcuG,CAAd,CAAT,CAA4B7C,CAAAA,OAA5B,CAAoC,IAAKjG,CAAAA,CAAzC,CACT,OAAO,KAAKF,CAAAA,KAAM8F,CAAAA,KAAX,CAAiBkD,CAAjB,CAAqBC,CAArB,CAjB4B,CAoBrClJ,EAAMe,CAAAA,SAAUuI,CAAAA,IAAhB,CAAuBC,QAAa,EAAG,CACrC,MAAO,KAAKrJ,CAAAA,CAAEZ,CAAAA,OAAP,EAD8B,CAIvCU,EAAMe,CAAAA,SAAUyI,CAAAA,IAAhB,CAAuBC,QAAa,EAAG,CACrC,MAAO,KAAKtJ,CAAAA,CAAEb,CAAAA,OAAP,EAD8B,CAIvCU,EAAMe,CAAAA,SAAUW,CAAAA,GAAhB,CAAsBgI,QAAY,CAAC/E,CAAD,CAAI,CACpCA,CAAA,CAAI,IAAI5F,CAAJ,CAAO4F,CAAP,CAAU,EAAV,CACJ,OAAI,KAAK+D,CAAAA,UAAL,EAAJ,CACS,IADT,CAES,IAAKiB,CAAAA,WAAL,CAAiBhF,CAAjB,CAAJ,CACI,IAAK1E,CAAAA,KAAM2J,CAAAA,YAAX,CAAwB,IAAxB,CAA8BjF,CAA9B,CADJ,CAEI,IAAK1E,CAAAA,KAAMN,CAAAA,IAAf,CACI,IAAKM,CAAAA,KAAMoG,CAAAA,eAAX,CAA2B,CAAE,IAAF,CAA3B,CAAqC,CAAE1B,CAAF,CAArC,CADJ,CAGI,IAAK1E,CAAAA,KAAM4J,CAAAA,QAAX,CAAoB,IAApB,CAA0BlF,CAA1B,CAT2B,CAYtC3E,EAAMe,CAAAA,SAAU+I,CAAAA,MAAhB,CAAyBC,QAAe,CAAC1E,CAAD,CAAKH,CAAL,CAASI,CAAT,CAAa,CAC/CiB,CAAAA,CAAS,CAAE,IAAF,CAAQrB,CAAR,CACTsB,EAAAA,CAAS,CAAEnB,CAAF,CAAMC,CAAN,CACb,OAAI,KAAKrF,CAAAA,KAAMN,CAAAA,IAAf;AACS,IAAKM,CAAAA,KAAMoG,CAAAA,eAAX,CAA2BE,CAA3B,CAAmCC,CAAnC,CADT,CAGS,IAAKvG,CAAAA,KAAMgH,CAAAA,WAAX,CAAuB,CAAvB,CAA0BV,CAA1B,CAAkCC,CAAlC,CAA0C,CAA1C,CAN0C,CASrDxG,EAAMe,CAAAA,SAAUiJ,CAAAA,OAAhB,CAA0BC,QAAgB,CAAC5E,CAAD,CAAKH,CAAL,CAASI,CAAT,CAAa,CACjDiB,CAAAA,CAAS,CAAE,IAAF,CAAQrB,CAAR,CACTsB,EAAAA,CAAS,CAAEnB,CAAF,CAAMC,CAAN,CACb,OAAI,KAAKrF,CAAAA,KAAMN,CAAAA,IAAf,CACS,IAAKM,CAAAA,KAAMoG,CAAAA,eAAX,CAA2BE,CAA3B,CAAmCC,CAAnC,CAA2C,CAAA,CAA3C,CADT,CAGS,IAAKvG,CAAAA,KAAMgH,CAAAA,WAAX,CAAuB,CAAvB,CAA0BV,CAA1B,CAAkCC,CAAlC,CAA0C,CAA1C,CAA6C,CAAA,CAA7C,CAN4C,CASvDxG,EAAMe,CAAAA,SAAU+H,CAAAA,EAAhB,CAAqBoB,QAAW,CAACxK,CAAD,CAAI,CAClC,MAAO,KAAP,GAAgBA,CAAhB,EACO,IAAKY,CAAAA,GADZ,GACoBZ,CAAEY,CAAAA,GADtB,GAEY,IAAKA,CAAAA,GAFjB,EAE4C,CAF5C,GAEwB,IAAKJ,CAAAA,CAAEqB,CAAAA,GAAP,CAAW7B,CAAEQ,CAAAA,CAAb,CAFxB,EAEqE,CAFrE,GAEiD,IAAKC,CAAAA,CAAEoB,CAAAA,GAAP,CAAW7B,CAAES,CAAAA,CAAb,CAFjD,CADkC,CAMpCH,EAAMe,CAAAA,SAAUmD,CAAAA,GAAhB,CAAsBiG,QAAY,CAACC,CAAD,CAAc,CAC9C,GAAI,IAAK9J,CAAAA,GAAT,CACE,MAAO,KAET,KAAI0G,EAAM,IAAK/G,CAAAA,KAAM8F,CAAAA,KAAX,CAAiB,IAAK7F,CAAAA,CAAtB,CAAyB,IAAKC,CAAAA,CAAEiC,CAAAA,MAAP,EAAzB,CACV,IAAIgI,CAAJ,EAAmB,IAAK1C,CAAAA,WAAxB,CAAqC,CAC/BD,CAAAA,CAAM,IAAKC,CAAAA,WACf,KAAI2C,EAASA,QAAQ,CAAC3K,CAAD,CAAI,CACvB,MAAOA,EAAEwE,CAAAA,GAAF,EADgB,CAGzB8C;CAAIU,CAAAA,WAAJ,CAAkB,CAChBE,IAAKH,CAAIG,CAAAA,GAATA,EAAgB,CACdC,IAAKJ,CAAIG,CAAAA,GAAIC,CAAAA,GADC,CAEdtB,OAAQkB,CAAIG,CAAAA,GAAIrB,CAAAA,MAAO1E,CAAAA,GAAf,CAAmBwI,CAAnB,CAFM,CADA,CAKhBvC,QAASL,CAAIK,CAAAA,OAAbA,EAAwB,CACtBC,KAAMN,CAAIK,CAAAA,OAAQC,CAAAA,IADI,CAEtBxB,OAAQkB,CAAIK,CAAAA,OAAQvB,CAAAA,MAAO1E,CAAAA,GAAnB,CAAuBwI,CAAvB,CAFc,CALR,CALiB,CAgBrC,MAAOrD,EArBuC,CAwBhDhH,EAAMe,CAAAA,SAAUuJ,CAAAA,GAAhB,CAAsBC,QAAY,EAAG,CACnC,MAAI,KAAKjK,CAAAA,GAAT,CACS,IAAKL,CAAAA,KAAMuK,CAAAA,MAAX,CAAkB,IAAlB,CAAwB,IAAxB,CAA8B,IAA9B,CADT,CAGU,IAAKvK,CAAAA,KAAMuK,CAAAA,MAAXxD,CAAkB,IAAK9G,CAAAA,CAAvB8G,CAA0B,IAAK7G,CAAAA,CAA/B6G,CAAkC,IAAK/G,CAAAA,KAAMS,CAAAA,GAA7CsG,CAJyB,CA4BrCnG,EAAA,CAASL,CAAT,CAAiB7B,CAAK0B,CAAAA,SAAtB,CAEA5B,EAAWsC,CAAAA,SAAUyJ,CAAAA,MAArB,CAA8BC,QAAe,CAACvK,CAAD,CAAIC,CAAJ,CAAOM,CAAP,CAAU,CACrD,MAAO,KAAID,CAAJ,CAAW,IAAX,CAAiBN,CAAjB,CAAoBC,CAApB,CAAuBM,CAAvB,CAD8C,CAIvDD,EAAOO,CAAAA,SAAU2J,CAAAA,GAAjB,CAAuBC,QAAY,EAAG,CACpC,GAAI,IAAKjC,CAAAA,UAAL,EAAJ,CACE,MAAO,KAAKzI,CAAAA,KAAM8F,CAAAA,KAAX,CAAiB,IAAjB,CAAuB,IAAvB,CAET,KAAI6E,EAAO,IAAKnK,CAAAA,CAAErB,CAAAA,OAAP,EAAX,CACIyL,EAAQD,CAAKlF,CAAAA,MAAL,EADZ,CAEIQ,EAAK,IAAKhG,CAAAA,CAAEyB,CAAAA,MAAP,CAAckJ,CAAd,CACLC,EAAAA,CAAK,IAAK3K,CAAAA,CAAEwB,CAAAA,MAAP,CAAckJ,CAAd,CAAqBlJ,CAAAA,MAArB,CAA4BiJ,CAA5B,CAET;MAAO,KAAK3K,CAAAA,KAAM8F,CAAAA,KAAX,CAAiBG,CAAjB,CAAqB4E,CAArB,CAT6B,CAYtCtK,EAAOO,CAAAA,SAAUmD,CAAAA,GAAjB,CAAuB6G,QAAY,EAAG,CACpC,MAAO,KAAK9K,CAAAA,KAAMuK,CAAAA,MAAX,CAAkB,IAAKtK,CAAAA,CAAvB,CAA0B,IAAKC,CAAAA,CAAEiC,CAAAA,MAAP,EAA1B,CAA2C,IAAK3B,CAAAA,CAAhD,CAD6B,CAItCD,EAAOO,CAAAA,SAAUuD,CAAAA,GAAjB,CAAuB0G,QAAY,CAACtL,CAAD,CAAI,CAErC,GAAI,IAAKgJ,CAAAA,UAAL,EAAJ,CACE,MAAOhJ,EAGT,IAAIA,CAAEgJ,CAAAA,UAAF,EAAJ,CACE,MAAO,KAGT,KAAIuC,EAAMvL,CAAEe,CAAAA,CAAEiF,CAAAA,MAAJ,EAAV,CACIwF,EAAK,IAAKzK,CAAAA,CAAEiF,CAAAA,MAAP,EADT,CAEIyF,EAAK,IAAKjL,CAAAA,CAAEyB,CAAAA,MAAP,CAAcsJ,CAAd,CAFT,CAGIG,EAAK1L,CAAEQ,CAAAA,CAAEyB,CAAAA,MAAJ,CAAWuJ,CAAX,CACLG,EAAAA,CAAK,IAAKlL,CAAAA,CAAEwB,CAAAA,MAAP,CAAcsJ,CAAItJ,CAAAA,MAAJ,CAAWjC,CAAEe,CAAAA,CAAb,CAAd,CACL6K,EAAAA,CAAK5L,CAAES,CAAAA,CAAEwB,CAAAA,MAAJ,CAAWuJ,CAAGvJ,CAAAA,MAAH,CAAU,IAAKlB,CAAAA,CAAf,CAAX,CAEL8K,EAAAA,CAAIJ,CAAGzI,CAAAA,MAAH,CAAU0I,CAAV,CACJtH,EAAAA,CAAIuH,CAAG3I,CAAAA,MAAH,CAAU4I,CAAV,CACR,IAAkB,CAAlB,GAAIC,CAAEhM,CAAAA,IAAF,CAAO,CAAP,CAAJ,CACE,MAAkB,EAAlB,GAAIuE,CAAEvE,CAAAA,IAAF,CAAO,CAAP,CAAJ,CACS,IAAKU,CAAAA,KAAMuK,CAAAA,MAAX,CAAkB,IAAlB,CAAwB,IAAxB,CAA8B,IAA9B,CADT,CAGS,IAAKzB,CAAAA,GAAL,EAGX,KAAIyC,EAAKD,CAAE7F,CAAAA,MAAF,EAAT,CACI+F,EAAKD,CAAG7J,CAAAA,MAAH,CAAU4J,CAAV,CACLtI,EAAAA,CAAIkI,CAAGxJ,CAAAA,MAAH,CAAU6J,CAAV,CAEJvC,EAAAA,CAAKnF,CAAE4B,CAAAA,MAAF,EAAWC,CAAAA,OAAX,CAAmB8F,CAAnB,CAAuBrF,CAAAA,OAAvB,CAA+BnD,CAA/B,CAAkCmD,CAAAA,OAAlC,CAA0CnD,CAA1C,CACLiG;CAAAA,CAAKpF,CAAEnC,CAAAA,MAAF,CAASsB,CAAEmD,CAAAA,OAAF,CAAU6C,CAAV,CAAT,CAAwB7C,CAAAA,OAAxB,CAAgCiF,CAAG1J,CAAAA,MAAH,CAAU8J,CAAV,CAAhC,CACLC,EAAAA,CAAK,IAAKjL,CAAAA,CAAEkB,CAAAA,MAAP,CAAcjC,CAAEe,CAAAA,CAAhB,CAAmBkB,CAAAA,MAAnB,CAA0B4J,CAA1B,CAET,OAAO,KAAKtL,CAAAA,KAAMuK,CAAAA,MAAX,CAAkBvB,CAAlB,CAAsBC,CAAtB,CAA0BwC,CAA1B,CAlC8B,CAqCvClL,EAAOO,CAAAA,SAAU4K,CAAAA,QAAjB,CAA4BC,QAAiB,CAAClM,CAAD,CAAI,CAE/C,GAAI,IAAKgJ,CAAAA,UAAL,EAAJ,CACE,MAAOhJ,EAAE4K,CAAAA,GAAF,EAGT,IAAI5K,CAAEgJ,CAAAA,UAAF,EAAJ,CACE,MAAO,KAGT,KAAIwC,EAAK,IAAKzK,CAAAA,CAAEiF,CAAAA,MAAP,EAAT,CACIyF,EAAK,IAAKjL,CAAAA,CADd,CAEIkL,EAAK1L,CAAEQ,CAAAA,CAAEyB,CAAAA,MAAJ,CAAWuJ,CAAX,CAFT,CAGIG,EAAK,IAAKlL,CAAAA,CACVmL,EAAAA,CAAK5L,CAAES,CAAAA,CAAEwB,CAAAA,MAAJ,CAAWuJ,CAAX,CAAevJ,CAAAA,MAAf,CAAsB,IAAKlB,CAAAA,CAA3B,CAEL8K,EAAAA,CAAIJ,CAAGzI,CAAAA,MAAH,CAAU0I,CAAV,CACJtH,EAAAA,CAAIuH,CAAG3I,CAAAA,MAAH,CAAU4I,CAAV,CACR,IAAkB,CAAlB,GAAIC,CAAEhM,CAAAA,IAAF,CAAO,CAAP,CAAJ,CACE,MAAkB,EAAlB,GAAIuE,CAAEvE,CAAAA,IAAF,CAAO,CAAP,CAAJ,CACS,IAAKU,CAAAA,KAAMuK,CAAAA,MAAX,CAAkB,IAAlB,CAAwB,IAAxB,CAA8B,IAA9B,CADT,CAGS,IAAKzB,CAAAA,GAAL,EAGX,KAAIyC,EAAKD,CAAE7F,CAAAA,MAAF,EACL+F,EAAAA,CAAKD,CAAG7J,CAAAA,MAAH,CAAU4J,CAAV,CACLtI,EAAAA,CAAIkI,CAAGxJ,CAAAA,MAAH,CAAU6J,CAAV,CAEJvC,EAAAA,CAAKnF,CAAE4B,CAAAA,MAAF,EAAWC,CAAAA,OAAX,CAAmB8F,CAAnB,CAAuBrF,CAAAA,OAAvB,CAA+BnD,CAA/B,CAAkCmD,CAAAA,OAAlC,CAA0CnD,CAA1C,CACLiG,EAAAA,CAAKpF,CAAEnC,CAAAA,MAAF,CAASsB,CAAEmD,CAAAA,OAAF,CAAU6C,CAAV,CAAT,CAAwB7C,CAAAA,OAAxB,CAAgCiF,CAAG1J,CAAAA,MAAH,CAAU8J,CAAV,CAAhC,CACLC;CAAAA,CAAK,IAAKjL,CAAAA,CAAEkB,CAAAA,MAAP,CAAc4J,CAAd,CAET,OAAO,KAAKtL,CAAAA,KAAMuK,CAAAA,MAAX,CAAkBvB,CAAlB,CAAsBC,CAAtB,CAA0BwC,CAA1B,CAjCwC,CAoCjDlL,EAAOO,CAAAA,SAAU8K,CAAAA,IAAjB,CAAwBC,QAAa,CAACC,CAAD,CAAM,CAGzC,GAFY,CAEZ,GAFIA,CAEJ,EAAI,IAAKrD,CAAAA,UAAL,EAAJ,CACE,MAAO,KACT,IAAI,CAACqD,CAAL,CACE,MAAO,KAAKhD,CAAAA,GAAL,EAET,KAAIlF,CACJ,IAAI,IAAK5D,CAAAA,KAAMZ,CAAAA,KAAf,EAAwB,IAAKY,CAAAA,KAAMT,CAAAA,MAAnC,CAA2C,CACzC,IAAIsE,EAAI,IACR,KAAKD,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBkI,CAAhB,CAAqBlI,CAAA,EAArB,CACEC,CAAA,CAAIA,CAAEiF,CAAAA,GAAF,EACN,OAAOjF,EAJkC,CASvCjF,CAAAA,CAAI,IAAKoB,CAAAA,KAAMpB,CAAAA,CACnB,KAAIK,EAAO,IAAKe,CAAAA,KAAMf,CAAAA,IAAtB,CAEI8M,EAAK,IAAK9L,CAAAA,CACV+L,EAAAA,CAAK,IAAK9L,CAAAA,CACd,KAAI+L,EAAK,IAAKzL,CAAAA,CAAd,CACI0L,EAAMD,CAAGxG,CAAAA,MAAH,EAAYA,CAAAA,MAAZ,EADV,CAII0G,EAAMH,CAAGzJ,CAAAA,MAAH,CAAUyJ,CAAV,CACV,KAAKpI,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBkI,CAAhB,CAAqBlI,CAAA,EAArB,CAA0B,CACxB,IAAIwI,EAAML,CAAGtG,CAAAA,MAAH,EAAV,CACI4G,EAAOF,CAAI1G,CAAAA,MAAJ,EADX,CAEI6G,EAAOD,CAAK5G,CAAAA,MAAL,EACPsD,EAAAA,CAAIqD,CAAI7J,CAAAA,MAAJ,CAAW6J,CAAX,CAAgB1G,CAAAA,OAAhB,CAAwB0G,CAAxB,CAA6B1G,CAAAA,OAA7B,CAAqC9G,CAAE8C,CAAAA,MAAF,CAASwK,CAAT,CAArC,CAEJK,EAAAA,CAAKR,CAAGrK,CAAAA,MAAH,CAAU2K,CAAV,CACLrD,EAAAA,CAAKD,CAAEtD,CAAAA,MAAF,EAAWU,CAAAA,OAAX,CAAmBoG,CAAGhK,CAAAA,MAAH,CAAUgK,CAAV,CAAnB,CACLC,EAAAA,CAAKD,CAAGpG,CAAAA,OAAH,CAAW6C,CAAX,CACLyD;CAAAA,CAAM1D,CAAErH,CAAAA,MAAF,CAAS8K,CAAT,CACVC,EAAA,CAAMA,CAAI/G,CAAAA,OAAJ,CAAY+G,CAAZ,CAAiBtG,CAAAA,OAAjB,CAAyBmG,CAAzB,CACFb,EAAAA,CAAKU,CAAIzK,CAAAA,MAAJ,CAAWuK,CAAX,CACLrI,EAAJ,CAAQ,CAAR,CAAYkI,CAAZ,GACEI,CADF,CACQA,CAAIxK,CAAAA,MAAJ,CAAW4K,CAAX,CADR,CAKAH,EAAA,CAAMM,CAjBkB,CAoB1B,MAAO,KAAKzM,CAAAA,KAAMuK,CAAAA,MAAX,CAAkBwB,CAAlB,CAAsBI,CAAIzK,CAAAA,MAAJ,CAAWzC,CAAX,CAAtB,CAAwCgN,CAAxC,CAhDkC,CAmD3C1L,EAAOO,CAAAA,SAAUgI,CAAAA,GAAjB,CAAuB4D,QAAY,EAAG,CACpC,MAAI,KAAKjE,CAAAA,UAAL,EAAJ,CACS,IADT,CAGI,IAAKzI,CAAAA,KAAMZ,CAAAA,KAAf,CACS,IAAKuN,CAAAA,QAAL,EADT,CAES,IAAK3M,CAAAA,KAAMT,CAAAA,MAAf,CACI,IAAKqN,CAAAA,SAAL,EADJ,CAGI,IAAKC,CAAAA,IAAL,EAT2B,CAYtCtM,EAAOO,CAAAA,SAAU6L,CAAAA,QAAjB,CAA4BG,QAAiB,EAAG,CAK9C,GAAI,IAAKpM,CAAAA,IAAT,CAAe,CAMTqM,IAAAA,EAAK,IAAK9M,CAAAA,CAAEwF,CAAAA,MAAP,EAELuH,KAAAA,EAAK,IAAK9M,CAAAA,CAAEuF,CAAAA,MAAP,EAELwH,KAAAA,EAAOD,CAAGvH,CAAAA,MAAH,EAEPrD,EAAAA,CAAI,IAAKnC,CAAAA,CAAEsC,CAAAA,MAAP,CAAcyK,CAAd,CAAkBvH,CAAAA,MAAlB,EAA2BU,CAAAA,OAA3B,CAAmC4G,CAAnC,CAAuC5G,CAAAA,OAAvC,CAA+C8G,CAA/C,CACR7K,EAAA,CAAIA,CAAEsD,CAAAA,OAAF,CAAUtD,CAAV,CAEA8K,EAAAA,CAAIH,CAAGxK,CAAAA,MAAH,CAAUwK,CAAV,CAAcrH,CAAAA,OAAd,CAAsBqH,CAAtB,CAER,KAAII,EAAID,CAAEzH,CAAAA,MAAF,EAAWU,CAAAA,OAAX,CAAmB/D,CAAnB,CAAsB+D,CAAAA,OAAtB,CAA8B/D,CAA9B,CAAR,CAGIgL,EAAQH,CAAKvH,CAAAA,OAAL,CAAauH,CAAb,CACZG;CAAA,CAAQA,CAAM1H,CAAAA,OAAN,CAAc0H,CAAd,CACRA,EAAA,CAAQA,CAAM1H,CAAAA,OAAN,CAAc0H,CAAd,CAGRpE,EAAA,CAAKmE,CAELlE,EAAA,CAAKiE,CAAExL,CAAAA,MAAF,CAASU,CAAE+D,CAAAA,OAAF,CAAUgH,CAAV,CAAT,CAAuBhH,CAAAA,OAAvB,CAA+BiH,CAA/B,CAEL3B,EAAA,CAAK,IAAKvL,CAAAA,CAAEqC,CAAAA,MAAP,CAAc,IAAKrC,CAAAA,CAAnB,CA7BQ,CAAf,IAoCMtB,EAwBJ,CAxBQ,IAAKqB,CAAAA,CAAEwF,CAAAA,MAAP,EAwBR,CAtBIzG,CAsBJ,CAtBQ,IAAKkB,CAAAA,CAAEuF,CAAAA,MAAP,EAsBR,CApBIsD,CAoBJ,CApBQ/J,CAAEyG,CAAAA,MAAF,EAoBR,CAlBI4H,CAkBJ,CAlBQ,IAAKpN,CAAAA,CAAEsC,CAAAA,MAAP,CAAcvD,CAAd,CAAiByG,CAAAA,MAAjB,EAA0BU,CAAAA,OAA1B,CAAkCvH,CAAlC,CAAqCuH,CAAAA,OAArC,CAA6C4C,CAA7C,CAkBR,CAjBAsE,CAiBA,CAjBIA,CAAE3H,CAAAA,OAAF,CAAU2H,CAAV,CAiBJ,CAfIC,CAeJ,CAfQ1O,CAAE2D,CAAAA,MAAF,CAAS3D,CAAT,CAAY8G,CAAAA,OAAZ,CAAoB9G,CAApB,CAeR,CAbI2O,CAaJ,CAbQD,CAAE7H,CAAAA,MAAF,EAaR,CAVI+H,CAUJ,CAVSzE,CAAErD,CAAAA,OAAF,CAAUqD,CAAV,CAUT,CATAyE,CASA,CATKA,CAAG9H,CAAAA,OAAH,CAAW8H,CAAX,CASL,CARAA,CAQA,CARKA,CAAG9H,CAAAA,OAAH,CAAW8H,CAAX,CAQL,CALAxE,CAKA,CALKuE,CAAEpH,CAAAA,OAAF,CAAUkH,CAAV,CAAalH,CAAAA,OAAb,CAAqBkH,CAArB,CAKL,CAHApE,CAGA,CAHKqE,CAAE5L,CAAAA,MAAF,CAAS2L,CAAElH,CAAAA,OAAF,CAAU6C,CAAV,CAAT,CAAwB7C,CAAAA,OAAxB,CAAgCqH,CAAhC,CAGL,CADA/B,CACA,CADK,IAAKvL,CAAAA,CAAEwB,CAAAA,MAAP,CAAc,IAAKlB,CAAAA,CAAnB,CACL,CAAAiL,CAAA,CAAKA,CAAG/F,CAAAA,OAAH,CAAW+F,CAAX,CAGP,OAAO,KAAKzL,CAAAA,KAAMuK,CAAAA,MAAX,CAAkBvB,CAAlB,CAAsBC,CAAtB,CAA0BwC,CAA1B,CApEuC,CAuEhDlL,EAAOO,CAAAA,SAAU8L,CAAAA,SAAjB,CAA6Ba,QAAkB,EAAG,CAChD,IAEIhC,CAEJ,IAAI,IAAK/K,CAAAA,IAAT,CAAe,CAMTqM,IAAAA,EAAK,IAAK9M,CAAAA,CAAEwF,CAAAA,MAAP,EAET;IAAIuH,EAAK,IAAK9M,CAAAA,CAAEuF,CAAAA,MAAP,EAELwH,KAAAA,EAAOD,CAAGvH,CAAAA,MAAH,EAEPrD,EAAAA,CAAI,IAAKnC,CAAAA,CAAEsC,CAAAA,MAAP,CAAcyK,CAAd,CAAkBvH,CAAAA,MAAlB,EAA2BU,CAAAA,OAA3B,CAAmC4G,CAAnC,CAAuC5G,CAAAA,OAAvC,CAA+C8G,CAA/C,CACR7K,EAAA,CAAIA,CAAEsD,CAAAA,OAAF,CAAUtD,CAAV,CAEJ,KAAI8K,EAAIH,CAAGxK,CAAAA,MAAH,CAAUwK,CAAV,CAAcrH,CAAAA,OAAd,CAAsBqH,CAAtB,CAA0BrH,CAAAA,OAA1B,CAAkC,IAAK1F,CAAAA,KAAMpB,CAAAA,CAA7C,CAIRoK,EAAA,CAFImE,CAEJ,CAFQD,CAAEzH,CAAAA,MAAF,EAAWU,CAAAA,OAAX,CAAmB/D,CAAnB,CAAsB+D,CAAAA,OAAtB,CAA8B/D,CAA9B,CAIJgL,EAAAA,CAAQH,CAAKvH,CAAAA,OAAL,CAAauH,CAAb,CACZG,EAAA,CAAQA,CAAM1H,CAAAA,OAAN,CAAc0H,CAAd,CACRA,EAAA,CAAQA,CAAM1H,CAAAA,OAAN,CAAc0H,CAAd,CACRnE,EAAA,CAAKiE,CAAExL,CAAAA,MAAF,CAASU,CAAE+D,CAAAA,OAAF,CAAUgH,CAAV,CAAT,CAAuBhH,CAAAA,OAAvB,CAA+BiH,CAA/B,CAEL3B,EAAA,CAAK,IAAKvL,CAAAA,CAAEqC,CAAAA,MAAP,CAAc,IAAKrC,CAAAA,CAAnB,CA1BQ,CAAf,IAgCMwN,EAoBJ,CApBY,IAAKlN,CAAAA,CAAEiF,CAAAA,MAAP,EAoBZ,CAlBIkI,CAkBJ,CAlBY,IAAKzN,CAAAA,CAAEuF,CAAAA,MAAP,EAkBZ,CAhBItE,CAgBJ,CAhBW,IAAKlB,CAAAA,CAAEyB,CAAAA,MAAP,CAAciM,CAAd,CAgBX,CAdIC,CAcJ,CAdY,IAAK3N,CAAAA,CAAEwC,CAAAA,MAAP,CAAciL,CAAd,CAAqBhM,CAAAA,MAArB,CAA4B,IAAKzB,CAAAA,CAAEsC,CAAAA,MAAP,CAAcmL,CAAd,CAA5B,CAcZ,CAbAE,CAaA,CAbQA,CAAMrL,CAAAA,MAAN,CAAaqL,CAAb,CAAoBlI,CAAAA,OAApB,CAA4BkI,CAA5B,CAaR,CAXIC,CAWJ,CAXY1M,CAAKuE,CAAAA,OAAL,CAAavE,CAAb,CAWZ,CAVA0M,CAUA,CAVQA,CAAMnI,CAAAA,OAAN,CAAcmI,CAAd,CAUR,CATIC,CASJ,CATYD,CAAMtL,CAAAA,MAAN,CAAasL,CAAb,CASZ,CARA7E,CAQA,CARK4E,CAAMnI,CAAAA,MAAN,EAAeU,CAAAA,OAAf,CAAuB2H,CAAvB,CAQL,CANArC,CAMA,CANK,IAAKvL,CAAAA,CAAEqC,CAAAA,MAAP,CAAc,IAAK/B,CAAAA,CAAnB,CAAsBiF,CAAAA,MAAtB,EAA+BU,CAAAA,OAA/B,CAAuCwH,CAAvC,CAA8CxH,CAAAA,OAA9C,CAAsDuH,CAAtD,CAML;AAJIK,CAIJ,CAJcJ,CAAMlI,CAAAA,MAAN,EAId,CAHAsI,CAGA,CAHUA,CAAQrI,CAAAA,OAAR,CAAgBqI,CAAhB,CAGV,CAFAA,CAEA,CAFUA,CAAQrI,CAAAA,OAAR,CAAgBqI,CAAhB,CAEV,CADAA,CACA,CADUA,CAAQrI,CAAAA,OAAR,CAAgBqI,CAAhB,CACV,CAAA9E,CAAA,CAAK2E,CAAMlM,CAAAA,MAAN,CAAamM,CAAM1H,CAAAA,OAAN,CAAc6C,CAAd,CAAb,CAAgC7C,CAAAA,OAAhC,CAAwC4H,CAAxC,CAGP,OAAO,KAAK/N,CAAAA,KAAMuK,CAAAA,MAAX,CAAkBvB,CAAlB,CAAsBC,CAAtB,CAA0BwC,CAA1B,CA5DyC,CA+DlDlL,EAAOO,CAAAA,SAAU+L,CAAAA,IAAjB,CAAwBmB,QAAa,EAAG,CACtC,IAAIpP,EAAI,IAAKoB,CAAAA,KAAMpB,CAAAA,CAAnB,CAGImN,EAAK,IAAK9L,CAAAA,CAHd,CAII+L,EAAK,IAAK9L,CAAAA,CAJd,CAKI+L,EAAK,IAAKzL,CAAAA,CALd,CAMI0L,EAAMD,CAAGxG,CAAAA,MAAH,EAAYA,CAAAA,MAAZ,EANV,CAQI2G,EAAML,CAAGtG,CAAAA,MAAH,EARV,CASIwI,EAAMjC,CAAGvG,CAAAA,MAAH,EAENsD,EAAAA,CAAIqD,CAAI7J,CAAAA,MAAJ,CAAW6J,CAAX,CAAgB1G,CAAAA,OAAhB,CAAwB0G,CAAxB,CAA6B1G,CAAAA,OAA7B,CAAqC9G,CAAE8C,CAAAA,MAAF,CAASwK,CAAT,CAArC,CAEJgC,EAAAA,CAAOnC,CAAGxJ,CAAAA,MAAH,CAAUwJ,CAAV,CACXmC,EAAA,CAAOA,CAAKxI,CAAAA,OAAL,CAAawI,CAAb,CACH3B,EAAAA,CAAK2B,CAAKxM,CAAAA,MAAL,CAAYuM,CAAZ,CACLjF,EAAAA,CAAKD,CAAEtD,CAAAA,MAAF,EAAWU,CAAAA,OAAX,CAAmBoG,CAAGhK,CAAAA,MAAH,CAAUgK,CAAV,CAAnB,CACLC,EAAAA,CAAKD,CAAGpG,CAAAA,OAAH,CAAW6C,CAAX,CAELmF,EAAAA,CAAOF,CAAIxI,CAAAA,MAAJ,EACX0I,EAAA,CAAOA,CAAKzI,CAAAA,OAAL,CAAayI,CAAb,CACPA,EAAA,CAAOA,CAAKzI,CAAAA,OAAL,CAAayI,CAAb,CACPA,EAAA,CAAOA,CAAKzI,CAAAA,OAAL,CAAayI,CAAb,CACHlF,EAAAA,CAAKF,CAAErH,CAAAA,MAAF,CAAS8K,CAAT,CAAarG,CAAAA,OAAb,CAAqBgI,CAArB,CACL1C,EAAAA,CAAKO,CAAGzJ,CAAAA,MAAH,CAAUyJ,CAAV,CAActK,CAAAA,MAAd,CAAqBuK,CAArB,CAET,OAAO,KAAKjM,CAAAA,KAAMuK,CAAAA,MAAX,CAAkBvB,CAAlB;AAAsBC,CAAtB,CAA0BwC,CAA1B,CA3B+B,CA8BxClL,EAAOO,CAAAA,SAAUsN,CAAAA,IAAjB,CAAwBC,QAAa,EAAG,CACtC,GAAI,CAAC,IAAKrO,CAAAA,KAAMZ,CAAAA,KAAhB,CACE,MAAO,KAAK0J,CAAAA,GAAL,EAAWzE,CAAAA,GAAX,CAAe,IAAf,CAMT,KAAI0I,EAAK,IAAK9M,CAAAA,CAAEwF,CAAAA,MAAP,EAAT,CAEIuH,EAAK,IAAK9M,CAAAA,CAAEuF,CAAAA,MAAP,EAFT,CAII6I,EAAK,IAAK9N,CAAAA,CAAEiF,CAAAA,MAAP,EAJT,CAMIwH,EAAOD,CAAGvH,CAAAA,MAAH,EANX,CAQIyH,EAAIH,CAAGxK,CAAAA,MAAH,CAAUwK,CAAV,CAAcrH,CAAAA,OAAd,CAAsBqH,CAAtB,CARR,CAUIwB,EAAKrB,CAAEzH,CAAAA,MAAF,EAEL6H,EAAAA,CAAI,IAAKrN,CAAAA,CAAEsC,CAAAA,MAAP,CAAcyK,CAAd,CAAkBvH,CAAAA,MAAlB,EAA2BU,CAAAA,OAA3B,CAAmC4G,CAAnC,CAAuC5G,CAAAA,OAAvC,CAA+C8G,CAA/C,CACRK,EAAA,CAAIA,CAAE5H,CAAAA,OAAF,CAAU4H,CAAV,CACJA,EAAA,CAAIA,CAAE/K,CAAAA,MAAF,CAAS+K,CAAT,CAAY5H,CAAAA,OAAZ,CAAoB4H,CAApB,CACJA,EAAA,CAAIA,CAAEnH,CAAAA,OAAF,CAAUoI,CAAV,CAEJ,KAAIC,EAAKlB,CAAE7H,CAAAA,MAAF,EAEL0H,EAAAA,CAAIF,CAAKvH,CAAAA,OAAL,CAAauH,CAAb,CACRE,EAAA,CAAIA,CAAEzH,CAAAA,OAAF,CAAUyH,CAAV,CACJA,EAAA,CAAIA,CAAEzH,CAAAA,OAAF,CAAUyH,CAAV,CACJA,EAAA,CAAIA,CAAEzH,CAAAA,OAAF,CAAUyH,CAAV,CAEArJ,EAAAA,CAAIoJ,CAAExH,CAAAA,OAAF,CAAU4H,CAAV,CAAa7H,CAAAA,MAAb,EAAsBU,CAAAA,OAAtB,CAA8BoI,CAA9B,CAAkCpI,CAAAA,OAAlC,CAA0CqI,CAA1C,CAA8CrI,CAAAA,OAA9C,CAAsDgH,CAAtD,CAEJsB,EAAAA,CAAOzB,CAAGtL,CAAAA,MAAH,CAAUoC,CAAV,CACX2K,EAAA,CAAOA,CAAK/I,CAAAA,OAAL,CAAa+I,CAAb,CACPA,EAAA,CAAOA,CAAK/I,CAAAA,OAAL,CAAa+I,CAAb,CACHzF,EAAAA,CAAK,IAAK/I,CAAAA,CAAEyB,CAAAA,MAAP,CAAc8M,CAAd,CAAkBrI,CAAAA,OAAlB,CAA0BsI,CAA1B,CACTzF;CAAA,CAAKA,CAAGtD,CAAAA,OAAH,CAAWsD,CAAX,CACLA,EAAA,CAAKA,CAAGtD,CAAAA,OAAH,CAAWsD,CAAX,CAEDC,EAAAA,CAAK,IAAK/I,CAAAA,CAAEwB,CAAAA,MAAP,CAAcoC,CAAEpC,CAAAA,MAAF,CAASyL,CAAEhH,CAAAA,OAAF,CAAUrC,CAAV,CAAT,CAAuBqC,CAAAA,OAAvB,CAA+BmH,CAAE5L,CAAAA,MAAF,CAAS8M,CAAT,CAA/B,CAAd,CACTvF,EAAA,CAAKA,CAAGvD,CAAAA,OAAH,CAAWuD,CAAX,CACLA,EAAA,CAAKA,CAAGvD,CAAAA,OAAH,CAAWuD,CAAX,CACLA,EAAA,CAAKA,CAAGvD,CAAAA,OAAH,CAAWuD,CAAX,CAEDwC,EAAAA,CAAK,IAAKjL,CAAAA,CAAE+B,CAAAA,MAAP,CAAc+K,CAAd,CAAiB7H,CAAAA,MAAjB,EAA0BU,CAAAA,OAA1B,CAAkCmI,CAAlC,CAAsCnI,CAAAA,OAAtC,CAA8CqI,CAA9C,CAET,OAAO,KAAKxO,CAAAA,KAAMuK,CAAAA,MAAX,CAAkBvB,CAAlB,CAAsBC,CAAtB,CAA0BwC,CAA1B,CAhD+B,CAmDxClL,EAAOO,CAAAA,SAAUW,CAAAA,GAAjB,CAAuBiN,QAAY,CAAChK,CAAD,CAAIiK,CAAJ,CAAW,CAC5CjK,CAAA,CAAI,IAAI5F,CAAJ,CAAO4F,CAAP,CAAUiK,CAAV,CAEJ,OAAO,KAAK3O,CAAAA,KAAM4J,CAAAA,QAAX,CAAoB,IAApB,CAA0BlF,CAA1B,CAHqC,CAM9CnE,EAAOO,CAAAA,SAAU+H,CAAAA,EAAjB,CAAsB+F,QAAW,CAACnP,CAAD,CAAI,CACnC,GAAe,QAAf,GAAIA,CAAEoP,CAAAA,IAAN,CACE,MAAO,KAAKhG,CAAAA,EAAL,CAAQpJ,CAAE4K,CAAAA,GAAF,EAAR,CAET,IAAI,IAAJ,GAAa5K,CAAb,CACE,MAAO,CAAA,CAGT,KAAIwL,EAAK,IAAKzK,CAAAA,CAAEiF,CAAAA,MAAP,EAAT,CACIuF,EAAMvL,CAAEe,CAAAA,CAAEiF,CAAAA,MAAJ,EACV,IAA2D,CAA3D,GAAI,IAAKxF,CAAAA,CAAEyB,CAAAA,MAAP,CAAcsJ,CAAd,CAAmB7E,CAAAA,OAAnB,CAA2B1G,CAAEQ,CAAAA,CAAEyB,CAAAA,MAAJ,CAAWuJ,CAAX,CAA3B,CAA2C3L,CAAAA,IAA3C,CAAgD,CAAhD,CAAJ,CACE,MAAO,CAAA,CAGLwP,EAAAA,CAAK7D,CAAGvJ,CAAAA,MAAH,CAAU,IAAKlB,CAAAA,CAAf,CACLuO;CAAAA,CAAM/D,CAAItJ,CAAAA,MAAJ,CAAWjC,CAAEe,CAAAA,CAAb,CACV,OAA8D,EAA9D,GAAO,IAAKN,CAAAA,CAAEwB,CAAAA,MAAP,CAAcqN,CAAd,CAAmB5I,CAAAA,OAAnB,CAA2B1G,CAAES,CAAAA,CAAEwB,CAAAA,MAAJ,CAAWoN,CAAX,CAA3B,CAA2CxP,CAAAA,IAA3C,CAAgD,CAAhD,CAhB4B,CAmBrCiB,EAAOO,CAAAA,SAAUkO,CAAAA,MAAjB,CAA0BC,QAAe,CAAChP,CAAD,CAAI,CAC3C,IAAIiP,EAAK,IAAK1O,CAAAA,CAAEiF,CAAAA,MAAP,EAAT,CACI0J,EAAKlP,CAAEpB,CAAAA,KAAF,CAAQ,IAAKmB,CAAAA,KAAMjB,CAAAA,GAAnB,CAAwB2C,CAAAA,MAAxB,CAA+BwN,CAA/B,CACT,IAAuB,CAAvB,GAAI,IAAKjP,CAAAA,CAAEqB,CAAAA,GAAP,CAAW6N,CAAX,CAAJ,CACE,MAAO,CAAA,CAELC,EAAAA,CAAKnP,CAAEgD,CAAAA,KAAF,EAET,KADIkK,CACJ,CADQ,IAAKnN,CAAAA,KAAMqP,CAAAA,IAAK3N,CAAAA,MAAhB,CAAuBwN,CAAvB,CACR,CAAA,CAAA,CAAS,CACPE,CAAGE,CAAAA,IAAH,CAAQ,IAAKtP,CAAAA,KAAMiB,CAAAA,CAAnB,CACA,IAA4B,CAA5B,EAAImO,CAAG9N,CAAAA,GAAH,CAAO,IAAKtB,CAAAA,KAAMP,CAAAA,CAAlB,CAAJ,CACE,MAAO,CAAA,CAET0P,EAAGzJ,CAAAA,OAAH,CAAWyH,CAAX,CACA,IAAuB,CAAvB,GAAI,IAAKlN,CAAAA,CAAEqB,CAAAA,GAAP,CAAW6N,CAAX,CAAJ,CACE,MAAO,CAAA,CAPF,CARkC,CAmB7C5O,EAAOO,CAAAA,SAAUyH,CAAAA,OAAjB,CAA2BgH,QAAgB,EAAG,CAC5C,MAAI,KAAK9G,CAAAA,UAAL,EAAJ,CACS,4BADT,CAEO,mBAFP,CAE0B,IAAKxI,CAAAA,CAAEyI,CAAAA,QAAP,CAAgB,EAAhB,CAAoB,CAApB,CAF1B,CAGI,MAHJ,CAGa,IAAKxI,CAAAA,CAAEwI,CAAAA,QAAP,CAAgB,EAAhB,CAAoB,CAApB,CAHb,CAII,MAJJ;AAIa,IAAKlI,CAAAA,CAAEkI,CAAAA,QAAP,CAAgB,EAAhB,CAAoB,CAApB,CAJb,CAIsC,MALM,CAQ9CnI,EAAOO,CAAAA,SAAU2H,CAAAA,UAAjB,CAA8B+G,QAAmB,EAAG,CAElD,MAA0B,EAA1B,GAAO,IAAKhP,CAAAA,CAAElB,CAAAA,IAAP,CAAY,CAAZ,CAF2C,CAv6BS;\",\n\"sources\":[\"node_modules/elliptic/lib/elliptic/curve/short.js\"],\n\"sourcesContent\":[\"shadow$provide[77] = function(global,require,module,exports) {\\n'use strict';\\n\\nvar utils = require('../utils');\\nvar BN = require('bn.js');\\nvar inherits = require('inherits');\\nvar Base = require('./base');\\n\\nvar assert = utils.assert;\\n\\nfunction ShortCurve(conf) {\\n  Base.call(this, 'short', conf);\\n\\n  this.a = new BN(conf.a, 16).toRed(this.red);\\n  this.b = new BN(conf.b, 16).toRed(this.red);\\n  this.tinv = this.two.redInvm();\\n\\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\\n\\n  // If the curve is endomorphic, precalculate beta and lambda\\n  this.endo = this._getEndomorphism(conf);\\n  this._endoWnafT1 = new Array(4);\\n  this._endoWnafT2 = new Array(4);\\n}\\ninherits(ShortCurve, Base);\\nmodule.exports = ShortCurve;\\n\\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\\n  // No efficient endomorphism\\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\\n    return;\\n\\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\\n  var beta;\\n  var lambda;\\n  if (conf.beta) {\\n    beta = new BN(conf.beta, 16).toRed(this.red);\\n  } else {\\n    var betas = this._getEndoRoots(this.p);\\n    // Choose the smallest beta\\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\\n    beta = beta.toRed(this.red);\\n  }\\n  if (conf.lambda) {\\n    lambda = new BN(conf.lambda, 16);\\n  } else {\\n    // Choose the lambda that is matching selected beta\\n    var lambdas = this._getEndoRoots(this.n);\\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\\n      lambda = lambdas[0];\\n    } else {\\n      lambda = lambdas[1];\\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\\n    }\\n  }\\n\\n  // Get basis vectors, used for balanced length-two representation\\n  var basis;\\n  if (conf.basis) {\\n    basis = conf.basis.map(function(vec) {\\n      return {\\n        a: new BN(vec.a, 16),\\n        b: new BN(vec.b, 16),\\n      };\\n    });\\n  } else {\\n    basis = this._getEndoBasis(lambda);\\n  }\\n\\n  return {\\n    beta: beta,\\n    lambda: lambda,\\n    basis: basis,\\n  };\\n};\\n\\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\\n  // Find roots of for x^2 + x + 1 in F\\n  // Root = (-1 +- Sqrt(-3)) / 2\\n  //\\n  var red = num === this.p ? this.red : BN.mont(num);\\n  var tinv = new BN(2).toRed(red).redInvm();\\n  var ntinv = tinv.redNeg();\\n\\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\\n\\n  var l1 = ntinv.redAdd(s).fromRed();\\n  var l2 = ntinv.redSub(s).fromRed();\\n  return [ l1, l2 ];\\n};\\n\\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\\n  // aprxSqrt >= sqrt(this.n)\\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\\n\\n  // 3.74\\n  // Run EGCD, until r(L + 1) < aprxSqrt\\n  var u = lambda;\\n  var v = this.n.clone();\\n  var x1 = new BN(1);\\n  var y1 = new BN(0);\\n  var x2 = new BN(0);\\n  var y2 = new BN(1);\\n\\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\\n  var a0;\\n  var b0;\\n  // First vector\\n  var a1;\\n  var b1;\\n  // Second vector\\n  var a2;\\n  var b2;\\n\\n  var prevR;\\n  var i = 0;\\n  var r;\\n  var x;\\n  while (u.cmpn(0) !== 0) {\\n    var q = v.div(u);\\n    r = v.sub(q.mul(u));\\n    x = x2.sub(q.mul(x1));\\n    var y = y2.sub(q.mul(y1));\\n\\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\\n      a0 = prevR.neg();\\n      b0 = x1;\\n      a1 = r.neg();\\n      b1 = x;\\n    } else if (a1 && ++i === 2) {\\n      break;\\n    }\\n    prevR = r;\\n\\n    v = u;\\n    u = r;\\n    x2 = x1;\\n    x1 = x;\\n    y2 = y1;\\n    y1 = y;\\n  }\\n  a2 = r.neg();\\n  b2 = x;\\n\\n  var len1 = a1.sqr().add(b1.sqr());\\n  var len2 = a2.sqr().add(b2.sqr());\\n  if (len2.cmp(len1) >= 0) {\\n    a2 = a0;\\n    b2 = b0;\\n  }\\n\\n  // Normalize signs\\n  if (a1.negative) {\\n    a1 = a1.neg();\\n    b1 = b1.neg();\\n  }\\n  if (a2.negative) {\\n    a2 = a2.neg();\\n    b2 = b2.neg();\\n  }\\n\\n  return [\\n    { a: a1, b: b1 },\\n    { a: a2, b: b2 },\\n  ];\\n};\\n\\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\\n  var basis = this.endo.basis;\\n  var v1 = basis[0];\\n  var v2 = basis[1];\\n\\n  var c1 = v2.b.mul(k).divRound(this.n);\\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\\n\\n  var p1 = c1.mul(v1.a);\\n  var p2 = c2.mul(v2.a);\\n  var q1 = c1.mul(v1.b);\\n  var q2 = c2.mul(v2.b);\\n\\n  // Calculate answer\\n  var k1 = k.sub(p1).sub(p2);\\n  var k2 = q1.add(q2).neg();\\n  return { k1: k1, k2: k2 };\\n};\\n\\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\\n  x = new BN(x, 16);\\n  if (!x.red)\\n    x = x.toRed(this.red);\\n\\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\\n  var y = y2.redSqrt();\\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\\n    throw new Error('invalid point');\\n\\n  // XXX Is there any way to tell if the number is odd without converting it\\n  // to non-red form?\\n  var isOdd = y.fromRed().isOdd();\\n  if (odd && !isOdd || !odd && isOdd)\\n    y = y.redNeg();\\n\\n  return this.point(x, y);\\n};\\n\\nShortCurve.prototype.validate = function validate(point) {\\n  if (point.inf)\\n    return true;\\n\\n  var x = point.x;\\n  var y = point.y;\\n\\n  var ax = this.a.redMul(x);\\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\\n};\\n\\nShortCurve.prototype._endoWnafMulAdd =\\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\\n      var npoints = this._endoWnafT1;\\n      var ncoeffs = this._endoWnafT2;\\n      for (var i = 0; i < points.length; i++) {\\n        var split = this._endoSplit(coeffs[i]);\\n        var p = points[i];\\n        var beta = p._getBeta();\\n\\n        if (split.k1.negative) {\\n          split.k1.ineg();\\n          p = p.neg(true);\\n        }\\n        if (split.k2.negative) {\\n          split.k2.ineg();\\n          beta = beta.neg(true);\\n        }\\n\\n        npoints[i * 2] = p;\\n        npoints[i * 2 + 1] = beta;\\n        ncoeffs[i * 2] = split.k1;\\n        ncoeffs[i * 2 + 1] = split.k2;\\n      }\\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\\n\\n      // Clean-up references to points and coefficients\\n      for (var j = 0; j < i * 2; j++) {\\n        npoints[j] = null;\\n        ncoeffs[j] = null;\\n      }\\n      return res;\\n    };\\n\\nfunction Point(curve, x, y, isRed) {\\n  Base.BasePoint.call(this, curve, 'affine');\\n  if (x === null && y === null) {\\n    this.x = null;\\n    this.y = null;\\n    this.inf = true;\\n  } else {\\n    this.x = new BN(x, 16);\\n    this.y = new BN(y, 16);\\n    // Force redgomery representation when loading from JSON\\n    if (isRed) {\\n      this.x.forceRed(this.curve.red);\\n      this.y.forceRed(this.curve.red);\\n    }\\n    if (!this.x.red)\\n      this.x = this.x.toRed(this.curve.red);\\n    if (!this.y.red)\\n      this.y = this.y.toRed(this.curve.red);\\n    this.inf = false;\\n  }\\n}\\ninherits(Point, Base.BasePoint);\\n\\nShortCurve.prototype.point = function point(x, y, isRed) {\\n  return new Point(this, x, y, isRed);\\n};\\n\\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\\n  return Point.fromJSON(this, obj, red);\\n};\\n\\nPoint.prototype._getBeta = function _getBeta() {\\n  if (!this.curve.endo)\\n    return;\\n\\n  var pre = this.precomputed;\\n  if (pre && pre.beta)\\n    return pre.beta;\\n\\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\\n  if (pre) {\\n    var curve = this.curve;\\n    var endoMul = function(p) {\\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\\n    };\\n    pre.beta = beta;\\n    beta.precomputed = {\\n      beta: null,\\n      naf: pre.naf && {\\n        wnd: pre.naf.wnd,\\n        points: pre.naf.points.map(endoMul),\\n      },\\n      doubles: pre.doubles && {\\n        step: pre.doubles.step,\\n        points: pre.doubles.points.map(endoMul),\\n      },\\n    };\\n  }\\n  return beta;\\n};\\n\\nPoint.prototype.toJSON = function toJSON() {\\n  if (!this.precomputed)\\n    return [ this.x, this.y ];\\n\\n  return [ this.x, this.y, this.precomputed && {\\n    doubles: this.precomputed.doubles && {\\n      step: this.precomputed.doubles.step,\\n      points: this.precomputed.doubles.points.slice(1),\\n    },\\n    naf: this.precomputed.naf && {\\n      wnd: this.precomputed.naf.wnd,\\n      points: this.precomputed.naf.points.slice(1),\\n    },\\n  } ];\\n};\\n\\nPoint.fromJSON = function fromJSON(curve, obj, red) {\\n  if (typeof obj === 'string')\\n    obj = JSON.parse(obj);\\n  var res = curve.point(obj[0], obj[1], red);\\n  if (!obj[2])\\n    return res;\\n\\n  function obj2point(obj) {\\n    return curve.point(obj[0], obj[1], red);\\n  }\\n\\n  var pre = obj[2];\\n  res.precomputed = {\\n    beta: null,\\n    doubles: pre.doubles && {\\n      step: pre.doubles.step,\\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\\n    },\\n    naf: pre.naf && {\\n      wnd: pre.naf.wnd,\\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\\n    },\\n  };\\n  return res;\\n};\\n\\nPoint.prototype.inspect = function inspect() {\\n  if (this.isInfinity())\\n    return '<EC Point Infinity>';\\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\\n};\\n\\nPoint.prototype.isInfinity = function isInfinity() {\\n  return this.inf;\\n};\\n\\nPoint.prototype.add = function add(p) {\\n  // O + P = P\\n  if (this.inf)\\n    return p;\\n\\n  // P + O = P\\n  if (p.inf)\\n    return this;\\n\\n  // P + P = 2P\\n  if (this.eq(p))\\n    return this.dbl();\\n\\n  // P + (-P) = O\\n  if (this.neg().eq(p))\\n    return this.curve.point(null, null);\\n\\n  // P + Q = O\\n  if (this.x.cmp(p.x) === 0)\\n    return this.curve.point(null, null);\\n\\n  var c = this.y.redSub(p.y);\\n  if (c.cmpn(0) !== 0)\\n    c = c.redMul(this.x.redSub(p.x).redInvm());\\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\\n  return this.curve.point(nx, ny);\\n};\\n\\nPoint.prototype.dbl = function dbl() {\\n  if (this.inf)\\n    return this;\\n\\n  // 2P = O\\n  var ys1 = this.y.redAdd(this.y);\\n  if (ys1.cmpn(0) === 0)\\n    return this.curve.point(null, null);\\n\\n  var a = this.curve.a;\\n\\n  var x2 = this.x.redSqr();\\n  var dyinv = ys1.redInvm();\\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\\n\\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\\n  return this.curve.point(nx, ny);\\n};\\n\\nPoint.prototype.getX = function getX() {\\n  return this.x.fromRed();\\n};\\n\\nPoint.prototype.getY = function getY() {\\n  return this.y.fromRed();\\n};\\n\\nPoint.prototype.mul = function mul(k) {\\n  k = new BN(k, 16);\\n  if (this.isInfinity())\\n    return this;\\n  else if (this._hasDoubles(k))\\n    return this.curve._fixedNafMul(this, k);\\n  else if (this.curve.endo)\\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\\n  else\\n    return this.curve._wnafMul(this, k);\\n};\\n\\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\\n  var points = [ this, p2 ];\\n  var coeffs = [ k1, k2 ];\\n  if (this.curve.endo)\\n    return this.curve._endoWnafMulAdd(points, coeffs);\\n  else\\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\\n};\\n\\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\\n  var points = [ this, p2 ];\\n  var coeffs = [ k1, k2 ];\\n  if (this.curve.endo)\\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\\n  else\\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\\n};\\n\\nPoint.prototype.eq = function eq(p) {\\n  return this === p ||\\n         this.inf === p.inf &&\\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\\n};\\n\\nPoint.prototype.neg = function neg(_precompute) {\\n  if (this.inf)\\n    return this;\\n\\n  var res = this.curve.point(this.x, this.y.redNeg());\\n  if (_precompute && this.precomputed) {\\n    var pre = this.precomputed;\\n    var negate = function(p) {\\n      return p.neg();\\n    };\\n    res.precomputed = {\\n      naf: pre.naf && {\\n        wnd: pre.naf.wnd,\\n        points: pre.naf.points.map(negate),\\n      },\\n      doubles: pre.doubles && {\\n        step: pre.doubles.step,\\n        points: pre.doubles.points.map(negate),\\n      },\\n    };\\n  }\\n  return res;\\n};\\n\\nPoint.prototype.toJ = function toJ() {\\n  if (this.inf)\\n    return this.curve.jpoint(null, null, null);\\n\\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\\n  return res;\\n};\\n\\nfunction JPoint(curve, x, y, z) {\\n  Base.BasePoint.call(this, curve, 'jacobian');\\n  if (x === null && y === null && z === null) {\\n    this.x = this.curve.one;\\n    this.y = this.curve.one;\\n    this.z = new BN(0);\\n  } else {\\n    this.x = new BN(x, 16);\\n    this.y = new BN(y, 16);\\n    this.z = new BN(z, 16);\\n  }\\n  if (!this.x.red)\\n    this.x = this.x.toRed(this.curve.red);\\n  if (!this.y.red)\\n    this.y = this.y.toRed(this.curve.red);\\n  if (!this.z.red)\\n    this.z = this.z.toRed(this.curve.red);\\n\\n  this.zOne = this.z === this.curve.one;\\n}\\ninherits(JPoint, Base.BasePoint);\\n\\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\\n  return new JPoint(this, x, y, z);\\n};\\n\\nJPoint.prototype.toP = function toP() {\\n  if (this.isInfinity())\\n    return this.curve.point(null, null);\\n\\n  var zinv = this.z.redInvm();\\n  var zinv2 = zinv.redSqr();\\n  var ax = this.x.redMul(zinv2);\\n  var ay = this.y.redMul(zinv2).redMul(zinv);\\n\\n  return this.curve.point(ax, ay);\\n};\\n\\nJPoint.prototype.neg = function neg() {\\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\\n};\\n\\nJPoint.prototype.add = function add(p) {\\n  // O + P = P\\n  if (this.isInfinity())\\n    return p;\\n\\n  // P + O = P\\n  if (p.isInfinity())\\n    return this;\\n\\n  // 12M + 4S + 7A\\n  var pz2 = p.z.redSqr();\\n  var z2 = this.z.redSqr();\\n  var u1 = this.x.redMul(pz2);\\n  var u2 = p.x.redMul(z2);\\n  var s1 = this.y.redMul(pz2.redMul(p.z));\\n  var s2 = p.y.redMul(z2.redMul(this.z));\\n\\n  var h = u1.redSub(u2);\\n  var r = s1.redSub(s2);\\n  if (h.cmpn(0) === 0) {\\n    if (r.cmpn(0) !== 0)\\n      return this.curve.jpoint(null, null, null);\\n    else\\n      return this.dbl();\\n  }\\n\\n  var h2 = h.redSqr();\\n  var h3 = h2.redMul(h);\\n  var v = u1.redMul(h2);\\n\\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\\n  var nz = this.z.redMul(p.z).redMul(h);\\n\\n  return this.curve.jpoint(nx, ny, nz);\\n};\\n\\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\\n  // O + P = P\\n  if (this.isInfinity())\\n    return p.toJ();\\n\\n  // P + O = P\\n  if (p.isInfinity())\\n    return this;\\n\\n  // 8M + 3S + 7A\\n  var z2 = this.z.redSqr();\\n  var u1 = this.x;\\n  var u2 = p.x.redMul(z2);\\n  var s1 = this.y;\\n  var s2 = p.y.redMul(z2).redMul(this.z);\\n\\n  var h = u1.redSub(u2);\\n  var r = s1.redSub(s2);\\n  if (h.cmpn(0) === 0) {\\n    if (r.cmpn(0) !== 0)\\n      return this.curve.jpoint(null, null, null);\\n    else\\n      return this.dbl();\\n  }\\n\\n  var h2 = h.redSqr();\\n  var h3 = h2.redMul(h);\\n  var v = u1.redMul(h2);\\n\\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\\n  var nz = this.z.redMul(h);\\n\\n  return this.curve.jpoint(nx, ny, nz);\\n};\\n\\nJPoint.prototype.dblp = function dblp(pow) {\\n  if (pow === 0)\\n    return this;\\n  if (this.isInfinity())\\n    return this;\\n  if (!pow)\\n    return this.dbl();\\n\\n  var i;\\n  if (this.curve.zeroA || this.curve.threeA) {\\n    var r = this;\\n    for (i = 0; i < pow; i++)\\n      r = r.dbl();\\n    return r;\\n  }\\n\\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\\n  // N = 1 => 6M + 6S + 9A\\n  var a = this.curve.a;\\n  var tinv = this.curve.tinv;\\n\\n  var jx = this.x;\\n  var jy = this.y;\\n  var jz = this.z;\\n  var jz4 = jz.redSqr().redSqr();\\n\\n  // Reuse results\\n  var jyd = jy.redAdd(jy);\\n  for (i = 0; i < pow; i++) {\\n    var jx2 = jx.redSqr();\\n    var jyd2 = jyd.redSqr();\\n    var jyd4 = jyd2.redSqr();\\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\\n\\n    var t1 = jx.redMul(jyd2);\\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\\n    var t2 = t1.redISub(nx);\\n    var dny = c.redMul(t2);\\n    dny = dny.redIAdd(dny).redISub(jyd4);\\n    var nz = jyd.redMul(jz);\\n    if (i + 1 < pow)\\n      jz4 = jz4.redMul(jyd4);\\n\\n    jx = nx;\\n    jz = nz;\\n    jyd = dny;\\n  }\\n\\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\\n};\\n\\nJPoint.prototype.dbl = function dbl() {\\n  if (this.isInfinity())\\n    return this;\\n\\n  if (this.curve.zeroA)\\n    return this._zeroDbl();\\n  else if (this.curve.threeA)\\n    return this._threeDbl();\\n  else\\n    return this._dbl();\\n};\\n\\nJPoint.prototype._zeroDbl = function _zeroDbl() {\\n  var nx;\\n  var ny;\\n  var nz;\\n  // Z = 1\\n  if (this.zOne) {\\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\\n    //     #doubling-mdbl-2007-bl\\n    // 1M + 5S + 14A\\n\\n    // XX = X1^2\\n    var xx = this.x.redSqr();\\n    // YY = Y1^2\\n    var yy = this.y.redSqr();\\n    // YYYY = YY^2\\n    var yyyy = yy.redSqr();\\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\\n    s = s.redIAdd(s);\\n    // M = 3 * XX + a; a = 0\\n    var m = xx.redAdd(xx).redIAdd(xx);\\n    // T = M ^ 2 - 2*S\\n    var t = m.redSqr().redISub(s).redISub(s);\\n\\n    // 8 * YYYY\\n    var yyyy8 = yyyy.redIAdd(yyyy);\\n    yyyy8 = yyyy8.redIAdd(yyyy8);\\n    yyyy8 = yyyy8.redIAdd(yyyy8);\\n\\n    // X3 = T\\n    nx = t;\\n    // Y3 = M * (S - T) - 8 * YYYY\\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\\n    // Z3 = 2*Y1\\n    nz = this.y.redAdd(this.y);\\n  } else {\\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\\n    //     #doubling-dbl-2009-l\\n    // 2M + 5S + 13A\\n\\n    // A = X1^2\\n    var a = this.x.redSqr();\\n    // B = Y1^2\\n    var b = this.y.redSqr();\\n    // C = B^2\\n    var c = b.redSqr();\\n    // D = 2 * ((X1 + B)^2 - A - C)\\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\\n    d = d.redIAdd(d);\\n    // E = 3 * A\\n    var e = a.redAdd(a).redIAdd(a);\\n    // F = E^2\\n    var f = e.redSqr();\\n\\n    // 8 * C\\n    var c8 = c.redIAdd(c);\\n    c8 = c8.redIAdd(c8);\\n    c8 = c8.redIAdd(c8);\\n\\n    // X3 = F - 2 * D\\n    nx = f.redISub(d).redISub(d);\\n    // Y3 = E * (D - X3) - 8 * C\\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\\n    // Z3 = 2 * Y1 * Z1\\n    nz = this.y.redMul(this.z);\\n    nz = nz.redIAdd(nz);\\n  }\\n\\n  return this.curve.jpoint(nx, ny, nz);\\n};\\n\\nJPoint.prototype._threeDbl = function _threeDbl() {\\n  var nx;\\n  var ny;\\n  var nz;\\n  // Z = 1\\n  if (this.zOne) {\\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\\n    //     #doubling-mdbl-2007-bl\\n    // 1M + 5S + 15A\\n\\n    // XX = X1^2\\n    var xx = this.x.redSqr();\\n    // YY = Y1^2\\n    var yy = this.y.redSqr();\\n    // YYYY = YY^2\\n    var yyyy = yy.redSqr();\\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\\n    s = s.redIAdd(s);\\n    // M = 3 * XX + a\\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\\n    // T = M^2 - 2 * S\\n    var t = m.redSqr().redISub(s).redISub(s);\\n    // X3 = T\\n    nx = t;\\n    // Y3 = M * (S - T) - 8 * YYYY\\n    var yyyy8 = yyyy.redIAdd(yyyy);\\n    yyyy8 = yyyy8.redIAdd(yyyy8);\\n    yyyy8 = yyyy8.redIAdd(yyyy8);\\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\\n    // Z3 = 2 * Y1\\n    nz = this.y.redAdd(this.y);\\n  } else {\\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\\n    // 3M + 5S\\n\\n    // delta = Z1^2\\n    var delta = this.z.redSqr();\\n    // gamma = Y1^2\\n    var gamma = this.y.redSqr();\\n    // beta = X1 * gamma\\n    var beta = this.x.redMul(gamma);\\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\\n    // X3 = alpha^2 - 8 * beta\\n    var beta4 = beta.redIAdd(beta);\\n    beta4 = beta4.redIAdd(beta4);\\n    var beta8 = beta4.redAdd(beta4);\\n    nx = alpha.redSqr().redISub(beta8);\\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\\n    var ggamma8 = gamma.redSqr();\\n    ggamma8 = ggamma8.redIAdd(ggamma8);\\n    ggamma8 = ggamma8.redIAdd(ggamma8);\\n    ggamma8 = ggamma8.redIAdd(ggamma8);\\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\\n  }\\n\\n  return this.curve.jpoint(nx, ny, nz);\\n};\\n\\nJPoint.prototype._dbl = function _dbl() {\\n  var a = this.curve.a;\\n\\n  // 4M + 6S + 10A\\n  var jx = this.x;\\n  var jy = this.y;\\n  var jz = this.z;\\n  var jz4 = jz.redSqr().redSqr();\\n\\n  var jx2 = jx.redSqr();\\n  var jy2 = jy.redSqr();\\n\\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\\n\\n  var jxd4 = jx.redAdd(jx);\\n  jxd4 = jxd4.redIAdd(jxd4);\\n  var t1 = jxd4.redMul(jy2);\\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\\n  var t2 = t1.redISub(nx);\\n\\n  var jyd8 = jy2.redSqr();\\n  jyd8 = jyd8.redIAdd(jyd8);\\n  jyd8 = jyd8.redIAdd(jyd8);\\n  jyd8 = jyd8.redIAdd(jyd8);\\n  var ny = c.redMul(t2).redISub(jyd8);\\n  var nz = jy.redAdd(jy).redMul(jz);\\n\\n  return this.curve.jpoint(nx, ny, nz);\\n};\\n\\nJPoint.prototype.trpl = function trpl() {\\n  if (!this.curve.zeroA)\\n    return this.dbl().add(this);\\n\\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\\n  // 5M + 10S + ...\\n\\n  // XX = X1^2\\n  var xx = this.x.redSqr();\\n  // YY = Y1^2\\n  var yy = this.y.redSqr();\\n  // ZZ = Z1^2\\n  var zz = this.z.redSqr();\\n  // YYYY = YY^2\\n  var yyyy = yy.redSqr();\\n  // M = 3 * XX + a * ZZ2; a = 0\\n  var m = xx.redAdd(xx).redIAdd(xx);\\n  // MM = M^2\\n  var mm = m.redSqr();\\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\\n  e = e.redIAdd(e);\\n  e = e.redAdd(e).redIAdd(e);\\n  e = e.redISub(mm);\\n  // EE = E^2\\n  var ee = e.redSqr();\\n  // T = 16*YYYY\\n  var t = yyyy.redIAdd(yyyy);\\n  t = t.redIAdd(t);\\n  t = t.redIAdd(t);\\n  t = t.redIAdd(t);\\n  // U = (M + E)^2 - MM - EE - T\\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\\n  var yyu4 = yy.redMul(u);\\n  yyu4 = yyu4.redIAdd(yyu4);\\n  yyu4 = yyu4.redIAdd(yyu4);\\n  var nx = this.x.redMul(ee).redISub(yyu4);\\n  nx = nx.redIAdd(nx);\\n  nx = nx.redIAdd(nx);\\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\\n  ny = ny.redIAdd(ny);\\n  ny = ny.redIAdd(ny);\\n  ny = ny.redIAdd(ny);\\n  // Z3 = (Z1 + E)^2 - ZZ - EE\\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\\n\\n  return this.curve.jpoint(nx, ny, nz);\\n};\\n\\nJPoint.prototype.mul = function mul(k, kbase) {\\n  k = new BN(k, kbase);\\n\\n  return this.curve._wnafMul(this, k);\\n};\\n\\nJPoint.prototype.eq = function eq(p) {\\n  if (p.type === 'affine')\\n    return this.eq(p.toJ());\\n\\n  if (this === p)\\n    return true;\\n\\n  // x1 * z2^2 == x2 * z1^2\\n  var z2 = this.z.redSqr();\\n  var pz2 = p.z.redSqr();\\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\\n    return false;\\n\\n  // y1 * z2^3 == y2 * z1^3\\n  var z3 = z2.redMul(this.z);\\n  var pz3 = pz2.redMul(p.z);\\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\\n};\\n\\nJPoint.prototype.eqXToP = function eqXToP(x) {\\n  var zs = this.z.redSqr();\\n  var rx = x.toRed(this.curve.red).redMul(zs);\\n  if (this.x.cmp(rx) === 0)\\n    return true;\\n\\n  var xc = x.clone();\\n  var t = this.curve.redN.redMul(zs);\\n  for (;;) {\\n    xc.iadd(this.curve.n);\\n    if (xc.cmp(this.curve.p) >= 0)\\n      return false;\\n\\n    rx.redIAdd(t);\\n    if (this.x.cmp(rx) === 0)\\n      return true;\\n  }\\n};\\n\\nJPoint.prototype.inspect = function inspect() {\\n  if (this.isInfinity())\\n    return '<EC JPoint Infinity>';\\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\\n      ' y: ' + this.y.toString(16, 2) +\\n      ' z: ' + this.z.toString(16, 2) + '>';\\n};\\n\\nJPoint.prototype.isInfinity = function isInfinity() {\\n  // XXX This code assumes that zero is always zero in red\\n  return this.z.cmpn(0) === 0;\\n};\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"ShortCurve\",\"conf\",\"Base\",\"call\",\"a\",\"toRed\",\"BN\",\"red\",\"b\",\"tinv\",\"two\",\"redInvm\",\"zeroA\",\"fromRed\",\"cmpn\",\"threeA\",\"sub\",\"p\",\"endo\",\"_getEndomorphism\",\"_endoWnafT1\",\"Array\",\"_endoWnafT2\",\"Point\",\"curve\",\"x\",\"y\",\"isRed\",\"BasePoint\",\"inf\",\"forceRed\",\"JPoint\",\"z\",\"one\",\"zOne\",\"utils\",\"inherits\",\"assert\",\"prototype\",\"ShortCurve.prototype._getEndomorphism\",\"g\",\"n\",\"modn\",\"beta\",\"betas\",\"_getEndoRoots\",\"cmp\",\"lambda\",\"lambdas\",\"mul\",\"redMul\",\"basis\",\"map\",\"vec\",\"_getEndoBasis\",\"ShortCurve.prototype._getEndoRoots\",\"num\",\"mont\",\"ntinv\",\"redNeg\",\"s\",\"redSqrt\",\"l1\",\"redAdd\",\"l2\",\"redSub\",\"ShortCurve.prototype._getEndoBasis\",\"aprxSqrt\",\"ushrn\",\"Math\",\"floor\",\"bitLength\",\"v\",\"clone\",\"x1\",\"y1\",\"x2\",\"y2\",\"a0\",\"b0\",\"a1\",\"b1\",\"b2\",\"prevR\",\"i\",\"r\",\"u\",\"q\",\"div\",\"neg\",\"a2\",\"len1\",\"sqr\",\"add\",\"len2\",\"negative\",\"_endoSplit\",\"ShortCurve.prototype._endoSplit\",\"k\",\"v1\",\"v2\",\"c1\",\"divRound\",\"c2\",\"p1\",\"p2\",\"q1\",\"q2\",\"k1\",\"k2\",\"pointFromX\",\"ShortCurve.prototype.pointFromX\",\"odd\",\"redSqr\",\"redIAdd\",\"zero\",\"Error\",\"isOdd\",\"point\",\"validate\",\"ShortCurve.prototype.validate\",\"ax\",\"rhs\",\"redISub\",\"_endoWnafMulAdd\",\"ShortCurve.prototype._endoWnafMulAdd\",\"points\",\"coeffs\",\"jacobianResult\",\"npoints\",\"ncoeffs\",\"length\",\"split\",\"_getBeta\",\"ineg\",\"res\",\"_wnafMulAdd\",\"j\",\"ShortCurve.prototype.point\",\"pointFromJSON\",\"ShortCurve.prototype.pointFromJSON\",\"obj\",\"fromJSON\",\"Point.prototype._getBeta\",\"pre\",\"precomputed\",\"endoMul\",\"naf\",\"wnd\",\"doubles\",\"step\",\"toJSON\",\"Point.prototype.toJSON\",\"slice\",\"Point.fromJSON\",\"obj2point\",\"JSON\",\"parse\",\"concat\",\"inspect\",\"Point.prototype.inspect\",\"isInfinity\",\"toString\",\"Point.prototype.isInfinity\",\"Point.prototype.add\",\"eq\",\"dbl\",\"c\",\"nx\",\"ny\",\"Point.prototype.dbl\",\"ys1\",\"dyinv\",\"getX\",\"Point.prototype.getX\",\"getY\",\"Point.prototype.getY\",\"Point.prototype.mul\",\"_hasDoubles\",\"_fixedNafMul\",\"_wnafMul\",\"mulAdd\",\"Point.prototype.mulAdd\",\"jmulAdd\",\"Point.prototype.jmulAdd\",\"Point.prototype.eq\",\"Point.prototype.neg\",\"_precompute\",\"negate\",\"toJ\",\"Point.prototype.toJ\",\"jpoint\",\"ShortCurve.prototype.jpoint\",\"toP\",\"JPoint.prototype.toP\",\"zinv\",\"zinv2\",\"ay\",\"JPoint.prototype.neg\",\"JPoint.prototype.add\",\"pz2\",\"z2\",\"u1\",\"u2\",\"s1\",\"s2\",\"h\",\"h2\",\"h3\",\"nz\",\"mixedAdd\",\"JPoint.prototype.mixedAdd\",\"dblp\",\"JPoint.prototype.dblp\",\"pow\",\"jx\",\"jy\",\"jz\",\"jz4\",\"jyd\",\"jx2\",\"jyd2\",\"jyd4\",\"t1\",\"t2\",\"dny\",\"JPoint.prototype.dbl\",\"_zeroDbl\",\"_threeDbl\",\"_dbl\",\"JPoint.prototype._zeroDbl\",\"xx\",\"yy\",\"yyyy\",\"m\",\"t\",\"yyyy8\",\"d\",\"e\",\"f\",\"c8\",\"JPoint.prototype._threeDbl\",\"delta\",\"gamma\",\"alpha\",\"beta4\",\"beta8\",\"ggamma8\",\"JPoint.prototype._dbl\",\"jy2\",\"jxd4\",\"jyd8\",\"trpl\",\"JPoint.prototype.trpl\",\"zz\",\"mm\",\"ee\",\"yyu4\",\"JPoint.prototype.mul\",\"kbase\",\"JPoint.prototype.eq\",\"type\",\"z3\",\"pz3\",\"eqXToP\",\"JPoint.prototype.eqXToP\",\"zs\",\"rx\",\"xc\",\"redN\",\"iadd\",\"JPoint.prototype.inspect\",\"JPoint.prototype.isInfinity\"]\n}\n"]