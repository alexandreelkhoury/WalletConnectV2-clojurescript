["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/pako/lib/utils/common.js"],"~:js","shadow$provide.module$node_modules$pako$lib$utils$common=function(global,require,module,exports){global=\"undefined\"!==typeof Uint8Array&&\"undefined\"!==typeof Uint16Array&&\"undefined\"!==typeof Int32Array;exports.assign=function(obj){for(var sources=Array.prototype.slice.call(arguments,1);sources.length;){var source=sources.shift();if(source){if(\"object\"!==typeof source)throw new TypeError(source+\"must be non-object\");for(var p in source)Object.prototype.hasOwnProperty.call(source,p)&&(obj[p]=source[p])}}return obj};\nexports.shrinkBuf=function(buf,size){if(buf.length===size)return buf;if(buf.subarray)return buf.subarray(0,size);buf.length=size;return buf};var fnTyped={arraySet:function(dest,src,src_offs,len,dest_offs){if(src.subarray&&dest.subarray)dest.set(src.subarray(src_offs,src_offs+len),dest_offs);else for(var i=0;i<len;i++)dest[dest_offs+i]=src[src_offs+i]},flattenChunks:function(chunks){var l,len;var i=len=0;for(l=chunks.length;i<l;i++)len+=chunks[i].length;var result=new Uint8Array(len);i=len=0;for(l=\nchunks.length;i<l;i++){var chunk=chunks[i];result.set(chunk,len);len+=chunk.length}return result}},fnUntyped={arraySet:function(dest,src,src_offs,len,dest_offs){for(var i=0;i<len;i++)dest[dest_offs+i]=src[src_offs+i]},flattenChunks:function(chunks){return[].concat.apply([],chunks)}};exports.setTyped=function(on){on?(exports.Buf8=Uint8Array,exports.Buf16=Uint16Array,exports.Buf32=Int32Array,exports.assign(exports,fnTyped)):(exports.Buf8=Array,exports.Buf16=Array,exports.Buf32=Array,exports.assign(exports,\nfnUntyped))};exports.setTyped(global)}","~:source","shadow$provide[\"module$node_modules$pako$lib$utils$common\"] = function(global,require,module,exports) {\n'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\nfunction _has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["assign","Buf16","Buf8","length","Buf32","shrinkBuf","setTyped","flattenChunks","arraySet"]],"~:compiled-at",1695040653742,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$pako$lib$utils$common.js\",\n\"lineCount\":4,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/pako/lib/utils/common.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$pako$lib$utils$common\\\"] = function(global,require,module,exports) {\\n'use strict';\\n\\n\\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\\n                (typeof Uint16Array !== 'undefined') &&\\n                (typeof Int32Array !== 'undefined');\\n\\nfunction _has(obj, key) {\\n  return Object.prototype.hasOwnProperty.call(obj, key);\\n}\\n\\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\\n  var sources = Array.prototype.slice.call(arguments, 1);\\n  while (sources.length) {\\n    var source = sources.shift();\\n    if (!source) { continue; }\\n\\n    if (typeof source !== 'object') {\\n      throw new TypeError(source + 'must be non-object');\\n    }\\n\\n    for (var p in source) {\\n      if (_has(source, p)) {\\n        obj[p] = source[p];\\n      }\\n    }\\n  }\\n\\n  return obj;\\n};\\n\\n\\n// reduce buffer size, avoiding mem copy\\nexports.shrinkBuf = function (buf, size) {\\n  if (buf.length === size) { return buf; }\\n  if (buf.subarray) { return buf.subarray(0, size); }\\n  buf.length = size;\\n  return buf;\\n};\\n\\n\\nvar fnTyped = {\\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\\n    if (src.subarray && dest.subarray) {\\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\\n      return;\\n    }\\n    // Fallback to ordinary array\\n    for (var i = 0; i < len; i++) {\\n      dest[dest_offs + i] = src[src_offs + i];\\n    }\\n  },\\n  // Join array of chunks to single array.\\n  flattenChunks: function (chunks) {\\n    var i, l, len, pos, chunk, result;\\n\\n    // calculate data length\\n    len = 0;\\n    for (i = 0, l = chunks.length; i < l; i++) {\\n      len += chunks[i].length;\\n    }\\n\\n    // join chunks\\n    result = new Uint8Array(len);\\n    pos = 0;\\n    for (i = 0, l = chunks.length; i < l; i++) {\\n      chunk = chunks[i];\\n      result.set(chunk, pos);\\n      pos += chunk.length;\\n    }\\n\\n    return result;\\n  }\\n};\\n\\nvar fnUntyped = {\\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\\n    for (var i = 0; i < len; i++) {\\n      dest[dest_offs + i] = src[src_offs + i];\\n    }\\n  },\\n  // Join array of chunks to single array.\\n  flattenChunks: function (chunks) {\\n    return [].concat.apply([], chunks);\\n  }\\n};\\n\\n\\n// Enable/Disable typed arrays use, for testing\\n//\\nexports.setTyped = function (on) {\\n  if (on) {\\n    exports.Buf8  = Uint8Array;\\n    exports.Buf16 = Uint16Array;\\n    exports.Buf32 = Int32Array;\\n    exports.assign(exports, fnTyped);\\n  } else {\\n    exports.Buf8  = Array;\\n    exports.Buf16 = Array;\\n    exports.Buf32 = Array;\\n    exports.assign(exports, fnUntyped);\\n  }\\n};\\n\\nexports.setTyped(TYPED_OK);\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"TYPED_OK\",\"Uint8Array\",\"Uint16Array\",\"Int32Array\",\"assign\",\"exports.assign\",\"obj\",\"sources\",\"Array\",\"prototype\",\"slice\",\"call\",\"arguments\",\"length\",\"source\",\"shift\",\"TypeError\",\"p\",\"Object\",\"hasOwnProperty\",\"shrinkBuf\",\"exports.shrinkBuf\",\"buf\",\"size\",\"subarray\",\"fnTyped\",\"arraySet\",\"dest\",\"src\",\"src_offs\",\"len\",\"dest_offs\",\"set\",\"i\",\"flattenChunks\",\"chunks\",\"l\",\"result\",\"pos\",\"chunk\",\"fnUntyped\",\"concat\",\"apply\",\"setTyped\",\"exports.setTyped\",\"on\",\"Buf8\",\"Buf16\",\"Buf32\"]\n}\n"]