["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/hash_DOT_js/lib/hash/hmac.js"],"~:js","shadow$provide[91]=function(S,A,V,q){function F(y,e,u){if(!(this instanceof F))return new F(y,e,u);this.Hash=y;this.blockSize=y.blockSize/8;this.outSize=y.outSize/8;this.outer=this.inner=null;this._init(G.toArray(e,u))}var G=A(81),r=A(71);V.exports=F;F.prototype._init=function(y){y.length>this.blockSize&&(y=(new this.Hash).update(y).digest());r(y.length<=this.blockSize);for(var e=y.length;e<this.blockSize;e++)y.push(0);for(e=0;e<y.length;e++)y[e]^=54;this.inner=(new this.Hash).update(y);for(e=0;e<\ny.length;e++)y[e]^=106;this.outer=(new this.Hash).update(y)};F.prototype.update=function(y,e){this.inner.update(y,e);return this};F.prototype.digest=function(y){this.outer.update(this.inner.digest());return this.outer.digest(y)}}","~:source","shadow$provide[91] = function(global,require,module,exports) {\n'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$minimalistic_assert$index","~$module$node_modules$hash_DOT_js$lib$hash$utils"]],"~:properties",["^5",["outSize","Hash","update","digest","outer","_init","blockSize","inner"]],"~:compiled-at",1695041440750,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$hash_DOT_js$lib$hash$hmac.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAe,EAAf,CAAA,CAAqB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAM7DC,QAASA,EAAI,CAACC,CAAD,CAAOC,CAAP,CAAYC,CAAZ,CAAiB,CAC5B,GAAI,EAAE,IAAF,WAAkBH,EAAlB,CAAJ,CACE,MAAO,KAAIA,CAAJ,CAASC,CAAT,CAAeC,CAAf,CAAoBC,CAApB,CACT,KAAKC,CAAAA,IAAL,CAAYH,CACZ,KAAKI,CAAAA,SAAL,CAAiBJ,CAAKI,CAAAA,SAAtB,CAAkC,CAClC,KAAKC,CAAAA,OAAL,CAAeL,CAAKK,CAAAA,OAApB,CAA8B,CAE9B,KAAKC,CAAAA,KAAL,CADA,IAAKC,CAAAA,KACL,CADa,IAGb,KAAKC,CAAAA,KAAL,CAAWC,CAAMC,CAAAA,OAAN,CAAcT,CAAd,CAAmBC,CAAnB,CAAX,CAT4B,CAH9B,IAAIO,EAAQb,CAAA,CAAQ,EAAR,CAAZ,CACIe,EAASf,CAAA,CAAQ,EAAR,CAabC,EAAOC,CAAAA,OAAP,CAAiBC,CAEjBA,EAAKa,CAAAA,SAAUJ,CAAAA,KAAf,CAAuBK,QAAa,CAACZ,CAAD,CAAM,CAEpCA,CAAIa,CAAAA,MAAR,CAAiB,IAAKV,CAAAA,SAAtB,GACEH,CADF,CACwBc,CAAhB,IAAI,IAAKZ,CAAAA,IAAOY,EAAAA,MAAhB,CAAuBd,CAAvB,CAA4Be,CAAAA,MAA5B,EADR,CAEAL,EAAA,CAAOV,CAAIa,CAAAA,MAAX,EAAqB,IAAKV,CAAAA,SAA1B,CAGA,KAAK,IAAIa,EAAIhB,CAAIa,CAAAA,MAAjB,CAAyBG,CAAzB,CAA6B,IAAKb,CAAAA,SAAlC,CAA6Ca,CAAA,EAA7C,CACEhB,CAAIiB,CAAAA,IAAJ,CAAS,CAAT,CAEF,KAAKD,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBhB,CAAIa,CAAAA,MAApB,CAA4BG,CAAA,EAA5B,CACEhB,CAAA,CAAIgB,CAAJ,CAAA,EAAU,EACZ,KAAKV,CAAAA,KAAL,CAA6BQ,CAAhB,IAAI,IAAKZ,CAAAA,IAAOY,EAAAA,MAAhB,CAAuBd,CAAvB,CAGb,KAAKgB,CAAL,CAAS,CAAT,CAAYA,CAAZ;AAAgBhB,CAAIa,CAAAA,MAApB,CAA4BG,CAAA,EAA5B,CACEhB,CAAA,CAAIgB,CAAJ,CAAA,EAAU,GACZ,KAAKX,CAAAA,KAAL,CAA6BS,CAAhB,IAAI,IAAKZ,CAAAA,IAAOY,EAAAA,MAAhB,CAAuBd,CAAvB,CAjB2B,CAoB1CF,EAAKa,CAAAA,SAAUG,CAAAA,MAAf,CAAwBI,QAAe,CAACC,CAAD,CAAMlB,CAAN,CAAW,CAChD,IAAKK,CAAAA,KAAMQ,CAAAA,MAAX,CAAkBK,CAAlB,CAAuBlB,CAAvB,CACA,OAAO,KAFyC,CAKlDH,EAAKa,CAAAA,SAAUI,CAAAA,MAAf,CAAwBK,QAAe,CAACnB,CAAD,CAAM,CAC3C,IAAKI,CAAAA,KAAMS,CAAAA,MAAX,CAAkB,IAAKR,CAAAA,KAAMS,CAAAA,MAAX,EAAlB,CACA,OAAO,KAAKV,CAAAA,KAAMU,CAAAA,MAAX,CAAkBd,CAAlB,CAFoC,CA5CgB;\",\n\"sources\":[\"node_modules/hash_DOT_js/lib/hash/hmac.js\"],\n\"sourcesContent\":[\"shadow$provide[91] = function(global,require,module,exports) {\\n'use strict';\\n\\nvar utils = require('./utils');\\nvar assert = require('minimalistic-assert');\\n\\nfunction Hmac(hash, key, enc) {\\n  if (!(this instanceof Hmac))\\n    return new Hmac(hash, key, enc);\\n  this.Hash = hash;\\n  this.blockSize = hash.blockSize / 8;\\n  this.outSize = hash.outSize / 8;\\n  this.inner = null;\\n  this.outer = null;\\n\\n  this._init(utils.toArray(key, enc));\\n}\\nmodule.exports = Hmac;\\n\\nHmac.prototype._init = function init(key) {\\n  // Shorten key, if needed\\n  if (key.length > this.blockSize)\\n    key = new this.Hash().update(key).digest();\\n  assert(key.length <= this.blockSize);\\n\\n  // Add padding to key\\n  for (var i = key.length; i < this.blockSize; i++)\\n    key.push(0);\\n\\n  for (i = 0; i < key.length; i++)\\n    key[i] ^= 0x36;\\n  this.inner = new this.Hash().update(key);\\n\\n  // 0x36 ^ 0x5c = 0x6a\\n  for (i = 0; i < key.length; i++)\\n    key[i] ^= 0x6a;\\n  this.outer = new this.Hash().update(key);\\n};\\n\\nHmac.prototype.update = function update(msg, enc) {\\n  this.inner.update(msg, enc);\\n  return this;\\n};\\n\\nHmac.prototype.digest = function digest(enc) {\\n  this.outer.update(this.inner.digest());\\n  return this.outer.digest(enc);\\n};\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Hmac\",\"hash\",\"key\",\"enc\",\"Hash\",\"blockSize\",\"outSize\",\"outer\",\"inner\",\"_init\",\"utils\",\"toArray\",\"assert\",\"prototype\",\"Hmac.prototype._init\",\"length\",\"update\",\"digest\",\"i\",\"push\",\"Hmac.prototype.update\",\"msg\",\"Hmac.prototype.digest\"]\n}\n"]