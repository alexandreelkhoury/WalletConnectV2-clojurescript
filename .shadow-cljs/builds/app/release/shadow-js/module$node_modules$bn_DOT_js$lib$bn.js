["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/bn_DOT_js/lib/bn.js"],"~:js","shadow$provide[7]=function(S,A,V,q){(function(F,G){function r(c,d){if(!c)throw Error(d||\"Assertion failed\");}function y(c,d){c.super_=d;var f=function(){};f.prototype=d.prototype;c.prototype=new f;c.prototype.constructor=c}function e(c,d,f){if(e.isBN(c))return c;this.negative=0;this.words=null;this.length=0;this.red=null;if(null!==c){if(\"le\"===d||\"be\"===d)f=d,d=10;this._init(c||0,d||10,f||\"be\")}}function u(c,d){d=c.charCodeAt(d);if(48<=d&&57>=d)return d-48;if(65<=d&&70>=d)return d-55;if(97<=d&&102>=\nd)return d-87;r(!1,\"Invalid character in \"+c)}function p(c,d,f){var g=u(c,f);f-1>=d&&(g|=u(c,f-1)<<4);return g}function n(c,d,f,g){var m=0;f=Math.min(c.length,f);for(var w=d;w<f;w++){var x=c.charCodeAt(w)-48;m*=g;d=49<=x?x-49+10:17<=x?x-17+10:x;r(0<=x&&d<g,\"Invalid character\");m+=d}return m}function l(c,d){c.words=d.words;c.length=d.length;c.negative=d.negative;c.red=d.red}function h(){return(this.red?\"\\x3cBN-R: \":\"\\x3cBN: \")+this.toString(16)+\"\\x3e\"}function k(c,d,f){f.negative=d.negative^c.negative;\nvar g=c.length+d.length|0;f.length=g;g=g-1|0;var m=c.words[0]|0,w=d.words[0]|0;m*=w;var x=m/67108864|0;f.words[0]=m&67108863;for(var z=1;z<g;z++){var v=x>>>26,R=x&67108863;x=Math.min(z,d.length-1);for(var O=Math.max(0,z-c.length+1);O<=x;O++)m=c.words[z-O|0]|0,w=d.words[O]|0,m=m*w+R,v+=m/67108864|0,R=m&67108863;f.words[z]=R|0;x=v|0}0!==x?f.words[z]=x|0:f.length--;return f._strip()}function t(c,d,f){f.negative=d.negative^c.negative;f.length=c.length+d.length;for(var g=0,m=0,w=0;w<f.length-1;w++){var x=\nm;m=0;g&=67108863;for(var z=Math.min(w,d.length-1),v=Math.max(0,w-c.length+1);v<=z;v++){var R=(c.words[w-v]|0)*(d.words[v]|0),O=R&67108863;x=x+(R/67108864|0)|0;O=O+g|0;g=O&67108863;x=x+(O>>>26)|0;m+=x>>>26;x&=67108863}f.words[w]=g;g=x}0!==g?f.words[w]=g:f.length--;return f._strip()}function B(c,d){this.name=c;this.p=new e(d,16);this.n=this.p.bitLength();this.k=(new e(1)).iushln(this.n).isub(this.p);this.tmp=this._tmp()}function E(){B.call(this,\"k256\",\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\")}\nfunction H(){B.call(this,\"p224\",\"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\")}function D(){B.call(this,\"p192\",\"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\")}function C(){B.call(this,\"25519\",\"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\")}function I(c){\"string\"===typeof c?(c=e._prime(c),this.m=c.p,this.prime=c):(r(c.gtn(1),\"modulus must be greater than 1\"),this.m=c,this.prime=null)}function M(c){I.call(this,c);this.shift=this.m.bitLength();0!==this.shift%\n26&&(this.shift+=26-this.shift%26);this.r=(new e(1)).iushln(this.shift);this.r2=this.imod(this.r.sqr());this.rinv=this.r._invmp(this.m);this.minv=this.rinv.mul(this.r).isubn(1).div(this.m);this.minv=this.minv.umod(this.r);this.minv=this.r.sub(this.minv)}\"object\"===typeof F?F.exports=e:G.BN=e;e.BN=e;e.wordSize=26;try{var P=\"undefined\"!==typeof window&&\"undefined\"!==typeof window.Buffer?window.Buffer:A(6).Buffer}catch(c){}e.isBN=function(c){return c instanceof e?!0:null!==c&&\"object\"===typeof c&&c.constructor.wordSize===\ne.wordSize&&Array.isArray(c.words)};e.max=function(c,d){return 0<c.cmp(d)?c:d};e.min=function(c,d){return 0>c.cmp(d)?c:d};e.prototype._init=function(c,d,f){if(\"number\"===typeof c)return this._initNumber(c,d,f);if(\"object\"===typeof c)return this._initArray(c,d,f);\"hex\"===d&&(d=16);r(d===(d|0)&&2<=d&&36>=d);c=c.toString().replace(/\\s+/g,\"\");var g=0;\"-\"===c[0]&&(g++,this.negative=1);g<c.length&&(16===d?this._parseHex(c,g,f):(this._parseBase(c,d,g),\"le\"===f&&this._initArray(this.toArray(),d,f)))};e.prototype._initNumber=\nfunction(c,d,f){0>c&&(this.negative=1,c=-c);67108864>c?(this.words=[c&67108863],this.length=1):4503599627370496>c?(this.words=[c&67108863,c/67108864&67108863],this.length=2):(r(9007199254740992>c),this.words=[c&67108863,c/67108864&67108863,1],this.length=3);\"le\"===f&&this._initArray(this.toArray(),d,f)};e.prototype._initArray=function(c,d,f){r(\"number\"===typeof c.length);if(0>=c.length)return this.words=[0],this.length=1,this;this.length=Math.ceil(c.length/3);this.words=Array(this.length);for(d=0;d<\nthis.length;d++)this.words[d]=0;var g=0;if(\"be\"===f)for(d=c.length-1,f=0;0<=d;d-=3){var m=c[d]|c[d-1]<<8|c[d-2]<<16;this.words[f]|=m<<g&67108863;this.words[f+1]=m>>>26-g&67108863;g+=24;26<=g&&(g-=26,f++)}else if(\"le\"===f)for(f=d=0;d<c.length;d+=3)m=c[d]|c[d+1]<<8|c[d+2]<<16,this.words[f]|=m<<g&67108863,this.words[f+1]=m>>>26-g&67108863,g+=24,26<=g&&(g-=26,f++);return this._strip()};e.prototype._parseHex=function(c,d,f){this.length=Math.ceil((c.length-d)/6);this.words=Array(this.length);for(var g=\n0;g<this.length;g++)this.words[g]=0;var m=0,w=0;if(\"be\"===f)for(g=c.length-1;g>=d;g-=2)f=p(c,d,g)<<m,this.words[w]|=f&67108863,18<=m?(m-=18,w+=1,this.words[w]|=f>>>26):m+=8;else for(g=0===(c.length-d)%2?d+1:d;g<c.length;g+=2)f=p(c,d,g)<<m,this.words[w]|=f&67108863,18<=m?(m-=18,w+=1,this.words[w]|=f>>>26):m+=8;this._strip()};e.prototype._parseBase=function(c,d,f){this.words=[0];this.length=1;for(var g=0,m=1;67108863>=m;m*=d)g++;g--;m=m/d|0;var w=c.length-f,x=w%g;w=Math.min(w,w-x)+f;for(var z=f;z<w;z+=\ng)f=n(c,z,z+g,d),this.imuln(m),67108864>this.words[0]+f?this.words[0]+=f:this._iaddn(f);if(0!==x){g=1;f=n(c,z,c.length,d);for(z=0;z<x;z++)g*=d;this.imuln(g);67108864>this.words[0]+f?this.words[0]+=f:this._iaddn(f)}this._strip()};e.prototype.copy=function(c){c.words=Array(this.length);for(var d=0;d<this.length;d++)c.words[d]=this.words[d];c.length=this.length;c.negative=this.negative;c.red=this.red};e.prototype._move=function(c){l(c,this)};e.prototype.clone=function(){var c=new e(null);this.copy(c);\nreturn c};e.prototype._expand=function(c){for(;this.length<c;)this.words[this.length++]=0;return this};e.prototype._strip=function(){for(;1<this.length&&0===this.words[this.length-1];)this.length--;return this._normSign()};e.prototype._normSign=function(){1===this.length&&0===this.words[0]&&(this.negative=0);return this};if(\"undefined\"!==typeof Symbol&&\"function\"===typeof Symbol.for)try{e.prototype[Symbol.for(\"nodejs.util.inspect.custom\")]=h}catch(c){e.prototype.inspect=h}else e.prototype.inspect=\nh;var J=\" 0 00 000 0000 00000 000000 0000000 00000000 000000000 0000000000 00000000000 000000000000 0000000000000 00000000000000 000000000000000 0000000000000000 00000000000000000 000000000000000000 0000000000000000000 00000000000000000000 000000000000000000000 0000000000000000000000 00000000000000000000000 000000000000000000000000 0000000000000000000000000\".split(\" \"),T=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],N=[0,0,33554432,43046721,16777216,48828125,60466176,\n40353607,16777216,43046721,1E7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64E6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243E5,28629151,33554432,39135393,45435424,52521875,60466176];e.prototype.toString=function(c,d){c=c||10;d=d|0||1;if(16===c||\"hex\"===c){var f=\"\";for(var g=c=0,m=0;m<this.length;m++){var w=this.words[m],x=((w<<c|g)&16777215).toString(16);g=w>>>24-c&16777215;c+=2;26<=c&&(c-=26,m--);f=0!==g||m!==this.length-1?J[6-\nx.length]+x+f:x+f}for(0!==g&&(f=g.toString(16)+f);0!==f.length%d;)f=\"0\"+f;0!==this.negative&&(f=\"-\"+f);return f}if(c===(c|0)&&2<=c&&36>=c){g=T[c];m=N[c];f=\"\";w=this.clone();for(w.negative=0;!w.isZero();)x=w.modrn(m).toString(c),w=w.idivn(m),f=w.isZero()?x+f:J[g-x.length]+x+f;for(this.isZero()&&(f=\"0\"+f);0!==f.length%d;)f=\"0\"+f;0!==this.negative&&(f=\"-\"+f);return f}r(!1,\"Base should be between 2 and 36\")};e.prototype.toNumber=function(){var c=this.words[0];2===this.length?c+=67108864*this.words[1]:\n3===this.length&&1===this.words[2]?c+=4503599627370496+67108864*this.words[1]:2<this.length&&r(!1,\"Number can only safely store up to 53 bits\");return 0!==this.negative?-c:c};e.prototype.toJSON=function(){return this.toString(16,2)};P&&(e.prototype.toBuffer=function(c,d){return this.toArrayLike(P,c,d)});e.prototype.toArray=function(c,d){return this.toArrayLike(Array,c,d)};e.prototype.toArrayLike=function(c,d,f){this._strip();var g=this.byteLength();f=f||Math.max(1,g);r(g<=f,\"byte array longer than desired length\");\nr(0<f,\"Requested array length \\x3c\\x3d 0\");c=c.allocUnsafe?c.allocUnsafe(f):new c(f);this[\"_toArrayLike\"+(\"le\"===d?\"LE\":\"BE\")](c,g);return c};e.prototype._toArrayLikeLE=function(c,d){for(var f=d=0,g=0,m=0;g<this.length;g++)f|=this.words[g]<<m,c[d++]=f&255,d<c.length&&(c[d++]=f>>8&255),d<c.length&&(c[d++]=f>>16&255),6===m?(d<c.length&&(c[d++]=f>>24&255),m=f=0):(f>>>=24,m+=2);if(d<c.length)for(c[d++]=f;d<c.length;)c[d++]=0};e.prototype._toArrayLikeBE=function(c,d){d=c.length-1;for(var f=0,g=0,m=0;g<\nthis.length;g++)f|=this.words[g]<<m,c[d--]=f&255,0<=d&&(c[d--]=f>>8&255),0<=d&&(c[d--]=f>>16&255),6===m?(0<=d&&(c[d--]=f>>24&255),m=f=0):(f>>>=24,m+=2);if(0<=d)for(c[d--]=f;0<=d;)c[d--]=0};e.prototype._countBits=Math.clz32?function(c){return 32-Math.clz32(c)}:function(c){var d=0;4096<=c&&(d+=13,c>>>=13);64<=c&&(d+=7,c>>>=7);8<=c&&(d+=4,c>>>=4);2<=c&&(d+=2,c>>>=2);return d+c};e.prototype._zeroBits=function(c){if(0===c)return 26;var d=0;0===(c&8191)&&(d+=13,c>>>=13);0===(c&127)&&(d+=7,c>>>=7);0===(c&\n15)&&(d+=4,c>>>=4);0===(c&3)&&(d+=2,c>>>=2);0===(c&1)&&d++;return d};e.prototype.bitLength=function(){var c=this._countBits(this.words[this.length-1]);return 26*(this.length-1)+c};e.prototype.zeroBits=function(){if(this.isZero())return 0;for(var c=0,d=0;d<this.length;d++){var f=this._zeroBits(this.words[d]);c+=f;if(26!==f)break}return c};e.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)};e.prototype.toTwos=function(c){return 0!==this.negative?this.abs().inotn(c).iaddn(1):this.clone()};\ne.prototype.fromTwos=function(c){return this.testn(c-1)?this.notn(c).iaddn(1).ineg():this.clone()};e.prototype.isNeg=function(){return 0!==this.negative};e.prototype.neg=function(){return this.clone().ineg()};e.prototype.ineg=function(){this.isZero()||(this.negative^=1);return this};e.prototype.iuor=function(c){for(;this.length<c.length;)this.words[this.length++]=0;for(var d=0;d<c.length;d++)this.words[d]|=c.words[d];return this._strip()};e.prototype.ior=function(c){r(0===(this.negative|c.negative));\nreturn this.iuor(c)};e.prototype.or=function(c){return this.length>c.length?this.clone().ior(c):c.clone().ior(this)};e.prototype.uor=function(c){return this.length>c.length?this.clone().iuor(c):c.clone().iuor(this)};e.prototype.iuand=function(c){var d=this.length>c.length?c:this;for(var f=0;f<d.length;f++)this.words[f]&=c.words[f];this.length=d.length;return this._strip()};e.prototype.iand=function(c){r(0===(this.negative|c.negative));return this.iuand(c)};e.prototype.and=function(c){return this.length>\nc.length?this.clone().iand(c):c.clone().iand(this)};e.prototype.uand=function(c){return this.length>c.length?this.clone().iuand(c):c.clone().iuand(this)};e.prototype.iuxor=function(c){if(this.length>c.length)var d=this;else d=c,c=this;for(var f=0;f<c.length;f++)this.words[f]=d.words[f]^c.words[f];if(this!==d)for(;f<d.length;f++)this.words[f]=d.words[f];this.length=d.length;return this._strip()};e.prototype.ixor=function(c){r(0===(this.negative|c.negative));return this.iuxor(c)};e.prototype.xor=function(c){return this.length>\nc.length?this.clone().ixor(c):c.clone().ixor(this)};e.prototype.uxor=function(c){return this.length>c.length?this.clone().iuxor(c):c.clone().iuxor(this)};e.prototype.inotn=function(c){r(\"number\"===typeof c&&0<=c);var d=Math.ceil(c/26)|0;c%=26;this._expand(d);0<c&&d--;for(var f=0;f<d;f++)this.words[f]=~this.words[f]&67108863;0<c&&(this.words[f]=~this.words[f]&67108863>>26-c);return this._strip()};e.prototype.notn=function(c){return this.clone().inotn(c)};e.prototype.setn=function(c,d){r(\"number\"===\ntypeof c&&0<=c);var f=c/26|0;c%=26;this._expand(f+1);this.words[f]=d?this.words[f]|1<<c:this.words[f]&~(1<<c);return this._strip()};e.prototype.iadd=function(c){if(0!==this.negative&&0===c.negative)return this.negative=0,this.isub(c),this.negative^=1,this._normSign();if(0===this.negative&&0!==c.negative){c.negative=0;var d=this.isub(c);c.negative=1;return d._normSign()}if(this.length>c.length)var f=this;else f=c,c=this;for(var g=d=0;g<c.length;g++)d=(f.words[g]|0)+(c.words[g]|0)+d,this.words[g]=d&\n67108863,d>>>=26;for(;0!==d&&g<f.length;g++)d=(f.words[g]|0)+d,this.words[g]=d&67108863,d>>>=26;this.length=f.length;if(0!==d)this.words[this.length]=d,this.length++;else if(f!==this)for(;g<f.length;g++)this.words[g]=f.words[g];return this};e.prototype.add=function(c){if(0!==c.negative&&0===this.negative){c.negative=0;var d=this.sub(c);c.negative^=1;return d}return 0===c.negative&&0!==this.negative?(this.negative=0,d=c.sub(this),this.negative=1,d):this.length>c.length?this.clone().iadd(c):c.clone().iadd(this)};\ne.prototype.isub=function(c){if(0!==c.negative){c.negative=0;var d=this.iadd(c);c.negative=1;return d._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(c),this.negative=1,this._normSign();d=this.cmp(c);if(0===d)return this.negative=0,this.length=1,this.words[0]=0,this;if(0<d)var f=this;else f=c,c=this;for(var g=0,m=0;m<c.length;m++)d=(f.words[m]|0)-(c.words[m]|0)+g,g=d>>26,this.words[m]=d&67108863;for(;0!==g&&m<f.length;m++)d=(f.words[m]|0)+g,g=d>>26,this.words[m]=d&67108863;if(0===\ng&&m<f.length&&f!==this)for(;m<f.length;m++)this.words[m]=f.words[m];this.length=Math.max(this.length,m);f!==this&&(this.negative=1);return this._strip()};e.prototype.sub=function(c){return this.clone().isub(c)};var a=function(c,d,f){var g=c.words,m=d.words,w=f.words,x=0,z=g[0]|0,v=z&8191,R=z>>>13,O=g[1]|0;z=O&8191;var L=O>>>13,Q=g[2]|0;O=Q&8191;var W=Q>>>13,Z=g[3]|0;Q=Z&8191;var da=Z>>>13,X=g[4]|0;Z=X&8191;var Y=X>>>13,aa=g[5]|0;X=aa&8191;var ca=aa>>>13,ea=g[6]|0;aa=ea&8191;var ja=ea>>>13,ka=g[7]|\n0;ea=ka&8191;var la=ka>>>13,ia=g[8]|0;ka=ia&8191;ia>>>=13;var na=g[9]|0;g=na&8191;na>>>=13;var ua=m[0]|0,qa=ua&8191,oa=ua>>>13,va=m[1]|0;ua=va&8191;var Fa=va>>>13,xa=m[2]|0;va=xa&8191;var Ja=xa>>>13,Aa=m[3]|0;xa=Aa&8191;var Ia=Aa>>>13,sa=m[4]|0;Aa=sa&8191;var Ka=sa>>>13,Ba=m[5]|0;sa=Ba&8191;var Ga=Ba>>>13,ta=m[6]|0;Ba=ta&8191;var Ea=ta>>>13,Ca=m[7]|0;ta=Ca&8191;var Ha=Ca>>>13,K=m[8]|0;Ca=K&8191;K>>>=13;var fa=m[9]|0;m=fa&8191;fa>>>=13;f.negative=c.negative^d.negative;f.length=19;var ba=Math.imul(v,\nqa);c=Math.imul(v,oa);c=c+Math.imul(R,qa)|0;d=Math.imul(R,oa);var ma=(x+ba|0)+((c&8191)<<13)|0;x=(d+(c>>>13)|0)+(ma>>>26)|0;ma&=67108863;ba=Math.imul(z,qa);c=Math.imul(z,oa);c=c+Math.imul(L,qa)|0;d=Math.imul(L,oa);ba=ba+Math.imul(v,ua)|0;c=c+Math.imul(v,Fa)|0;c=c+Math.imul(R,ua)|0;d=d+Math.imul(R,Fa)|0;var ya=(x+ba|0)+((c&8191)<<13)|0;x=(d+(c>>>13)|0)+(ya>>>26)|0;ya&=67108863;ba=Math.imul(O,qa);c=Math.imul(O,oa);c=c+Math.imul(W,qa)|0;d=Math.imul(W,oa);ba=ba+Math.imul(z,ua)|0;c=c+Math.imul(z,Fa)|0;\nc=c+Math.imul(L,ua)|0;d=d+Math.imul(L,Fa)|0;ba=ba+Math.imul(v,va)|0;c=c+Math.imul(v,Ja)|0;c=c+Math.imul(R,va)|0;d=d+Math.imul(R,Ja)|0;var wa=(x+ba|0)+((c&8191)<<13)|0;x=(d+(c>>>13)|0)+(wa>>>26)|0;wa&=67108863;ba=Math.imul(Q,qa);c=Math.imul(Q,oa);c=c+Math.imul(da,qa)|0;d=Math.imul(da,oa);ba=ba+Math.imul(O,ua)|0;c=c+Math.imul(O,Fa)|0;c=c+Math.imul(W,ua)|0;d=d+Math.imul(W,Fa)|0;ba=ba+Math.imul(z,va)|0;c=c+Math.imul(z,Ja)|0;c=c+Math.imul(L,va)|0;d=d+Math.imul(L,Ja)|0;ba=ba+Math.imul(v,xa)|0;c=c+Math.imul(v,\nIa)|0;c=c+Math.imul(R,xa)|0;d=d+Math.imul(R,Ia)|0;var ra=(x+ba|0)+((c&8191)<<13)|0;x=(d+(c>>>13)|0)+(ra>>>26)|0;ra&=67108863;ba=Math.imul(Z,qa);c=Math.imul(Z,oa);c=c+Math.imul(Y,qa)|0;d=Math.imul(Y,oa);ba=ba+Math.imul(Q,ua)|0;c=c+Math.imul(Q,Fa)|0;c=c+Math.imul(da,ua)|0;d=d+Math.imul(da,Fa)|0;ba=ba+Math.imul(O,va)|0;c=c+Math.imul(O,Ja)|0;c=c+Math.imul(W,va)|0;d=d+Math.imul(W,Ja)|0;ba=ba+Math.imul(z,xa)|0;c=c+Math.imul(z,Ia)|0;c=c+Math.imul(L,xa)|0;d=d+Math.imul(L,Ia)|0;ba=ba+Math.imul(v,Aa)|0;c=c+\nMath.imul(v,Ka)|0;c=c+Math.imul(R,Aa)|0;d=d+Math.imul(R,Ka)|0;var Ma=(x+ba|0)+((c&8191)<<13)|0;x=(d+(c>>>13)|0)+(Ma>>>26)|0;Ma&=67108863;ba=Math.imul(X,qa);c=Math.imul(X,oa);c=c+Math.imul(ca,qa)|0;d=Math.imul(ca,oa);ba=ba+Math.imul(Z,ua)|0;c=c+Math.imul(Z,Fa)|0;c=c+Math.imul(Y,ua)|0;d=d+Math.imul(Y,Fa)|0;ba=ba+Math.imul(Q,va)|0;c=c+Math.imul(Q,Ja)|0;c=c+Math.imul(da,va)|0;d=d+Math.imul(da,Ja)|0;ba=ba+Math.imul(O,xa)|0;c=c+Math.imul(O,Ia)|0;c=c+Math.imul(W,xa)|0;d=d+Math.imul(W,Ia)|0;ba=ba+Math.imul(z,\nAa)|0;c=c+Math.imul(z,Ka)|0;c=c+Math.imul(L,Aa)|0;d=d+Math.imul(L,Ka)|0;ba=ba+Math.imul(v,sa)|0;c=c+Math.imul(v,Ga)|0;c=c+Math.imul(R,sa)|0;d=d+Math.imul(R,Ga)|0;var La=(x+ba|0)+((c&8191)<<13)|0;x=(d+(c>>>13)|0)+(La>>>26)|0;La&=67108863;ba=Math.imul(aa,qa);c=Math.imul(aa,oa);c=c+Math.imul(ja,qa)|0;d=Math.imul(ja,oa);ba=ba+Math.imul(X,ua)|0;c=c+Math.imul(X,Fa)|0;c=c+Math.imul(ca,ua)|0;d=d+Math.imul(ca,Fa)|0;ba=ba+Math.imul(Z,va)|0;c=c+Math.imul(Z,Ja)|0;c=c+Math.imul(Y,va)|0;d=d+Math.imul(Y,Ja)|0;ba=\nba+Math.imul(Q,xa)|0;c=c+Math.imul(Q,Ia)|0;c=c+Math.imul(da,xa)|0;d=d+Math.imul(da,Ia)|0;ba=ba+Math.imul(O,Aa)|0;c=c+Math.imul(O,Ka)|0;c=c+Math.imul(W,Aa)|0;d=d+Math.imul(W,Ka)|0;ba=ba+Math.imul(z,sa)|0;c=c+Math.imul(z,Ga)|0;c=c+Math.imul(L,sa)|0;d=d+Math.imul(L,Ga)|0;ba=ba+Math.imul(v,Ba)|0;c=c+Math.imul(v,Ea)|0;c=c+Math.imul(R,Ba)|0;d=d+Math.imul(R,Ea)|0;var Oa=(x+ba|0)+((c&8191)<<13)|0;x=(d+(c>>>13)|0)+(Oa>>>26)|0;Oa&=67108863;ba=Math.imul(ea,qa);c=Math.imul(ea,oa);c=c+Math.imul(la,qa)|0;d=Math.imul(la,\noa);ba=ba+Math.imul(aa,ua)|0;c=c+Math.imul(aa,Fa)|0;c=c+Math.imul(ja,ua)|0;d=d+Math.imul(ja,Fa)|0;ba=ba+Math.imul(X,va)|0;c=c+Math.imul(X,Ja)|0;c=c+Math.imul(ca,va)|0;d=d+Math.imul(ca,Ja)|0;ba=ba+Math.imul(Z,xa)|0;c=c+Math.imul(Z,Ia)|0;c=c+Math.imul(Y,xa)|0;d=d+Math.imul(Y,Ia)|0;ba=ba+Math.imul(Q,Aa)|0;c=c+Math.imul(Q,Ka)|0;c=c+Math.imul(da,Aa)|0;d=d+Math.imul(da,Ka)|0;ba=ba+Math.imul(O,sa)|0;c=c+Math.imul(O,Ga)|0;c=c+Math.imul(W,sa)|0;d=d+Math.imul(W,Ga)|0;ba=ba+Math.imul(z,Ba)|0;c=c+Math.imul(z,\nEa)|0;c=c+Math.imul(L,Ba)|0;d=d+Math.imul(L,Ea)|0;ba=ba+Math.imul(v,ta)|0;c=c+Math.imul(v,Ha)|0;c=c+Math.imul(R,ta)|0;d=d+Math.imul(R,Ha)|0;var Qa=(x+ba|0)+((c&8191)<<13)|0;x=(d+(c>>>13)|0)+(Qa>>>26)|0;Qa&=67108863;ba=Math.imul(ka,qa);c=Math.imul(ka,oa);c=c+Math.imul(ia,qa)|0;d=Math.imul(ia,oa);ba=ba+Math.imul(ea,ua)|0;c=c+Math.imul(ea,Fa)|0;c=c+Math.imul(la,ua)|0;d=d+Math.imul(la,Fa)|0;ba=ba+Math.imul(aa,va)|0;c=c+Math.imul(aa,Ja)|0;c=c+Math.imul(ja,va)|0;d=d+Math.imul(ja,Ja)|0;ba=ba+Math.imul(X,\nxa)|0;c=c+Math.imul(X,Ia)|0;c=c+Math.imul(ca,xa)|0;d=d+Math.imul(ca,Ia)|0;ba=ba+Math.imul(Z,Aa)|0;c=c+Math.imul(Z,Ka)|0;c=c+Math.imul(Y,Aa)|0;d=d+Math.imul(Y,Ka)|0;ba=ba+Math.imul(Q,sa)|0;c=c+Math.imul(Q,Ga)|0;c=c+Math.imul(da,sa)|0;d=d+Math.imul(da,Ga)|0;ba=ba+Math.imul(O,Ba)|0;c=c+Math.imul(O,Ea)|0;c=c+Math.imul(W,Ba)|0;d=d+Math.imul(W,Ea)|0;ba=ba+Math.imul(z,ta)|0;c=c+Math.imul(z,Ha)|0;c=c+Math.imul(L,ta)|0;d=d+Math.imul(L,Ha)|0;ba=ba+Math.imul(v,Ca)|0;c=c+Math.imul(v,K)|0;c=c+Math.imul(R,Ca)|\n0;d=d+Math.imul(R,K)|0;var Ta=(x+ba|0)+((c&8191)<<13)|0;x=(d+(c>>>13)|0)+(Ta>>>26)|0;Ta&=67108863;ba=Math.imul(g,qa);c=Math.imul(g,oa);c=c+Math.imul(na,qa)|0;d=Math.imul(na,oa);ba=ba+Math.imul(ka,ua)|0;c=c+Math.imul(ka,Fa)|0;c=c+Math.imul(ia,ua)|0;d=d+Math.imul(ia,Fa)|0;ba=ba+Math.imul(ea,va)|0;c=c+Math.imul(ea,Ja)|0;c=c+Math.imul(la,va)|0;d=d+Math.imul(la,Ja)|0;ba=ba+Math.imul(aa,xa)|0;c=c+Math.imul(aa,Ia)|0;c=c+Math.imul(ja,xa)|0;d=d+Math.imul(ja,Ia)|0;ba=ba+Math.imul(X,Aa)|0;c=c+Math.imul(X,Ka)|\n0;c=c+Math.imul(ca,Aa)|0;d=d+Math.imul(ca,Ka)|0;ba=ba+Math.imul(Z,sa)|0;c=c+Math.imul(Z,Ga)|0;c=c+Math.imul(Y,sa)|0;d=d+Math.imul(Y,Ga)|0;ba=ba+Math.imul(Q,Ba)|0;c=c+Math.imul(Q,Ea)|0;c=c+Math.imul(da,Ba)|0;d=d+Math.imul(da,Ea)|0;ba=ba+Math.imul(O,ta)|0;c=c+Math.imul(O,Ha)|0;c=c+Math.imul(W,ta)|0;d=d+Math.imul(W,Ha)|0;ba=ba+Math.imul(z,Ca)|0;c=c+Math.imul(z,K)|0;c=c+Math.imul(L,Ca)|0;d=d+Math.imul(L,K)|0;ba=ba+Math.imul(v,m)|0;c=c+Math.imul(v,fa)|0;c=c+Math.imul(R,m)|0;d=d+Math.imul(R,fa)|0;v=(x+\nba|0)+((c&8191)<<13)|0;x=(d+(c>>>13)|0)+(v>>>26)|0;v&=67108863;ba=Math.imul(g,ua);c=Math.imul(g,Fa);c=c+Math.imul(na,ua)|0;d=Math.imul(na,Fa);ba=ba+Math.imul(ka,va)|0;c=c+Math.imul(ka,Ja)|0;c=c+Math.imul(ia,va)|0;d=d+Math.imul(ia,Ja)|0;ba=ba+Math.imul(ea,xa)|0;c=c+Math.imul(ea,Ia)|0;c=c+Math.imul(la,xa)|0;d=d+Math.imul(la,Ia)|0;ba=ba+Math.imul(aa,Aa)|0;c=c+Math.imul(aa,Ka)|0;c=c+Math.imul(ja,Aa)|0;d=d+Math.imul(ja,Ka)|0;ba=ba+Math.imul(X,sa)|0;c=c+Math.imul(X,Ga)|0;c=c+Math.imul(ca,sa)|0;d=d+Math.imul(ca,\nGa)|0;ba=ba+Math.imul(Z,Ba)|0;c=c+Math.imul(Z,Ea)|0;c=c+Math.imul(Y,Ba)|0;d=d+Math.imul(Y,Ea)|0;ba=ba+Math.imul(Q,ta)|0;c=c+Math.imul(Q,Ha)|0;c=c+Math.imul(da,ta)|0;d=d+Math.imul(da,Ha)|0;ba=ba+Math.imul(O,Ca)|0;c=c+Math.imul(O,K)|0;c=c+Math.imul(W,Ca)|0;d=d+Math.imul(W,K)|0;ba=ba+Math.imul(z,m)|0;c=c+Math.imul(z,fa)|0;c=c+Math.imul(L,m)|0;d=d+Math.imul(L,fa)|0;z=(x+ba|0)+((c&8191)<<13)|0;x=(d+(c>>>13)|0)+(z>>>26)|0;z&=67108863;ba=Math.imul(g,va);c=Math.imul(g,Ja);c=c+Math.imul(na,va)|0;d=Math.imul(na,\nJa);ba=ba+Math.imul(ka,xa)|0;c=c+Math.imul(ka,Ia)|0;c=c+Math.imul(ia,xa)|0;d=d+Math.imul(ia,Ia)|0;ba=ba+Math.imul(ea,Aa)|0;c=c+Math.imul(ea,Ka)|0;c=c+Math.imul(la,Aa)|0;d=d+Math.imul(la,Ka)|0;ba=ba+Math.imul(aa,sa)|0;c=c+Math.imul(aa,Ga)|0;c=c+Math.imul(ja,sa)|0;d=d+Math.imul(ja,Ga)|0;ba=ba+Math.imul(X,Ba)|0;c=c+Math.imul(X,Ea)|0;c=c+Math.imul(ca,Ba)|0;d=d+Math.imul(ca,Ea)|0;ba=ba+Math.imul(Z,ta)|0;c=c+Math.imul(Z,Ha)|0;c=c+Math.imul(Y,ta)|0;d=d+Math.imul(Y,Ha)|0;ba=ba+Math.imul(Q,Ca)|0;c=c+Math.imul(Q,\nK)|0;c=c+Math.imul(da,Ca)|0;d=d+Math.imul(da,K)|0;ba=ba+Math.imul(O,m)|0;c=c+Math.imul(O,fa)|0;c=c+Math.imul(W,m)|0;d=d+Math.imul(W,fa)|0;O=(x+ba|0)+((c&8191)<<13)|0;x=(d+(c>>>13)|0)+(O>>>26)|0;O&=67108863;ba=Math.imul(g,xa);c=Math.imul(g,Ia);c=c+Math.imul(na,xa)|0;d=Math.imul(na,Ia);ba=ba+Math.imul(ka,Aa)|0;c=c+Math.imul(ka,Ka)|0;c=c+Math.imul(ia,Aa)|0;d=d+Math.imul(ia,Ka)|0;ba=ba+Math.imul(ea,sa)|0;c=c+Math.imul(ea,Ga)|0;c=c+Math.imul(la,sa)|0;d=d+Math.imul(la,Ga)|0;ba=ba+Math.imul(aa,Ba)|0;c=c+\nMath.imul(aa,Ea)|0;c=c+Math.imul(ja,Ba)|0;d=d+Math.imul(ja,Ea)|0;ba=ba+Math.imul(X,ta)|0;c=c+Math.imul(X,Ha)|0;c=c+Math.imul(ca,ta)|0;d=d+Math.imul(ca,Ha)|0;ba=ba+Math.imul(Z,Ca)|0;c=c+Math.imul(Z,K)|0;c=c+Math.imul(Y,Ca)|0;d=d+Math.imul(Y,K)|0;ba=ba+Math.imul(Q,m)|0;c=c+Math.imul(Q,fa)|0;c=c+Math.imul(da,m)|0;d=d+Math.imul(da,fa)|0;Q=(x+ba|0)+((c&8191)<<13)|0;x=(d+(c>>>13)|0)+(Q>>>26)|0;Q&=67108863;ba=Math.imul(g,Aa);c=Math.imul(g,Ka);c=c+Math.imul(na,Aa)|0;d=Math.imul(na,Ka);ba=ba+Math.imul(ka,\nsa)|0;c=c+Math.imul(ka,Ga)|0;c=c+Math.imul(ia,sa)|0;d=d+Math.imul(ia,Ga)|0;ba=ba+Math.imul(ea,Ba)|0;c=c+Math.imul(ea,Ea)|0;c=c+Math.imul(la,Ba)|0;d=d+Math.imul(la,Ea)|0;ba=ba+Math.imul(aa,ta)|0;c=c+Math.imul(aa,Ha)|0;c=c+Math.imul(ja,ta)|0;d=d+Math.imul(ja,Ha)|0;ba=ba+Math.imul(X,Ca)|0;c=c+Math.imul(X,K)|0;c=c+Math.imul(ca,Ca)|0;d=d+Math.imul(ca,K)|0;ba=ba+Math.imul(Z,m)|0;c=c+Math.imul(Z,fa)|0;c=c+Math.imul(Y,m)|0;d=d+Math.imul(Y,fa)|0;Z=(x+ba|0)+((c&8191)<<13)|0;x=(d+(c>>>13)|0)+(Z>>>26)|0;Z&=67108863;\nba=Math.imul(g,sa);c=Math.imul(g,Ga);c=c+Math.imul(na,sa)|0;d=Math.imul(na,Ga);ba=ba+Math.imul(ka,Ba)|0;c=c+Math.imul(ka,Ea)|0;c=c+Math.imul(ia,Ba)|0;d=d+Math.imul(ia,Ea)|0;ba=ba+Math.imul(ea,ta)|0;c=c+Math.imul(ea,Ha)|0;c=c+Math.imul(la,ta)|0;d=d+Math.imul(la,Ha)|0;ba=ba+Math.imul(aa,Ca)|0;c=c+Math.imul(aa,K)|0;c=c+Math.imul(ja,Ca)|0;d=d+Math.imul(ja,K)|0;ba=ba+Math.imul(X,m)|0;c=c+Math.imul(X,fa)|0;c=c+Math.imul(ca,m)|0;d=d+Math.imul(ca,fa)|0;X=(x+ba|0)+((c&8191)<<13)|0;x=(d+(c>>>13)|0)+(X>>>26)|\n0;X&=67108863;ba=Math.imul(g,Ba);c=Math.imul(g,Ea);c=c+Math.imul(na,Ba)|0;d=Math.imul(na,Ea);ba=ba+Math.imul(ka,ta)|0;c=c+Math.imul(ka,Ha)|0;c=c+Math.imul(ia,ta)|0;d=d+Math.imul(ia,Ha)|0;ba=ba+Math.imul(ea,Ca)|0;c=c+Math.imul(ea,K)|0;c=c+Math.imul(la,Ca)|0;d=d+Math.imul(la,K)|0;ba=ba+Math.imul(aa,m)|0;c=c+Math.imul(aa,fa)|0;c=c+Math.imul(ja,m)|0;d=d+Math.imul(ja,fa)|0;aa=(x+ba|0)+((c&8191)<<13)|0;x=(d+(c>>>13)|0)+(aa>>>26)|0;aa&=67108863;ba=Math.imul(g,ta);c=Math.imul(g,Ha);c=c+Math.imul(na,ta)|0;\nd=Math.imul(na,Ha);ba=ba+Math.imul(ka,Ca)|0;c=c+Math.imul(ka,K)|0;c=c+Math.imul(ia,Ca)|0;d=d+Math.imul(ia,K)|0;ba=ba+Math.imul(ea,m)|0;c=c+Math.imul(ea,fa)|0;c=c+Math.imul(la,m)|0;d=d+Math.imul(la,fa)|0;ea=(x+ba|0)+((c&8191)<<13)|0;x=(d+(c>>>13)|0)+(ea>>>26)|0;ea&=67108863;ba=Math.imul(g,Ca);c=Math.imul(g,K);c=c+Math.imul(na,Ca)|0;d=Math.imul(na,K);ba=ba+Math.imul(ka,m)|0;c=c+Math.imul(ka,fa)|0;c=c+Math.imul(ia,m)|0;d=d+Math.imul(ia,fa)|0;ka=(x+ba|0)+((c&8191)<<13)|0;x=(d+(c>>>13)|0)+(ka>>>26)|0;\nka&=67108863;ba=Math.imul(g,m);c=Math.imul(g,fa);c=c+Math.imul(na,m)|0;d=Math.imul(na,fa);R=(x+ba|0)+((c&8191)<<13)|0;x=(d+(c>>>13)|0)+(R>>>26)|0;w[0]=ma;w[1]=ya;w[2]=wa;w[3]=ra;w[4]=Ma;w[5]=La;w[6]=Oa;w[7]=Qa;w[8]=Ta;w[9]=v;w[10]=z;w[11]=O;w[12]=Q;w[13]=Z;w[14]=X;w[15]=aa;w[16]=ea;w[17]=ka;w[18]=R&67108863;0!==x&&(w[19]=x,f.length++);return f};Math.imul||(a=k);e.prototype.mulTo=function(c,d){var f=this.length+c.length;return 10===this.length&&10===c.length?a(this,c,d):63>f?k(this,c,d):t(this,c,d)};\ne.prototype.mul=function(c){var d=new e(null);d.words=Array(this.length+c.length);return this.mulTo(c,d)};e.prototype.mulf=function(c){var d=new e(null);d.words=Array(this.length+c.length);return t(this,c,d)};e.prototype.imul=function(c){return this.clone().mulTo(c,this)};e.prototype.imuln=function(c){var d=0>c;d&&(c=-c);r(\"number\"===typeof c);r(67108864>c);for(var f=0,g=0;g<this.length;g++){var m=(this.words[g]|0)*c,w=(m&67108863)+(f&67108863);f>>=26;f+=m/67108864|0;f+=w>>>26;this.words[g]=w&67108863}0!==\nf&&(this.words[g]=f,this.length++);return d?this.ineg():this};e.prototype.muln=function(c){return this.clone().imuln(c)};e.prototype.sqr=function(){return this.mul(this)};e.prototype.isqr=function(){return this.imul(this.clone())};e.prototype.pow=function(c){for(var d=Array(c.bitLength()),f=0;f<d.length;f++)d[f]=c.words[f/26|0]>>>f%26&1;if(0===d.length)return new e(1);c=this;for(f=0;f<d.length&&0===d[f];f++,c=c.sqr());if(++f<d.length)for(var g=c.sqr();f<d.length;f++,g=g.sqr())0!==d[f]&&(c=c.mul(g));\nreturn c};e.prototype.iushln=function(c){r(\"number\"===typeof c&&0<=c);var d=c%26;c=(c-d)/26;var f=67108863>>>26-d<<26-d,g;if(0!==d){var m=0;for(g=0;g<this.length;g++){var w=this.words[g]&f;this.words[g]=(this.words[g]|0)-w<<d|m;m=w>>>26-d}m&&(this.words[g]=m,this.length++)}if(0!==c){for(g=this.length-1;0<=g;g--)this.words[g+c]=this.words[g];for(g=0;g<c;g++)this.words[g]=0;this.length+=c}return this._strip()};e.prototype.ishln=function(c){r(0===this.negative);return this.iushln(c)};e.prototype.iushrn=\nfunction(c,d,f){r(\"number\"===typeof c&&0<=c);var g=c%26,m=Math.min((c-g)/26,this.length);c=67108863^67108863>>>g<<g;d=Math.max(0,(d?(d-d%26)/26:0)-m);if(f){for(var w=0;w<m;w++)f.words[w]=this.words[w];f.length=m}if(0!==m)if(this.length>m)for(this.length-=m,w=0;w<this.length;w++)this.words[w]=this.words[w+m];else this.words[0]=0,this.length=1;m=0;for(w=this.length-1;0<=w&&(0!==m||w>=d);w--){var x=this.words[w]|0;this.words[w]=m<<26-g|x>>>g;m=x&c}f&&0!==m&&(f.words[f.length++]=m);0===this.length&&(this.words[0]=\n0,this.length=1);return this._strip()};e.prototype.ishrn=function(c,d,f){r(0===this.negative);return this.iushrn(c,d,f)};e.prototype.shln=function(c){return this.clone().ishln(c)};e.prototype.ushln=function(c){return this.clone().iushln(c)};e.prototype.shrn=function(c){return this.clone().ishrn(c)};e.prototype.ushrn=function(c){return this.clone().iushrn(c)};e.prototype.testn=function(c){r(\"number\"===typeof c&&0<=c);var d=c%26;c=(c-d)/26;return this.length<=c?!1:!!(this.words[c]&1<<d)};e.prototype.imaskn=\nfunction(c){r(\"number\"===typeof c&&0<=c);var d=c%26;c=(c-d)/26;r(0===this.negative,\"imaskn works only with positive numbers\");if(this.length<=c)return this;0!==d&&c++;this.length=Math.min(c,this.length);0!==d&&(this.words[this.length-1]&=67108863^67108863>>>d<<d);return this._strip()};e.prototype.maskn=function(c){return this.clone().imaskn(c)};e.prototype.iaddn=function(c){r(\"number\"===typeof c);r(67108864>c);if(0>c)return this.isubn(-c);if(0!==this.negative){if(1===this.length&&(this.words[0]|0)<=\nc)return this.words[0]=c-(this.words[0]|0),this.negative=0,this;this.negative=0;this.isubn(c);this.negative=1;return this}return this._iaddn(c)};e.prototype._iaddn=function(c){this.words[0]+=c;for(c=0;c<this.length&&67108864<=this.words[c];c++)this.words[c]-=67108864,c===this.length-1?this.words[c+1]=1:this.words[c+1]++;this.length=Math.max(this.length,c+1);return this};e.prototype.isubn=function(c){r(\"number\"===typeof c);r(67108864>c);if(0>c)return this.iaddn(-c);if(0!==this.negative)return this.negative=\n0,this.iaddn(c),this.negative=1,this;this.words[0]-=c;if(1===this.length&&0>this.words[0])this.words[0]=-this.words[0],this.negative=1;else for(c=0;c<this.length&&0>this.words[c];c++)this.words[c]+=67108864,--this.words[c+1];return this._strip()};e.prototype.addn=function(c){return this.clone().iaddn(c)};e.prototype.subn=function(c){return this.clone().isubn(c)};e.prototype.iabs=function(){this.negative=0;return this};e.prototype.abs=function(){return this.clone().iabs()};e.prototype._ishlnsubmul=\nfunction(c,d,f){var g;this._expand(c.length+f);var m=0;for(g=0;g<c.length;g++){var w=(this.words[g+f]|0)+m;m=(c.words[g]|0)*d;w-=m&67108863;m=(w>>26)-(m/67108864|0);this.words[g+f]=w&67108863}for(;g<this.length-f;g++)w=(this.words[g+f]|0)+m,m=w>>26,this.words[g+f]=w&67108863;if(0===m)return this._strip();r(-1===m);for(g=m=0;g<this.length;g++)w=-(this.words[g]|0)+m,m=w>>26,this.words[g]=w&67108863;this.negative=1;return this._strip()};e.prototype._wordDiv=function(c,d){var f=this.clone(),g=c,m=g.words[g.length-\n1]|0;c=26-this._countBits(m);0!==c&&(g=g.ushln(c),f.iushln(c),m=g.words[g.length-1]|0);var w=f.length-g.length;if(\"mod\"!==d){var x=new e(null);x.length=w+1;x.words=Array(x.length);for(var z=0;z<x.length;z++)x.words[z]=0}z=f.clone()._ishlnsubmul(g,1,w);0===z.negative&&(f=z,x&&(x.words[w]=1));for(--w;0<=w;w--){z=67108864*(f.words[g.length+w]|0)+(f.words[g.length+w-1]|0);z=Math.min(z/m|0,67108863);for(f._ishlnsubmul(g,z,w);0!==f.negative;)z--,f.negative=0,f._ishlnsubmul(g,1,w),f.isZero()||(f.negative^=\n1);x&&(x.words[w]=z)}x&&x._strip();f._strip();\"div\"!==d&&0!==c&&f.iushrn(c);return{div:x||null,mod:f}};e.prototype.divmod=function(c,d,f){r(!c.isZero());if(this.isZero())return{div:new e(0),mod:new e(0)};var g;if(0!==this.negative&&0===c.negative){var m=this.neg().divmod(c,d);\"mod\"!==d&&(g=m.div.neg());if(\"div\"!==d){var w=m.mod.neg();f&&0!==w.negative&&w.iadd(c)}return{div:g,mod:w}}return 0===this.negative&&0!==c.negative?(m=this.divmod(c.neg(),d),\"mod\"!==d&&(g=m.div.neg()),{div:g,mod:m.mod}):0!==\n(this.negative&c.negative)?(m=this.neg().divmod(c.neg(),d),\"div\"!==d&&(w=m.mod.neg(),f&&0!==w.negative&&w.isub(c)),{div:m.div,mod:w}):c.length>this.length||0>this.cmp(c)?{div:new e(0),mod:this}:1===c.length?\"div\"===d?{div:this.divn(c.words[0]),mod:null}:\"mod\"===d?{div:null,mod:new e(this.modrn(c.words[0]))}:{div:this.divn(c.words[0]),mod:new e(this.modrn(c.words[0]))}:this._wordDiv(c,d)};e.prototype.div=function(c){return this.divmod(c,\"div\",!1).div};e.prototype.mod=function(c){return this.divmod(c,\n\"mod\",!1).mod};e.prototype.umod=function(c){return this.divmod(c,\"mod\",!0).mod};e.prototype.divRound=function(c){var d=this.divmod(c);if(d.mod.isZero())return d.div;var f=0!==d.div.negative?d.mod.isub(c):d.mod,g=c.ushrn(1);c=c.andln(1);f=f.cmp(g);return 0>f||1===c&&0===f?d.div:0!==d.div.negative?d.div.isubn(1):d.div.iaddn(1)};e.prototype.modrn=function(c){var d=0>c;d&&(c=-c);r(67108863>=c);for(var f=67108864%c,g=0,m=this.length-1;0<=m;m--)g=(f*g+(this.words[m]|0))%c;return d?-g:g};e.prototype.modn=\nfunction(c){return this.modrn(c)};e.prototype.idivn=function(c){var d=0>c;d&&(c=-c);r(67108863>=c);for(var f=0,g=this.length-1;0<=g;g--)f=(this.words[g]|0)+67108864*f,this.words[g]=f/c|0,f%=c;this._strip();return d?this.ineg():this};e.prototype.divn=function(c){return this.clone().idivn(c)};e.prototype.egcd=function(c){r(0===c.negative);r(!c.isZero());var d=this,f=c.clone();d=0!==d.negative?d.umod(c):d.clone();c=new e(1);for(var g=new e(0),m=new e(0),w=new e(1),x=0;d.isEven()&&f.isEven();)d.iushrn(1),\nf.iushrn(1),++x;for(var z=f.clone(),v=d.clone();!d.isZero();){for(var R=0,O=1;0===(d.words[0]&O)&&26>R;++R,O<<=1);if(0<R)for(d.iushrn(R);0<R--;){if(c.isOdd()||g.isOdd())c.iadd(z),g.isub(v);c.iushrn(1);g.iushrn(1)}R=0;for(O=1;0===(f.words[0]&O)&&26>R;++R,O<<=1);if(0<R)for(f.iushrn(R);0<R--;){if(m.isOdd()||w.isOdd())m.iadd(z),w.isub(v);m.iushrn(1);w.iushrn(1)}0<=d.cmp(f)?(d.isub(f),c.isub(m),g.isub(w)):(f.isub(d),m.isub(c),w.isub(g))}return{a:m,b:w,gcd:f.iushln(x)}};e.prototype._invmp=function(c){r(0===\nc.negative);r(!c.isZero());var d=this,f=c.clone();d=0!==d.negative?d.umod(c):d.clone();for(var g=new e(1),m=new e(0),w=f.clone();0<d.cmpn(1)&&0<f.cmpn(1);){for(var x=0,z=1;0===(d.words[0]&z)&&26>x;++x,z<<=1);if(0<x)for(d.iushrn(x);0<x--;)g.isOdd()&&g.iadd(w),g.iushrn(1);x=0;for(z=1;0===(f.words[0]&z)&&26>x;++x,z<<=1);if(0<x)for(f.iushrn(x);0<x--;)m.isOdd()&&m.iadd(w),m.iushrn(1);0<=d.cmp(f)?(d.isub(f),g.isub(m)):(f.isub(d),m.isub(g))}d=0===d.cmpn(1)?g:m;0>d.cmpn(0)&&d.iadd(c);return d};e.prototype.gcd=\nfunction(c){if(this.isZero())return c.abs();if(c.isZero())return this.abs();var d=this.clone();c=c.clone();d.negative=0;for(var f=c.negative=0;d.isEven()&&c.isEven();f++)d.iushrn(1),c.iushrn(1);do{for(;d.isEven();)d.iushrn(1);for(;c.isEven();)c.iushrn(1);var g=d.cmp(c);if(0>g)g=d,d=c,c=g;else if(0===g||0===c.cmpn(1))break;d.isub(c)}while(1);return c.iushln(f)};e.prototype.invm=function(c){return this.egcd(c).a.umod(c)};e.prototype.isEven=function(){return 0===(this.words[0]&1)};e.prototype.isOdd=\nfunction(){return 1===(this.words[0]&1)};e.prototype.andln=function(c){return this.words[0]&c};e.prototype.bincn=function(c){r(\"number\"===typeof c);var d=c%26;c=(c-d)/26;d=1<<d;if(this.length<=c)return this._expand(c+1),this.words[c]|=d,this;for(;0!==d&&c<this.length;c++){var f=this.words[c]|0;f+=d;d=f>>>26;f&=67108863;this.words[c]=f}0!==d&&(this.words[c]=d,this.length++);return this};e.prototype.isZero=function(){return 1===this.length&&0===this.words[0]};e.prototype.cmpn=function(c){var d=0>c;\nif(0!==this.negative&&!d)return-1;if(0===this.negative&&d)return 1;this._strip();1<this.length?c=1:(d&&(c=-c),r(67108863>=c,\"Number is too big\"),d=this.words[0]|0,c=d===c?0:d<c?-1:1);return 0!==this.negative?-c|0:c};e.prototype.cmp=function(c){if(0!==this.negative&&0===c.negative)return-1;if(0===this.negative&&0!==c.negative)return 1;c=this.ucmp(c);return 0!==this.negative?-c|0:c};e.prototype.ucmp=function(c){if(this.length>c.length)return 1;if(this.length<c.length)return-1;for(var d=0,f=this.length-\n1;0<=f;f--){var g=this.words[f]|0,m=c.words[f]|0;if(g!==m){g<m?d=-1:g>m&&(d=1);break}}return d};e.prototype.gtn=function(c){return 1===this.cmpn(c)};e.prototype.gt=function(c){return 1===this.cmp(c)};e.prototype.gten=function(c){return 0<=this.cmpn(c)};e.prototype.gte=function(c){return 0<=this.cmp(c)};e.prototype.ltn=function(c){return-1===this.cmpn(c)};e.prototype.lt=function(c){return-1===this.cmp(c)};e.prototype.lten=function(c){return 0>=this.cmpn(c)};e.prototype.lte=function(c){return 0>=this.cmp(c)};\ne.prototype.eqn=function(c){return 0===this.cmpn(c)};e.prototype.eq=function(c){return 0===this.cmp(c)};e.red=function(c){return new I(c)};e.prototype.toRed=function(c){r(!this.red,\"Already a number in reduction context\");r(0===this.negative,\"red works only with positives\");return c.convertTo(this)._forceRed(c)};e.prototype.fromRed=function(){r(this.red,\"fromRed works only with numbers in reduction context\");return this.red.convertFrom(this)};e.prototype._forceRed=function(c){this.red=c;return this};\ne.prototype.forceRed=function(c){r(!this.red,\"Already a number in reduction context\");return this._forceRed(c)};e.prototype.redAdd=function(c){r(this.red,\"redAdd works only with red numbers\");return this.red.add(this,c)};e.prototype.redIAdd=function(c){r(this.red,\"redIAdd works only with red numbers\");return this.red.iadd(this,c)};e.prototype.redSub=function(c){r(this.red,\"redSub works only with red numbers\");return this.red.sub(this,c)};e.prototype.redISub=function(c){r(this.red,\"redISub works only with red numbers\");\nreturn this.red.isub(this,c)};e.prototype.redShl=function(c){r(this.red,\"redShl works only with red numbers\");return this.red.shl(this,c)};e.prototype.redMul=function(c){r(this.red,\"redMul works only with red numbers\");this.red._verify2(this,c);return this.red.mul(this,c)};e.prototype.redIMul=function(c){r(this.red,\"redMul works only with red numbers\");this.red._verify2(this,c);return this.red.imul(this,c)};e.prototype.redSqr=function(){r(this.red,\"redSqr works only with red numbers\");this.red._verify1(this);\nreturn this.red.sqr(this)};e.prototype.redISqr=function(){r(this.red,\"redISqr works only with red numbers\");this.red._verify1(this);return this.red.isqr(this)};e.prototype.redSqrt=function(){r(this.red,\"redSqrt works only with red numbers\");this.red._verify1(this);return this.red.sqrt(this)};e.prototype.redInvm=function(){r(this.red,\"redInvm works only with red numbers\");this.red._verify1(this);return this.red.invm(this)};e.prototype.redNeg=function(){r(this.red,\"redNeg works only with red numbers\");\nthis.red._verify1(this);return this.red.neg(this)};e.prototype.redPow=function(c){r(this.red&&!c.red,\"redPow(normalNum)\");this.red._verify1(this);return this.red.pow(this,c)};var b={k256:null,p224:null,p192:null,p25519:null};B.prototype._tmp=function(){var c=new e(null);c.words=Array(Math.ceil(this.n/13));return c};B.prototype.ireduce=function(c){do{this.split(c,this.tmp);c=this.imulK(c);c=c.iadd(this.tmp);var d=c.bitLength()}while(d>this.n);d=d<this.n?-1:c.ucmp(this.p);0===d?(c.words[0]=0,c.length=\n1):0<d?c.isub(this.p):void 0!==c.strip?c.strip():c._strip();return c};B.prototype.split=function(c,d){c.iushrn(this.n,0,d)};B.prototype.imulK=function(c){return c.imul(this.k)};y(E,B);E.prototype.split=function(c,d){for(var f=Math.min(c.length,9),g=0;g<f;g++)d.words[g]=c.words[g];d.length=f;if(9>=c.length)c.words[0]=0,c.length=1;else{f=c.words[9];d.words[d.length++]=f&4194303;for(g=10;g<c.length;g++)d=c.words[g]|0,c.words[g-10]=(d&4194303)<<4|f>>>22,f=d;f>>>=22;c.words[g-10]=f;c.length=0===f&&10<\nc.length?c.length-10:c.length-9}};E.prototype.imulK=function(c){c.words[c.length]=0;c.words[c.length+1]=0;c.length+=2;for(var d=0,f=0;f<c.length;f++){var g=c.words[f]|0;d+=977*g;c.words[f]=d&67108863;d=64*g+(d/67108864|0)}0===c.words[c.length-1]&&(c.length--,0===c.words[c.length-1]&&c.length--);return c};y(H,B);y(D,B);y(C,B);C.prototype.imulK=function(c){for(var d=0,f=0;f<c.length;f++){d=19*(c.words[f]|0)+d;var g=d&67108863;d>>>=26;c.words[f]=g}0!==d&&(c.words[c.length++]=d);return c};e._prime=function(c){if(b[c])return b[c];\nif(\"k256\"===c)var d=new E;else if(\"p224\"===c)d=new H;else if(\"p192\"===c)d=new D;else if(\"p25519\"===c)d=new C;else throw Error(\"Unknown prime \"+c);return b[c]=d};I.prototype._verify1=function(c){r(0===c.negative,\"red works only with positives\");r(c.red,\"red works only with red numbers\")};I.prototype._verify2=function(c,d){r(0===(c.negative|d.negative),\"red works only with positives\");r(c.red&&c.red===d.red,\"red works only with red numbers\")};I.prototype.imod=function(c){if(this.prime)return this.prime.ireduce(c)._forceRed(this);\nl(c,c.umod(this.m)._forceRed(this));return c};I.prototype.neg=function(c){return c.isZero()?c.clone():this.m.sub(c)._forceRed(this)};I.prototype.add=function(c,d){this._verify2(c,d);c=c.add(d);0<=c.cmp(this.m)&&c.isub(this.m);return c._forceRed(this)};I.prototype.iadd=function(c,d){this._verify2(c,d);c=c.iadd(d);0<=c.cmp(this.m)&&c.isub(this.m);return c};I.prototype.sub=function(c,d){this._verify2(c,d);c=c.sub(d);0>c.cmpn(0)&&c.iadd(this.m);return c._forceRed(this)};I.prototype.isub=function(c,d){this._verify2(c,\nd);c=c.isub(d);0>c.cmpn(0)&&c.iadd(this.m);return c};I.prototype.shl=function(c,d){this._verify1(c);return this.imod(c.ushln(d))};I.prototype.imul=function(c,d){this._verify2(c,d);return this.imod(c.imul(d))};I.prototype.mul=function(c,d){this._verify2(c,d);return this.imod(c.mul(d))};I.prototype.isqr=function(c){return this.imul(c,c.clone())};I.prototype.sqr=function(c){return this.mul(c,c)};I.prototype.sqrt=function(c){if(c.isZero())return c.clone();var d=this.m.andln(3);r(1===d%2);if(3===d)return d=\nthis.m.add(new e(1)).iushrn(2),this.pow(c,d);for(var f=this.m.subn(1),g=0;!f.isZero()&&0===f.andln(1);)g++,f.iushrn(1);r(!f.isZero());d=(new e(1)).toRed(this);var m=d.redNeg(),w=this.m.subn(1).iushrn(1),x=this.m.bitLength();for(x=(new e(2*x*x)).toRed(this);0!==this.pow(x,w).cmp(m);)x.redIAdd(m);w=this.pow(x,f);m=this.pow(c,f.addn(1).iushrn(1));c=this.pow(c,f);for(f=g;0!==c.cmp(d);){x=c;for(g=0;0!==x.cmp(d);g++)x=x.redSqr();r(g<f);w=this.pow(w,(new e(1)).iushln(f-g-1));m=m.redMul(w);w=w.redSqr();c=\nc.redMul(w);f=g}return m};I.prototype.invm=function(c){c=c._invmp(this.m);return 0!==c.negative?(c.negative=0,this.imod(c).redNeg()):this.imod(c)};I.prototype.pow=function(c,d){if(d.isZero())return(new e(1)).toRed(this);if(0===d.cmpn(1))return c.clone();var f=Array(16);f[0]=(new e(1)).toRed(this);f[1]=c;for(var g=2;g<f.length;g++)f[g]=this.mul(f[g-1],c);c=f[0];var m=0,w=0,x=d.bitLength()%26;0===x&&(x=26);for(g=d.length-1;0<=g;g--){var z=d.words[g];for(--x;0<=x;x--){var v=z>>x&1;c!==f[0]&&(c=this.sqr(c));\nif(0===v&&0===m)w=0;else if(m<<=1,m|=v,w++,4===w||0===g&&0===x)c=this.mul(c,f[m]),m=w=0}x=26}return c};I.prototype.convertTo=function(c){var d=c.umod(this.m);return d===c?d.clone():d};I.prototype.convertFrom=function(c){c=c.clone();c.red=null;return c};e.mont=function(c){return new M(c)};y(M,I);M.prototype.convertTo=function(c){return this.imod(c.ushln(this.shift))};M.prototype.convertFrom=function(c){c=this.imod(c.mul(this.rinv));c.red=null;return c};M.prototype.imul=function(c,d){if(c.isZero()||\nd.isZero())return c.words[0]=0,c.length=1,c;c=c.imul(d);d=c.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);d=c=c.isub(d).iushrn(this.shift);0<=c.cmp(this.m)?d=c.isub(this.m):0>c.cmpn(0)&&(d=c.iadd(this.m));return d._forceRed(this)};M.prototype.mul=function(c,d){if(c.isZero()||d.isZero())return(new e(0))._forceRed(this);c=c.mul(d);d=c.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);d=c=c.isub(d).iushrn(this.shift);0<=c.cmp(this.m)?d=c.isub(this.m):0>c.cmpn(0)&&(d=c.iadd(this.m));\nreturn d._forceRed(this)};M.prototype.invm=function(c){return this.imod(c._invmp(this.m).mul(this.r2))._forceRed(this)}})(\"undefined\"===typeof V||V,this)}","~:source","shadow$provide[7] = function(global,require,module,exports) {\n(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow$empty","~$shadow.js"]],"~:properties",["^5",["iadd","iaddn","toBuffer","n","bitLength","iuxor","minv","_parseHex","imuln","min","redSqrt","redIAdd","lt","super_","isEven","cmpn","toTwos","isZero","_verify2","sub","copy","isqr","uor","byteLength","prototype","BN","isNeg","isubn","maskn","eq","idivn","isub","_invmp","p","convertTo","ushrn","imaskn","ltn","redISub","setn","ior","max","umod","ucmp","uxor","gten","modn","negative","eqn","inspect","pow","bincn","toString","k256","imulK","redSub","words","gt","muln","p224","redPow","divmod","_prime","gte","divn","_move","_toArrayLikeLE","shl","name","shrn","iushln","_normSign","isOdd","uand","gcd","ushln","egcd","shift","testn","_zeroBits","fromTwos","imul","wordSize","forceRed","or","p192","addn","invm","sqr","neg","_init","r2","split","toRed","a","ixor","redShl","ineg","_tmp","red","sqrt","_toArrayLikeBE","zeroBits","length","redNeg","_iaddn","_strip","and","_expand","redInvm","mod","mul","_initArray","isBN","convertFrom","k","div","rinv","b","r","abs","iushrn","iuand","_initNumber","_ishlnsubmul","_forceRed","ireduce","gtn","clone","redMul","lte","iand","_wordDiv","_parseBase","add","toNumber","mont","lten","redAdd","shln","iuor","mulTo","p25519","imod","toArray","notn","subn","iabs","tmp","ishln","_verify1","m","ishrn","redIMul","modrn","andln","xor","redISqr","fromRed","toArrayLike","redSqr","inotn","constructor","prime","toJSON","cmp","mulf","divRound","_countBits"]],"~:compiled-at",1695041440669,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$bn_DOT_js$lib$bn.js\",\n\"lineCount\":84,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/bn_DOT_js/lib/bn.js\"],\n\"sourcesContent\":[\"shadow$provide[7] = function(global,require,module,exports) {\\n(function (module, exports) {\\n  'use strict';\\n\\n  // Utils\\n  function assert (val, msg) {\\n    if (!val) throw new Error(msg || 'Assertion failed');\\n  }\\n\\n  // Could use `inherits` module, but don't want to move from single file\\n  // architecture yet.\\n  function inherits (ctor, superCtor) {\\n    ctor.super_ = superCtor;\\n    var TempCtor = function () {};\\n    TempCtor.prototype = superCtor.prototype;\\n    ctor.prototype = new TempCtor();\\n    ctor.prototype.constructor = ctor;\\n  }\\n\\n  // BN\\n\\n  function BN (number, base, endian) {\\n    if (BN.isBN(number)) {\\n      return number;\\n    }\\n\\n    this.negative = 0;\\n    this.words = null;\\n    this.length = 0;\\n\\n    // Reduction context\\n    this.red = null;\\n\\n    if (number !== null) {\\n      if (base === 'le' || base === 'be') {\\n        endian = base;\\n        base = 10;\\n      }\\n\\n      this._init(number || 0, base || 10, endian || 'be');\\n    }\\n  }\\n  if (typeof module === 'object') {\\n    module.exports = BN;\\n  } else {\\n    exports.BN = BN;\\n  }\\n\\n  BN.BN = BN;\\n  BN.wordSize = 26;\\n\\n  var Buffer;\\n  try {\\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\\n      Buffer = window.Buffer;\\n    } else {\\n      Buffer = require('buffer').Buffer;\\n    }\\n  } catch (e) {\\n  }\\n\\n  BN.isBN = function isBN (num) {\\n    if (num instanceof BN) {\\n      return true;\\n    }\\n\\n    return num !== null && typeof num === 'object' &&\\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\\n  };\\n\\n  BN.max = function max (left, right) {\\n    if (left.cmp(right) > 0) return left;\\n    return right;\\n  };\\n\\n  BN.min = function min (left, right) {\\n    if (left.cmp(right) < 0) return left;\\n    return right;\\n  };\\n\\n  BN.prototype._init = function init (number, base, endian) {\\n    if (typeof number === 'number') {\\n      return this._initNumber(number, base, endian);\\n    }\\n\\n    if (typeof number === 'object') {\\n      return this._initArray(number, base, endian);\\n    }\\n\\n    if (base === 'hex') {\\n      base = 16;\\n    }\\n    assert(base === (base | 0) && base >= 2 && base <= 36);\\n\\n    number = number.toString().replace(/\\\\s+/g, '');\\n    var start = 0;\\n    if (number[0] === '-') {\\n      start++;\\n      this.negative = 1;\\n    }\\n\\n    if (start < number.length) {\\n      if (base === 16) {\\n        this._parseHex(number, start, endian);\\n      } else {\\n        this._parseBase(number, base, start);\\n        if (endian === 'le') {\\n          this._initArray(this.toArray(), base, endian);\\n        }\\n      }\\n    }\\n  };\\n\\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\\n    if (number < 0) {\\n      this.negative = 1;\\n      number = -number;\\n    }\\n    if (number < 0x4000000) {\\n      this.words = [number & 0x3ffffff];\\n      this.length = 1;\\n    } else if (number < 0x10000000000000) {\\n      this.words = [\\n        number & 0x3ffffff,\\n        (number / 0x4000000) & 0x3ffffff\\n      ];\\n      this.length = 2;\\n    } else {\\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\\n      this.words = [\\n        number & 0x3ffffff,\\n        (number / 0x4000000) & 0x3ffffff,\\n        1\\n      ];\\n      this.length = 3;\\n    }\\n\\n    if (endian !== 'le') return;\\n\\n    // Reverse the bytes\\n    this._initArray(this.toArray(), base, endian);\\n  };\\n\\n  BN.prototype._initArray = function _initArray (number, base, endian) {\\n    // Perhaps a Uint8Array\\n    assert(typeof number.length === 'number');\\n    if (number.length <= 0) {\\n      this.words = [0];\\n      this.length = 1;\\n      return this;\\n    }\\n\\n    this.length = Math.ceil(number.length / 3);\\n    this.words = new Array(this.length);\\n    for (var i = 0; i < this.length; i++) {\\n      this.words[i] = 0;\\n    }\\n\\n    var j, w;\\n    var off = 0;\\n    if (endian === 'be') {\\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\\n        this.words[j] |= (w << off) & 0x3ffffff;\\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\\n        off += 24;\\n        if (off >= 26) {\\n          off -= 26;\\n          j++;\\n        }\\n      }\\n    } else if (endian === 'le') {\\n      for (i = 0, j = 0; i < number.length; i += 3) {\\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\\n        this.words[j] |= (w << off) & 0x3ffffff;\\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\\n        off += 24;\\n        if (off >= 26) {\\n          off -= 26;\\n          j++;\\n        }\\n      }\\n    }\\n    return this._strip();\\n  };\\n\\n  function parseHex4Bits (string, index) {\\n    var c = string.charCodeAt(index);\\n    // '0' - '9'\\n    if (c >= 48 && c <= 57) {\\n      return c - 48;\\n    // 'A' - 'F'\\n    } else if (c >= 65 && c <= 70) {\\n      return c - 55;\\n    // 'a' - 'f'\\n    } else if (c >= 97 && c <= 102) {\\n      return c - 87;\\n    } else {\\n      assert(false, 'Invalid character in ' + string);\\n    }\\n  }\\n\\n  function parseHexByte (string, lowerBound, index) {\\n    var r = parseHex4Bits(string, index);\\n    if (index - 1 >= lowerBound) {\\n      r |= parseHex4Bits(string, index - 1) << 4;\\n    }\\n    return r;\\n  }\\n\\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\\n    // Create possibly bigger array to ensure that it fits the number\\n    this.length = Math.ceil((number.length - start) / 6);\\n    this.words = new Array(this.length);\\n    for (var i = 0; i < this.length; i++) {\\n      this.words[i] = 0;\\n    }\\n\\n    // 24-bits chunks\\n    var off = 0;\\n    var j = 0;\\n\\n    var w;\\n    if (endian === 'be') {\\n      for (i = number.length - 1; i >= start; i -= 2) {\\n        w = parseHexByte(number, start, i) << off;\\n        this.words[j] |= w & 0x3ffffff;\\n        if (off >= 18) {\\n          off -= 18;\\n          j += 1;\\n          this.words[j] |= w >>> 26;\\n        } else {\\n          off += 8;\\n        }\\n      }\\n    } else {\\n      var parseLength = number.length - start;\\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\\n        w = parseHexByte(number, start, i) << off;\\n        this.words[j] |= w & 0x3ffffff;\\n        if (off >= 18) {\\n          off -= 18;\\n          j += 1;\\n          this.words[j] |= w >>> 26;\\n        } else {\\n          off += 8;\\n        }\\n      }\\n    }\\n\\n    this._strip();\\n  };\\n\\n  function parseBase (str, start, end, mul) {\\n    var r = 0;\\n    var b = 0;\\n    var len = Math.min(str.length, end);\\n    for (var i = start; i < len; i++) {\\n      var c = str.charCodeAt(i) - 48;\\n\\n      r *= mul;\\n\\n      // 'a'\\n      if (c >= 49) {\\n        b = c - 49 + 0xa;\\n\\n      // 'A'\\n      } else if (c >= 17) {\\n        b = c - 17 + 0xa;\\n\\n      // '0' - '9'\\n      } else {\\n        b = c;\\n      }\\n      assert(c >= 0 && b < mul, 'Invalid character');\\n      r += b;\\n    }\\n    return r;\\n  }\\n\\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\\n    // Initialize as zero\\n    this.words = [0];\\n    this.length = 1;\\n\\n    // Find length of limb in base\\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\\n      limbLen++;\\n    }\\n    limbLen--;\\n    limbPow = (limbPow / base) | 0;\\n\\n    var total = number.length - start;\\n    var mod = total % limbLen;\\n    var end = Math.min(total, total - mod) + start;\\n\\n    var word = 0;\\n    for (var i = start; i < end; i += limbLen) {\\n      word = parseBase(number, i, i + limbLen, base);\\n\\n      this.imuln(limbPow);\\n      if (this.words[0] + word < 0x4000000) {\\n        this.words[0] += word;\\n      } else {\\n        this._iaddn(word);\\n      }\\n    }\\n\\n    if (mod !== 0) {\\n      var pow = 1;\\n      word = parseBase(number, i, number.length, base);\\n\\n      for (i = 0; i < mod; i++) {\\n        pow *= base;\\n      }\\n\\n      this.imuln(pow);\\n      if (this.words[0] + word < 0x4000000) {\\n        this.words[0] += word;\\n      } else {\\n        this._iaddn(word);\\n      }\\n    }\\n\\n    this._strip();\\n  };\\n\\n  BN.prototype.copy = function copy (dest) {\\n    dest.words = new Array(this.length);\\n    for (var i = 0; i < this.length; i++) {\\n      dest.words[i] = this.words[i];\\n    }\\n    dest.length = this.length;\\n    dest.negative = this.negative;\\n    dest.red = this.red;\\n  };\\n\\n  function move (dest, src) {\\n    dest.words = src.words;\\n    dest.length = src.length;\\n    dest.negative = src.negative;\\n    dest.red = src.red;\\n  }\\n\\n  BN.prototype._move = function _move (dest) {\\n    move(dest, this);\\n  };\\n\\n  BN.prototype.clone = function clone () {\\n    var r = new BN(null);\\n    this.copy(r);\\n    return r;\\n  };\\n\\n  BN.prototype._expand = function _expand (size) {\\n    while (this.length < size) {\\n      this.words[this.length++] = 0;\\n    }\\n    return this;\\n  };\\n\\n  // Remove leading `0` from `this`\\n  BN.prototype._strip = function strip () {\\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\\n      this.length--;\\n    }\\n    return this._normSign();\\n  };\\n\\n  BN.prototype._normSign = function _normSign () {\\n    // -0 = 0\\n    if (this.length === 1 && this.words[0] === 0) {\\n      this.negative = 0;\\n    }\\n    return this;\\n  };\\n\\n  // Check Symbol.for because not everywhere where Symbol defined\\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\\n    try {\\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\\n    } catch (e) {\\n      BN.prototype.inspect = inspect;\\n    }\\n  } else {\\n    BN.prototype.inspect = inspect;\\n  }\\n\\n  function inspect () {\\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\\n  }\\n\\n  /*\\n\\n  var zeros = [];\\n  var groupSizes = [];\\n  var groupBases = [];\\n\\n  var s = '';\\n  var i = -1;\\n  while (++i < BN.wordSize) {\\n    zeros[i] = s;\\n    s += '0';\\n  }\\n  groupSizes[0] = 0;\\n  groupSizes[1] = 0;\\n  groupBases[0] = 0;\\n  groupBases[1] = 0;\\n  var base = 2 - 1;\\n  while (++base < 36 + 1) {\\n    var groupSize = 0;\\n    var groupBase = 1;\\n    while (groupBase < (1 << BN.wordSize) / base) {\\n      groupBase *= base;\\n      groupSize += 1;\\n    }\\n    groupSizes[base] = groupSize;\\n    groupBases[base] = groupBase;\\n  }\\n\\n  */\\n\\n  var zeros = [\\n    '',\\n    '0',\\n    '00',\\n    '000',\\n    '0000',\\n    '00000',\\n    '000000',\\n    '0000000',\\n    '00000000',\\n    '000000000',\\n    '0000000000',\\n    '00000000000',\\n    '000000000000',\\n    '0000000000000',\\n    '00000000000000',\\n    '000000000000000',\\n    '0000000000000000',\\n    '00000000000000000',\\n    '000000000000000000',\\n    '0000000000000000000',\\n    '00000000000000000000',\\n    '000000000000000000000',\\n    '0000000000000000000000',\\n    '00000000000000000000000',\\n    '000000000000000000000000',\\n    '0000000000000000000000000'\\n  ];\\n\\n  var groupSizes = [\\n    0, 0,\\n    25, 16, 12, 11, 10, 9, 8,\\n    8, 7, 7, 7, 7, 6, 6,\\n    6, 6, 6, 6, 6, 5, 5,\\n    5, 5, 5, 5, 5, 5, 5,\\n    5, 5, 5, 5, 5, 5, 5\\n  ];\\n\\n  var groupBases = [\\n    0, 0,\\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\\n  ];\\n\\n  BN.prototype.toString = function toString (base, padding) {\\n    base = base || 10;\\n    padding = padding | 0 || 1;\\n\\n    var out;\\n    if (base === 16 || base === 'hex') {\\n      out = '';\\n      var off = 0;\\n      var carry = 0;\\n      for (var i = 0; i < this.length; i++) {\\n        var w = this.words[i];\\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\\n        carry = (w >>> (24 - off)) & 0xffffff;\\n        off += 2;\\n        if (off >= 26) {\\n          off -= 26;\\n          i--;\\n        }\\n        if (carry !== 0 || i !== this.length - 1) {\\n          out = zeros[6 - word.length] + word + out;\\n        } else {\\n          out = word + out;\\n        }\\n      }\\n      if (carry !== 0) {\\n        out = carry.toString(16) + out;\\n      }\\n      while (out.length % padding !== 0) {\\n        out = '0' + out;\\n      }\\n      if (this.negative !== 0) {\\n        out = '-' + out;\\n      }\\n      return out;\\n    }\\n\\n    if (base === (base | 0) && base >= 2 && base <= 36) {\\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\\n      var groupSize = groupSizes[base];\\n      // var groupBase = Math.pow(base, groupSize);\\n      var groupBase = groupBases[base];\\n      out = '';\\n      var c = this.clone();\\n      c.negative = 0;\\n      while (!c.isZero()) {\\n        var r = c.modrn(groupBase).toString(base);\\n        c = c.idivn(groupBase);\\n\\n        if (!c.isZero()) {\\n          out = zeros[groupSize - r.length] + r + out;\\n        } else {\\n          out = r + out;\\n        }\\n      }\\n      if (this.isZero()) {\\n        out = '0' + out;\\n      }\\n      while (out.length % padding !== 0) {\\n        out = '0' + out;\\n      }\\n      if (this.negative !== 0) {\\n        out = '-' + out;\\n      }\\n      return out;\\n    }\\n\\n    assert(false, 'Base should be between 2 and 36');\\n  };\\n\\n  BN.prototype.toNumber = function toNumber () {\\n    var ret = this.words[0];\\n    if (this.length === 2) {\\n      ret += this.words[1] * 0x4000000;\\n    } else if (this.length === 3 && this.words[2] === 0x01) {\\n      // NOTE: at this stage it is known that the top bit is set\\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\\n    } else if (this.length > 2) {\\n      assert(false, 'Number can only safely store up to 53 bits');\\n    }\\n    return (this.negative !== 0) ? -ret : ret;\\n  };\\n\\n  BN.prototype.toJSON = function toJSON () {\\n    return this.toString(16, 2);\\n  };\\n\\n  if (Buffer) {\\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\\n      return this.toArrayLike(Buffer, endian, length);\\n    };\\n  }\\n\\n  BN.prototype.toArray = function toArray (endian, length) {\\n    return this.toArrayLike(Array, endian, length);\\n  };\\n\\n  var allocate = function allocate (ArrayType, size) {\\n    if (ArrayType.allocUnsafe) {\\n      return ArrayType.allocUnsafe(size);\\n    }\\n    return new ArrayType(size);\\n  };\\n\\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\\n    this._strip();\\n\\n    var byteLength = this.byteLength();\\n    var reqLength = length || Math.max(1, byteLength);\\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\\n    assert(reqLength > 0, 'Requested array length <= 0');\\n\\n    var res = allocate(ArrayType, reqLength);\\n    var postfix = endian === 'le' ? 'LE' : 'BE';\\n    this['_toArrayLike' + postfix](res, byteLength);\\n    return res;\\n  };\\n\\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\\n    var position = 0;\\n    var carry = 0;\\n\\n    for (var i = 0, shift = 0; i < this.length; i++) {\\n      var word = (this.words[i] << shift) | carry;\\n\\n      res[position++] = word & 0xff;\\n      if (position < res.length) {\\n        res[position++] = (word >> 8) & 0xff;\\n      }\\n      if (position < res.length) {\\n        res[position++] = (word >> 16) & 0xff;\\n      }\\n\\n      if (shift === 6) {\\n        if (position < res.length) {\\n          res[position++] = (word >> 24) & 0xff;\\n        }\\n        carry = 0;\\n        shift = 0;\\n      } else {\\n        carry = word >>> 24;\\n        shift += 2;\\n      }\\n    }\\n\\n    if (position < res.length) {\\n      res[position++] = carry;\\n\\n      while (position < res.length) {\\n        res[position++] = 0;\\n      }\\n    }\\n  };\\n\\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\\n    var position = res.length - 1;\\n    var carry = 0;\\n\\n    for (var i = 0, shift = 0; i < this.length; i++) {\\n      var word = (this.words[i] << shift) | carry;\\n\\n      res[position--] = word & 0xff;\\n      if (position >= 0) {\\n        res[position--] = (word >> 8) & 0xff;\\n      }\\n      if (position >= 0) {\\n        res[position--] = (word >> 16) & 0xff;\\n      }\\n\\n      if (shift === 6) {\\n        if (position >= 0) {\\n          res[position--] = (word >> 24) & 0xff;\\n        }\\n        carry = 0;\\n        shift = 0;\\n      } else {\\n        carry = word >>> 24;\\n        shift += 2;\\n      }\\n    }\\n\\n    if (position >= 0) {\\n      res[position--] = carry;\\n\\n      while (position >= 0) {\\n        res[position--] = 0;\\n      }\\n    }\\n  };\\n\\n  if (Math.clz32) {\\n    BN.prototype._countBits = function _countBits (w) {\\n      return 32 - Math.clz32(w);\\n    };\\n  } else {\\n    BN.prototype._countBits = function _countBits (w) {\\n      var t = w;\\n      var r = 0;\\n      if (t >= 0x1000) {\\n        r += 13;\\n        t >>>= 13;\\n      }\\n      if (t >= 0x40) {\\n        r += 7;\\n        t >>>= 7;\\n      }\\n      if (t >= 0x8) {\\n        r += 4;\\n        t >>>= 4;\\n      }\\n      if (t >= 0x02) {\\n        r += 2;\\n        t >>>= 2;\\n      }\\n      return r + t;\\n    };\\n  }\\n\\n  BN.prototype._zeroBits = function _zeroBits (w) {\\n    // Short-cut\\n    if (w === 0) return 26;\\n\\n    var t = w;\\n    var r = 0;\\n    if ((t & 0x1fff) === 0) {\\n      r += 13;\\n      t >>>= 13;\\n    }\\n    if ((t & 0x7f) === 0) {\\n      r += 7;\\n      t >>>= 7;\\n    }\\n    if ((t & 0xf) === 0) {\\n      r += 4;\\n      t >>>= 4;\\n    }\\n    if ((t & 0x3) === 0) {\\n      r += 2;\\n      t >>>= 2;\\n    }\\n    if ((t & 0x1) === 0) {\\n      r++;\\n    }\\n    return r;\\n  };\\n\\n  // Return number of used bits in a BN\\n  BN.prototype.bitLength = function bitLength () {\\n    var w = this.words[this.length - 1];\\n    var hi = this._countBits(w);\\n    return (this.length - 1) * 26 + hi;\\n  };\\n\\n  function toBitArray (num) {\\n    var w = new Array(num.bitLength());\\n\\n    for (var bit = 0; bit < w.length; bit++) {\\n      var off = (bit / 26) | 0;\\n      var wbit = bit % 26;\\n\\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\\n    }\\n\\n    return w;\\n  }\\n\\n  // Number of trailing zero bits\\n  BN.prototype.zeroBits = function zeroBits () {\\n    if (this.isZero()) return 0;\\n\\n    var r = 0;\\n    for (var i = 0; i < this.length; i++) {\\n      var b = this._zeroBits(this.words[i]);\\n      r += b;\\n      if (b !== 26) break;\\n    }\\n    return r;\\n  };\\n\\n  BN.prototype.byteLength = function byteLength () {\\n    return Math.ceil(this.bitLength() / 8);\\n  };\\n\\n  BN.prototype.toTwos = function toTwos (width) {\\n    if (this.negative !== 0) {\\n      return this.abs().inotn(width).iaddn(1);\\n    }\\n    return this.clone();\\n  };\\n\\n  BN.prototype.fromTwos = function fromTwos (width) {\\n    if (this.testn(width - 1)) {\\n      return this.notn(width).iaddn(1).ineg();\\n    }\\n    return this.clone();\\n  };\\n\\n  BN.prototype.isNeg = function isNeg () {\\n    return this.negative !== 0;\\n  };\\n\\n  // Return negative clone of `this`\\n  BN.prototype.neg = function neg () {\\n    return this.clone().ineg();\\n  };\\n\\n  BN.prototype.ineg = function ineg () {\\n    if (!this.isZero()) {\\n      this.negative ^= 1;\\n    }\\n\\n    return this;\\n  };\\n\\n  // Or `num` with `this` in-place\\n  BN.prototype.iuor = function iuor (num) {\\n    while (this.length < num.length) {\\n      this.words[this.length++] = 0;\\n    }\\n\\n    for (var i = 0; i < num.length; i++) {\\n      this.words[i] = this.words[i] | num.words[i];\\n    }\\n\\n    return this._strip();\\n  };\\n\\n  BN.prototype.ior = function ior (num) {\\n    assert((this.negative | num.negative) === 0);\\n    return this.iuor(num);\\n  };\\n\\n  // Or `num` with `this`\\n  BN.prototype.or = function or (num) {\\n    if (this.length > num.length) return this.clone().ior(num);\\n    return num.clone().ior(this);\\n  };\\n\\n  BN.prototype.uor = function uor (num) {\\n    if (this.length > num.length) return this.clone().iuor(num);\\n    return num.clone().iuor(this);\\n  };\\n\\n  // And `num` with `this` in-place\\n  BN.prototype.iuand = function iuand (num) {\\n    // b = min-length(num, this)\\n    var b;\\n    if (this.length > num.length) {\\n      b = num;\\n    } else {\\n      b = this;\\n    }\\n\\n    for (var i = 0; i < b.length; i++) {\\n      this.words[i] = this.words[i] & num.words[i];\\n    }\\n\\n    this.length = b.length;\\n\\n    return this._strip();\\n  };\\n\\n  BN.prototype.iand = function iand (num) {\\n    assert((this.negative | num.negative) === 0);\\n    return this.iuand(num);\\n  };\\n\\n  // And `num` with `this`\\n  BN.prototype.and = function and (num) {\\n    if (this.length > num.length) return this.clone().iand(num);\\n    return num.clone().iand(this);\\n  };\\n\\n  BN.prototype.uand = function uand (num) {\\n    if (this.length > num.length) return this.clone().iuand(num);\\n    return num.clone().iuand(this);\\n  };\\n\\n  // Xor `num` with `this` in-place\\n  BN.prototype.iuxor = function iuxor (num) {\\n    // a.length > b.length\\n    var a;\\n    var b;\\n    if (this.length > num.length) {\\n      a = this;\\n      b = num;\\n    } else {\\n      a = num;\\n      b = this;\\n    }\\n\\n    for (var i = 0; i < b.length; i++) {\\n      this.words[i] = a.words[i] ^ b.words[i];\\n    }\\n\\n    if (this !== a) {\\n      for (; i < a.length; i++) {\\n        this.words[i] = a.words[i];\\n      }\\n    }\\n\\n    this.length = a.length;\\n\\n    return this._strip();\\n  };\\n\\n  BN.prototype.ixor = function ixor (num) {\\n    assert((this.negative | num.negative) === 0);\\n    return this.iuxor(num);\\n  };\\n\\n  // Xor `num` with `this`\\n  BN.prototype.xor = function xor (num) {\\n    if (this.length > num.length) return this.clone().ixor(num);\\n    return num.clone().ixor(this);\\n  };\\n\\n  BN.prototype.uxor = function uxor (num) {\\n    if (this.length > num.length) return this.clone().iuxor(num);\\n    return num.clone().iuxor(this);\\n  };\\n\\n  // Not ``this`` with ``width`` bitwidth\\n  BN.prototype.inotn = function inotn (width) {\\n    assert(typeof width === 'number' && width >= 0);\\n\\n    var bytesNeeded = Math.ceil(width / 26) | 0;\\n    var bitsLeft = width % 26;\\n\\n    // Extend the buffer with leading zeroes\\n    this._expand(bytesNeeded);\\n\\n    if (bitsLeft > 0) {\\n      bytesNeeded--;\\n    }\\n\\n    // Handle complete words\\n    for (var i = 0; i < bytesNeeded; i++) {\\n      this.words[i] = ~this.words[i] & 0x3ffffff;\\n    }\\n\\n    // Handle the residue\\n    if (bitsLeft > 0) {\\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\\n    }\\n\\n    // And remove leading zeroes\\n    return this._strip();\\n  };\\n\\n  BN.prototype.notn = function notn (width) {\\n    return this.clone().inotn(width);\\n  };\\n\\n  // Set `bit` of `this`\\n  BN.prototype.setn = function setn (bit, val) {\\n    assert(typeof bit === 'number' && bit >= 0);\\n\\n    var off = (bit / 26) | 0;\\n    var wbit = bit % 26;\\n\\n    this._expand(off + 1);\\n\\n    if (val) {\\n      this.words[off] = this.words[off] | (1 << wbit);\\n    } else {\\n      this.words[off] = this.words[off] & ~(1 << wbit);\\n    }\\n\\n    return this._strip();\\n  };\\n\\n  // Add `num` to `this` in-place\\n  BN.prototype.iadd = function iadd (num) {\\n    var r;\\n\\n    // negative + positive\\n    if (this.negative !== 0 && num.negative === 0) {\\n      this.negative = 0;\\n      r = this.isub(num);\\n      this.negative ^= 1;\\n      return this._normSign();\\n\\n    // positive + negative\\n    } else if (this.negative === 0 && num.negative !== 0) {\\n      num.negative = 0;\\n      r = this.isub(num);\\n      num.negative = 1;\\n      return r._normSign();\\n    }\\n\\n    // a.length > b.length\\n    var a, b;\\n    if (this.length > num.length) {\\n      a = this;\\n      b = num;\\n    } else {\\n      a = num;\\n      b = this;\\n    }\\n\\n    var carry = 0;\\n    for (var i = 0; i < b.length; i++) {\\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\\n      this.words[i] = r & 0x3ffffff;\\n      carry = r >>> 26;\\n    }\\n    for (; carry !== 0 && i < a.length; i++) {\\n      r = (a.words[i] | 0) + carry;\\n      this.words[i] = r & 0x3ffffff;\\n      carry = r >>> 26;\\n    }\\n\\n    this.length = a.length;\\n    if (carry !== 0) {\\n      this.words[this.length] = carry;\\n      this.length++;\\n    // Copy the rest of the words\\n    } else if (a !== this) {\\n      for (; i < a.length; i++) {\\n        this.words[i] = a.words[i];\\n      }\\n    }\\n\\n    return this;\\n  };\\n\\n  // Add `num` to `this`\\n  BN.prototype.add = function add (num) {\\n    var res;\\n    if (num.negative !== 0 && this.negative === 0) {\\n      num.negative = 0;\\n      res = this.sub(num);\\n      num.negative ^= 1;\\n      return res;\\n    } else if (num.negative === 0 && this.negative !== 0) {\\n      this.negative = 0;\\n      res = num.sub(this);\\n      this.negative = 1;\\n      return res;\\n    }\\n\\n    if (this.length > num.length) return this.clone().iadd(num);\\n\\n    return num.clone().iadd(this);\\n  };\\n\\n  // Subtract `num` from `this` in-place\\n  BN.prototype.isub = function isub (num) {\\n    // this - (-num) = this + num\\n    if (num.negative !== 0) {\\n      num.negative = 0;\\n      var r = this.iadd(num);\\n      num.negative = 1;\\n      return r._normSign();\\n\\n    // -this - num = -(this + num)\\n    } else if (this.negative !== 0) {\\n      this.negative = 0;\\n      this.iadd(num);\\n      this.negative = 1;\\n      return this._normSign();\\n    }\\n\\n    // At this point both numbers are positive\\n    var cmp = this.cmp(num);\\n\\n    // Optimization - zeroify\\n    if (cmp === 0) {\\n      this.negative = 0;\\n      this.length = 1;\\n      this.words[0] = 0;\\n      return this;\\n    }\\n\\n    // a > b\\n    var a, b;\\n    if (cmp > 0) {\\n      a = this;\\n      b = num;\\n    } else {\\n      a = num;\\n      b = this;\\n    }\\n\\n    var carry = 0;\\n    for (var i = 0; i < b.length; i++) {\\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\\n      carry = r >> 26;\\n      this.words[i] = r & 0x3ffffff;\\n    }\\n    for (; carry !== 0 && i < a.length; i++) {\\n      r = (a.words[i] | 0) + carry;\\n      carry = r >> 26;\\n      this.words[i] = r & 0x3ffffff;\\n    }\\n\\n    // Copy rest of the words\\n    if (carry === 0 && i < a.length && a !== this) {\\n      for (; i < a.length; i++) {\\n        this.words[i] = a.words[i];\\n      }\\n    }\\n\\n    this.length = Math.max(this.length, i);\\n\\n    if (a !== this) {\\n      this.negative = 1;\\n    }\\n\\n    return this._strip();\\n  };\\n\\n  // Subtract `num` from `this`\\n  BN.prototype.sub = function sub (num) {\\n    return this.clone().isub(num);\\n  };\\n\\n  function smallMulTo (self, num, out) {\\n    out.negative = num.negative ^ self.negative;\\n    var len = (self.length + num.length) | 0;\\n    out.length = len;\\n    len = (len - 1) | 0;\\n\\n    // Peel one iteration (compiler can't do it, because of code complexity)\\n    var a = self.words[0] | 0;\\n    var b = num.words[0] | 0;\\n    var r = a * b;\\n\\n    var lo = r & 0x3ffffff;\\n    var carry = (r / 0x4000000) | 0;\\n    out.words[0] = lo;\\n\\n    for (var k = 1; k < len; k++) {\\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\\n      // note that ncarry could be >= 0x3ffffff\\n      var ncarry = carry >>> 26;\\n      var rword = carry & 0x3ffffff;\\n      var maxJ = Math.min(k, num.length - 1);\\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\\n        var i = (k - j) | 0;\\n        a = self.words[i] | 0;\\n        b = num.words[j] | 0;\\n        r = a * b + rword;\\n        ncarry += (r / 0x4000000) | 0;\\n        rword = r & 0x3ffffff;\\n      }\\n      out.words[k] = rword | 0;\\n      carry = ncarry | 0;\\n    }\\n    if (carry !== 0) {\\n      out.words[k] = carry | 0;\\n    } else {\\n      out.length--;\\n    }\\n\\n    return out._strip();\\n  }\\n\\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\\n  // multiplication (like elliptic secp256k1).\\n  var comb10MulTo = function comb10MulTo (self, num, out) {\\n    var a = self.words;\\n    var b = num.words;\\n    var o = out.words;\\n    var c = 0;\\n    var lo;\\n    var mid;\\n    var hi;\\n    var a0 = a[0] | 0;\\n    var al0 = a0 & 0x1fff;\\n    var ah0 = a0 >>> 13;\\n    var a1 = a[1] | 0;\\n    var al1 = a1 & 0x1fff;\\n    var ah1 = a1 >>> 13;\\n    var a2 = a[2] | 0;\\n    var al2 = a2 & 0x1fff;\\n    var ah2 = a2 >>> 13;\\n    var a3 = a[3] | 0;\\n    var al3 = a3 & 0x1fff;\\n    var ah3 = a3 >>> 13;\\n    var a4 = a[4] | 0;\\n    var al4 = a4 & 0x1fff;\\n    var ah4 = a4 >>> 13;\\n    var a5 = a[5] | 0;\\n    var al5 = a5 & 0x1fff;\\n    var ah5 = a5 >>> 13;\\n    var a6 = a[6] | 0;\\n    var al6 = a6 & 0x1fff;\\n    var ah6 = a6 >>> 13;\\n    var a7 = a[7] | 0;\\n    var al7 = a7 & 0x1fff;\\n    var ah7 = a7 >>> 13;\\n    var a8 = a[8] | 0;\\n    var al8 = a8 & 0x1fff;\\n    var ah8 = a8 >>> 13;\\n    var a9 = a[9] | 0;\\n    var al9 = a9 & 0x1fff;\\n    var ah9 = a9 >>> 13;\\n    var b0 = b[0] | 0;\\n    var bl0 = b0 & 0x1fff;\\n    var bh0 = b0 >>> 13;\\n    var b1 = b[1] | 0;\\n    var bl1 = b1 & 0x1fff;\\n    var bh1 = b1 >>> 13;\\n    var b2 = b[2] | 0;\\n    var bl2 = b2 & 0x1fff;\\n    var bh2 = b2 >>> 13;\\n    var b3 = b[3] | 0;\\n    var bl3 = b3 & 0x1fff;\\n    var bh3 = b3 >>> 13;\\n    var b4 = b[4] | 0;\\n    var bl4 = b4 & 0x1fff;\\n    var bh4 = b4 >>> 13;\\n    var b5 = b[5] | 0;\\n    var bl5 = b5 & 0x1fff;\\n    var bh5 = b5 >>> 13;\\n    var b6 = b[6] | 0;\\n    var bl6 = b6 & 0x1fff;\\n    var bh6 = b6 >>> 13;\\n    var b7 = b[7] | 0;\\n    var bl7 = b7 & 0x1fff;\\n    var bh7 = b7 >>> 13;\\n    var b8 = b[8] | 0;\\n    var bl8 = b8 & 0x1fff;\\n    var bh8 = b8 >>> 13;\\n    var b9 = b[9] | 0;\\n    var bl9 = b9 & 0x1fff;\\n    var bh9 = b9 >>> 13;\\n\\n    out.negative = self.negative ^ num.negative;\\n    out.length = 19;\\n    /* k = 0 */\\n    lo = Math.imul(al0, bl0);\\n    mid = Math.imul(al0, bh0);\\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\\n    hi = Math.imul(ah0, bh0);\\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\\n    w0 &= 0x3ffffff;\\n    /* k = 1 */\\n    lo = Math.imul(al1, bl0);\\n    mid = Math.imul(al1, bh0);\\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\\n    hi = Math.imul(ah1, bh0);\\n    lo = (lo + Math.imul(al0, bl1)) | 0;\\n    mid = (mid + Math.imul(al0, bh1)) | 0;\\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\\n    w1 &= 0x3ffffff;\\n    /* k = 2 */\\n    lo = Math.imul(al2, bl0);\\n    mid = Math.imul(al2, bh0);\\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\\n    hi = Math.imul(ah2, bh0);\\n    lo = (lo + Math.imul(al1, bl1)) | 0;\\n    mid = (mid + Math.imul(al1, bh1)) | 0;\\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\\n    lo = (lo + Math.imul(al0, bl2)) | 0;\\n    mid = (mid + Math.imul(al0, bh2)) | 0;\\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\\n    w2 &= 0x3ffffff;\\n    /* k = 3 */\\n    lo = Math.imul(al3, bl0);\\n    mid = Math.imul(al3, bh0);\\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\\n    hi = Math.imul(ah3, bh0);\\n    lo = (lo + Math.imul(al2, bl1)) | 0;\\n    mid = (mid + Math.imul(al2, bh1)) | 0;\\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\\n    lo = (lo + Math.imul(al1, bl2)) | 0;\\n    mid = (mid + Math.imul(al1, bh2)) | 0;\\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\\n    lo = (lo + Math.imul(al0, bl3)) | 0;\\n    mid = (mid + Math.imul(al0, bh3)) | 0;\\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\\n    w3 &= 0x3ffffff;\\n    /* k = 4 */\\n    lo = Math.imul(al4, bl0);\\n    mid = Math.imul(al4, bh0);\\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\\n    hi = Math.imul(ah4, bh0);\\n    lo = (lo + Math.imul(al3, bl1)) | 0;\\n    mid = (mid + Math.imul(al3, bh1)) | 0;\\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\\n    lo = (lo + Math.imul(al2, bl2)) | 0;\\n    mid = (mid + Math.imul(al2, bh2)) | 0;\\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\\n    lo = (lo + Math.imul(al1, bl3)) | 0;\\n    mid = (mid + Math.imul(al1, bh3)) | 0;\\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\\n    lo = (lo + Math.imul(al0, bl4)) | 0;\\n    mid = (mid + Math.imul(al0, bh4)) | 0;\\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\\n    w4 &= 0x3ffffff;\\n    /* k = 5 */\\n    lo = Math.imul(al5, bl0);\\n    mid = Math.imul(al5, bh0);\\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\\n    hi = Math.imul(ah5, bh0);\\n    lo = (lo + Math.imul(al4, bl1)) | 0;\\n    mid = (mid + Math.imul(al4, bh1)) | 0;\\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\\n    lo = (lo + Math.imul(al3, bl2)) | 0;\\n    mid = (mid + Math.imul(al3, bh2)) | 0;\\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\\n    lo = (lo + Math.imul(al2, bl3)) | 0;\\n    mid = (mid + Math.imul(al2, bh3)) | 0;\\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\\n    lo = (lo + Math.imul(al1, bl4)) | 0;\\n    mid = (mid + Math.imul(al1, bh4)) | 0;\\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\\n    lo = (lo + Math.imul(al0, bl5)) | 0;\\n    mid = (mid + Math.imul(al0, bh5)) | 0;\\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\\n    w5 &= 0x3ffffff;\\n    /* k = 6 */\\n    lo = Math.imul(al6, bl0);\\n    mid = Math.imul(al6, bh0);\\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\\n    hi = Math.imul(ah6, bh0);\\n    lo = (lo + Math.imul(al5, bl1)) | 0;\\n    mid = (mid + Math.imul(al5, bh1)) | 0;\\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\\n    lo = (lo + Math.imul(al4, bl2)) | 0;\\n    mid = (mid + Math.imul(al4, bh2)) | 0;\\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\\n    lo = (lo + Math.imul(al3, bl3)) | 0;\\n    mid = (mid + Math.imul(al3, bh3)) | 0;\\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\\n    lo = (lo + Math.imul(al2, bl4)) | 0;\\n    mid = (mid + Math.imul(al2, bh4)) | 0;\\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\\n    lo = (lo + Math.imul(al1, bl5)) | 0;\\n    mid = (mid + Math.imul(al1, bh5)) | 0;\\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\\n    lo = (lo + Math.imul(al0, bl6)) | 0;\\n    mid = (mid + Math.imul(al0, bh6)) | 0;\\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\\n    w6 &= 0x3ffffff;\\n    /* k = 7 */\\n    lo = Math.imul(al7, bl0);\\n    mid = Math.imul(al7, bh0);\\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\\n    hi = Math.imul(ah7, bh0);\\n    lo = (lo + Math.imul(al6, bl1)) | 0;\\n    mid = (mid + Math.imul(al6, bh1)) | 0;\\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\\n    lo = (lo + Math.imul(al5, bl2)) | 0;\\n    mid = (mid + Math.imul(al5, bh2)) | 0;\\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\\n    lo = (lo + Math.imul(al4, bl3)) | 0;\\n    mid = (mid + Math.imul(al4, bh3)) | 0;\\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\\n    lo = (lo + Math.imul(al3, bl4)) | 0;\\n    mid = (mid + Math.imul(al3, bh4)) | 0;\\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\\n    lo = (lo + Math.imul(al2, bl5)) | 0;\\n    mid = (mid + Math.imul(al2, bh5)) | 0;\\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\\n    lo = (lo + Math.imul(al1, bl6)) | 0;\\n    mid = (mid + Math.imul(al1, bh6)) | 0;\\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\\n    lo = (lo + Math.imul(al0, bl7)) | 0;\\n    mid = (mid + Math.imul(al0, bh7)) | 0;\\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\\n    w7 &= 0x3ffffff;\\n    /* k = 8 */\\n    lo = Math.imul(al8, bl0);\\n    mid = Math.imul(al8, bh0);\\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\\n    hi = Math.imul(ah8, bh0);\\n    lo = (lo + Math.imul(al7, bl1)) | 0;\\n    mid = (mid + Math.imul(al7, bh1)) | 0;\\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\\n    lo = (lo + Math.imul(al6, bl2)) | 0;\\n    mid = (mid + Math.imul(al6, bh2)) | 0;\\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\\n    lo = (lo + Math.imul(al5, bl3)) | 0;\\n    mid = (mid + Math.imul(al5, bh3)) | 0;\\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\\n    lo = (lo + Math.imul(al4, bl4)) | 0;\\n    mid = (mid + Math.imul(al4, bh4)) | 0;\\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\\n    lo = (lo + Math.imul(al3, bl5)) | 0;\\n    mid = (mid + Math.imul(al3, bh5)) | 0;\\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\\n    lo = (lo + Math.imul(al2, bl6)) | 0;\\n    mid = (mid + Math.imul(al2, bh6)) | 0;\\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\\n    lo = (lo + Math.imul(al1, bl7)) | 0;\\n    mid = (mid + Math.imul(al1, bh7)) | 0;\\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\\n    lo = (lo + Math.imul(al0, bl8)) | 0;\\n    mid = (mid + Math.imul(al0, bh8)) | 0;\\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\\n    w8 &= 0x3ffffff;\\n    /* k = 9 */\\n    lo = Math.imul(al9, bl0);\\n    mid = Math.imul(al9, bh0);\\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\\n    hi = Math.imul(ah9, bh0);\\n    lo = (lo + Math.imul(al8, bl1)) | 0;\\n    mid = (mid + Math.imul(al8, bh1)) | 0;\\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\\n    lo = (lo + Math.imul(al7, bl2)) | 0;\\n    mid = (mid + Math.imul(al7, bh2)) | 0;\\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\\n    lo = (lo + Math.imul(al6, bl3)) | 0;\\n    mid = (mid + Math.imul(al6, bh3)) | 0;\\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\\n    lo = (lo + Math.imul(al5, bl4)) | 0;\\n    mid = (mid + Math.imul(al5, bh4)) | 0;\\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\\n    lo = (lo + Math.imul(al4, bl5)) | 0;\\n    mid = (mid + Math.imul(al4, bh5)) | 0;\\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\\n    lo = (lo + Math.imul(al3, bl6)) | 0;\\n    mid = (mid + Math.imul(al3, bh6)) | 0;\\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\\n    lo = (lo + Math.imul(al2, bl7)) | 0;\\n    mid = (mid + Math.imul(al2, bh7)) | 0;\\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\\n    lo = (lo + Math.imul(al1, bl8)) | 0;\\n    mid = (mid + Math.imul(al1, bh8)) | 0;\\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\\n    lo = (lo + Math.imul(al0, bl9)) | 0;\\n    mid = (mid + Math.imul(al0, bh9)) | 0;\\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\\n    w9 &= 0x3ffffff;\\n    /* k = 10 */\\n    lo = Math.imul(al9, bl1);\\n    mid = Math.imul(al9, bh1);\\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\\n    hi = Math.imul(ah9, bh1);\\n    lo = (lo + Math.imul(al8, bl2)) | 0;\\n    mid = (mid + Math.imul(al8, bh2)) | 0;\\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\\n    lo = (lo + Math.imul(al7, bl3)) | 0;\\n    mid = (mid + Math.imul(al7, bh3)) | 0;\\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\\n    lo = (lo + Math.imul(al6, bl4)) | 0;\\n    mid = (mid + Math.imul(al6, bh4)) | 0;\\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\\n    lo = (lo + Math.imul(al5, bl5)) | 0;\\n    mid = (mid + Math.imul(al5, bh5)) | 0;\\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\\n    lo = (lo + Math.imul(al4, bl6)) | 0;\\n    mid = (mid + Math.imul(al4, bh6)) | 0;\\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\\n    lo = (lo + Math.imul(al3, bl7)) | 0;\\n    mid = (mid + Math.imul(al3, bh7)) | 0;\\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\\n    lo = (lo + Math.imul(al2, bl8)) | 0;\\n    mid = (mid + Math.imul(al2, bh8)) | 0;\\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\\n    lo = (lo + Math.imul(al1, bl9)) | 0;\\n    mid = (mid + Math.imul(al1, bh9)) | 0;\\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\\n    w10 &= 0x3ffffff;\\n    /* k = 11 */\\n    lo = Math.imul(al9, bl2);\\n    mid = Math.imul(al9, bh2);\\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\\n    hi = Math.imul(ah9, bh2);\\n    lo = (lo + Math.imul(al8, bl3)) | 0;\\n    mid = (mid + Math.imul(al8, bh3)) | 0;\\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\\n    lo = (lo + Math.imul(al7, bl4)) | 0;\\n    mid = (mid + Math.imul(al7, bh4)) | 0;\\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\\n    lo = (lo + Math.imul(al6, bl5)) | 0;\\n    mid = (mid + Math.imul(al6, bh5)) | 0;\\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\\n    lo = (lo + Math.imul(al5, bl6)) | 0;\\n    mid = (mid + Math.imul(al5, bh6)) | 0;\\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\\n    lo = (lo + Math.imul(al4, bl7)) | 0;\\n    mid = (mid + Math.imul(al4, bh7)) | 0;\\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\\n    lo = (lo + Math.imul(al3, bl8)) | 0;\\n    mid = (mid + Math.imul(al3, bh8)) | 0;\\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\\n    lo = (lo + Math.imul(al2, bl9)) | 0;\\n    mid = (mid + Math.imul(al2, bh9)) | 0;\\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\\n    w11 &= 0x3ffffff;\\n    /* k = 12 */\\n    lo = Math.imul(al9, bl3);\\n    mid = Math.imul(al9, bh3);\\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\\n    hi = Math.imul(ah9, bh3);\\n    lo = (lo + Math.imul(al8, bl4)) | 0;\\n    mid = (mid + Math.imul(al8, bh4)) | 0;\\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\\n    lo = (lo + Math.imul(al7, bl5)) | 0;\\n    mid = (mid + Math.imul(al7, bh5)) | 0;\\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\\n    lo = (lo + Math.imul(al6, bl6)) | 0;\\n    mid = (mid + Math.imul(al6, bh6)) | 0;\\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\\n    lo = (lo + Math.imul(al5, bl7)) | 0;\\n    mid = (mid + Math.imul(al5, bh7)) | 0;\\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\\n    lo = (lo + Math.imul(al4, bl8)) | 0;\\n    mid = (mid + Math.imul(al4, bh8)) | 0;\\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\\n    lo = (lo + Math.imul(al3, bl9)) | 0;\\n    mid = (mid + Math.imul(al3, bh9)) | 0;\\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\\n    w12 &= 0x3ffffff;\\n    /* k = 13 */\\n    lo = Math.imul(al9, bl4);\\n    mid = Math.imul(al9, bh4);\\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\\n    hi = Math.imul(ah9, bh4);\\n    lo = (lo + Math.imul(al8, bl5)) | 0;\\n    mid = (mid + Math.imul(al8, bh5)) | 0;\\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\\n    lo = (lo + Math.imul(al7, bl6)) | 0;\\n    mid = (mid + Math.imul(al7, bh6)) | 0;\\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\\n    lo = (lo + Math.imul(al6, bl7)) | 0;\\n    mid = (mid + Math.imul(al6, bh7)) | 0;\\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\\n    lo = (lo + Math.imul(al5, bl8)) | 0;\\n    mid = (mid + Math.imul(al5, bh8)) | 0;\\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\\n    lo = (lo + Math.imul(al4, bl9)) | 0;\\n    mid = (mid + Math.imul(al4, bh9)) | 0;\\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\\n    w13 &= 0x3ffffff;\\n    /* k = 14 */\\n    lo = Math.imul(al9, bl5);\\n    mid = Math.imul(al9, bh5);\\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\\n    hi = Math.imul(ah9, bh5);\\n    lo = (lo + Math.imul(al8, bl6)) | 0;\\n    mid = (mid + Math.imul(al8, bh6)) | 0;\\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\\n    lo = (lo + Math.imul(al7, bl7)) | 0;\\n    mid = (mid + Math.imul(al7, bh7)) | 0;\\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\\n    lo = (lo + Math.imul(al6, bl8)) | 0;\\n    mid = (mid + Math.imul(al6, bh8)) | 0;\\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\\n    lo = (lo + Math.imul(al5, bl9)) | 0;\\n    mid = (mid + Math.imul(al5, bh9)) | 0;\\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\\n    w14 &= 0x3ffffff;\\n    /* k = 15 */\\n    lo = Math.imul(al9, bl6);\\n    mid = Math.imul(al9, bh6);\\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\\n    hi = Math.imul(ah9, bh6);\\n    lo = (lo + Math.imul(al8, bl7)) | 0;\\n    mid = (mid + Math.imul(al8, bh7)) | 0;\\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\\n    lo = (lo + Math.imul(al7, bl8)) | 0;\\n    mid = (mid + Math.imul(al7, bh8)) | 0;\\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\\n    lo = (lo + Math.imul(al6, bl9)) | 0;\\n    mid = (mid + Math.imul(al6, bh9)) | 0;\\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\\n    w15 &= 0x3ffffff;\\n    /* k = 16 */\\n    lo = Math.imul(al9, bl7);\\n    mid = Math.imul(al9, bh7);\\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\\n    hi = Math.imul(ah9, bh7);\\n    lo = (lo + Math.imul(al8, bl8)) | 0;\\n    mid = (mid + Math.imul(al8, bh8)) | 0;\\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\\n    lo = (lo + Math.imul(al7, bl9)) | 0;\\n    mid = (mid + Math.imul(al7, bh9)) | 0;\\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\\n    w16 &= 0x3ffffff;\\n    /* k = 17 */\\n    lo = Math.imul(al9, bl8);\\n    mid = Math.imul(al9, bh8);\\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\\n    hi = Math.imul(ah9, bh8);\\n    lo = (lo + Math.imul(al8, bl9)) | 0;\\n    mid = (mid + Math.imul(al8, bh9)) | 0;\\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\\n    w17 &= 0x3ffffff;\\n    /* k = 18 */\\n    lo = Math.imul(al9, bl9);\\n    mid = Math.imul(al9, bh9);\\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\\n    hi = Math.imul(ah9, bh9);\\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\\n    w18 &= 0x3ffffff;\\n    o[0] = w0;\\n    o[1] = w1;\\n    o[2] = w2;\\n    o[3] = w3;\\n    o[4] = w4;\\n    o[5] = w5;\\n    o[6] = w6;\\n    o[7] = w7;\\n    o[8] = w8;\\n    o[9] = w9;\\n    o[10] = w10;\\n    o[11] = w11;\\n    o[12] = w12;\\n    o[13] = w13;\\n    o[14] = w14;\\n    o[15] = w15;\\n    o[16] = w16;\\n    o[17] = w17;\\n    o[18] = w18;\\n    if (c !== 0) {\\n      o[19] = c;\\n      out.length++;\\n    }\\n    return out;\\n  };\\n\\n  // Polyfill comb\\n  if (!Math.imul) {\\n    comb10MulTo = smallMulTo;\\n  }\\n\\n  function bigMulTo (self, num, out) {\\n    out.negative = num.negative ^ self.negative;\\n    out.length = self.length + num.length;\\n\\n    var carry = 0;\\n    var hncarry = 0;\\n    for (var k = 0; k < out.length - 1; k++) {\\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\\n      // note that ncarry could be >= 0x3ffffff\\n      var ncarry = hncarry;\\n      hncarry = 0;\\n      var rword = carry & 0x3ffffff;\\n      var maxJ = Math.min(k, num.length - 1);\\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\\n        var i = k - j;\\n        var a = self.words[i] | 0;\\n        var b = num.words[j] | 0;\\n        var r = a * b;\\n\\n        var lo = r & 0x3ffffff;\\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\\n        lo = (lo + rword) | 0;\\n        rword = lo & 0x3ffffff;\\n        ncarry = (ncarry + (lo >>> 26)) | 0;\\n\\n        hncarry += ncarry >>> 26;\\n        ncarry &= 0x3ffffff;\\n      }\\n      out.words[k] = rword;\\n      carry = ncarry;\\n      ncarry = hncarry;\\n    }\\n    if (carry !== 0) {\\n      out.words[k] = carry;\\n    } else {\\n      out.length--;\\n    }\\n\\n    return out._strip();\\n  }\\n\\n  function jumboMulTo (self, num, out) {\\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\\n    // var fftm = new FFTM();\\n    // return fftm.mulp(self, num, out);\\n    return bigMulTo(self, num, out);\\n  }\\n\\n  BN.prototype.mulTo = function mulTo (num, out) {\\n    var res;\\n    var len = this.length + num.length;\\n    if (this.length === 10 && num.length === 10) {\\n      res = comb10MulTo(this, num, out);\\n    } else if (len < 63) {\\n      res = smallMulTo(this, num, out);\\n    } else if (len < 1024) {\\n      res = bigMulTo(this, num, out);\\n    } else {\\n      res = jumboMulTo(this, num, out);\\n    }\\n\\n    return res;\\n  };\\n\\n  // Cooley-Tukey algorithm for FFT\\n  // slightly revisited to rely on looping instead of recursion\\n\\n  function FFTM (x, y) {\\n    this.x = x;\\n    this.y = y;\\n  }\\n\\n  FFTM.prototype.makeRBT = function makeRBT (N) {\\n    var t = new Array(N);\\n    var l = BN.prototype._countBits(N) - 1;\\n    for (var i = 0; i < N; i++) {\\n      t[i] = this.revBin(i, l, N);\\n    }\\n\\n    return t;\\n  };\\n\\n  // Returns binary-reversed representation of `x`\\n  FFTM.prototype.revBin = function revBin (x, l, N) {\\n    if (x === 0 || x === N - 1) return x;\\n\\n    var rb = 0;\\n    for (var i = 0; i < l; i++) {\\n      rb |= (x & 1) << (l - i - 1);\\n      x >>= 1;\\n    }\\n\\n    return rb;\\n  };\\n\\n  // Performs \\\"tweedling\\\" phase, therefore 'emulating'\\n  // behaviour of the recursive algorithm\\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\\n    for (var i = 0; i < N; i++) {\\n      rtws[i] = rws[rbt[i]];\\n      itws[i] = iws[rbt[i]];\\n    }\\n  };\\n\\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\\n    this.permute(rbt, rws, iws, rtws, itws, N);\\n\\n    for (var s = 1; s < N; s <<= 1) {\\n      var l = s << 1;\\n\\n      var rtwdf = Math.cos(2 * Math.PI / l);\\n      var itwdf = Math.sin(2 * Math.PI / l);\\n\\n      for (var p = 0; p < N; p += l) {\\n        var rtwdf_ = rtwdf;\\n        var itwdf_ = itwdf;\\n\\n        for (var j = 0; j < s; j++) {\\n          var re = rtws[p + j];\\n          var ie = itws[p + j];\\n\\n          var ro = rtws[p + j + s];\\n          var io = itws[p + j + s];\\n\\n          var rx = rtwdf_ * ro - itwdf_ * io;\\n\\n          io = rtwdf_ * io + itwdf_ * ro;\\n          ro = rx;\\n\\n          rtws[p + j] = re + ro;\\n          itws[p + j] = ie + io;\\n\\n          rtws[p + j + s] = re - ro;\\n          itws[p + j + s] = ie - io;\\n\\n          /* jshint maxdepth : false */\\n          if (j !== l) {\\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\\n\\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\\n            rtwdf_ = rx;\\n          }\\n        }\\n      }\\n    }\\n  };\\n\\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\\n    var N = Math.max(m, n) | 1;\\n    var odd = N & 1;\\n    var i = 0;\\n    for (N = N / 2 | 0; N; N = N >>> 1) {\\n      i++;\\n    }\\n\\n    return 1 << i + 1 + odd;\\n  };\\n\\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\\n    if (N <= 1) return;\\n\\n    for (var i = 0; i < N / 2; i++) {\\n      var t = rws[i];\\n\\n      rws[i] = rws[N - i - 1];\\n      rws[N - i - 1] = t;\\n\\n      t = iws[i];\\n\\n      iws[i] = -iws[N - i - 1];\\n      iws[N - i - 1] = -t;\\n    }\\n  };\\n\\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\\n    var carry = 0;\\n    for (var i = 0; i < N / 2; i++) {\\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\\n        Math.round(ws[2 * i] / N) +\\n        carry;\\n\\n      ws[i] = w & 0x3ffffff;\\n\\n      if (w < 0x4000000) {\\n        carry = 0;\\n      } else {\\n        carry = w / 0x4000000 | 0;\\n      }\\n    }\\n\\n    return ws;\\n  };\\n\\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\\n    var carry = 0;\\n    for (var i = 0; i < len; i++) {\\n      carry = carry + (ws[i] | 0);\\n\\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\\n    }\\n\\n    // Pad with zeroes\\n    for (i = 2 * len; i < N; ++i) {\\n      rws[i] = 0;\\n    }\\n\\n    assert(carry === 0);\\n    assert((carry & ~0x1fff) === 0);\\n  };\\n\\n  FFTM.prototype.stub = function stub (N) {\\n    var ph = new Array(N);\\n    for (var i = 0; i < N; i++) {\\n      ph[i] = 0;\\n    }\\n\\n    return ph;\\n  };\\n\\n  FFTM.prototype.mulp = function mulp (x, y, out) {\\n    var N = 2 * this.guessLen13b(x.length, y.length);\\n\\n    var rbt = this.makeRBT(N);\\n\\n    var _ = this.stub(N);\\n\\n    var rws = new Array(N);\\n    var rwst = new Array(N);\\n    var iwst = new Array(N);\\n\\n    var nrws = new Array(N);\\n    var nrwst = new Array(N);\\n    var niwst = new Array(N);\\n\\n    var rmws = out.words;\\n    rmws.length = N;\\n\\n    this.convert13b(x.words, x.length, rws, N);\\n    this.convert13b(y.words, y.length, nrws, N);\\n\\n    this.transform(rws, _, rwst, iwst, N, rbt);\\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\\n\\n    for (var i = 0; i < N; i++) {\\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\\n      rwst[i] = rx;\\n    }\\n\\n    this.conjugate(rwst, iwst, N);\\n    this.transform(rwst, iwst, rmws, _, N, rbt);\\n    this.conjugate(rmws, _, N);\\n    this.normalize13b(rmws, N);\\n\\n    out.negative = x.negative ^ y.negative;\\n    out.length = x.length + y.length;\\n    return out._strip();\\n  };\\n\\n  // Multiply `this` by `num`\\n  BN.prototype.mul = function mul (num) {\\n    var out = new BN(null);\\n    out.words = new Array(this.length + num.length);\\n    return this.mulTo(num, out);\\n  };\\n\\n  // Multiply employing FFT\\n  BN.prototype.mulf = function mulf (num) {\\n    var out = new BN(null);\\n    out.words = new Array(this.length + num.length);\\n    return jumboMulTo(this, num, out);\\n  };\\n\\n  // In-place Multiplication\\n  BN.prototype.imul = function imul (num) {\\n    return this.clone().mulTo(num, this);\\n  };\\n\\n  BN.prototype.imuln = function imuln (num) {\\n    var isNegNum = num < 0;\\n    if (isNegNum) num = -num;\\n\\n    assert(typeof num === 'number');\\n    assert(num < 0x4000000);\\n\\n    // Carry\\n    var carry = 0;\\n    for (var i = 0; i < this.length; i++) {\\n      var w = (this.words[i] | 0) * num;\\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\\n      carry >>= 26;\\n      carry += (w / 0x4000000) | 0;\\n      // NOTE: lo is 27bit maximum\\n      carry += lo >>> 26;\\n      this.words[i] = lo & 0x3ffffff;\\n    }\\n\\n    if (carry !== 0) {\\n      this.words[i] = carry;\\n      this.length++;\\n    }\\n\\n    return isNegNum ? this.ineg() : this;\\n  };\\n\\n  BN.prototype.muln = function muln (num) {\\n    return this.clone().imuln(num);\\n  };\\n\\n  // `this` * `this`\\n  BN.prototype.sqr = function sqr () {\\n    return this.mul(this);\\n  };\\n\\n  // `this` * `this` in-place\\n  BN.prototype.isqr = function isqr () {\\n    return this.imul(this.clone());\\n  };\\n\\n  // Math.pow(`this`, `num`)\\n  BN.prototype.pow = function pow (num) {\\n    var w = toBitArray(num);\\n    if (w.length === 0) return new BN(1);\\n\\n    // Skip leading zeroes\\n    var res = this;\\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\\n      if (w[i] !== 0) break;\\n    }\\n\\n    if (++i < w.length) {\\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\\n        if (w[i] === 0) continue;\\n\\n        res = res.mul(q);\\n      }\\n    }\\n\\n    return res;\\n  };\\n\\n  // Shift-left in-place\\n  BN.prototype.iushln = function iushln (bits) {\\n    assert(typeof bits === 'number' && bits >= 0);\\n    var r = bits % 26;\\n    var s = (bits - r) / 26;\\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\\n    var i;\\n\\n    if (r !== 0) {\\n      var carry = 0;\\n\\n      for (i = 0; i < this.length; i++) {\\n        var newCarry = this.words[i] & carryMask;\\n        var c = ((this.words[i] | 0) - newCarry) << r;\\n        this.words[i] = c | carry;\\n        carry = newCarry >>> (26 - r);\\n      }\\n\\n      if (carry) {\\n        this.words[i] = carry;\\n        this.length++;\\n      }\\n    }\\n\\n    if (s !== 0) {\\n      for (i = this.length - 1; i >= 0; i--) {\\n        this.words[i + s] = this.words[i];\\n      }\\n\\n      for (i = 0; i < s; i++) {\\n        this.words[i] = 0;\\n      }\\n\\n      this.length += s;\\n    }\\n\\n    return this._strip();\\n  };\\n\\n  BN.prototype.ishln = function ishln (bits) {\\n    // TODO(indutny): implement me\\n    assert(this.negative === 0);\\n    return this.iushln(bits);\\n  };\\n\\n  // Shift-right in-place\\n  // NOTE: `hint` is a lowest bit before trailing zeroes\\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\\n    assert(typeof bits === 'number' && bits >= 0);\\n    var h;\\n    if (hint) {\\n      h = (hint - (hint % 26)) / 26;\\n    } else {\\n      h = 0;\\n    }\\n\\n    var r = bits % 26;\\n    var s = Math.min((bits - r) / 26, this.length);\\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\\n    var maskedWords = extended;\\n\\n    h -= s;\\n    h = Math.max(0, h);\\n\\n    // Extended mode, copy masked part\\n    if (maskedWords) {\\n      for (var i = 0; i < s; i++) {\\n        maskedWords.words[i] = this.words[i];\\n      }\\n      maskedWords.length = s;\\n    }\\n\\n    if (s === 0) {\\n      // No-op, we should not move anything at all\\n    } else if (this.length > s) {\\n      this.length -= s;\\n      for (i = 0; i < this.length; i++) {\\n        this.words[i] = this.words[i + s];\\n      }\\n    } else {\\n      this.words[0] = 0;\\n      this.length = 1;\\n    }\\n\\n    var carry = 0;\\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\\n      var word = this.words[i] | 0;\\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\\n      carry = word & mask;\\n    }\\n\\n    // Push carried bits as a mask\\n    if (maskedWords && carry !== 0) {\\n      maskedWords.words[maskedWords.length++] = carry;\\n    }\\n\\n    if (this.length === 0) {\\n      this.words[0] = 0;\\n      this.length = 1;\\n    }\\n\\n    return this._strip();\\n  };\\n\\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\\n    // TODO(indutny): implement me\\n    assert(this.negative === 0);\\n    return this.iushrn(bits, hint, extended);\\n  };\\n\\n  // Shift-left\\n  BN.prototype.shln = function shln (bits) {\\n    return this.clone().ishln(bits);\\n  };\\n\\n  BN.prototype.ushln = function ushln (bits) {\\n    return this.clone().iushln(bits);\\n  };\\n\\n  // Shift-right\\n  BN.prototype.shrn = function shrn (bits) {\\n    return this.clone().ishrn(bits);\\n  };\\n\\n  BN.prototype.ushrn = function ushrn (bits) {\\n    return this.clone().iushrn(bits);\\n  };\\n\\n  // Test if n bit is set\\n  BN.prototype.testn = function testn (bit) {\\n    assert(typeof bit === 'number' && bit >= 0);\\n    var r = bit % 26;\\n    var s = (bit - r) / 26;\\n    var q = 1 << r;\\n\\n    // Fast case: bit is much higher than all existing words\\n    if (this.length <= s) return false;\\n\\n    // Check bit and return\\n    var w = this.words[s];\\n\\n    return !!(w & q);\\n  };\\n\\n  // Return only lowers bits of number (in-place)\\n  BN.prototype.imaskn = function imaskn (bits) {\\n    assert(typeof bits === 'number' && bits >= 0);\\n    var r = bits % 26;\\n    var s = (bits - r) / 26;\\n\\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\\n\\n    if (this.length <= s) {\\n      return this;\\n    }\\n\\n    if (r !== 0) {\\n      s++;\\n    }\\n    this.length = Math.min(s, this.length);\\n\\n    if (r !== 0) {\\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\\n      this.words[this.length - 1] &= mask;\\n    }\\n\\n    return this._strip();\\n  };\\n\\n  // Return only lowers bits of number\\n  BN.prototype.maskn = function maskn (bits) {\\n    return this.clone().imaskn(bits);\\n  };\\n\\n  // Add plain number `num` to `this`\\n  BN.prototype.iaddn = function iaddn (num) {\\n    assert(typeof num === 'number');\\n    assert(num < 0x4000000);\\n    if (num < 0) return this.isubn(-num);\\n\\n    // Possible sign change\\n    if (this.negative !== 0) {\\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\\n        this.words[0] = num - (this.words[0] | 0);\\n        this.negative = 0;\\n        return this;\\n      }\\n\\n      this.negative = 0;\\n      this.isubn(num);\\n      this.negative = 1;\\n      return this;\\n    }\\n\\n    // Add without checks\\n    return this._iaddn(num);\\n  };\\n\\n  BN.prototype._iaddn = function _iaddn (num) {\\n    this.words[0] += num;\\n\\n    // Carry\\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\\n      this.words[i] -= 0x4000000;\\n      if (i === this.length - 1) {\\n        this.words[i + 1] = 1;\\n      } else {\\n        this.words[i + 1]++;\\n      }\\n    }\\n    this.length = Math.max(this.length, i + 1);\\n\\n    return this;\\n  };\\n\\n  // Subtract plain number `num` from `this`\\n  BN.prototype.isubn = function isubn (num) {\\n    assert(typeof num === 'number');\\n    assert(num < 0x4000000);\\n    if (num < 0) return this.iaddn(-num);\\n\\n    if (this.negative !== 0) {\\n      this.negative = 0;\\n      this.iaddn(num);\\n      this.negative = 1;\\n      return this;\\n    }\\n\\n    this.words[0] -= num;\\n\\n    if (this.length === 1 && this.words[0] < 0) {\\n      this.words[0] = -this.words[0];\\n      this.negative = 1;\\n    } else {\\n      // Carry\\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\\n        this.words[i] += 0x4000000;\\n        this.words[i + 1] -= 1;\\n      }\\n    }\\n\\n    return this._strip();\\n  };\\n\\n  BN.prototype.addn = function addn (num) {\\n    return this.clone().iaddn(num);\\n  };\\n\\n  BN.prototype.subn = function subn (num) {\\n    return this.clone().isubn(num);\\n  };\\n\\n  BN.prototype.iabs = function iabs () {\\n    this.negative = 0;\\n\\n    return this;\\n  };\\n\\n  BN.prototype.abs = function abs () {\\n    return this.clone().iabs();\\n  };\\n\\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\\n    var len = num.length + shift;\\n    var i;\\n\\n    this._expand(len);\\n\\n    var w;\\n    var carry = 0;\\n    for (i = 0; i < num.length; i++) {\\n      w = (this.words[i + shift] | 0) + carry;\\n      var right = (num.words[i] | 0) * mul;\\n      w -= right & 0x3ffffff;\\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\\n      this.words[i + shift] = w & 0x3ffffff;\\n    }\\n    for (; i < this.length - shift; i++) {\\n      w = (this.words[i + shift] | 0) + carry;\\n      carry = w >> 26;\\n      this.words[i + shift] = w & 0x3ffffff;\\n    }\\n\\n    if (carry === 0) return this._strip();\\n\\n    // Subtraction overflow\\n    assert(carry === -1);\\n    carry = 0;\\n    for (i = 0; i < this.length; i++) {\\n      w = -(this.words[i] | 0) + carry;\\n      carry = w >> 26;\\n      this.words[i] = w & 0x3ffffff;\\n    }\\n    this.negative = 1;\\n\\n    return this._strip();\\n  };\\n\\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\\n    var shift = this.length - num.length;\\n\\n    var a = this.clone();\\n    var b = num;\\n\\n    // Normalize\\n    var bhi = b.words[b.length - 1] | 0;\\n    var bhiBits = this._countBits(bhi);\\n    shift = 26 - bhiBits;\\n    if (shift !== 0) {\\n      b = b.ushln(shift);\\n      a.iushln(shift);\\n      bhi = b.words[b.length - 1] | 0;\\n    }\\n\\n    // Initialize quotient\\n    var m = a.length - b.length;\\n    var q;\\n\\n    if (mode !== 'mod') {\\n      q = new BN(null);\\n      q.length = m + 1;\\n      q.words = new Array(q.length);\\n      for (var i = 0; i < q.length; i++) {\\n        q.words[i] = 0;\\n      }\\n    }\\n\\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\\n    if (diff.negative === 0) {\\n      a = diff;\\n      if (q) {\\n        q.words[m] = 1;\\n      }\\n    }\\n\\n    for (var j = m - 1; j >= 0; j--) {\\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\\n        (a.words[b.length + j - 1] | 0);\\n\\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\\n      // (0x7ffffff)\\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\\n\\n      a._ishlnsubmul(b, qj, j);\\n      while (a.negative !== 0) {\\n        qj--;\\n        a.negative = 0;\\n        a._ishlnsubmul(b, 1, j);\\n        if (!a.isZero()) {\\n          a.negative ^= 1;\\n        }\\n      }\\n      if (q) {\\n        q.words[j] = qj;\\n      }\\n    }\\n    if (q) {\\n      q._strip();\\n    }\\n    a._strip();\\n\\n    // Denormalize\\n    if (mode !== 'div' && shift !== 0) {\\n      a.iushrn(shift);\\n    }\\n\\n    return {\\n      div: q || null,\\n      mod: a\\n    };\\n  };\\n\\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\\n  //       to `div` to request div only, or be absent to\\n  //       request both div & mod\\n  //       2) `positive` is true if unsigned mod is requested\\n  BN.prototype.divmod = function divmod (num, mode, positive) {\\n    assert(!num.isZero());\\n\\n    if (this.isZero()) {\\n      return {\\n        div: new BN(0),\\n        mod: new BN(0)\\n      };\\n    }\\n\\n    var div, mod, res;\\n    if (this.negative !== 0 && num.negative === 0) {\\n      res = this.neg().divmod(num, mode);\\n\\n      if (mode !== 'mod') {\\n        div = res.div.neg();\\n      }\\n\\n      if (mode !== 'div') {\\n        mod = res.mod.neg();\\n        if (positive && mod.negative !== 0) {\\n          mod.iadd(num);\\n        }\\n      }\\n\\n      return {\\n        div: div,\\n        mod: mod\\n      };\\n    }\\n\\n    if (this.negative === 0 && num.negative !== 0) {\\n      res = this.divmod(num.neg(), mode);\\n\\n      if (mode !== 'mod') {\\n        div = res.div.neg();\\n      }\\n\\n      return {\\n        div: div,\\n        mod: res.mod\\n      };\\n    }\\n\\n    if ((this.negative & num.negative) !== 0) {\\n      res = this.neg().divmod(num.neg(), mode);\\n\\n      if (mode !== 'div') {\\n        mod = res.mod.neg();\\n        if (positive && mod.negative !== 0) {\\n          mod.isub(num);\\n        }\\n      }\\n\\n      return {\\n        div: res.div,\\n        mod: mod\\n      };\\n    }\\n\\n    // Both numbers are positive at this point\\n\\n    // Strip both numbers to approximate shift value\\n    if (num.length > this.length || this.cmp(num) < 0) {\\n      return {\\n        div: new BN(0),\\n        mod: this\\n      };\\n    }\\n\\n    // Very short reduction\\n    if (num.length === 1) {\\n      if (mode === 'div') {\\n        return {\\n          div: this.divn(num.words[0]),\\n          mod: null\\n        };\\n      }\\n\\n      if (mode === 'mod') {\\n        return {\\n          div: null,\\n          mod: new BN(this.modrn(num.words[0]))\\n        };\\n      }\\n\\n      return {\\n        div: this.divn(num.words[0]),\\n        mod: new BN(this.modrn(num.words[0]))\\n      };\\n    }\\n\\n    return this._wordDiv(num, mode);\\n  };\\n\\n  // Find `this` / `num`\\n  BN.prototype.div = function div (num) {\\n    return this.divmod(num, 'div', false).div;\\n  };\\n\\n  // Find `this` % `num`\\n  BN.prototype.mod = function mod (num) {\\n    return this.divmod(num, 'mod', false).mod;\\n  };\\n\\n  BN.prototype.umod = function umod (num) {\\n    return this.divmod(num, 'mod', true).mod;\\n  };\\n\\n  // Find Round(`this` / `num`)\\n  BN.prototype.divRound = function divRound (num) {\\n    var dm = this.divmod(num);\\n\\n    // Fast case - exact division\\n    if (dm.mod.isZero()) return dm.div;\\n\\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\\n\\n    var half = num.ushrn(1);\\n    var r2 = num.andln(1);\\n    var cmp = mod.cmp(half);\\n\\n    // Round down\\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\\n\\n    // Round up\\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\\n  };\\n\\n  BN.prototype.modrn = function modrn (num) {\\n    var isNegNum = num < 0;\\n    if (isNegNum) num = -num;\\n\\n    assert(num <= 0x3ffffff);\\n    var p = (1 << 26) % num;\\n\\n    var acc = 0;\\n    for (var i = this.length - 1; i >= 0; i--) {\\n      acc = (p * acc + (this.words[i] | 0)) % num;\\n    }\\n\\n    return isNegNum ? -acc : acc;\\n  };\\n\\n  // WARNING: DEPRECATED\\n  BN.prototype.modn = function modn (num) {\\n    return this.modrn(num);\\n  };\\n\\n  // In-place division by number\\n  BN.prototype.idivn = function idivn (num) {\\n    var isNegNum = num < 0;\\n    if (isNegNum) num = -num;\\n\\n    assert(num <= 0x3ffffff);\\n\\n    var carry = 0;\\n    for (var i = this.length - 1; i >= 0; i--) {\\n      var w = (this.words[i] | 0) + carry * 0x4000000;\\n      this.words[i] = (w / num) | 0;\\n      carry = w % num;\\n    }\\n\\n    this._strip();\\n    return isNegNum ? this.ineg() : this;\\n  };\\n\\n  BN.prototype.divn = function divn (num) {\\n    return this.clone().idivn(num);\\n  };\\n\\n  BN.prototype.egcd = function egcd (p) {\\n    assert(p.negative === 0);\\n    assert(!p.isZero());\\n\\n    var x = this;\\n    var y = p.clone();\\n\\n    if (x.negative !== 0) {\\n      x = x.umod(p);\\n    } else {\\n      x = x.clone();\\n    }\\n\\n    // A * x + B * y = x\\n    var A = new BN(1);\\n    var B = new BN(0);\\n\\n    // C * x + D * y = y\\n    var C = new BN(0);\\n    var D = new BN(1);\\n\\n    var g = 0;\\n\\n    while (x.isEven() && y.isEven()) {\\n      x.iushrn(1);\\n      y.iushrn(1);\\n      ++g;\\n    }\\n\\n    var yp = y.clone();\\n    var xp = x.clone();\\n\\n    while (!x.isZero()) {\\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\\n      if (i > 0) {\\n        x.iushrn(i);\\n        while (i-- > 0) {\\n          if (A.isOdd() || B.isOdd()) {\\n            A.iadd(yp);\\n            B.isub(xp);\\n          }\\n\\n          A.iushrn(1);\\n          B.iushrn(1);\\n        }\\n      }\\n\\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\\n      if (j > 0) {\\n        y.iushrn(j);\\n        while (j-- > 0) {\\n          if (C.isOdd() || D.isOdd()) {\\n            C.iadd(yp);\\n            D.isub(xp);\\n          }\\n\\n          C.iushrn(1);\\n          D.iushrn(1);\\n        }\\n      }\\n\\n      if (x.cmp(y) >= 0) {\\n        x.isub(y);\\n        A.isub(C);\\n        B.isub(D);\\n      } else {\\n        y.isub(x);\\n        C.isub(A);\\n        D.isub(B);\\n      }\\n    }\\n\\n    return {\\n      a: C,\\n      b: D,\\n      gcd: y.iushln(g)\\n    };\\n  };\\n\\n  // This is reduced incarnation of the binary EEA\\n  // above, designated to invert members of the\\n  // _prime_ fields F(p) at a maximal speed\\n  BN.prototype._invmp = function _invmp (p) {\\n    assert(p.negative === 0);\\n    assert(!p.isZero());\\n\\n    var a = this;\\n    var b = p.clone();\\n\\n    if (a.negative !== 0) {\\n      a = a.umod(p);\\n    } else {\\n      a = a.clone();\\n    }\\n\\n    var x1 = new BN(1);\\n    var x2 = new BN(0);\\n\\n    var delta = b.clone();\\n\\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\\n      if (i > 0) {\\n        a.iushrn(i);\\n        while (i-- > 0) {\\n          if (x1.isOdd()) {\\n            x1.iadd(delta);\\n          }\\n\\n          x1.iushrn(1);\\n        }\\n      }\\n\\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\\n      if (j > 0) {\\n        b.iushrn(j);\\n        while (j-- > 0) {\\n          if (x2.isOdd()) {\\n            x2.iadd(delta);\\n          }\\n\\n          x2.iushrn(1);\\n        }\\n      }\\n\\n      if (a.cmp(b) >= 0) {\\n        a.isub(b);\\n        x1.isub(x2);\\n      } else {\\n        b.isub(a);\\n        x2.isub(x1);\\n      }\\n    }\\n\\n    var res;\\n    if (a.cmpn(1) === 0) {\\n      res = x1;\\n    } else {\\n      res = x2;\\n    }\\n\\n    if (res.cmpn(0) < 0) {\\n      res.iadd(p);\\n    }\\n\\n    return res;\\n  };\\n\\n  BN.prototype.gcd = function gcd (num) {\\n    if (this.isZero()) return num.abs();\\n    if (num.isZero()) return this.abs();\\n\\n    var a = this.clone();\\n    var b = num.clone();\\n    a.negative = 0;\\n    b.negative = 0;\\n\\n    // Remove common factor of two\\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\\n      a.iushrn(1);\\n      b.iushrn(1);\\n    }\\n\\n    do {\\n      while (a.isEven()) {\\n        a.iushrn(1);\\n      }\\n      while (b.isEven()) {\\n        b.iushrn(1);\\n      }\\n\\n      var r = a.cmp(b);\\n      if (r < 0) {\\n        // Swap `a` and `b` to make `a` always bigger than `b`\\n        var t = a;\\n        a = b;\\n        b = t;\\n      } else if (r === 0 || b.cmpn(1) === 0) {\\n        break;\\n      }\\n\\n      a.isub(b);\\n    } while (true);\\n\\n    return b.iushln(shift);\\n  };\\n\\n  // Invert number in the field F(num)\\n  BN.prototype.invm = function invm (num) {\\n    return this.egcd(num).a.umod(num);\\n  };\\n\\n  BN.prototype.isEven = function isEven () {\\n    return (this.words[0] & 1) === 0;\\n  };\\n\\n  BN.prototype.isOdd = function isOdd () {\\n    return (this.words[0] & 1) === 1;\\n  };\\n\\n  // And first word and num\\n  BN.prototype.andln = function andln (num) {\\n    return this.words[0] & num;\\n  };\\n\\n  // Increment at the bit position in-line\\n  BN.prototype.bincn = function bincn (bit) {\\n    assert(typeof bit === 'number');\\n    var r = bit % 26;\\n    var s = (bit - r) / 26;\\n    var q = 1 << r;\\n\\n    // Fast case: bit is much higher than all existing words\\n    if (this.length <= s) {\\n      this._expand(s + 1);\\n      this.words[s] |= q;\\n      return this;\\n    }\\n\\n    // Add bit and propagate, if needed\\n    var carry = q;\\n    for (var i = s; carry !== 0 && i < this.length; i++) {\\n      var w = this.words[i] | 0;\\n      w += carry;\\n      carry = w >>> 26;\\n      w &= 0x3ffffff;\\n      this.words[i] = w;\\n    }\\n    if (carry !== 0) {\\n      this.words[i] = carry;\\n      this.length++;\\n    }\\n    return this;\\n  };\\n\\n  BN.prototype.isZero = function isZero () {\\n    return this.length === 1 && this.words[0] === 0;\\n  };\\n\\n  BN.prototype.cmpn = function cmpn (num) {\\n    var negative = num < 0;\\n\\n    if (this.negative !== 0 && !negative) return -1;\\n    if (this.negative === 0 && negative) return 1;\\n\\n    this._strip();\\n\\n    var res;\\n    if (this.length > 1) {\\n      res = 1;\\n    } else {\\n      if (negative) {\\n        num = -num;\\n      }\\n\\n      assert(num <= 0x3ffffff, 'Number is too big');\\n\\n      var w = this.words[0] | 0;\\n      res = w === num ? 0 : w < num ? -1 : 1;\\n    }\\n    if (this.negative !== 0) return -res | 0;\\n    return res;\\n  };\\n\\n  // Compare two numbers and return:\\n  // 1 - if `this` > `num`\\n  // 0 - if `this` == `num`\\n  // -1 - if `this` < `num`\\n  BN.prototype.cmp = function cmp (num) {\\n    if (this.negative !== 0 && num.negative === 0) return -1;\\n    if (this.negative === 0 && num.negative !== 0) return 1;\\n\\n    var res = this.ucmp(num);\\n    if (this.negative !== 0) return -res | 0;\\n    return res;\\n  };\\n\\n  // Unsigned comparison\\n  BN.prototype.ucmp = function ucmp (num) {\\n    // At this point both numbers have the same sign\\n    if (this.length > num.length) return 1;\\n    if (this.length < num.length) return -1;\\n\\n    var res = 0;\\n    for (var i = this.length - 1; i >= 0; i--) {\\n      var a = this.words[i] | 0;\\n      var b = num.words[i] | 0;\\n\\n      if (a === b) continue;\\n      if (a < b) {\\n        res = -1;\\n      } else if (a > b) {\\n        res = 1;\\n      }\\n      break;\\n    }\\n    return res;\\n  };\\n\\n  BN.prototype.gtn = function gtn (num) {\\n    return this.cmpn(num) === 1;\\n  };\\n\\n  BN.prototype.gt = function gt (num) {\\n    return this.cmp(num) === 1;\\n  };\\n\\n  BN.prototype.gten = function gten (num) {\\n    return this.cmpn(num) >= 0;\\n  };\\n\\n  BN.prototype.gte = function gte (num) {\\n    return this.cmp(num) >= 0;\\n  };\\n\\n  BN.prototype.ltn = function ltn (num) {\\n    return this.cmpn(num) === -1;\\n  };\\n\\n  BN.prototype.lt = function lt (num) {\\n    return this.cmp(num) === -1;\\n  };\\n\\n  BN.prototype.lten = function lten (num) {\\n    return this.cmpn(num) <= 0;\\n  };\\n\\n  BN.prototype.lte = function lte (num) {\\n    return this.cmp(num) <= 0;\\n  };\\n\\n  BN.prototype.eqn = function eqn (num) {\\n    return this.cmpn(num) === 0;\\n  };\\n\\n  BN.prototype.eq = function eq (num) {\\n    return this.cmp(num) === 0;\\n  };\\n\\n  //\\n  // A reduce context, could be using montgomery or something better, depending\\n  // on the `m` itself.\\n  //\\n  BN.red = function red (num) {\\n    return new Red(num);\\n  };\\n\\n  BN.prototype.toRed = function toRed (ctx) {\\n    assert(!this.red, 'Already a number in reduction context');\\n    assert(this.negative === 0, 'red works only with positives');\\n    return ctx.convertTo(this)._forceRed(ctx);\\n  };\\n\\n  BN.prototype.fromRed = function fromRed () {\\n    assert(this.red, 'fromRed works only with numbers in reduction context');\\n    return this.red.convertFrom(this);\\n  };\\n\\n  BN.prototype._forceRed = function _forceRed (ctx) {\\n    this.red = ctx;\\n    return this;\\n  };\\n\\n  BN.prototype.forceRed = function forceRed (ctx) {\\n    assert(!this.red, 'Already a number in reduction context');\\n    return this._forceRed(ctx);\\n  };\\n\\n  BN.prototype.redAdd = function redAdd (num) {\\n    assert(this.red, 'redAdd works only with red numbers');\\n    return this.red.add(this, num);\\n  };\\n\\n  BN.prototype.redIAdd = function redIAdd (num) {\\n    assert(this.red, 'redIAdd works only with red numbers');\\n    return this.red.iadd(this, num);\\n  };\\n\\n  BN.prototype.redSub = function redSub (num) {\\n    assert(this.red, 'redSub works only with red numbers');\\n    return this.red.sub(this, num);\\n  };\\n\\n  BN.prototype.redISub = function redISub (num) {\\n    assert(this.red, 'redISub works only with red numbers');\\n    return this.red.isub(this, num);\\n  };\\n\\n  BN.prototype.redShl = function redShl (num) {\\n    assert(this.red, 'redShl works only with red numbers');\\n    return this.red.shl(this, num);\\n  };\\n\\n  BN.prototype.redMul = function redMul (num) {\\n    assert(this.red, 'redMul works only with red numbers');\\n    this.red._verify2(this, num);\\n    return this.red.mul(this, num);\\n  };\\n\\n  BN.prototype.redIMul = function redIMul (num) {\\n    assert(this.red, 'redMul works only with red numbers');\\n    this.red._verify2(this, num);\\n    return this.red.imul(this, num);\\n  };\\n\\n  BN.prototype.redSqr = function redSqr () {\\n    assert(this.red, 'redSqr works only with red numbers');\\n    this.red._verify1(this);\\n    return this.red.sqr(this);\\n  };\\n\\n  BN.prototype.redISqr = function redISqr () {\\n    assert(this.red, 'redISqr works only with red numbers');\\n    this.red._verify1(this);\\n    return this.red.isqr(this);\\n  };\\n\\n  // Square root over p\\n  BN.prototype.redSqrt = function redSqrt () {\\n    assert(this.red, 'redSqrt works only with red numbers');\\n    this.red._verify1(this);\\n    return this.red.sqrt(this);\\n  };\\n\\n  BN.prototype.redInvm = function redInvm () {\\n    assert(this.red, 'redInvm works only with red numbers');\\n    this.red._verify1(this);\\n    return this.red.invm(this);\\n  };\\n\\n  // Return negative clone of `this` % `red modulo`\\n  BN.prototype.redNeg = function redNeg () {\\n    assert(this.red, 'redNeg works only with red numbers');\\n    this.red._verify1(this);\\n    return this.red.neg(this);\\n  };\\n\\n  BN.prototype.redPow = function redPow (num) {\\n    assert(this.red && !num.red, 'redPow(normalNum)');\\n    this.red._verify1(this);\\n    return this.red.pow(this, num);\\n  };\\n\\n  // Prime numbers with efficient reduction\\n  var primes = {\\n    k256: null,\\n    p224: null,\\n    p192: null,\\n    p25519: null\\n  };\\n\\n  // Pseudo-Mersenne prime\\n  function MPrime (name, p) {\\n    // P = 2 ^ N - K\\n    this.name = name;\\n    this.p = new BN(p, 16);\\n    this.n = this.p.bitLength();\\n    this.k = new BN(1).iushln(this.n).isub(this.p);\\n\\n    this.tmp = this._tmp();\\n  }\\n\\n  MPrime.prototype._tmp = function _tmp () {\\n    var tmp = new BN(null);\\n    tmp.words = new Array(Math.ceil(this.n / 13));\\n    return tmp;\\n  };\\n\\n  MPrime.prototype.ireduce = function ireduce (num) {\\n    // Assumes that `num` is less than `P^2`\\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\\n    var r = num;\\n    var rlen;\\n\\n    do {\\n      this.split(r, this.tmp);\\n      r = this.imulK(r);\\n      r = r.iadd(this.tmp);\\n      rlen = r.bitLength();\\n    } while (rlen > this.n);\\n\\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\\n    if (cmp === 0) {\\n      r.words[0] = 0;\\n      r.length = 1;\\n    } else if (cmp > 0) {\\n      r.isub(this.p);\\n    } else {\\n      if (r.strip !== undefined) {\\n        // r is a BN v4 instance\\n        r.strip();\\n      } else {\\n        // r is a BN v5 instance\\n        r._strip();\\n      }\\n    }\\n\\n    return r;\\n  };\\n\\n  MPrime.prototype.split = function split (input, out) {\\n    input.iushrn(this.n, 0, out);\\n  };\\n\\n  MPrime.prototype.imulK = function imulK (num) {\\n    return num.imul(this.k);\\n  };\\n\\n  function K256 () {\\n    MPrime.call(\\n      this,\\n      'k256',\\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\\n  }\\n  inherits(K256, MPrime);\\n\\n  K256.prototype.split = function split (input, output) {\\n    // 256 = 9 * 26 + 22\\n    var mask = 0x3fffff;\\n\\n    var outLen = Math.min(input.length, 9);\\n    for (var i = 0; i < outLen; i++) {\\n      output.words[i] = input.words[i];\\n    }\\n    output.length = outLen;\\n\\n    if (input.length <= 9) {\\n      input.words[0] = 0;\\n      input.length = 1;\\n      return;\\n    }\\n\\n    // Shift by 9 limbs\\n    var prev = input.words[9];\\n    output.words[output.length++] = prev & mask;\\n\\n    for (i = 10; i < input.length; i++) {\\n      var next = input.words[i] | 0;\\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\\n      prev = next;\\n    }\\n    prev >>>= 22;\\n    input.words[i - 10] = prev;\\n    if (prev === 0 && input.length > 10) {\\n      input.length -= 10;\\n    } else {\\n      input.length -= 9;\\n    }\\n  };\\n\\n  K256.prototype.imulK = function imulK (num) {\\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\\n    num.words[num.length] = 0;\\n    num.words[num.length + 1] = 0;\\n    num.length += 2;\\n\\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\\n    var lo = 0;\\n    for (var i = 0; i < num.length; i++) {\\n      var w = num.words[i] | 0;\\n      lo += w * 0x3d1;\\n      num.words[i] = lo & 0x3ffffff;\\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\\n    }\\n\\n    // Fast length reduction\\n    if (num.words[num.length - 1] === 0) {\\n      num.length--;\\n      if (num.words[num.length - 1] === 0) {\\n        num.length--;\\n      }\\n    }\\n    return num;\\n  };\\n\\n  function P224 () {\\n    MPrime.call(\\n      this,\\n      'p224',\\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\\n  }\\n  inherits(P224, MPrime);\\n\\n  function P192 () {\\n    MPrime.call(\\n      this,\\n      'p192',\\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\\n  }\\n  inherits(P192, MPrime);\\n\\n  function P25519 () {\\n    // 2 ^ 255 - 19\\n    MPrime.call(\\n      this,\\n      '25519',\\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\\n  }\\n  inherits(P25519, MPrime);\\n\\n  P25519.prototype.imulK = function imulK (num) {\\n    // K = 0x13\\n    var carry = 0;\\n    for (var i = 0; i < num.length; i++) {\\n      var hi = (num.words[i] | 0) * 0x13 + carry;\\n      var lo = hi & 0x3ffffff;\\n      hi >>>= 26;\\n\\n      num.words[i] = lo;\\n      carry = hi;\\n    }\\n    if (carry !== 0) {\\n      num.words[num.length++] = carry;\\n    }\\n    return num;\\n  };\\n\\n  // Exported mostly for testing purposes, use plain name instead\\n  BN._prime = function prime (name) {\\n    // Cached version of prime\\n    if (primes[name]) return primes[name];\\n\\n    var prime;\\n    if (name === 'k256') {\\n      prime = new K256();\\n    } else if (name === 'p224') {\\n      prime = new P224();\\n    } else if (name === 'p192') {\\n      prime = new P192();\\n    } else if (name === 'p25519') {\\n      prime = new P25519();\\n    } else {\\n      throw new Error('Unknown prime ' + name);\\n    }\\n    primes[name] = prime;\\n\\n    return prime;\\n  };\\n\\n  //\\n  // Base reduction engine\\n  //\\n  function Red (m) {\\n    if (typeof m === 'string') {\\n      var prime = BN._prime(m);\\n      this.m = prime.p;\\n      this.prime = prime;\\n    } else {\\n      assert(m.gtn(1), 'modulus must be greater than 1');\\n      this.m = m;\\n      this.prime = null;\\n    }\\n  }\\n\\n  Red.prototype._verify1 = function _verify1 (a) {\\n    assert(a.negative === 0, 'red works only with positives');\\n    assert(a.red, 'red works only with red numbers');\\n  };\\n\\n  Red.prototype._verify2 = function _verify2 (a, b) {\\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\\n    assert(a.red && a.red === b.red,\\n      'red works only with red numbers');\\n  };\\n\\n  Red.prototype.imod = function imod (a) {\\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\\n\\n    move(a, a.umod(this.m)._forceRed(this));\\n    return a;\\n  };\\n\\n  Red.prototype.neg = function neg (a) {\\n    if (a.isZero()) {\\n      return a.clone();\\n    }\\n\\n    return this.m.sub(a)._forceRed(this);\\n  };\\n\\n  Red.prototype.add = function add (a, b) {\\n    this._verify2(a, b);\\n\\n    var res = a.add(b);\\n    if (res.cmp(this.m) >= 0) {\\n      res.isub(this.m);\\n    }\\n    return res._forceRed(this);\\n  };\\n\\n  Red.prototype.iadd = function iadd (a, b) {\\n    this._verify2(a, b);\\n\\n    var res = a.iadd(b);\\n    if (res.cmp(this.m) >= 0) {\\n      res.isub(this.m);\\n    }\\n    return res;\\n  };\\n\\n  Red.prototype.sub = function sub (a, b) {\\n    this._verify2(a, b);\\n\\n    var res = a.sub(b);\\n    if (res.cmpn(0) < 0) {\\n      res.iadd(this.m);\\n    }\\n    return res._forceRed(this);\\n  };\\n\\n  Red.prototype.isub = function isub (a, b) {\\n    this._verify2(a, b);\\n\\n    var res = a.isub(b);\\n    if (res.cmpn(0) < 0) {\\n      res.iadd(this.m);\\n    }\\n    return res;\\n  };\\n\\n  Red.prototype.shl = function shl (a, num) {\\n    this._verify1(a);\\n    return this.imod(a.ushln(num));\\n  };\\n\\n  Red.prototype.imul = function imul (a, b) {\\n    this._verify2(a, b);\\n    return this.imod(a.imul(b));\\n  };\\n\\n  Red.prototype.mul = function mul (a, b) {\\n    this._verify2(a, b);\\n    return this.imod(a.mul(b));\\n  };\\n\\n  Red.prototype.isqr = function isqr (a) {\\n    return this.imul(a, a.clone());\\n  };\\n\\n  Red.prototype.sqr = function sqr (a) {\\n    return this.mul(a, a);\\n  };\\n\\n  Red.prototype.sqrt = function sqrt (a) {\\n    if (a.isZero()) return a.clone();\\n\\n    var mod3 = this.m.andln(3);\\n    assert(mod3 % 2 === 1);\\n\\n    // Fast case\\n    if (mod3 === 3) {\\n      var pow = this.m.add(new BN(1)).iushrn(2);\\n      return this.pow(a, pow);\\n    }\\n\\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\\n    //\\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\\n    var q = this.m.subn(1);\\n    var s = 0;\\n    while (!q.isZero() && q.andln(1) === 0) {\\n      s++;\\n      q.iushrn(1);\\n    }\\n    assert(!q.isZero());\\n\\n    var one = new BN(1).toRed(this);\\n    var nOne = one.redNeg();\\n\\n    // Find quadratic non-residue\\n    // NOTE: Max is such because of generalized Riemann hypothesis.\\n    var lpow = this.m.subn(1).iushrn(1);\\n    var z = this.m.bitLength();\\n    z = new BN(2 * z * z).toRed(this);\\n\\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\\n      z.redIAdd(nOne);\\n    }\\n\\n    var c = this.pow(z, q);\\n    var r = this.pow(a, q.addn(1).iushrn(1));\\n    var t = this.pow(a, q);\\n    var m = s;\\n    while (t.cmp(one) !== 0) {\\n      var tmp = t;\\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\\n        tmp = tmp.redSqr();\\n      }\\n      assert(i < m);\\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\\n\\n      r = r.redMul(b);\\n      c = b.redSqr();\\n      t = t.redMul(c);\\n      m = i;\\n    }\\n\\n    return r;\\n  };\\n\\n  Red.prototype.invm = function invm (a) {\\n    var inv = a._invmp(this.m);\\n    if (inv.negative !== 0) {\\n      inv.negative = 0;\\n      return this.imod(inv).redNeg();\\n    } else {\\n      return this.imod(inv);\\n    }\\n  };\\n\\n  Red.prototype.pow = function pow (a, num) {\\n    if (num.isZero()) return new BN(1).toRed(this);\\n    if (num.cmpn(1) === 0) return a.clone();\\n\\n    var windowSize = 4;\\n    var wnd = new Array(1 << windowSize);\\n    wnd[0] = new BN(1).toRed(this);\\n    wnd[1] = a;\\n    for (var i = 2; i < wnd.length; i++) {\\n      wnd[i] = this.mul(wnd[i - 1], a);\\n    }\\n\\n    var res = wnd[0];\\n    var current = 0;\\n    var currentLen = 0;\\n    var start = num.bitLength() % 26;\\n    if (start === 0) {\\n      start = 26;\\n    }\\n\\n    for (i = num.length - 1; i >= 0; i--) {\\n      var word = num.words[i];\\n      for (var j = start - 1; j >= 0; j--) {\\n        var bit = (word >> j) & 1;\\n        if (res !== wnd[0]) {\\n          res = this.sqr(res);\\n        }\\n\\n        if (bit === 0 && current === 0) {\\n          currentLen = 0;\\n          continue;\\n        }\\n\\n        current <<= 1;\\n        current |= bit;\\n        currentLen++;\\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\\n\\n        res = this.mul(res, wnd[current]);\\n        currentLen = 0;\\n        current = 0;\\n      }\\n      start = 26;\\n    }\\n\\n    return res;\\n  };\\n\\n  Red.prototype.convertTo = function convertTo (num) {\\n    var r = num.umod(this.m);\\n\\n    return r === num ? r.clone() : r;\\n  };\\n\\n  Red.prototype.convertFrom = function convertFrom (num) {\\n    var res = num.clone();\\n    res.red = null;\\n    return res;\\n  };\\n\\n  //\\n  // Montgomery method engine\\n  //\\n\\n  BN.mont = function mont (num) {\\n    return new Mont(num);\\n  };\\n\\n  function Mont (m) {\\n    Red.call(this, m);\\n\\n    this.shift = this.m.bitLength();\\n    if (this.shift % 26 !== 0) {\\n      this.shift += 26 - (this.shift % 26);\\n    }\\n\\n    this.r = new BN(1).iushln(this.shift);\\n    this.r2 = this.imod(this.r.sqr());\\n    this.rinv = this.r._invmp(this.m);\\n\\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\\n    this.minv = this.minv.umod(this.r);\\n    this.minv = this.r.sub(this.minv);\\n  }\\n  inherits(Mont, Red);\\n\\n  Mont.prototype.convertTo = function convertTo (num) {\\n    return this.imod(num.ushln(this.shift));\\n  };\\n\\n  Mont.prototype.convertFrom = function convertFrom (num) {\\n    var r = this.imod(num.mul(this.rinv));\\n    r.red = null;\\n    return r;\\n  };\\n\\n  Mont.prototype.imul = function imul (a, b) {\\n    if (a.isZero() || b.isZero()) {\\n      a.words[0] = 0;\\n      a.length = 1;\\n      return a;\\n    }\\n\\n    var t = a.imul(b);\\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\\n    var u = t.isub(c).iushrn(this.shift);\\n    var res = u;\\n\\n    if (u.cmp(this.m) >= 0) {\\n      res = u.isub(this.m);\\n    } else if (u.cmpn(0) < 0) {\\n      res = u.iadd(this.m);\\n    }\\n\\n    return res._forceRed(this);\\n  };\\n\\n  Mont.prototype.mul = function mul (a, b) {\\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\\n\\n    var t = a.mul(b);\\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\\n    var u = t.isub(c).iushrn(this.shift);\\n    var res = u;\\n    if (u.cmp(this.m) >= 0) {\\n      res = u.isub(this.m);\\n    } else if (u.cmpn(0) < 0) {\\n      res = u.iadd(this.m);\\n    }\\n\\n    return res._forceRed(this);\\n  };\\n\\n  Mont.prototype.invm = function invm (a) {\\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\\n    return res._forceRed(this);\\n  };\\n})(typeof module === 'undefined' || module, this);\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"assert\",\"val\",\"msg\",\"Error\",\"inherits\",\"ctor\",\"superCtor\",\"super_\",\"TempCtor\",\"prototype\",\"constructor\",\"BN\",\"number\",\"base\",\"endian\",\"isBN\",\"negative\",\"words\",\"length\",\"red\",\"_init\",\"parseHex4Bits\",\"string\",\"index\",\"c\",\"charCodeAt\",\"parseHexByte\",\"lowerBound\",\"r\",\"parseBase\",\"str\",\"start\",\"end\",\"mul\",\"len\",\"Math\",\"min\",\"i\",\"b\",\"move\",\"dest\",\"src\",\"inspect\",\"toString\",\"smallMulTo\",\"self\",\"num\",\"out\",\"a\",\"carry\",\"k\",\"ncarry\",\"rword\",\"maxJ\",\"j\",\"max\",\"_strip\",\"bigMulTo\",\"hncarry\",\"lo\",\"MPrime\",\"name\",\"p\",\"n\",\"bitLength\",\"iushln\",\"isub\",\"tmp\",\"_tmp\",\"K256\",\"call\",\"P224\",\"P192\",\"P25519\",\"Red\",\"m\",\"prime\",\"_prime\",\"gtn\",\"Mont\",\"shift\",\"r2\",\"imod\",\"sqr\",\"rinv\",\"_invmp\",\"minv\",\"isubn\",\"div\",\"umod\",\"sub\",\"wordSize\",\"Buffer\",\"window\",\"e\",\"BN.isBN\",\"Array\",\"isArray\",\"BN.max\",\"left\",\"right\",\"cmp\",\"BN.min\",\"BN.prototype._init\",\"_initNumber\",\"_initArray\",\"replace\",\"_parseHex\",\"_parseBase\",\"toArray\",\"BN.prototype._initNumber\",\"BN.prototype._initArray\",\"ceil\",\"off\",\"w\",\"BN.prototype._parseHex\",\"BN.prototype._parseBase\",\"limbLen\",\"limbPow\",\"total\",\"mod\",\"word\",\"imuln\",\"_iaddn\",\"pow\",\"copy\",\"BN.prototype.copy\",\"_move\",\"BN.prototype._move\",\"clone\",\"BN.prototype.clone\",\"_expand\",\"BN.prototype._expand\",\"size\",\"BN.prototype._strip\",\"_normSign\",\"BN.prototype._normSign\",\"Symbol\",\"for\",\"zeros\",\"groupSizes\",\"groupBases\",\"BN.prototype.toString\",\"padding\",\"groupSize\",\"groupBase\",\"isZero\",\"modrn\",\"idivn\",\"toNumber\",\"BN.prototype.toNumber\",\"ret\",\"toJSON\",\"BN.prototype.toJSON\",\"toBuffer\",\"BN.prototype.toBuffer\",\"toArrayLike\",\"BN.prototype.toArray\",\"BN.prototype.toArrayLike\",\"ArrayType\",\"byteLength\",\"reqLength\",\"allocUnsafe\",\"postfix\",\"res\",\"_toArrayLikeLE\",\"BN.prototype._toArrayLikeLE\",\"position\",\"_toArrayLikeBE\",\"BN.prototype._toArrayLikeBE\",\"_countBits\",\"clz32\",\"BN.prototype._countBits\",\"t\",\"_zeroBits\",\"BN.prototype._zeroBits\",\"BN.prototype.bitLength\",\"hi\",\"zeroBits\",\"BN.prototype.zeroBits\",\"BN.prototype.byteLength\",\"toTwos\",\"BN.prototype.toTwos\",\"width\",\"abs\",\"inotn\",\"iaddn\",\"fromTwos\",\"BN.prototype.fromTwos\",\"testn\",\"notn\",\"ineg\",\"isNeg\",\"BN.prototype.isNeg\",\"neg\",\"BN.prototype.neg\",\"BN.prototype.ineg\",\"iuor\",\"BN.prototype.iuor\",\"ior\",\"BN.prototype.ior\",\"or\",\"BN.prototype.or\",\"uor\",\"BN.prototype.uor\",\"iuand\",\"BN.prototype.iuand\",\"iand\",\"BN.prototype.iand\",\"and\",\"BN.prototype.and\",\"uand\",\"BN.prototype.uand\",\"iuxor\",\"BN.prototype.iuxor\",\"ixor\",\"BN.prototype.ixor\",\"xor\",\"BN.prototype.xor\",\"uxor\",\"BN.prototype.uxor\",\"BN.prototype.inotn\",\"bytesNeeded\",\"bitsLeft\",\"BN.prototype.notn\",\"setn\",\"BN.prototype.setn\",\"bit\",\"wbit\",\"iadd\",\"BN.prototype.iadd\",\"add\",\"BN.prototype.add\",\"BN.prototype.isub\",\"BN.prototype.sub\",\"comb10MulTo\",\"o\",\"a0\",\"al0\",\"ah0\",\"a1\",\"al1\",\"ah1\",\"a2\",\"al2\",\"ah2\",\"a3\",\"al3\",\"ah3\",\"a4\",\"al4\",\"ah4\",\"a5\",\"al5\",\"ah5\",\"a6\",\"al6\",\"ah6\",\"a7\",\"al7\",\"ah7\",\"a8\",\"al8\",\"ah8\",\"a9\",\"al9\",\"ah9\",\"b0\",\"bl0\",\"bh0\",\"b1\",\"bl1\",\"bh1\",\"b2\",\"bl2\",\"bh2\",\"b3\",\"bl3\",\"bh3\",\"b4\",\"bl4\",\"bh4\",\"b5\",\"bl5\",\"bh5\",\"b6\",\"bl6\",\"bh6\",\"b7\",\"bl7\",\"bh7\",\"b8\",\"bl8\",\"bh8\",\"b9\",\"bl9\",\"bh9\",\"imul\",\"mid\",\"w0\",\"w1\",\"w2\",\"w3\",\"w4\",\"w5\",\"w6\",\"w7\",\"w8\",\"w9\",\"w10\",\"w11\",\"w12\",\"w13\",\"w14\",\"w15\",\"w16\",\"w17\",\"w18\",\"mulTo\",\"BN.prototype.mulTo\",\"BN.prototype.mul\",\"mulf\",\"BN.prototype.mulf\",\"BN.prototype.imul\",\"BN.prototype.imuln\",\"isNegNum\",\"muln\",\"BN.prototype.muln\",\"BN.prototype.sqr\",\"isqr\",\"BN.prototype.isqr\",\"BN.prototype.pow\",\"q\",\"BN.prototype.iushln\",\"bits\",\"s\",\"carryMask\",\"newCarry\",\"ishln\",\"BN.prototype.ishln\",\"iushrn\",\"BN.prototype.iushrn\",\"hint\",\"extended\",\"mask\",\"h\",\"ishrn\",\"BN.prototype.ishrn\",\"shln\",\"BN.prototype.shln\",\"ushln\",\"BN.prototype.ushln\",\"shrn\",\"BN.prototype.shrn\",\"ushrn\",\"BN.prototype.ushrn\",\"BN.prototype.testn\",\"imaskn\",\"BN.prototype.imaskn\",\"maskn\",\"BN.prototype.maskn\",\"BN.prototype.iaddn\",\"BN.prototype._iaddn\",\"BN.prototype.isubn\",\"addn\",\"BN.prototype.addn\",\"subn\",\"BN.prototype.subn\",\"iabs\",\"BN.prototype.iabs\",\"BN.prototype.abs\",\"_ishlnsubmul\",\"BN.prototype._ishlnsubmul\",\"_wordDiv\",\"BN.prototype._wordDiv\",\"mode\",\"bhi\",\"bhiBits\",\"diff\",\"qj\",\"divmod\",\"BN.prototype.divmod\",\"positive\",\"divn\",\"BN.prototype.div\",\"BN.prototype.mod\",\"BN.prototype.umod\",\"divRound\",\"BN.prototype.divRound\",\"dm\",\"half\",\"andln\",\"BN.prototype.modrn\",\"acc\",\"modn\",\"BN.prototype.modn\",\"BN.prototype.idivn\",\"BN.prototype.divn\",\"egcd\",\"BN.prototype.egcd\",\"x\",\"y\",\"A\",\"B\",\"C\",\"D\",\"g\",\"isEven\",\"yp\",\"xp\",\"im\",\"isOdd\",\"jm\",\"gcd\",\"BN.prototype._invmp\",\"x1\",\"x2\",\"delta\",\"cmpn\",\"BN.prototype.gcd\",\"invm\",\"BN.prototype.invm\",\"BN.prototype.isEven\",\"BN.prototype.isOdd\",\"BN.prototype.andln\",\"bincn\",\"BN.prototype.bincn\",\"BN.prototype.isZero\",\"BN.prototype.cmpn\",\"BN.prototype.cmp\",\"ucmp\",\"BN.prototype.ucmp\",\"BN.prototype.gtn\",\"gt\",\"BN.prototype.gt\",\"gten\",\"BN.prototype.gten\",\"gte\",\"BN.prototype.gte\",\"ltn\",\"BN.prototype.ltn\",\"lt\",\"BN.prototype.lt\",\"lten\",\"BN.prototype.lten\",\"lte\",\"BN.prototype.lte\",\"eqn\",\"BN.prototype.eqn\",\"eq\",\"BN.prototype.eq\",\"BN.red\",\"toRed\",\"BN.prototype.toRed\",\"ctx\",\"convertTo\",\"_forceRed\",\"fromRed\",\"BN.prototype.fromRed\",\"convertFrom\",\"BN.prototype._forceRed\",\"forceRed\",\"BN.prototype.forceRed\",\"redAdd\",\"BN.prototype.redAdd\",\"redIAdd\",\"BN.prototype.redIAdd\",\"redSub\",\"BN.prototype.redSub\",\"redISub\",\"BN.prototype.redISub\",\"redShl\",\"BN.prototype.redShl\",\"shl\",\"redMul\",\"BN.prototype.redMul\",\"_verify2\",\"redIMul\",\"BN.prototype.redIMul\",\"redSqr\",\"BN.prototype.redSqr\",\"_verify1\",\"redISqr\",\"BN.prototype.redISqr\",\"redSqrt\",\"BN.prototype.redSqrt\",\"sqrt\",\"redInvm\",\"BN.prototype.redInvm\",\"redNeg\",\"BN.prototype.redNeg\",\"redPow\",\"BN.prototype.redPow\",\"primes\",\"k256\",\"p224\",\"p192\",\"p25519\",\"MPrime.prototype._tmp\",\"ireduce\",\"MPrime.prototype.ireduce\",\"split\",\"imulK\",\"rlen\",\"undefined\",\"strip\",\"MPrime.prototype.split\",\"input\",\"MPrime.prototype.imulK\",\"K256.prototype.split\",\"output\",\"outLen\",\"prev\",\"next\",\"K256.prototype.imulK\",\"P25519.prototype.imulK\",\"BN._prime\",\"Red.prototype._verify1\",\"Red.prototype._verify2\",\"Red.prototype.imod\",\"Red.prototype.neg\",\"Red.prototype.add\",\"Red.prototype.iadd\",\"Red.prototype.sub\",\"Red.prototype.isub\",\"Red.prototype.shl\",\"Red.prototype.imul\",\"Red.prototype.mul\",\"Red.prototype.isqr\",\"Red.prototype.sqr\",\"Red.prototype.sqrt\",\"mod3\",\"one\",\"nOne\",\"lpow\",\"z\",\"Red.prototype.invm\",\"inv\",\"Red.prototype.pow\",\"wnd\",\"current\",\"currentLen\",\"windowSize\",\"Red.prototype.convertTo\",\"Red.prototype.convertFrom\",\"mont\",\"BN.mont\",\"Mont.prototype.convertTo\",\"Mont.prototype.convertFrom\",\"Mont.prototype.imul\",\"u\",\"Mont.prototype.mul\",\"Mont.prototype.invm\"]\n}\n"]