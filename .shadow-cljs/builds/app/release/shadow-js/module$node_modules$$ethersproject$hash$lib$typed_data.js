["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@ethersproject/hash/lib/typed-data.js"],"~:js","shadow$provide[61]=function(S,A,V,q){function F(N){return function(a){\"string\"!==typeof a&&k.throwArgumentError(\"invalid domain value for \"+JSON.stringify(N),\"domain.\"+N,a);return a}}function G(N){var a=N.match(/^(u?)int(\\d*)$/);if(a){var b=\"\"===a[1],c=parseInt(a[2]||\"256\");(0!==c%8||256<c||a[2]&&a[2]!==String(c))&&k.throwArgumentError(\"invalid numeric width\",\"type\",N);var d=C.mask(b?c-1:c),f=b?d.add(D).mul(E):H;return function(m){var w=p.BigNumber.from(m);(w.lt(f)||w.gt(d))&&k.throwArgumentError(\"value out-of-bounds for \"+\nN,\"value\",m);return(0,n.hexZeroPad)(w.toTwos(256).toHexString(),32)}}if(a=N.match(/^bytes(\\d+)$/)){var g=parseInt(a[1]);(0===g||32<g||a[1]!==String(g))&&k.throwArgumentError(\"invalid bytes width\",\"type\",N);return function(m){(0,n.arrayify)(m).length!==g&&k.throwArgumentError(\"invalid length for \"+N,\"value\",m);m=(0,n.arrayify)(m);var w=m.length%32;m=w?(0,n.hexConcat)([m,B.slice(w)]):(0,n.hexlify)(m);return m}}switch(N){case \"address\":return function(m){return(0,n.hexZeroPad)((0,u.getAddress)(m),32)};\ncase \"bool\":return function(m){return m?I:M};case \"bytes\":return function(m){return(0,l.keccak256)(m)};case \"string\":return function(m){return(0,t.id)(m)}}return null}function r(N,a){return N+\"(\"+a.map(function(b){return b.type+\" \"+b.name}).join(\",\")+\")\"}var y=this&&this.__awaiter||function(N,a,b,c){function d(f){return f instanceof b?f:new b(function(g){g(f)})}return new (b||(b=Promise))(function(f,g){function m(z){try{x(c.next(z))}catch(v){g(v)}}function w(z){try{x(c[\"throw\"](z))}catch(v){g(v)}}\nfunction x(z){z.done?f(z.value):d(z.value).then(m,w)}x((c=c.apply(N,a||[])).next())})},e=this&&this.__generator||function(N,a){function b(x){return function(z){return c([x,z])}}function c(x){if(f)throw new TypeError(\"Generator is already executing.\");for(;d;)try{if(f=1,g&&(m=x[0]&2?g[\"return\"]:x[0]?g[\"throw\"]||((m=g[\"return\"])&&m.call(g),0):g.next)&&!(m=m.call(g,x[1])).done)return m;if(g=0,m)x=[x[0]&2,m.value];switch(x[0]){case 0:case 1:m=x;break;case 4:return d.label++,{value:x[1],done:!1};case 5:d.label++;\ng=x[1];x=[0];continue;case 7:x=d.ops.pop();d.trys.pop();continue;default:if(!(m=d.trys,m=0<m.length&&m[m.length-1])&&(6===x[0]||2===x[0])){d=0;continue}if(3===x[0]&&(!m||x[1]>m[0]&&x[1]<m[3]))d.label=x[1];else if(6===x[0]&&d.label<m[1])d.label=m[1],m=x;else if(m&&d.label<m[2])d.label=m[2],d.ops.push(x);else{m[2]&&d.ops.pop();d.trys.pop();continue}}x=a.call(N,d)}catch(z){x=[6,z],g=0}finally{f=m=0}if(x[0]&5)throw x[1];return{value:x[0]?x[1]:void 0,done:!0}}var d={label:0,sent:function(){if(m[0]&1)throw m[1];\nreturn m[1]},trys:[],ops:[]},f,g,m,w;return w={next:b(0),\"throw\":b(1),\"return\":b(2)},\"function\"===typeof Symbol&&(w[Symbol.iterator]=function(){return this}),w};Object.defineProperty(q,\"__esModule\",{value:!0});q.TypedDataEncoder=void 0;var u=A(26),p=A(15),n=A(11),l=A(22),h=A(17);S=A(9);V=A(49);var k=new S.Logger(V.version),t=A(48),B=new Uint8Array(32);B.fill(0);var E=p.BigNumber.from(-1),H=p.BigNumber.from(0),D=p.BigNumber.from(1),C=p.BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"),\nI=(0,n.hexZeroPad)(D.toHexString(),32),M=(0,n.hexZeroPad)(H.toHexString(),32),P={name:\"string\",version:\"string\",chainId:\"uint256\",verifyingContract:\"address\",salt:\"bytes32\"},J=[\"name\",\"version\",\"chainId\",\"verifyingContract\",\"salt\"],T={name:F(\"name\"),version:F(\"version\"),chainId:function(N){try{return p.BigNumber.from(N).toString()}catch(a){}return k.throwArgumentError('invalid domain value for \"chainId\"',\"domain.chainId\",N)},verifyingContract:function(N){try{return(0,u.getAddress)(N).toLowerCase()}catch(a){}return k.throwArgumentError('invalid domain value \"verifyingContract\"',\n\"domain.verifyingContract\",N)},salt:function(N){try{var a=(0,n.arrayify)(N);if(32!==a.length)throw Error(\"bad length\");return(0,n.hexlify)(a)}catch(b){}return k.throwArgumentError('invalid domain value \"salt\"',\"domain.salt\",N)}};A=function(){function N(a){function b(x,z){z[x]&&k.throwArgumentError(\"circular type reference to \"+JSON.stringify(x),\"types\",a);z[x]=!0;Object.keys(c[x]).forEach(function(v){d[v]&&(b(v,z),Object.keys(z).forEach(function(R){f[R][v]=!0}))});delete z[x]}(0,h.defineReadOnly)(this,\n\"types\",Object.freeze((0,h.deepCopy)(a)));(0,h.defineReadOnly)(this,\"_encoderCache\",{});(0,h.defineReadOnly)(this,\"_types\",{});var c={},d={},f={};Object.keys(a).forEach(function(x){c[x]={};d[x]=[];f[x]={}});var g=function(x){var z={};a[x].forEach(function(v){z[v.name]&&k.throwArgumentError(\"duplicate variable name \"+JSON.stringify(v.name)+\" in \"+JSON.stringify(x),\"types\",a);z[v.name]=!0;v=v.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];v===x&&k.throwArgumentError(\"circular type reference to \"+JSON.stringify(v),\n\"types\",a);G(v)||(d[v]||k.throwArgumentError(\"unknown type \"+JSON.stringify(v),\"types\",a),d[v].push(x),c[x][v]=!0)})},m;for(m in a)g(m);g=Object.keys(d).filter(function(x){return 0===d[x].length});0===g.length?k.throwArgumentError(\"missing primary type\",\"types\",a):1<g.length&&k.throwArgumentError(\"ambiguous primary types or unused types: \"+g.map(function(x){return JSON.stringify(x)}).join(\", \"),\"types\",a);(0,h.defineReadOnly)(this,\"primaryType\",g[0]);b(this.primaryType,{});for(var w in f)g=Object.keys(f[w]),\ng.sort(),this._types[w]=r(w,a[w])+g.map(function(x){return r(x,a[x])}).join(\"\")}N.prototype.getEncoder=function(a){var b=this._encoderCache[a];b||(b=this._encoderCache[a]=this._getEncoder(a));return b};N.prototype._getEncoder=function(a){var b=this,c=G(a);if(c)return c;if(c=a.match(/^(.*)(\\x5b(\\d*)\\x5d)$/)){var d=c[1],f=this.getEncoder(d),g=parseInt(c[3]);return function(x){0<=g&&x.length!==g&&k.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\",\"value\",x);x=x.map(f);b._types[d]&&\n(x=x.map(l.keccak256));return(0,l.keccak256)((0,n.hexConcat)(x))}}var m=this.types[a];if(m){var w=(0,t.id)(this._types[a]);return function(x){var z=m.map(function(v){var R=v.name;v=v.type;R=b.getEncoder(v)(x[R]);return b._types[v]?(0,l.keccak256)(R):R});z.unshift(w);return(0,n.hexConcat)(z)}}return k.throwArgumentError(\"unknown type: \"+a,\"type\",a)};N.prototype.encodeType=function(a){var b=this._types[a];b||k.throwArgumentError(\"unknown type: \"+JSON.stringify(a),\"name\",a);return b};N.prototype.encodeData=\nfunction(a,b){return this.getEncoder(a)(b)};N.prototype.hashStruct=function(a,b){return(0,l.keccak256)(this.encodeData(a,b))};N.prototype.encode=function(a){return this.encodeData(this.primaryType,a)};N.prototype.hash=function(a){return this.hashStruct(this.primaryType,a)};N.prototype._visit=function(a,b,c){var d=this;if(G(a))return c(a,b);var f=a.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);if(f){var g=f[1];a=parseInt(f[3]);0<=a&&b.length!==a&&k.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\",\n\"value\",b);return b.map(function(m){return d._visit(g,m,c)})}return(f=this.types[a])?f.reduce(function(m,w){var x=w.name;m[x]=d._visit(w.type,b[x],c);return m},{}):k.throwArgumentError(\"unknown type: \"+a,\"type\",a)};N.prototype.visit=function(a,b){return this._visit(this.primaryType,a,b)};N.from=function(a){return new N(a)};N.getPrimaryType=function(a){return N.from(a).primaryType};N.hashStruct=function(a,b,c){return N.from(b).hashStruct(a,c)};N.hashDomain=function(a){var b=[],c;for(c in a){var d=\nP[c];d||k.throwArgumentError(\"invalid typed-data domain key: \"+JSON.stringify(c),\"domain\",a);b.push({name:c,type:d})}b.sort(function(f,g){return J.indexOf(f.name)-J.indexOf(g.name)});return N.hashStruct(\"EIP712Domain\",{EIP712Domain:b},a)};N.encode=function(a,b,c){return(0,n.hexConcat)([\"0x1901\",N.hashDomain(a),N.from(b).hash(c)])};N.hash=function(a,b,c){return(0,l.keccak256)(N.encode(a,b,c))};N.resolveNames=function(a,b,c,d){return y(this,void 0,void 0,function(){var f,g,m,w,x,z,v,R;return e(this,\nfunction(O){switch(O.label){case 0:a=(0,h.shallowCopy)(a);f={};a.verifyingContract&&!(0,n.isHexString)(a.verifyingContract,20)&&(f[a.verifyingContract]=\"0x\");g=N.from(b);g.visit(c,function(L,Q){\"address\"!==L||(0,n.isHexString)(Q,20)||(f[Q]=\"0x\");return Q});m=[];for(w in f)m.push(w);x=0;O.label=1;case 1:if(!(x<m.length))return[3,4];z=m[x];v=f;R=z;return[4,d(z)];case 2:v[R]=O.sent(),O.label=3;case 3:return x++,[3,1];case 4:return a.verifyingContract&&f[a.verifyingContract]&&(a.verifyingContract=f[a.verifyingContract]),\nc=g.visit(c,function(L,Q){return\"address\"===L&&f[Q]?f[Q]:Q}),[2,{domain:a,value:c}]}})})};N.getPayload=function(a,b,c){N.hashDomain(a);var d={},f=[];J.forEach(function(w){var x=a[w];null!=x&&(d[w]=T[w](x),f.push({name:w,type:P[w]}))});var g=N.from(b),m=(0,h.shallowCopy)(b);m.EIP712Domain?k.throwArgumentError(\"types must not contain EIP712Domain type\",\"types.EIP712Domain\",b):m.EIP712Domain=f;g.encode(c);return{types:m,domain:d,primaryType:g.primaryType,message:g.visit(c,function(w,x){if(w.match(/^bytes(\\d*)/))return(0,n.hexlify)((0,n.arrayify)(x));\nif(w.match(/^u?int/))return p.BigNumber.from(x).toString();switch(w){case \"address\":return x.toLowerCase();case \"bool\":return!!x;case \"string\":return\"string\"!==typeof x&&k.throwArgumentError(\"invalid string\",\"value\",x),x}return k.throwArgumentError(\"unsupported type\",\"type\",w)})}};return N}();q.TypedDataEncoder=A}","~:source","shadow$provide[61] = function(global,require,module,exports) {\n\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TypedDataEncoder = void 0;\nvar address_1 = require(\"@ethersproject/address\");\nvar bignumber_1 = require(\"@ethersproject/bignumber\");\nvar bytes_1 = require(\"@ethersproject/bytes\");\nvar keccak256_1 = require(\"@ethersproject/keccak256\");\nvar properties_1 = require(\"@ethersproject/properties\");\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\nvar id_1 = require(\"./id\");\nvar padding = new Uint8Array(32);\npadding.fill(0);\nvar NegativeOne = bignumber_1.BigNumber.from(-1);\nvar Zero = bignumber_1.BigNumber.from(0);\nvar One = bignumber_1.BigNumber.from(1);\nvar MaxUint256 = bignumber_1.BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nfunction hexPadRight(value) {\n    var bytes = (0, bytes_1.arrayify)(value);\n    var padOffset = bytes.length % 32;\n    if (padOffset) {\n        return (0, bytes_1.hexConcat)([bytes, padding.slice(padOffset)]);\n    }\n    return (0, bytes_1.hexlify)(bytes);\n}\nvar hexTrue = (0, bytes_1.hexZeroPad)(One.toHexString(), 32);\nvar hexFalse = (0, bytes_1.hexZeroPad)(Zero.toHexString(), 32);\nvar domainFieldTypes = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\nvar domainFieldNames = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\nfunction checkString(key) {\n    return function (value) {\n        if (typeof (value) !== \"string\") {\n            logger.throwArgumentError(\"invalid domain value for \" + JSON.stringify(key), \"domain.\" + key, value);\n        }\n        return value;\n    };\n}\nvar domainChecks = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function (value) {\n        try {\n            return bignumber_1.BigNumber.from(value).toString();\n        }\n        catch (error) { }\n        return logger.throwArgumentError(\"invalid domain value for \\\"chainId\\\"\", \"domain.chainId\", value);\n    },\n    verifyingContract: function (value) {\n        try {\n            return (0, address_1.getAddress)(value).toLowerCase();\n        }\n        catch (error) { }\n        return logger.throwArgumentError(\"invalid domain value \\\"verifyingContract\\\"\", \"domain.verifyingContract\", value);\n    },\n    salt: function (value) {\n        try {\n            var bytes = (0, bytes_1.arrayify)(value);\n            if (bytes.length !== 32) {\n                throw new Error(\"bad length\");\n            }\n            return (0, bytes_1.hexlify)(bytes);\n        }\n        catch (error) { }\n        return logger.throwArgumentError(\"invalid domain value \\\"salt\\\"\", \"domain.salt\", value);\n    }\n};\nfunction getBaseEncoder(type) {\n    // intXX and uintXX\n    {\n        var match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            var signed = (match[1] === \"\");\n            var width = parseInt(match[2] || \"256\");\n            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {\n                logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n            }\n            var boundsUpper_1 = MaxUint256.mask(signed ? (width - 1) : width);\n            var boundsLower_1 = signed ? boundsUpper_1.add(One).mul(NegativeOne) : Zero;\n            return function (value) {\n                var v = bignumber_1.BigNumber.from(value);\n                if (v.lt(boundsLower_1) || v.gt(boundsUpper_1)) {\n                    logger.throwArgumentError(\"value out-of-bounds for \" + type, \"value\", value);\n                }\n                return (0, bytes_1.hexZeroPad)(v.toTwos(256).toHexString(), 32);\n            };\n        }\n    }\n    // bytesXX\n    {\n        var match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            var width_1 = parseInt(match[1]);\n            if (width_1 === 0 || width_1 > 32 || match[1] !== String(width_1)) {\n                logger.throwArgumentError(\"invalid bytes width\", \"type\", type);\n            }\n            return function (value) {\n                var bytes = (0, bytes_1.arrayify)(value);\n                if (bytes.length !== width_1) {\n                    logger.throwArgumentError(\"invalid length for \" + type, \"value\", value);\n                }\n                return hexPadRight(value);\n            };\n        }\n    }\n    switch (type) {\n        case \"address\": return function (value) {\n            return (0, bytes_1.hexZeroPad)((0, address_1.getAddress)(value), 32);\n        };\n        case \"bool\": return function (value) {\n            return ((!value) ? hexFalse : hexTrue);\n        };\n        case \"bytes\": return function (value) {\n            return (0, keccak256_1.keccak256)(value);\n        };\n        case \"string\": return function (value) {\n            return (0, id_1.id)(value);\n        };\n    }\n    return null;\n}\nfunction encodeType(name, fields) {\n    return name + \"(\" + fields.map(function (_a) {\n        var name = _a.name, type = _a.type;\n        return (type + \" \" + name);\n    }).join(\",\") + \")\";\n}\nvar TypedDataEncoder = /** @class */ (function () {\n    function TypedDataEncoder(types) {\n        (0, properties_1.defineReadOnly)(this, \"types\", Object.freeze((0, properties_1.deepCopy)(types)));\n        (0, properties_1.defineReadOnly)(this, \"_encoderCache\", {});\n        (0, properties_1.defineReadOnly)(this, \"_types\", {});\n        // Link struct types to their direct child structs\n        var links = {};\n        // Link structs to structs which contain them as a child\n        var parents = {};\n        // Link all subtypes within a given struct\n        var subtypes = {};\n        Object.keys(types).forEach(function (type) {\n            links[type] = {};\n            parents[type] = [];\n            subtypes[type] = {};\n        });\n        var _loop_1 = function (name_1) {\n            var uniqueNames = {};\n            types[name_1].forEach(function (field) {\n                // Check each field has a unique name\n                if (uniqueNames[field.name]) {\n                    logger.throwArgumentError(\"duplicate variable name \" + JSON.stringify(field.name) + \" in \" + JSON.stringify(name_1), \"types\", types);\n                }\n                uniqueNames[field.name] = true;\n                // Get the base type (drop any array specifiers)\n                var baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n                if (baseType === name_1) {\n                    logger.throwArgumentError(\"circular type reference to \" + JSON.stringify(baseType), \"types\", types);\n                }\n                // Is this a base encoding type?\n                var encoder = getBaseEncoder(baseType);\n                if (encoder) {\n                    return;\n                }\n                if (!parents[baseType]) {\n                    logger.throwArgumentError(\"unknown type \" + JSON.stringify(baseType), \"types\", types);\n                }\n                // Add linkage\n                parents[baseType].push(name_1);\n                links[name_1][baseType] = true;\n            });\n        };\n        for (var name_1 in types) {\n            _loop_1(name_1);\n        }\n        // Deduce the primary type\n        var primaryTypes = Object.keys(parents).filter(function (n) { return (parents[n].length === 0); });\n        if (primaryTypes.length === 0) {\n            logger.throwArgumentError(\"missing primary type\", \"types\", types);\n        }\n        else if (primaryTypes.length > 1) {\n            logger.throwArgumentError(\"ambiguous primary types or unused types: \" + primaryTypes.map(function (t) { return (JSON.stringify(t)); }).join(\", \"), \"types\", types);\n        }\n        (0, properties_1.defineReadOnly)(this, \"primaryType\", primaryTypes[0]);\n        // Check for circular type references\n        function checkCircular(type, found) {\n            if (found[type]) {\n                logger.throwArgumentError(\"circular type reference to \" + JSON.stringify(type), \"types\", types);\n            }\n            found[type] = true;\n            Object.keys(links[type]).forEach(function (child) {\n                if (!parents[child]) {\n                    return;\n                }\n                // Recursively check children\n                checkCircular(child, found);\n                // Mark all ancestors as having this decendant\n                Object.keys(found).forEach(function (subtype) {\n                    subtypes[subtype][child] = true;\n                });\n            });\n            delete found[type];\n        }\n        checkCircular(this.primaryType, {});\n        // Compute each fully describe type\n        for (var name_2 in subtypes) {\n            var st = Object.keys(subtypes[name_2]);\n            st.sort();\n            this._types[name_2] = encodeType(name_2, types[name_2]) + st.map(function (t) { return encodeType(t, types[t]); }).join(\"\");\n        }\n    }\n    TypedDataEncoder.prototype.getEncoder = function (type) {\n        var encoder = this._encoderCache[type];\n        if (!encoder) {\n            encoder = this._encoderCache[type] = this._getEncoder(type);\n        }\n        return encoder;\n    };\n    TypedDataEncoder.prototype._getEncoder = function (type) {\n        var _this = this;\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            var encoder = getBaseEncoder(type);\n            if (encoder) {\n                return encoder;\n            }\n        }\n        // Array\n        var match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            var subtype_1 = match[1];\n            var subEncoder_1 = this.getEncoder(subtype_1);\n            var length_1 = parseInt(match[3]);\n            return function (value) {\n                if (length_1 >= 0 && value.length !== length_1) {\n                    logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n                }\n                var result = value.map(subEncoder_1);\n                if (_this._types[subtype_1]) {\n                    result = result.map(keccak256_1.keccak256);\n                }\n                return (0, keccak256_1.keccak256)((0, bytes_1.hexConcat)(result));\n            };\n        }\n        // Struct\n        var fields = this.types[type];\n        if (fields) {\n            var encodedType_1 = (0, id_1.id)(this._types[type]);\n            return function (value) {\n                var values = fields.map(function (_a) {\n                    var name = _a.name, type = _a.type;\n                    var result = _this.getEncoder(type)(value[name]);\n                    if (_this._types[type]) {\n                        return (0, keccak256_1.keccak256)(result);\n                    }\n                    return result;\n                });\n                values.unshift(encodedType_1);\n                return (0, bytes_1.hexConcat)(values);\n            };\n        }\n        return logger.throwArgumentError(\"unknown type: \" + type, \"type\", type);\n    };\n    TypedDataEncoder.prototype.encodeType = function (name) {\n        var result = this._types[name];\n        if (!result) {\n            logger.throwArgumentError(\"unknown type: \" + JSON.stringify(name), \"name\", name);\n        }\n        return result;\n    };\n    TypedDataEncoder.prototype.encodeData = function (type, value) {\n        return this.getEncoder(type)(value);\n    };\n    TypedDataEncoder.prototype.hashStruct = function (name, value) {\n        return (0, keccak256_1.keccak256)(this.encodeData(name, value));\n    };\n    TypedDataEncoder.prototype.encode = function (value) {\n        return this.encodeData(this.primaryType, value);\n    };\n    TypedDataEncoder.prototype.hash = function (value) {\n        return this.hashStruct(this.primaryType, value);\n    };\n    TypedDataEncoder.prototype._visit = function (type, value, callback) {\n        var _this = this;\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            var encoder = getBaseEncoder(type);\n            if (encoder) {\n                return callback(type, value);\n            }\n        }\n        // Array\n        var match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            var subtype_2 = match[1];\n            var length_2 = parseInt(match[3]);\n            if (length_2 >= 0 && value.length !== length_2) {\n                logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n            }\n            return value.map(function (v) { return _this._visit(subtype_2, v, callback); });\n        }\n        // Struct\n        var fields = this.types[type];\n        if (fields) {\n            return fields.reduce(function (accum, _a) {\n                var name = _a.name, type = _a.type;\n                accum[name] = _this._visit(type, value[name], callback);\n                return accum;\n            }, {});\n        }\n        return logger.throwArgumentError(\"unknown type: \" + type, \"type\", type);\n    };\n    TypedDataEncoder.prototype.visit = function (value, callback) {\n        return this._visit(this.primaryType, value, callback);\n    };\n    TypedDataEncoder.from = function (types) {\n        return new TypedDataEncoder(types);\n    };\n    TypedDataEncoder.getPrimaryType = function (types) {\n        return TypedDataEncoder.from(types).primaryType;\n    };\n    TypedDataEncoder.hashStruct = function (name, types, value) {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    };\n    TypedDataEncoder.hashDomain = function (domain) {\n        var domainFields = [];\n        for (var name_3 in domain) {\n            var type = domainFieldTypes[name_3];\n            if (!type) {\n                logger.throwArgumentError(\"invalid typed-data domain key: \" + JSON.stringify(name_3), \"domain\", domain);\n            }\n            domainFields.push({ name: name_3, type: type });\n        }\n        domainFields.sort(function (a, b) {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    };\n    TypedDataEncoder.encode = function (domain, types, value) {\n        return (0, bytes_1.hexConcat)([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    };\n    TypedDataEncoder.hash = function (domain, types, value) {\n        return (0, keccak256_1.keccak256)(TypedDataEncoder.encode(domain, types, value));\n    };\n    // Replaces all address types with ENS names with their looked up address\n    TypedDataEncoder.resolveNames = function (domain, types, value, resolveName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var ensCache, encoder, _a, _b, _i, name_4, _c, _d;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        // Make a copy to isolate it from the object passed in\n                        domain = (0, properties_1.shallowCopy)(domain);\n                        ensCache = {};\n                        // Do we need to look up the domain's verifyingContract?\n                        if (domain.verifyingContract && !(0, bytes_1.isHexString)(domain.verifyingContract, 20)) {\n                            ensCache[domain.verifyingContract] = \"0x\";\n                        }\n                        encoder = TypedDataEncoder.from(types);\n                        // Get a list of all the addresses\n                        encoder.visit(value, function (type, value) {\n                            if (type === \"address\" && !(0, bytes_1.isHexString)(value, 20)) {\n                                ensCache[value] = \"0x\";\n                            }\n                            return value;\n                        });\n                        _a = [];\n                        for (_b in ensCache)\n                            _a.push(_b);\n                        _i = 0;\n                        _e.label = 1;\n                    case 1:\n                        if (!(_i < _a.length)) return [3 /*break*/, 4];\n                        name_4 = _a[_i];\n                        _c = ensCache;\n                        _d = name_4;\n                        return [4 /*yield*/, resolveName(name_4)];\n                    case 2:\n                        _c[_d] = _e.sent();\n                        _e.label = 3;\n                    case 3:\n                        _i++;\n                        return [3 /*break*/, 1];\n                    case 4:\n                        // Replace the domain verifyingContract if needed\n                        if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n                            domain.verifyingContract = ensCache[domain.verifyingContract];\n                        }\n                        // Replace all ENS names with their address\n                        value = encoder.visit(value, function (type, value) {\n                            if (type === \"address\" && ensCache[value]) {\n                                return ensCache[value];\n                            }\n                            return value;\n                        });\n                        return [2 /*return*/, { domain: domain, value: value }];\n                }\n            });\n        });\n    };\n    TypedDataEncoder.getPayload = function (domain, types, value) {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n        // Derive the EIP712Domain Struct reference type\n        var domainValues = {};\n        var domainTypes = [];\n        domainFieldNames.forEach(function (name) {\n            var value = domain[name];\n            if (value == null) {\n                return;\n            }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name: name, type: domainFieldTypes[name] });\n        });\n        var encoder = TypedDataEncoder.from(types);\n        var typesWithDomain = (0, properties_1.shallowCopy)(types);\n        if (typesWithDomain.EIP712Domain) {\n            logger.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        }\n        else {\n            typesWithDomain.EIP712Domain = domainTypes;\n        }\n        // Validate the data structures and types\n        encoder.encode(value);\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, function (type, value) {\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return (0, bytes_1.hexlify)((0, bytes_1.arrayify)(value));\n                }\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return bignumber_1.BigNumber.from(value).toString();\n                }\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        if (typeof (value) !== \"string\") {\n                            logger.throwArgumentError(\"invalid string\", \"value\", value);\n                        }\n                        return value;\n                }\n                return logger.throwArgumentError(\"unsupported type\", \"type\", type);\n            })\n        };\n    };\n    return TypedDataEncoder;\n}());\nexports.TypedDataEncoder = TypedDataEncoder;\n//# sourceMappingURL=typed-data.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$ethersproject$hash$lib$_version","~$module$node_modules$$ethersproject$hash$lib$id","~$shadow.js","~$module$node_modules$$ethersproject$bytes$lib$index","~$module$node_modules$$ethersproject$bignumber$lib$index","~$module$node_modules$$ethersproject$address$lib$index","~$module$node_modules$$ethersproject$keccak256$lib$index","~$module$node_modules$$ethersproject$logger$lib$index","~$module$node_modules$$ethersproject$properties$lib$index"]],"~:properties",["^5",["sent","message","hashStruct","next","chainId","primaryType","resolveNames","visit","hash","verifyingContract","label","ops","__esModule","types","_getEncoder","name","getEncoder","getPayload","value","EIP712Domain","hashDomain","domain","trys","encodeData","salt","getPrimaryType","type","version","from","_visit","encodeType","encode","done","TypedDataEncoder"]],"~:compiled-at",1695041440712,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$ethersproject$hash$lib$typed_data.js\",\n\"lineCount\":18,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@ethersproject/hash/lib/typed-data.js\"],\n\"sourcesContent\":[\"shadow$provide[61] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\\n    return new (P || (P = Promise))(function (resolve, reject) {\\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\\n        function rejected(value) { try { step(generator[\\\"throw\\\"](value)); } catch (e) { reject(e); } }\\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\\n    });\\n};\\nvar __generator = (this && this.__generator) || function (thisArg, body) {\\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\\n    return g = { next: verb(0), \\\"throw\\\": verb(1), \\\"return\\\": verb(2) }, typeof Symbol === \\\"function\\\" && (g[Symbol.iterator] = function() { return this; }), g;\\n    function verb(n) { return function (v) { return step([n, v]); }; }\\n    function step(op) {\\n        if (f) throw new TypeError(\\\"Generator is already executing.\\\");\\n        while (_) try {\\n            if (f = 1, y && (t = op[0] & 2 ? y[\\\"return\\\"] : op[0] ? y[\\\"throw\\\"] || ((t = y[\\\"return\\\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\\n            if (y = 0, t) op = [op[0] & 2, t.value];\\n            switch (op[0]) {\\n                case 0: case 1: t = op; break;\\n                case 4: _.label++; return { value: op[1], done: false };\\n                case 5: _.label++; y = op[1]; op = [0]; continue;\\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\\n                default:\\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\\n                    if (t[2]) _.ops.pop();\\n                    _.trys.pop(); continue;\\n            }\\n            op = body.call(thisArg, _);\\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\\n    }\\n};\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.TypedDataEncoder = void 0;\\nvar address_1 = require(\\\"@ethersproject/address\\\");\\nvar bignumber_1 = require(\\\"@ethersproject/bignumber\\\");\\nvar bytes_1 = require(\\\"@ethersproject/bytes\\\");\\nvar keccak256_1 = require(\\\"@ethersproject/keccak256\\\");\\nvar properties_1 = require(\\\"@ethersproject/properties\\\");\\nvar logger_1 = require(\\\"@ethersproject/logger\\\");\\nvar _version_1 = require(\\\"./_version\\\");\\nvar logger = new logger_1.Logger(_version_1.version);\\nvar id_1 = require(\\\"./id\\\");\\nvar padding = new Uint8Array(32);\\npadding.fill(0);\\nvar NegativeOne = bignumber_1.BigNumber.from(-1);\\nvar Zero = bignumber_1.BigNumber.from(0);\\nvar One = bignumber_1.BigNumber.from(1);\\nvar MaxUint256 = bignumber_1.BigNumber.from(\\\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\\\");\\nfunction hexPadRight(value) {\\n    var bytes = (0, bytes_1.arrayify)(value);\\n    var padOffset = bytes.length % 32;\\n    if (padOffset) {\\n        return (0, bytes_1.hexConcat)([bytes, padding.slice(padOffset)]);\\n    }\\n    return (0, bytes_1.hexlify)(bytes);\\n}\\nvar hexTrue = (0, bytes_1.hexZeroPad)(One.toHexString(), 32);\\nvar hexFalse = (0, bytes_1.hexZeroPad)(Zero.toHexString(), 32);\\nvar domainFieldTypes = {\\n    name: \\\"string\\\",\\n    version: \\\"string\\\",\\n    chainId: \\\"uint256\\\",\\n    verifyingContract: \\\"address\\\",\\n    salt: \\\"bytes32\\\"\\n};\\nvar domainFieldNames = [\\n    \\\"name\\\", \\\"version\\\", \\\"chainId\\\", \\\"verifyingContract\\\", \\\"salt\\\"\\n];\\nfunction checkString(key) {\\n    return function (value) {\\n        if (typeof (value) !== \\\"string\\\") {\\n            logger.throwArgumentError(\\\"invalid domain value for \\\" + JSON.stringify(key), \\\"domain.\\\" + key, value);\\n        }\\n        return value;\\n    };\\n}\\nvar domainChecks = {\\n    name: checkString(\\\"name\\\"),\\n    version: checkString(\\\"version\\\"),\\n    chainId: function (value) {\\n        try {\\n            return bignumber_1.BigNumber.from(value).toString();\\n        }\\n        catch (error) { }\\n        return logger.throwArgumentError(\\\"invalid domain value for \\\\\\\"chainId\\\\\\\"\\\", \\\"domain.chainId\\\", value);\\n    },\\n    verifyingContract: function (value) {\\n        try {\\n            return (0, address_1.getAddress)(value).toLowerCase();\\n        }\\n        catch (error) { }\\n        return logger.throwArgumentError(\\\"invalid domain value \\\\\\\"verifyingContract\\\\\\\"\\\", \\\"domain.verifyingContract\\\", value);\\n    },\\n    salt: function (value) {\\n        try {\\n            var bytes = (0, bytes_1.arrayify)(value);\\n            if (bytes.length !== 32) {\\n                throw new Error(\\\"bad length\\\");\\n            }\\n            return (0, bytes_1.hexlify)(bytes);\\n        }\\n        catch (error) { }\\n        return logger.throwArgumentError(\\\"invalid domain value \\\\\\\"salt\\\\\\\"\\\", \\\"domain.salt\\\", value);\\n    }\\n};\\nfunction getBaseEncoder(type) {\\n    // intXX and uintXX\\n    {\\n        var match = type.match(/^(u?)int(\\\\d*)$/);\\n        if (match) {\\n            var signed = (match[1] === \\\"\\\");\\n            var width = parseInt(match[2] || \\\"256\\\");\\n            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {\\n                logger.throwArgumentError(\\\"invalid numeric width\\\", \\\"type\\\", type);\\n            }\\n            var boundsUpper_1 = MaxUint256.mask(signed ? (width - 1) : width);\\n            var boundsLower_1 = signed ? boundsUpper_1.add(One).mul(NegativeOne) : Zero;\\n            return function (value) {\\n                var v = bignumber_1.BigNumber.from(value);\\n                if (v.lt(boundsLower_1) || v.gt(boundsUpper_1)) {\\n                    logger.throwArgumentError(\\\"value out-of-bounds for \\\" + type, \\\"value\\\", value);\\n                }\\n                return (0, bytes_1.hexZeroPad)(v.toTwos(256).toHexString(), 32);\\n            };\\n        }\\n    }\\n    // bytesXX\\n    {\\n        var match = type.match(/^bytes(\\\\d+)$/);\\n        if (match) {\\n            var width_1 = parseInt(match[1]);\\n            if (width_1 === 0 || width_1 > 32 || match[1] !== String(width_1)) {\\n                logger.throwArgumentError(\\\"invalid bytes width\\\", \\\"type\\\", type);\\n            }\\n            return function (value) {\\n                var bytes = (0, bytes_1.arrayify)(value);\\n                if (bytes.length !== width_1) {\\n                    logger.throwArgumentError(\\\"invalid length for \\\" + type, \\\"value\\\", value);\\n                }\\n                return hexPadRight(value);\\n            };\\n        }\\n    }\\n    switch (type) {\\n        case \\\"address\\\": return function (value) {\\n            return (0, bytes_1.hexZeroPad)((0, address_1.getAddress)(value), 32);\\n        };\\n        case \\\"bool\\\": return function (value) {\\n            return ((!value) ? hexFalse : hexTrue);\\n        };\\n        case \\\"bytes\\\": return function (value) {\\n            return (0, keccak256_1.keccak256)(value);\\n        };\\n        case \\\"string\\\": return function (value) {\\n            return (0, id_1.id)(value);\\n        };\\n    }\\n    return null;\\n}\\nfunction encodeType(name, fields) {\\n    return name + \\\"(\\\" + fields.map(function (_a) {\\n        var name = _a.name, type = _a.type;\\n        return (type + \\\" \\\" + name);\\n    }).join(\\\",\\\") + \\\")\\\";\\n}\\nvar TypedDataEncoder = /** @class */ (function () {\\n    function TypedDataEncoder(types) {\\n        (0, properties_1.defineReadOnly)(this, \\\"types\\\", Object.freeze((0, properties_1.deepCopy)(types)));\\n        (0, properties_1.defineReadOnly)(this, \\\"_encoderCache\\\", {});\\n        (0, properties_1.defineReadOnly)(this, \\\"_types\\\", {});\\n        // Link struct types to their direct child structs\\n        var links = {};\\n        // Link structs to structs which contain them as a child\\n        var parents = {};\\n        // Link all subtypes within a given struct\\n        var subtypes = {};\\n        Object.keys(types).forEach(function (type) {\\n            links[type] = {};\\n            parents[type] = [];\\n            subtypes[type] = {};\\n        });\\n        var _loop_1 = function (name_1) {\\n            var uniqueNames = {};\\n            types[name_1].forEach(function (field) {\\n                // Check each field has a unique name\\n                if (uniqueNames[field.name]) {\\n                    logger.throwArgumentError(\\\"duplicate variable name \\\" + JSON.stringify(field.name) + \\\" in \\\" + JSON.stringify(name_1), \\\"types\\\", types);\\n                }\\n                uniqueNames[field.name] = true;\\n                // Get the base type (drop any array specifiers)\\n                var baseType = field.type.match(/^([^\\\\x5b]*)(\\\\x5b|$)/)[1];\\n                if (baseType === name_1) {\\n                    logger.throwArgumentError(\\\"circular type reference to \\\" + JSON.stringify(baseType), \\\"types\\\", types);\\n                }\\n                // Is this a base encoding type?\\n                var encoder = getBaseEncoder(baseType);\\n                if (encoder) {\\n                    return;\\n                }\\n                if (!parents[baseType]) {\\n                    logger.throwArgumentError(\\\"unknown type \\\" + JSON.stringify(baseType), \\\"types\\\", types);\\n                }\\n                // Add linkage\\n                parents[baseType].push(name_1);\\n                links[name_1][baseType] = true;\\n            });\\n        };\\n        for (var name_1 in types) {\\n            _loop_1(name_1);\\n        }\\n        // Deduce the primary type\\n        var primaryTypes = Object.keys(parents).filter(function (n) { return (parents[n].length === 0); });\\n        if (primaryTypes.length === 0) {\\n            logger.throwArgumentError(\\\"missing primary type\\\", \\\"types\\\", types);\\n        }\\n        else if (primaryTypes.length > 1) {\\n            logger.throwArgumentError(\\\"ambiguous primary types or unused types: \\\" + primaryTypes.map(function (t) { return (JSON.stringify(t)); }).join(\\\", \\\"), \\\"types\\\", types);\\n        }\\n        (0, properties_1.defineReadOnly)(this, \\\"primaryType\\\", primaryTypes[0]);\\n        // Check for circular type references\\n        function checkCircular(type, found) {\\n            if (found[type]) {\\n                logger.throwArgumentError(\\\"circular type reference to \\\" + JSON.stringify(type), \\\"types\\\", types);\\n            }\\n            found[type] = true;\\n            Object.keys(links[type]).forEach(function (child) {\\n                if (!parents[child]) {\\n                    return;\\n                }\\n                // Recursively check children\\n                checkCircular(child, found);\\n                // Mark all ancestors as having this decendant\\n                Object.keys(found).forEach(function (subtype) {\\n                    subtypes[subtype][child] = true;\\n                });\\n            });\\n            delete found[type];\\n        }\\n        checkCircular(this.primaryType, {});\\n        // Compute each fully describe type\\n        for (var name_2 in subtypes) {\\n            var st = Object.keys(subtypes[name_2]);\\n            st.sort();\\n            this._types[name_2] = encodeType(name_2, types[name_2]) + st.map(function (t) { return encodeType(t, types[t]); }).join(\\\"\\\");\\n        }\\n    }\\n    TypedDataEncoder.prototype.getEncoder = function (type) {\\n        var encoder = this._encoderCache[type];\\n        if (!encoder) {\\n            encoder = this._encoderCache[type] = this._getEncoder(type);\\n        }\\n        return encoder;\\n    };\\n    TypedDataEncoder.prototype._getEncoder = function (type) {\\n        var _this = this;\\n        // Basic encoder type (address, bool, uint256, etc)\\n        {\\n            var encoder = getBaseEncoder(type);\\n            if (encoder) {\\n                return encoder;\\n            }\\n        }\\n        // Array\\n        var match = type.match(/^(.*)(\\\\x5b(\\\\d*)\\\\x5d)$/);\\n        if (match) {\\n            var subtype_1 = match[1];\\n            var subEncoder_1 = this.getEncoder(subtype_1);\\n            var length_1 = parseInt(match[3]);\\n            return function (value) {\\n                if (length_1 >= 0 && value.length !== length_1) {\\n                    logger.throwArgumentError(\\\"array length mismatch; expected length ${ arrayLength }\\\", \\\"value\\\", value);\\n                }\\n                var result = value.map(subEncoder_1);\\n                if (_this._types[subtype_1]) {\\n                    result = result.map(keccak256_1.keccak256);\\n                }\\n                return (0, keccak256_1.keccak256)((0, bytes_1.hexConcat)(result));\\n            };\\n        }\\n        // Struct\\n        var fields = this.types[type];\\n        if (fields) {\\n            var encodedType_1 = (0, id_1.id)(this._types[type]);\\n            return function (value) {\\n                var values = fields.map(function (_a) {\\n                    var name = _a.name, type = _a.type;\\n                    var result = _this.getEncoder(type)(value[name]);\\n                    if (_this._types[type]) {\\n                        return (0, keccak256_1.keccak256)(result);\\n                    }\\n                    return result;\\n                });\\n                values.unshift(encodedType_1);\\n                return (0, bytes_1.hexConcat)(values);\\n            };\\n        }\\n        return logger.throwArgumentError(\\\"unknown type: \\\" + type, \\\"type\\\", type);\\n    };\\n    TypedDataEncoder.prototype.encodeType = function (name) {\\n        var result = this._types[name];\\n        if (!result) {\\n            logger.throwArgumentError(\\\"unknown type: \\\" + JSON.stringify(name), \\\"name\\\", name);\\n        }\\n        return result;\\n    };\\n    TypedDataEncoder.prototype.encodeData = function (type, value) {\\n        return this.getEncoder(type)(value);\\n    };\\n    TypedDataEncoder.prototype.hashStruct = function (name, value) {\\n        return (0, keccak256_1.keccak256)(this.encodeData(name, value));\\n    };\\n    TypedDataEncoder.prototype.encode = function (value) {\\n        return this.encodeData(this.primaryType, value);\\n    };\\n    TypedDataEncoder.prototype.hash = function (value) {\\n        return this.hashStruct(this.primaryType, value);\\n    };\\n    TypedDataEncoder.prototype._visit = function (type, value, callback) {\\n        var _this = this;\\n        // Basic encoder type (address, bool, uint256, etc)\\n        {\\n            var encoder = getBaseEncoder(type);\\n            if (encoder) {\\n                return callback(type, value);\\n            }\\n        }\\n        // Array\\n        var match = type.match(/^(.*)(\\\\x5b(\\\\d*)\\\\x5d)$/);\\n        if (match) {\\n            var subtype_2 = match[1];\\n            var length_2 = parseInt(match[3]);\\n            if (length_2 >= 0 && value.length !== length_2) {\\n                logger.throwArgumentError(\\\"array length mismatch; expected length ${ arrayLength }\\\", \\\"value\\\", value);\\n            }\\n            return value.map(function (v) { return _this._visit(subtype_2, v, callback); });\\n        }\\n        // Struct\\n        var fields = this.types[type];\\n        if (fields) {\\n            return fields.reduce(function (accum, _a) {\\n                var name = _a.name, type = _a.type;\\n                accum[name] = _this._visit(type, value[name], callback);\\n                return accum;\\n            }, {});\\n        }\\n        return logger.throwArgumentError(\\\"unknown type: \\\" + type, \\\"type\\\", type);\\n    };\\n    TypedDataEncoder.prototype.visit = function (value, callback) {\\n        return this._visit(this.primaryType, value, callback);\\n    };\\n    TypedDataEncoder.from = function (types) {\\n        return new TypedDataEncoder(types);\\n    };\\n    TypedDataEncoder.getPrimaryType = function (types) {\\n        return TypedDataEncoder.from(types).primaryType;\\n    };\\n    TypedDataEncoder.hashStruct = function (name, types, value) {\\n        return TypedDataEncoder.from(types).hashStruct(name, value);\\n    };\\n    TypedDataEncoder.hashDomain = function (domain) {\\n        var domainFields = [];\\n        for (var name_3 in domain) {\\n            var type = domainFieldTypes[name_3];\\n            if (!type) {\\n                logger.throwArgumentError(\\\"invalid typed-data domain key: \\\" + JSON.stringify(name_3), \\\"domain\\\", domain);\\n            }\\n            domainFields.push({ name: name_3, type: type });\\n        }\\n        domainFields.sort(function (a, b) {\\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\\n        });\\n        return TypedDataEncoder.hashStruct(\\\"EIP712Domain\\\", { EIP712Domain: domainFields }, domain);\\n    };\\n    TypedDataEncoder.encode = function (domain, types, value) {\\n        return (0, bytes_1.hexConcat)([\\n            \\\"0x1901\\\",\\n            TypedDataEncoder.hashDomain(domain),\\n            TypedDataEncoder.from(types).hash(value)\\n        ]);\\n    };\\n    TypedDataEncoder.hash = function (domain, types, value) {\\n        return (0, keccak256_1.keccak256)(TypedDataEncoder.encode(domain, types, value));\\n    };\\n    // Replaces all address types with ENS names with their looked up address\\n    TypedDataEncoder.resolveNames = function (domain, types, value, resolveName) {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var ensCache, encoder, _a, _b, _i, name_4, _c, _d;\\n            return __generator(this, function (_e) {\\n                switch (_e.label) {\\n                    case 0:\\n                        // Make a copy to isolate it from the object passed in\\n                        domain = (0, properties_1.shallowCopy)(domain);\\n                        ensCache = {};\\n                        // Do we need to look up the domain's verifyingContract?\\n                        if (domain.verifyingContract && !(0, bytes_1.isHexString)(domain.verifyingContract, 20)) {\\n                            ensCache[domain.verifyingContract] = \\\"0x\\\";\\n                        }\\n                        encoder = TypedDataEncoder.from(types);\\n                        // Get a list of all the addresses\\n                        encoder.visit(value, function (type, value) {\\n                            if (type === \\\"address\\\" && !(0, bytes_1.isHexString)(value, 20)) {\\n                                ensCache[value] = \\\"0x\\\";\\n                            }\\n                            return value;\\n                        });\\n                        _a = [];\\n                        for (_b in ensCache)\\n                            _a.push(_b);\\n                        _i = 0;\\n                        _e.label = 1;\\n                    case 1:\\n                        if (!(_i < _a.length)) return [3 /*break*/, 4];\\n                        name_4 = _a[_i];\\n                        _c = ensCache;\\n                        _d = name_4;\\n                        return [4 /*yield*/, resolveName(name_4)];\\n                    case 2:\\n                        _c[_d] = _e.sent();\\n                        _e.label = 3;\\n                    case 3:\\n                        _i++;\\n                        return [3 /*break*/, 1];\\n                    case 4:\\n                        // Replace the domain verifyingContract if needed\\n                        if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\\n                            domain.verifyingContract = ensCache[domain.verifyingContract];\\n                        }\\n                        // Replace all ENS names with their address\\n                        value = encoder.visit(value, function (type, value) {\\n                            if (type === \\\"address\\\" && ensCache[value]) {\\n                                return ensCache[value];\\n                            }\\n                            return value;\\n                        });\\n                        return [2 /*return*/, { domain: domain, value: value }];\\n                }\\n            });\\n        });\\n    };\\n    TypedDataEncoder.getPayload = function (domain, types, value) {\\n        // Validate the domain fields\\n        TypedDataEncoder.hashDomain(domain);\\n        // Derive the EIP712Domain Struct reference type\\n        var domainValues = {};\\n        var domainTypes = [];\\n        domainFieldNames.forEach(function (name) {\\n            var value = domain[name];\\n            if (value == null) {\\n                return;\\n            }\\n            domainValues[name] = domainChecks[name](value);\\n            domainTypes.push({ name: name, type: domainFieldTypes[name] });\\n        });\\n        var encoder = TypedDataEncoder.from(types);\\n        var typesWithDomain = (0, properties_1.shallowCopy)(types);\\n        if (typesWithDomain.EIP712Domain) {\\n            logger.throwArgumentError(\\\"types must not contain EIP712Domain type\\\", \\\"types.EIP712Domain\\\", types);\\n        }\\n        else {\\n            typesWithDomain.EIP712Domain = domainTypes;\\n        }\\n        // Validate the data structures and types\\n        encoder.encode(value);\\n        return {\\n            types: typesWithDomain,\\n            domain: domainValues,\\n            primaryType: encoder.primaryType,\\n            message: encoder.visit(value, function (type, value) {\\n                // bytes\\n                if (type.match(/^bytes(\\\\d*)/)) {\\n                    return (0, bytes_1.hexlify)((0, bytes_1.arrayify)(value));\\n                }\\n                // uint or int\\n                if (type.match(/^u?int/)) {\\n                    return bignumber_1.BigNumber.from(value).toString();\\n                }\\n                switch (type) {\\n                    case \\\"address\\\":\\n                        return value.toLowerCase();\\n                    case \\\"bool\\\":\\n                        return !!value;\\n                    case \\\"string\\\":\\n                        if (typeof (value) !== \\\"string\\\") {\\n                            logger.throwArgumentError(\\\"invalid string\\\", \\\"value\\\", value);\\n                        }\\n                        return value;\\n                }\\n                return logger.throwArgumentError(\\\"unsupported type\\\", \\\"type\\\", type);\\n            })\\n        };\\n    };\\n    return TypedDataEncoder;\\n}());\\nexports.TypedDataEncoder = TypedDataEncoder;\\n//# sourceMappingURL=typed-data.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"checkString\",\"key\",\"value\",\"logger\",\"throwArgumentError\",\"JSON\",\"stringify\",\"getBaseEncoder\",\"type\",\"match\",\"signed\",\"width\",\"parseInt\",\"String\",\"boundsUpper_1\",\"MaxUint256\",\"mask\",\"boundsLower_1\",\"add\",\"One\",\"mul\",\"NegativeOne\",\"Zero\",\"v\",\"bignumber_1\",\"BigNumber\",\"from\",\"lt\",\"gt\",\"bytes_1\",\"hexZeroPad\",\"toTwos\",\"toHexString\",\"width_1\",\"bytes\",\"arrayify\",\"length\",\"padOffset\",\"hexConcat\",\"padding\",\"slice\",\"hexlify\",\"address_1\",\"getAddress\",\"hexTrue\",\"hexFalse\",\"keccak256_1\",\"keccak256\",\"id_1\",\"id\",\"encodeType\",\"name\",\"fields\",\"map\",\"_a\",\"join\",\"__awaiter\",\"thisArg\",\"_arguments\",\"P\",\"generator\",\"adopt\",\"resolve\",\"Promise\",\"reject\",\"fulfilled\",\"step\",\"next\",\"e\",\"rejected\",\"result\",\"done\",\"then\",\"apply\",\"__generator\",\"body\",\"verb\",\"n\",\"op\",\"f\",\"TypeError\",\"_\",\"y\",\"t\",\"call\",\"label\",\"ops\",\"pop\",\"trys\",\"push\",\"sent\",\"g\",\"Symbol\",\"iterator\",\"Object\",\"defineProperty\",\"TypedDataEncoder\",\"properties_1\",\"logger_1\",\"_version_1\",\"Logger\",\"version\",\"Uint8Array\",\"fill\",\"domainFieldTypes\",\"chainId\",\"verifyingContract\",\"salt\",\"domainFieldNames\",\"domainChecks\",\"toString\",\"error\",\"toLowerCase\",\"Error\",\"types\",\"checkCircular\",\"found\",\"keys\",\"links\",\"forEach\",\"child\",\"parents\",\"subtype\",\"subtypes\",\"defineReadOnly\",\"freeze\",\"deepCopy\",\"_loop_1\",\"name_1\",\"uniqueNames\",\"field\",\"baseType\",\"encoder\",\"primaryTypes\",\"filter\",\"primaryType\",\"name_2\",\"st\",\"sort\",\"_types\",\"prototype\",\"getEncoder\",\"TypedDataEncoder.prototype.getEncoder\",\"_encoderCache\",\"_getEncoder\",\"TypedDataEncoder.prototype._getEncoder\",\"_this\",\"subtype_1\",\"subEncoder_1\",\"length_1\",\"encodedType_1\",\"values\",\"unshift\",\"TypedDataEncoder.prototype.encodeType\",\"encodeData\",\"TypedDataEncoder.prototype.encodeData\",\"hashStruct\",\"TypedDataEncoder.prototype.hashStruct\",\"encode\",\"TypedDataEncoder.prototype.encode\",\"hash\",\"TypedDataEncoder.prototype.hash\",\"_visit\",\"TypedDataEncoder.prototype._visit\",\"callback\",\"subtype_2\",\"length_2\",\"reduce\",\"accum\",\"visit\",\"TypedDataEncoder.prototype.visit\",\"TypedDataEncoder.from\",\"getPrimaryType\",\"TypedDataEncoder.getPrimaryType\",\"TypedDataEncoder.hashStruct\",\"hashDomain\",\"TypedDataEncoder.hashDomain\",\"domain\",\"domainFields\",\"name_3\",\"a\",\"b\",\"indexOf\",\"EIP712Domain\",\"TypedDataEncoder.encode\",\"TypedDataEncoder.hash\",\"resolveNames\",\"TypedDataEncoder.resolveNames\",\"resolveName\",\"ensCache\",\"_b\",\"_i\",\"name_4\",\"_c\",\"_d\",\"_e\",\"shallowCopy\",\"isHexString\",\"getPayload\",\"TypedDataEncoder.getPayload\",\"domainValues\",\"domainTypes\",\"typesWithDomain\",\"message\"]\n}\n"]