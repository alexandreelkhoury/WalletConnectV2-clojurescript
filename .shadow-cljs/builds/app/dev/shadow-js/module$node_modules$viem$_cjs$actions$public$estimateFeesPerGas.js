["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/viem/_cjs/actions/public/estimateFeesPerGas.js"],"~:js","shadow$provide.module$node_modules$viem$_cjs$actions$public$estimateFeesPerGas=function(global,require,module,exports){async function internal_estimateFeesPerGas(client,args){const {block:block_,chain=client.chain,request,type=\"eip1559\"}=args||{},baseFeeMultiplier=await (async()=>\"function\"===typeof chain?.fees?.baseFeeMultiplier?chain.fees.baseFeeMultiplier({block:block_,client,request}):chain?.fees?.baseFeeMultiplier??1.2)();if(1>baseFeeMultiplier)throw new fee_js_1.BaseFeeScalarError;const denominator=\n10**(baseFeeMultiplier.toString().split(\".\")[1]?.length??0);var multiply=base=>base*BigInt(Math.ceil(baseFeeMultiplier*denominator))/BigInt(denominator);const block=block_?block_:await (0,getBlock_js_1.getBlock)(client);if(\"function\"===typeof chain?.fees?.estimateFeesPerGas)return chain.fees.estimateFeesPerGas({block:block_,client,multiply,request,type});if(\"eip1559\"===type){if(\"bigint\"!==typeof block.baseFeePerGas)throw new fee_js_1.Eip1559FeesNotSupportedError;args=request?.maxPriorityFeePerGas?\nrequest.maxPriorityFeePerGas:await (0,estimateMaxPriorityFeePerGas_js_1.internal_estimateMaxPriorityFeePerGas)(client,{block,chain,request});multiply=multiply(block.baseFeePerGas);return{maxFeePerGas:request?.maxFeePerGas??multiply+args,maxPriorityFeePerGas:args}}return{gasPrice:request?.gasPrice??multiply(await (0,getGasPrice_js_1.getGasPrice)(client))}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.internal_estimateFeesPerGas=exports.estimateFeesPerGas=void 0;const fee_js_1=require(\"module$node_modules$viem$_cjs$errors$fee\"),\nestimateMaxPriorityFeePerGas_js_1=require(\"module$node_modules$viem$_cjs$actions$public$estimateMaxPriorityFeePerGas\"),getBlock_js_1=require(\"module$node_modules$viem$_cjs$actions$public$getBlock\"),getGasPrice_js_1=require(\"module$node_modules$viem$_cjs$actions$public$getGasPrice\");exports.estimateFeesPerGas=async function(client,args){return internal_estimateFeesPerGas(client,args)};exports.internal_estimateFeesPerGas=internal_estimateFeesPerGas}","~:source","shadow$provide[\"module$node_modules$viem$_cjs$actions$public$estimateFeesPerGas\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.internal_estimateFeesPerGas = exports.estimateFeesPerGas = void 0;\nconst fee_js_1 = require(\"../../errors/fee.js\");\nconst estimateMaxPriorityFeePerGas_js_1 = require(\"./estimateMaxPriorityFeePerGas.js\");\nconst getBlock_js_1 = require(\"./getBlock.js\");\nconst getGasPrice_js_1 = require(\"./getGasPrice.js\");\nasync function estimateFeesPerGas(client, args) {\n    return internal_estimateFeesPerGas(client, args);\n}\nexports.estimateFeesPerGas = estimateFeesPerGas;\nasync function internal_estimateFeesPerGas(client, args) {\n    const { block: block_, chain = client.chain, request, type = 'eip1559', } = args || {};\n    const baseFeeMultiplier = await (async () => {\n        if (typeof chain?.fees?.baseFeeMultiplier === 'function')\n            return chain.fees.baseFeeMultiplier({\n                block: block_,\n                client,\n                request,\n            });\n        return chain?.fees?.baseFeeMultiplier ?? 1.2;\n    })();\n    if (baseFeeMultiplier < 1)\n        throw new fee_js_1.BaseFeeScalarError();\n    const decimals = baseFeeMultiplier.toString().split('.')[1]?.length ?? 0;\n    const denominator = 10 ** decimals;\n    const multiply = (base) => (base * BigInt(Math.ceil(baseFeeMultiplier * denominator))) /\n        BigInt(denominator);\n    const block = block_ ? block_ : await (0, getBlock_js_1.getBlock)(client);\n    if (typeof chain?.fees?.estimateFeesPerGas === 'function')\n        return chain.fees.estimateFeesPerGas({\n            block: block_,\n            client,\n            multiply,\n            request,\n            type,\n        });\n    if (type === 'eip1559') {\n        if (typeof block.baseFeePerGas !== 'bigint')\n            throw new fee_js_1.Eip1559FeesNotSupportedError();\n        const maxPriorityFeePerGas = request?.maxPriorityFeePerGas\n            ? request.maxPriorityFeePerGas\n            : await (0, estimateMaxPriorityFeePerGas_js_1.internal_estimateMaxPriorityFeePerGas)(client, {\n                block,\n                chain,\n                request,\n            });\n        const baseFeePerGas = multiply(block.baseFeePerGas);\n        const maxFeePerGas = request?.maxFeePerGas ?? baseFeePerGas + maxPriorityFeePerGas;\n        return {\n            maxFeePerGas,\n            maxPriorityFeePerGas,\n        };\n    }\n    const gasPrice = request?.gasPrice ?? multiply(await (0, getGasPrice_js_1.getGasPrice)(client));\n    return {\n        gasPrice,\n    };\n}\nexports.internal_estimateFeesPerGas = internal_estimateFeesPerGas;\n//# sourceMappingURL=estimateFeesPerGas.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$viem$_cjs$errors$fee","~$module$node_modules$viem$_cjs$actions$public$getBlock","~$shadow.js","~$module$node_modules$viem$_cjs$actions$public$estimateMaxPriorityFeePerGas","~$module$node_modules$viem$_cjs$actions$public$getGasPrice"]],"~:properties",["^5",["internal_estimateFeesPerGas","gasPrice","multiply","__esModule","estimateFeesPerGas","block","maxPriorityFeePerGas","maxFeePerGas","value","request","type","client","chain"]],"~:compiled-at",1695111490255,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$viem$_cjs$actions$public$estimateFeesPerGas.js\",\n\"lineCount\":4,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/viem/_cjs/actions/public/estimateFeesPerGas.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$viem$_cjs$actions$public$estimateFeesPerGas\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.internal_estimateFeesPerGas = exports.estimateFeesPerGas = void 0;\\nconst fee_js_1 = require(\\\"../../errors/fee.js\\\");\\nconst estimateMaxPriorityFeePerGas_js_1 = require(\\\"./estimateMaxPriorityFeePerGas.js\\\");\\nconst getBlock_js_1 = require(\\\"./getBlock.js\\\");\\nconst getGasPrice_js_1 = require(\\\"./getGasPrice.js\\\");\\nasync function estimateFeesPerGas(client, args) {\\n    return internal_estimateFeesPerGas(client, args);\\n}\\nexports.estimateFeesPerGas = estimateFeesPerGas;\\nasync function internal_estimateFeesPerGas(client, args) {\\n    const { block: block_, chain = client.chain, request, type = 'eip1559', } = args || {};\\n    const baseFeeMultiplier = await (async () => {\\n        if (typeof chain?.fees?.baseFeeMultiplier === 'function')\\n            return chain.fees.baseFeeMultiplier({\\n                block: block_,\\n                client,\\n                request,\\n            });\\n        return chain?.fees?.baseFeeMultiplier ?? 1.2;\\n    })();\\n    if (baseFeeMultiplier < 1)\\n        throw new fee_js_1.BaseFeeScalarError();\\n    const decimals = baseFeeMultiplier.toString().split('.')[1]?.length ?? 0;\\n    const denominator = 10 ** decimals;\\n    const multiply = (base) => (base * BigInt(Math.ceil(baseFeeMultiplier * denominator))) /\\n        BigInt(denominator);\\n    const block = block_ ? block_ : await (0, getBlock_js_1.getBlock)(client);\\n    if (typeof chain?.fees?.estimateFeesPerGas === 'function')\\n        return chain.fees.estimateFeesPerGas({\\n            block: block_,\\n            client,\\n            multiply,\\n            request,\\n            type,\\n        });\\n    if (type === 'eip1559') {\\n        if (typeof block.baseFeePerGas !== 'bigint')\\n            throw new fee_js_1.Eip1559FeesNotSupportedError();\\n        const maxPriorityFeePerGas = request?.maxPriorityFeePerGas\\n            ? request.maxPriorityFeePerGas\\n            : await (0, estimateMaxPriorityFeePerGas_js_1.internal_estimateMaxPriorityFeePerGas)(client, {\\n                block,\\n                chain,\\n                request,\\n            });\\n        const baseFeePerGas = multiply(block.baseFeePerGas);\\n        const maxFeePerGas = request?.maxFeePerGas ?? baseFeePerGas + maxPriorityFeePerGas;\\n        return {\\n            maxFeePerGas,\\n            maxPriorityFeePerGas,\\n        };\\n    }\\n    const gasPrice = request?.gasPrice ?? multiply(await (0, getGasPrice_js_1.getGasPrice)(client));\\n    return {\\n        gasPrice,\\n    };\\n}\\nexports.internal_estimateFeesPerGas = internal_estimateFeesPerGas;\\n//# sourceMappingURL=estimateFeesPerGas.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"internal_estimateFeesPerGas\",\"client\",\"args\",\"block_\",\"chain\",\"request\",\"type\",\"baseFeeMultiplier\",\"fees\",\"block\",\"fee_js_1\",\"BaseFeeScalarError\",\"denominator\",\"toString\",\"split\",\"length\",\"multiply\",\"base\",\"BigInt\",\"Math\",\"ceil\",\"getBlock_js_1\",\"getBlock\",\"estimateFeesPerGas\",\"baseFeePerGas\",\"Eip1559FeesNotSupportedError\",\"maxPriorityFeePerGas\",\"estimateMaxPriorityFeePerGas_js_1\",\"internal_estimateMaxPriorityFeePerGas\",\"maxFeePerGas\",\"gasPrice\",\"getGasPrice_js_1\",\"getGasPrice\",\"Object\",\"defineProperty\",\"value\"]\n}\n"]