["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/viem/_cjs/constants/abis.js"],"~:js","shadow$provide.module$node_modules$viem$_cjs$constants$abis=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.universalSignatureValidatorAbi=exports.smartAccountAbi=exports.addressResolverAbi=exports.textResolverAbi=exports.universalResolverReverseAbi=exports.universalResolverResolveAbi=exports.multicall3Abi=void 0;exports.multicall3Abi=[{inputs:[{components:[{name:\"target\",type:\"address\"},{name:\"allowFailure\",type:\"bool\"},{name:\"callData\",type:\"bytes\"}],\nname:\"calls\",type:\"tuple[]\"}],name:\"aggregate3\",outputs:[{components:[{name:\"success\",type:\"bool\"},{name:\"returnData\",type:\"bytes\"}],name:\"returnData\",type:\"tuple[]\"}],stateMutability:\"view\",type:\"function\"}];global=[{inputs:[],name:\"ResolverNotFound\",type:\"error\"},{inputs:[],name:\"ResolverWildcardNotSupported\",type:\"error\"}];exports.universalResolverResolveAbi=[...global,{name:\"resolve\",type:\"function\",stateMutability:\"view\",inputs:[{name:\"name\",type:\"bytes\"},{name:\"data\",type:\"bytes\"}],outputs:[{name:\"\",\ntype:\"bytes\"},{name:\"address\",type:\"address\"}]}];exports.universalResolverReverseAbi=[...global,{name:\"reverse\",type:\"function\",stateMutability:\"view\",inputs:[{type:\"bytes\",name:\"reverseName\"}],outputs:[{type:\"string\",name:\"resolvedName\"},{type:\"address\",name:\"resolvedAddress\"},{type:\"address\",name:\"reverseResolver\"},{type:\"address\",name:\"resolver\"}]}];exports.textResolverAbi=[{name:\"text\",type:\"function\",stateMutability:\"view\",inputs:[{name:\"name\",type:\"bytes32\"},{name:\"key\",type:\"string\"}],outputs:[{name:\"\",\ntype:\"string\"}]}];exports.addressResolverAbi=[{name:\"addr\",type:\"function\",stateMutability:\"view\",inputs:[{name:\"name\",type:\"bytes32\"}],outputs:[{name:\"\",type:\"address\"}]},{name:\"addr\",type:\"function\",stateMutability:\"view\",inputs:[{name:\"name\",type:\"bytes32\"},{name:\"coinType\",type:\"uint256\"}],outputs:[{name:\"\",type:\"bytes\"}]}];exports.smartAccountAbi=[{name:\"isValidSignature\",type:\"function\",stateMutability:\"view\",inputs:[{name:\"hash\",type:\"bytes32\"},{name:\"signature\",type:\"bytes\"}],outputs:[{name:\"\",\ntype:\"bytes4\"}]}];exports.universalSignatureValidatorAbi=[{inputs:[{internalType:\"address\",name:\"_signer\",type:\"address\"},{internalType:\"bytes32\",name:\"_hash\",type:\"bytes32\"},{internalType:\"bytes\",name:\"_signature\",type:\"bytes\"}],stateMutability:\"nonpayable\",type:\"constructor\"}]}","~:source","shadow$provide[\"module$node_modules$viem$_cjs$constants$abis\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.universalSignatureValidatorAbi = exports.smartAccountAbi = exports.addressResolverAbi = exports.textResolverAbi = exports.universalResolverReverseAbi = exports.universalResolverResolveAbi = exports.multicall3Abi = void 0;\nexports.multicall3Abi = [\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        name: 'target',\n                        type: 'address',\n                    },\n                    {\n                        name: 'allowFailure',\n                        type: 'bool',\n                    },\n                    {\n                        name: 'callData',\n                        type: 'bytes',\n                    },\n                ],\n                name: 'calls',\n                type: 'tuple[]',\n            },\n        ],\n        name: 'aggregate3',\n        outputs: [\n            {\n                components: [\n                    {\n                        name: 'success',\n                        type: 'bool',\n                    },\n                    {\n                        name: 'returnData',\n                        type: 'bytes',\n                    },\n                ],\n                name: 'returnData',\n                type: 'tuple[]',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n];\nconst universalResolverErrors = [\n    {\n        inputs: [],\n        name: 'ResolverNotFound',\n        type: 'error',\n    },\n    {\n        inputs: [],\n        name: 'ResolverWildcardNotSupported',\n        type: 'error',\n    },\n];\nexports.universalResolverResolveAbi = [\n    ...universalResolverErrors,\n    {\n        name: 'resolve',\n        type: 'function',\n        stateMutability: 'view',\n        inputs: [\n            { name: 'name', type: 'bytes' },\n            { name: 'data', type: 'bytes' },\n        ],\n        outputs: [\n            { name: '', type: 'bytes' },\n            { name: 'address', type: 'address' },\n        ],\n    },\n];\nexports.universalResolverReverseAbi = [\n    ...universalResolverErrors,\n    {\n        name: 'reverse',\n        type: 'function',\n        stateMutability: 'view',\n        inputs: [{ type: 'bytes', name: 'reverseName' }],\n        outputs: [\n            { type: 'string', name: 'resolvedName' },\n            { type: 'address', name: 'resolvedAddress' },\n            { type: 'address', name: 'reverseResolver' },\n            { type: 'address', name: 'resolver' },\n        ],\n    },\n];\nexports.textResolverAbi = [\n    {\n        name: 'text',\n        type: 'function',\n        stateMutability: 'view',\n        inputs: [\n            { name: 'name', type: 'bytes32' },\n            { name: 'key', type: 'string' },\n        ],\n        outputs: [{ name: '', type: 'string' }],\n    },\n];\nexports.addressResolverAbi = [\n    {\n        name: 'addr',\n        type: 'function',\n        stateMutability: 'view',\n        inputs: [{ name: 'name', type: 'bytes32' }],\n        outputs: [{ name: '', type: 'address' }],\n    },\n    {\n        name: 'addr',\n        type: 'function',\n        stateMutability: 'view',\n        inputs: [\n            { name: 'name', type: 'bytes32' },\n            { name: 'coinType', type: 'uint256' },\n        ],\n        outputs: [{ name: '', type: 'bytes' }],\n    },\n];\nexports.smartAccountAbi = [\n    {\n        name: 'isValidSignature',\n        type: 'function',\n        stateMutability: 'view',\n        inputs: [\n            { name: 'hash', type: 'bytes32' },\n            { name: 'signature', type: 'bytes' },\n        ],\n        outputs: [{ name: '', type: 'bytes4' }],\n    },\n];\nexports.universalSignatureValidatorAbi = [\n    {\n        inputs: [\n            {\n                internalType: 'address',\n                name: '_signer',\n                type: 'address',\n            },\n            {\n                internalType: 'bytes32',\n                name: '_hash',\n                type: 'bytes32',\n            },\n            {\n                internalType: 'bytes',\n                name: '_signature',\n                type: 'bytes',\n            },\n        ],\n        stateMutability: 'nonpayable',\n        type: 'constructor',\n    },\n];\n//# sourceMappingURL=abis.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["textResolverAbi","addressResolverAbi","universalResolverResolveAbi","internalType","__esModule","name","stateMutability","value","outputs","smartAccountAbi","type","universalResolverReverseAbi","inputs","components","multicall3Abi","universalSignatureValidatorAbi"]],"~:compiled-at",1695111490260,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$viem$_cjs$constants$abis.js\",\n\"lineCount\":5,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/viem/_cjs/constants/abis.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$viem$_cjs$constants$abis\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.universalSignatureValidatorAbi = exports.smartAccountAbi = exports.addressResolverAbi = exports.textResolverAbi = exports.universalResolverReverseAbi = exports.universalResolverResolveAbi = exports.multicall3Abi = void 0;\\nexports.multicall3Abi = [\\n    {\\n        inputs: [\\n            {\\n                components: [\\n                    {\\n                        name: 'target',\\n                        type: 'address',\\n                    },\\n                    {\\n                        name: 'allowFailure',\\n                        type: 'bool',\\n                    },\\n                    {\\n                        name: 'callData',\\n                        type: 'bytes',\\n                    },\\n                ],\\n                name: 'calls',\\n                type: 'tuple[]',\\n            },\\n        ],\\n        name: 'aggregate3',\\n        outputs: [\\n            {\\n                components: [\\n                    {\\n                        name: 'success',\\n                        type: 'bool',\\n                    },\\n                    {\\n                        name: 'returnData',\\n                        type: 'bytes',\\n                    },\\n                ],\\n                name: 'returnData',\\n                type: 'tuple[]',\\n            },\\n        ],\\n        stateMutability: 'view',\\n        type: 'function',\\n    },\\n];\\nconst universalResolverErrors = [\\n    {\\n        inputs: [],\\n        name: 'ResolverNotFound',\\n        type: 'error',\\n    },\\n    {\\n        inputs: [],\\n        name: 'ResolverWildcardNotSupported',\\n        type: 'error',\\n    },\\n];\\nexports.universalResolverResolveAbi = [\\n    ...universalResolverErrors,\\n    {\\n        name: 'resolve',\\n        type: 'function',\\n        stateMutability: 'view',\\n        inputs: [\\n            { name: 'name', type: 'bytes' },\\n            { name: 'data', type: 'bytes' },\\n        ],\\n        outputs: [\\n            { name: '', type: 'bytes' },\\n            { name: 'address', type: 'address' },\\n        ],\\n    },\\n];\\nexports.universalResolverReverseAbi = [\\n    ...universalResolverErrors,\\n    {\\n        name: 'reverse',\\n        type: 'function',\\n        stateMutability: 'view',\\n        inputs: [{ type: 'bytes', name: 'reverseName' }],\\n        outputs: [\\n            { type: 'string', name: 'resolvedName' },\\n            { type: 'address', name: 'resolvedAddress' },\\n            { type: 'address', name: 'reverseResolver' },\\n            { type: 'address', name: 'resolver' },\\n        ],\\n    },\\n];\\nexports.textResolverAbi = [\\n    {\\n        name: 'text',\\n        type: 'function',\\n        stateMutability: 'view',\\n        inputs: [\\n            { name: 'name', type: 'bytes32' },\\n            { name: 'key', type: 'string' },\\n        ],\\n        outputs: [{ name: '', type: 'string' }],\\n    },\\n];\\nexports.addressResolverAbi = [\\n    {\\n        name: 'addr',\\n        type: 'function',\\n        stateMutability: 'view',\\n        inputs: [{ name: 'name', type: 'bytes32' }],\\n        outputs: [{ name: '', type: 'address' }],\\n    },\\n    {\\n        name: 'addr',\\n        type: 'function',\\n        stateMutability: 'view',\\n        inputs: [\\n            { name: 'name', type: 'bytes32' },\\n            { name: 'coinType', type: 'uint256' },\\n        ],\\n        outputs: [{ name: '', type: 'bytes' }],\\n    },\\n];\\nexports.smartAccountAbi = [\\n    {\\n        name: 'isValidSignature',\\n        type: 'function',\\n        stateMutability: 'view',\\n        inputs: [\\n            { name: 'hash', type: 'bytes32' },\\n            { name: 'signature', type: 'bytes' },\\n        ],\\n        outputs: [{ name: '', type: 'bytes4' }],\\n    },\\n];\\nexports.universalSignatureValidatorAbi = [\\n    {\\n        inputs: [\\n            {\\n                internalType: 'address',\\n                name: '_signer',\\n                type: 'address',\\n            },\\n            {\\n                internalType: 'bytes32',\\n                name: '_hash',\\n                type: 'bytes32',\\n            },\\n            {\\n                internalType: 'bytes',\\n                name: '_signature',\\n                type: 'bytes',\\n            },\\n        ],\\n        stateMutability: 'nonpayable',\\n        type: 'constructor',\\n    },\\n];\\n//# sourceMappingURL=abis.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"universalSignatureValidatorAbi\",\"smartAccountAbi\",\"addressResolverAbi\",\"textResolverAbi\",\"universalResolverReverseAbi\",\"universalResolverResolveAbi\",\"multicall3Abi\",\"inputs\",\"components\",\"name\",\"type\",\"outputs\",\"stateMutability\",\"universalResolverErrors\",\"internalType\"]\n}\n"]