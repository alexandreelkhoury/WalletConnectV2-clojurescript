["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/hash_DOT_js/lib/hash/sha/256.js"],"~:js","shadow$provide[85]=function(S,A,V,q){function F(){if(!(this instanceof F))return new F;B.call(this);this.h=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225];this.k=E;this.W=Array(64)}var G=A(81);S=A(82);q=A(83);var r=A(71),y=G.sum32,e=G.sum32_4,u=G.sum32_5,p=q.ch32,n=q.maj32,l=q.s0_256,h=q.s1_256,k=q.g0_256,t=q.g1_256,B=S.BlockHash,E=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,\n1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,\n2361852424,2428436474,2756734187,3204031479,3329325298];G.inherits(F,B);V.exports=F;F.blockSize=512;F.outSize=256;F.hmacStrength=192;F.padLength=64;F.prototype._update=function(H,D){for(var C=this.W,I=0;16>I;I++)C[I]=H[D+I];for(;I<C.length;I++)C[I]=e(t(C[I-2]),C[I-7],k(C[I-15]),C[I-16]);H=this.h[0];D=this.h[1];var M=this.h[2],P=this.h[3],J=this.h[4],T=this.h[5],N=this.h[6],a=this.h[7];r(this.k.length===C.length);for(I=0;I<C.length;I++){var b=u(a,h(J),p(J,T,N),this.k[I],C[I]),c=y(l(H),n(H,D,M));a=\nN;N=T;T=J;J=y(P,b);P=M;M=D;D=H;H=y(b,c)}this.h[0]=y(this.h[0],H);this.h[1]=y(this.h[1],D);this.h[2]=y(this.h[2],M);this.h[3]=y(this.h[3],P);this.h[4]=y(this.h[4],J);this.h[5]=y(this.h[5],T);this.h[6]=y(this.h[6],N);this.h[7]=y(this.h[7],a)};F.prototype._digest=function(H){return\"hex\"===H?G.toHex32(this.h,\"big\"):G.split32(this.h,\"big\")}}","~:source","shadow$provide[85] = function(global,require,module,exports) {\n'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$minimalistic_assert$index","~$module$node_modules$hash_DOT_js$lib$hash$sha$common","~$module$node_modules$hash_DOT_js$lib$hash$common","~$module$node_modules$hash_DOT_js$lib$hash$utils"]],"~:properties",["^5",["_digest","outSize","blockSize","k","padLength","hmacStrength","h","_update","W"]],"~:compiled-at",1695041440747,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$hash_DOT_js$lib$hash$sha$256.js\",\n\"lineCount\":4,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/hash_DOT_js/lib/hash/sha/256.js\"],\n\"sourcesContent\":[\"shadow$provide[85] = function(global,require,module,exports) {\\n'use strict';\\n\\nvar utils = require('../utils');\\nvar common = require('../common');\\nvar shaCommon = require('./common');\\nvar assert = require('minimalistic-assert');\\n\\nvar sum32 = utils.sum32;\\nvar sum32_4 = utils.sum32_4;\\nvar sum32_5 = utils.sum32_5;\\nvar ch32 = shaCommon.ch32;\\nvar maj32 = shaCommon.maj32;\\nvar s0_256 = shaCommon.s0_256;\\nvar s1_256 = shaCommon.s1_256;\\nvar g0_256 = shaCommon.g0_256;\\nvar g1_256 = shaCommon.g1_256;\\n\\nvar BlockHash = common.BlockHash;\\n\\nvar sha256_K = [\\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\\n];\\n\\nfunction SHA256() {\\n  if (!(this instanceof SHA256))\\n    return new SHA256();\\n\\n  BlockHash.call(this);\\n  this.h = [\\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\\n  ];\\n  this.k = sha256_K;\\n  this.W = new Array(64);\\n}\\nutils.inherits(SHA256, BlockHash);\\nmodule.exports = SHA256;\\n\\nSHA256.blockSize = 512;\\nSHA256.outSize = 256;\\nSHA256.hmacStrength = 192;\\nSHA256.padLength = 64;\\n\\nSHA256.prototype._update = function _update(msg, start) {\\n  var W = this.W;\\n\\n  for (var i = 0; i < 16; i++)\\n    W[i] = msg[start + i];\\n  for (; i < W.length; i++)\\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\\n\\n  var a = this.h[0];\\n  var b = this.h[1];\\n  var c = this.h[2];\\n  var d = this.h[3];\\n  var e = this.h[4];\\n  var f = this.h[5];\\n  var g = this.h[6];\\n  var h = this.h[7];\\n\\n  assert(this.k.length === W.length);\\n  for (i = 0; i < W.length; i++) {\\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\\n    h = g;\\n    g = f;\\n    f = e;\\n    e = sum32(d, T1);\\n    d = c;\\n    c = b;\\n    b = a;\\n    a = sum32(T1, T2);\\n  }\\n\\n  this.h[0] = sum32(this.h[0], a);\\n  this.h[1] = sum32(this.h[1], b);\\n  this.h[2] = sum32(this.h[2], c);\\n  this.h[3] = sum32(this.h[3], d);\\n  this.h[4] = sum32(this.h[4], e);\\n  this.h[5] = sum32(this.h[5], f);\\n  this.h[6] = sum32(this.h[6], g);\\n  this.h[7] = sum32(this.h[7], h);\\n};\\n\\nSHA256.prototype._digest = function digest(enc) {\\n  if (enc === 'hex')\\n    return utils.toHex32(this.h, 'big');\\n  else\\n    return utils.split32(this.h, 'big');\\n};\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"SHA256\",\"BlockHash\",\"call\",\"h\",\"k\",\"sha256_K\",\"W\",\"Array\",\"utils\",\"common\",\"shaCommon\",\"assert\",\"sum32\",\"sum32_4\",\"sum32_5\",\"ch32\",\"maj32\",\"s0_256\",\"s1_256\",\"g0_256\",\"g1_256\",\"inherits\",\"blockSize\",\"outSize\",\"hmacStrength\",\"padLength\",\"prototype\",\"_update\",\"SHA256.prototype._update\",\"msg\",\"start\",\"i\",\"length\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"T1\",\"T2\",\"_digest\",\"SHA256.prototype._digest\",\"enc\",\"toHex32\",\"split32\"]\n}\n"]