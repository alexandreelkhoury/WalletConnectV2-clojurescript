["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/elliptic/lib/elliptic/eddsa/key.js"],"~:js","shadow$provide[99]=function(S,A,V,q){function F(e,u){this.eddsa=e;this._secret=y(u.secret);e.isPoint(u.pub)?this._pub=u.pub:this._pubBytes=y(u.pub)}var G=A(73),r=G.assert,y=G.parseBytes;S=G.cachedProperty;F.fromPublic=function(e,u){return u instanceof F?u:new F(e,{pub:u})};F.fromSecret=function(e,u){return u instanceof F?u:new F(e,{secret:u})};F.prototype.secret=function(){return this._secret};S(F,\"pubBytes\",function(){return this.eddsa.encodePoint(this.pub())});S(F,\"pub\",function(){return this._pubBytes?\nthis.eddsa.decodePoint(this._pubBytes):this.eddsa.g.mul(this.priv())});S(F,\"privBytes\",function(){var e=this.eddsa,u=this.hash(),p=e.encodingLength-1;e=u.slice(0,e.encodingLength);e[0]&=248;e[p]&=127;e[p]|=64;return e});S(F,\"priv\",function(){return this.eddsa.decodeInt(this.privBytes())});S(F,\"hash\",function(){return this.eddsa.hash().update(this.secret()).digest()});S(F,\"messagePrefix\",function(){return this.hash().slice(this.eddsa.encodingLength)});F.prototype.sign=function(e){r(this._secret,\"KeyPair can only verify\");\nreturn this.eddsa.sign(e,this)};F.prototype.verify=function(e,u){return this.eddsa.verify(e,u,this)};F.prototype.getSecret=function(e){r(this._secret,\"KeyPair is public only\");return G.encode(this.secret(),e)};F.prototype.getPublic=function(e){return G.encode(this.pubBytes(),e)};V.exports=F}","~:source","shadow$provide[99] = function(global,require,module,exports) {\n'use strict';\n\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$elliptic$lib$elliptic$utils"]],"~:properties",["^5",["fromPublic","eddsa","_pubBytes","_secret","verify","getSecret","pub","fromSecret","secret","_pub","sign","getPublic"]],"~:compiled-at",1695041440755,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$elliptic$lib$elliptic$eddsa$key.js\",\n\"lineCount\":3,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/elliptic/lib/elliptic/eddsa/key.js\"],\n\"sourcesContent\":[\"shadow$provide[99] = function(global,require,module,exports) {\\n'use strict';\\n\\nvar utils = require('../utils');\\nvar assert = utils.assert;\\nvar parseBytes = utils.parseBytes;\\nvar cachedProperty = utils.cachedProperty;\\n\\n/**\\n* @param {EDDSA} eddsa - instance\\n* @param {Object} params - public/private key parameters\\n*\\n* @param {Array<Byte>} [params.secret] - secret seed bytes\\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\\n*\\n*/\\nfunction KeyPair(eddsa, params) {\\n  this.eddsa = eddsa;\\n  this._secret = parseBytes(params.secret);\\n  if (eddsa.isPoint(params.pub))\\n    this._pub = params.pub;\\n  else\\n    this._pubBytes = parseBytes(params.pub);\\n}\\n\\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\\n  if (pub instanceof KeyPair)\\n    return pub;\\n  return new KeyPair(eddsa, { pub: pub });\\n};\\n\\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\\n  if (secret instanceof KeyPair)\\n    return secret;\\n  return new KeyPair(eddsa, { secret: secret });\\n};\\n\\nKeyPair.prototype.secret = function secret() {\\n  return this._secret;\\n};\\n\\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\\n  return this.eddsa.encodePoint(this.pub());\\n});\\n\\ncachedProperty(KeyPair, 'pub', function pub() {\\n  if (this._pubBytes)\\n    return this.eddsa.decodePoint(this._pubBytes);\\n  return this.eddsa.g.mul(this.priv());\\n});\\n\\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\\n  var eddsa = this.eddsa;\\n  var hash = this.hash();\\n  var lastIx = eddsa.encodingLength - 1;\\n\\n  var a = hash.slice(0, eddsa.encodingLength);\\n  a[0] &= 248;\\n  a[lastIx] &= 127;\\n  a[lastIx] |= 64;\\n\\n  return a;\\n});\\n\\ncachedProperty(KeyPair, 'priv', function priv() {\\n  return this.eddsa.decodeInt(this.privBytes());\\n});\\n\\ncachedProperty(KeyPair, 'hash', function hash() {\\n  return this.eddsa.hash().update(this.secret()).digest();\\n});\\n\\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\\n  return this.hash().slice(this.eddsa.encodingLength);\\n});\\n\\nKeyPair.prototype.sign = function sign(message) {\\n  assert(this._secret, 'KeyPair can only verify');\\n  return this.eddsa.sign(message, this);\\n};\\n\\nKeyPair.prototype.verify = function verify(message, sig) {\\n  return this.eddsa.verify(message, sig, this);\\n};\\n\\nKeyPair.prototype.getSecret = function getSecret(enc) {\\n  assert(this._secret, 'KeyPair is public only');\\n  return utils.encode(this.secret(), enc);\\n};\\n\\nKeyPair.prototype.getPublic = function getPublic(enc) {\\n  return utils.encode(this.pubBytes(), enc);\\n};\\n\\nmodule.exports = KeyPair;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"KeyPair\",\"eddsa\",\"params\",\"_secret\",\"parseBytes\",\"secret\",\"isPoint\",\"pub\",\"_pub\",\"_pubBytes\",\"utils\",\"assert\",\"cachedProperty\",\"fromPublic\",\"KeyPair.fromPublic\",\"fromSecret\",\"KeyPair.fromSecret\",\"prototype\",\"KeyPair.prototype.secret\",\"pubBytes\",\"encodePoint\",\"decodePoint\",\"g\",\"mul\",\"priv\",\"privBytes\",\"hash\",\"lastIx\",\"encodingLength\",\"a\",\"slice\",\"decodeInt\",\"update\",\"digest\",\"messagePrefix\",\"sign\",\"KeyPair.prototype.sign\",\"message\",\"verify\",\"KeyPair.prototype.verify\",\"sig\",\"getSecret\",\"KeyPair.prototype.getSecret\",\"enc\",\"encode\",\"getPublic\",\"KeyPair.prototype.getPublic\"]\n}\n"]