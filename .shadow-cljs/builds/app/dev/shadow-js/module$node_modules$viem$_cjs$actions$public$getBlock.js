["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/viem/_cjs/actions/public/getBlock.js"],"~:js","shadow$provide.module$node_modules$viem$_cjs$actions$public$getBlock=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.getBlock=void 0;const block_js_1=require(\"module$node_modules$viem$_cjs$errors$block\"),toHex_js_1=require(\"module$node_modules$viem$_cjs$utils$encoding$toHex\"),block_js_2=require(\"module$node_modules$viem$_cjs$utils$formatters$block\");exports.getBlock=async function(client,{blockHash,blockNumber,blockTag:blockTag_,includeTransactions:includeTransactions_}=\n{}){blockTag_=blockTag_??\"latest\";includeTransactions_=includeTransactions_??!1;const blockNumberHex=void 0!==blockNumber?(0,toHex_js_1.numberToHex)(blockNumber):void 0;blockTag_=blockHash?await client.request({method:\"eth_getBlockByHash\",params:[blockHash,includeTransactions_]}):await client.request({method:\"eth_getBlockByNumber\",params:[blockNumberHex||blockTag_,includeTransactions_]});if(!blockTag_)throw new block_js_1.BlockNotFoundError({blockHash,blockNumber});return(client.chain?.formatters?.block?.format||\nblock_js_2.formatBlock)(blockTag_)}}","~:source","shadow$provide[\"module$node_modules$viem$_cjs$actions$public$getBlock\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getBlock = void 0;\nconst block_js_1 = require(\"../../errors/block.js\");\nconst toHex_js_1 = require(\"../../utils/encoding/toHex.js\");\nconst block_js_2 = require(\"../../utils/formatters/block.js\");\nasync function getBlock(client, { blockHash, blockNumber, blockTag: blockTag_, includeTransactions: includeTransactions_, } = {}) {\n    const blockTag = blockTag_ ?? 'latest';\n    const includeTransactions = includeTransactions_ ?? false;\n    const blockNumberHex = blockNumber !== undefined ? (0, toHex_js_1.numberToHex)(blockNumber) : undefined;\n    let block = null;\n    if (blockHash) {\n        block = await client.request({\n            method: 'eth_getBlockByHash',\n            params: [blockHash, includeTransactions],\n        });\n    }\n    else {\n        block = await client.request({\n            method: 'eth_getBlockByNumber',\n            params: [blockNumberHex || blockTag, includeTransactions],\n        });\n    }\n    if (!block)\n        throw new block_js_1.BlockNotFoundError({ blockHash, blockNumber });\n    const format = client.chain?.formatters?.block?.format || block_js_2.formatBlock;\n    return format(block);\n}\nexports.getBlock = getBlock;\n//# sourceMappingURL=getBlock.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$viem$_cjs$errors$block","~$shadow.js","~$module$node_modules$viem$_cjs$utils$formatters$block","~$module$node_modules$viem$_cjs$utils$encoding$toHex"]],"~:properties",["^5",["params","method","__esModule","getBlock","blockNumber","value","blockHash"]],"~:compiled-at",1695111490254,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$viem$_cjs$actions$public$getBlock.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,qDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAElHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAQI,CAAAA,QAAR,CAAmB,IAAK,EACxB,OAAMC,WAAaP,OAAA,CAAQ,4CAAR,CAAnB,CACMQ,WAAaR,OAAA,CAAQ,oDAAR,CADnB,CAEMS,WAAaT,OAAA,CAAQ,sDAAR,CAuBnBE,QAAQI,CAAAA,QAAR,CAtBAA,cAAuB,CAACI,MAAD,CAAS,CAAEC,SAAF,CAAaC,WAAb,CAA0B,SAAUC,SAApC,CAA+C,oBAAqBC,oBAApE,CAAA;AAA8F,EAAvG,CAA2G,CACxHC,SAAAA,CAAWF,SAAXE,EAAwB,QACxBC,qBAAAA,CAAsBF,oBAAtBE,EAA8C,CAAA,CACpD,OAAMC,eAAiCC,IAAAA,EAAhB,GAAAN,WAAA,CAA4B,GAAIJ,UAAWW,CAAAA,WAAf,EAA4BP,WAA5B,CAA5B,CAAuEM,IAAAA,EAG1FE,UAAA,CADAT,SAAJ,CACY,MAAMD,MAAOW,CAAAA,OAAP,CAAe,CACzBC,OAAQ,oBADiB,CAEzBC,OAAQ,CAACZ,SAAD,CAAYK,oBAAZ,CAFiB,CAAf,CADlB,CAOY,MAAMN,MAAOW,CAAAA,OAAP,CAAe,CACzBC,OAAQ,sBADiB,CAEzBC,OAAQ,CAACN,cAAD,EAAmBF,SAAnB,CAA6BC,oBAA7B,CAFiB,CAAf,CAKlB,IAAI,CAACI,SAAL,CACI,KAAM,KAAIb,UAAWiB,CAAAA,kBAAf,CAAkC,CAAEb,SAAF,CAAaC,WAAb,CAAlC,CAAN,CAEJ,MAAO,CADQF,MAAOe,CAAAA,KAAOC,EAAAA,UAAYN,EAAAA,KAAOO,EAAAA,MACzC;AADmDlB,UAAWmB,CAAAA,WAC9D,EAAOR,SAAP,CApBuH,CAPhB;\",\n\"sources\":[\"node_modules/viem/_cjs/actions/public/getBlock.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$viem$_cjs$actions$public$getBlock\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.getBlock = void 0;\\nconst block_js_1 = require(\\\"../../errors/block.js\\\");\\nconst toHex_js_1 = require(\\\"../../utils/encoding/toHex.js\\\");\\nconst block_js_2 = require(\\\"../../utils/formatters/block.js\\\");\\nasync function getBlock(client, { blockHash, blockNumber, blockTag: blockTag_, includeTransactions: includeTransactions_, } = {}) {\\n    const blockTag = blockTag_ ?? 'latest';\\n    const includeTransactions = includeTransactions_ ?? false;\\n    const blockNumberHex = blockNumber !== undefined ? (0, toHex_js_1.numberToHex)(blockNumber) : undefined;\\n    let block = null;\\n    if (blockHash) {\\n        block = await client.request({\\n            method: 'eth_getBlockByHash',\\n            params: [blockHash, includeTransactions],\\n        });\\n    }\\n    else {\\n        block = await client.request({\\n            method: 'eth_getBlockByNumber',\\n            params: [blockNumberHex || blockTag, includeTransactions],\\n        });\\n    }\\n    if (!block)\\n        throw new block_js_1.BlockNotFoundError({ blockHash, blockNumber });\\n    const format = client.chain?.formatters?.block?.format || block_js_2.formatBlock;\\n    return format(block);\\n}\\nexports.getBlock = getBlock;\\n//# sourceMappingURL=getBlock.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"getBlock\",\"block_js_1\",\"toHex_js_1\",\"block_js_2\",\"client\",\"blockHash\",\"blockNumber\",\"blockTag_\",\"includeTransactions_\",\"blockTag\",\"includeTransactions\",\"blockNumberHex\",\"undefined\",\"numberToHex\",\"block\",\"request\",\"method\",\"params\",\"BlockNotFoundError\",\"chain\",\"formatters\",\"format\",\"formatBlock\"]\n}\n"]