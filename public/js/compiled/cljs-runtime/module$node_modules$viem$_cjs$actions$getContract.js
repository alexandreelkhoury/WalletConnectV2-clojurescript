shadow$provide.module$node_modules$viem$_cjs$actions$getContract=function(global,require,module,exports){function getFunctionParameters(values){const hasArgs=values.length&&Array.isArray(values[0]);return{args:hasArgs?values[0]:[],options:(hasArgs?values[1]:values[0])??{}}}function getEventParameters(values,abiEvent){let hasArgs=!1;Array.isArray(values[0])?hasArgs=!0:1===values.length?hasArgs=abiEvent.inputs.some(x=>x.indexed):2===values.length&&(hasArgs=!0);return{args:hasArgs?values[0]:void 0,options:(hasArgs?
values[1]:values[0])??{}}}Object.defineProperty(exports,"__esModule",{value:!0});exports.getEventParameters=exports.getFunctionParameters=exports.getContract=void 0;const createContractEventFilter_js_1=require("module$node_modules$viem$_cjs$actions$public$createContractEventFilter"),estimateContractGas_js_1=require("module$node_modules$viem$_cjs$actions$public$estimateContractGas"),readContract_js_1=require("module$node_modules$viem$_cjs$actions$public$readContract"),simulateContract_js_1=require("module$node_modules$viem$_cjs$actions$public$simulateContract"),
watchContractEvent_js_1=require("module$node_modules$viem$_cjs$actions$public$watchContractEvent"),writeContract_js_1=require("module$node_modules$viem$_cjs$actions$wallet$writeContract");exports.getContract=function({abi,address,publicClient,walletClient}){const hasPublicClient=void 0!==publicClient&&null!==publicClient,hasWalletClient=void 0!==walletClient&&null!==walletClient,contract={};let hasReadFunction=!1,hasWriteFunction=!1,hasEvent=!1;for(const item of abi)if("function"===item.type?"view"===
item.stateMutability||"pure"===item.stateMutability?hasReadFunction=!0:hasWriteFunction=!0:"event"===item.type&&(hasEvent=!0),hasReadFunction&&hasWriteFunction&&hasEvent)break;hasPublicClient&&(hasReadFunction&&(contract.read=new Proxy({},{get(_,functionName){return(...parameters)=>{const {args,options}=getFunctionParameters(parameters);return(0,readContract_js_1.readContract)(publicClient,{abi,address,functionName,args,...options})}}})),hasWriteFunction&&(contract.simulate=new Proxy({},{get(_,functionName){return(...parameters)=>
{const {args,options}=getFunctionParameters(parameters);return(0,simulateContract_js_1.simulateContract)(publicClient,{abi,address,functionName,args,...options})}}})),hasEvent&&(contract.createEventFilter=new Proxy({},{get(_,eventName){return(...parameters)=>{const abiEvent=abi.find(x=>"event"===x.type&&x.name===eventName),{args,options}=getEventParameters(parameters,abiEvent);return(0,createContractEventFilter_js_1.createContractEventFilter)(publicClient,{abi,address,eventName,args,...options})}}}),
contract.watchEvent=new Proxy({},{get(_,eventName){return(...parameters)=>{const abiEvent=abi.find(x=>"event"===x.type&&x.name===eventName),{args,options}=getEventParameters(parameters,abiEvent);return(0,watchContractEvent_js_1.watchContractEvent)(publicClient,{abi,address,eventName,args,...options})}}})));hasWalletClient&&hasWriteFunction&&(contract.write=new Proxy({},{get(_,functionName){return(...parameters)=>{const {args,options}=getFunctionParameters(parameters);return(0,writeContract_js_1.writeContract)(walletClient,
{abi,address,functionName,args,...options})}}}));(hasPublicClient||hasWalletClient)&&hasWriteFunction&&(contract.estimateGas=new Proxy({},{get(_,functionName){return(...parameters)=>{const {args,options}=getFunctionParameters(parameters);return(0,estimateContractGas_js_1.estimateContractGas)(publicClient??walletClient,{abi,address,functionName,args,...options,account:options.account??walletClient.account})}}}));contract.address=address;contract.abi=abi;return contract};exports.getFunctionParameters=
getFunctionParameters;exports.getEventParameters=getEventParameters}
//# sourceMappingURL=module$node_modules$viem$_cjs$actions$getContract.js.map
