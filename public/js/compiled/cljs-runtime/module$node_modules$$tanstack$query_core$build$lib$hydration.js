shadow$provide.module$node_modules$$tanstack$query_core$build$lib$hydration=function(global,require,module,exports){function defaultShouldDehydrateMutation(mutation){return mutation.state.isPaused}function defaultShouldDehydrateQuery(query){return"success"===query.state.status}Object.defineProperty(exports,"__esModule",{value:!0});exports.defaultShouldDehydrateMutation=defaultShouldDehydrateMutation;exports.defaultShouldDehydrateQuery=defaultShouldDehydrateQuery;exports.dehydrate=function(client,
options={}){const mutations=[],queries=[];if(!1!==options.dehydrateMutations){const shouldDehydrateMutation=options.shouldDehydrateMutation||defaultShouldDehydrateMutation;client.getMutationCache().getAll().forEach(mutation=>{shouldDehydrateMutation(mutation)&&mutations.push({mutationKey:mutation.options.mutationKey,state:mutation.state})})}if(!1!==options.dehydrateQueries){const shouldDehydrateQuery=options.shouldDehydrateQuery||defaultShouldDehydrateQuery;client.getQueryCache().getAll().forEach(query=>
{shouldDehydrateQuery(query)&&queries.push({state:query.state,queryKey:query.queryKey,queryHash:query.queryHash})})}return{mutations,queries}};exports.hydrate=function(client,dehydratedState,options){if("object"===typeof dehydratedState&&null!==dehydratedState){var mutationCache=client.getMutationCache(),queryCache=client.getQueryCache(),queries=dehydratedState.queries||[];(dehydratedState.mutations||[]).forEach(dehydratedMutation=>{var _options$defaultOptio;mutationCache.build(client,{...(null==
options?void 0:null==(_options$defaultOptio=options.defaultOptions)?void 0:_options$defaultOptio.mutations),mutationKey:dehydratedMutation.mutationKey},dehydratedMutation.state)});queries.forEach(dehydratedQuery=>{var _options$defaultOptio2;const query=queryCache.get(dehydratedQuery.queryHash),dehydratedQueryState={...dehydratedQuery.state,fetchStatus:"idle"};query?query.state.dataUpdatedAt<dehydratedQueryState.dataUpdatedAt&&query.setState(dehydratedQueryState):queryCache.build(client,{...(null==
options?void 0:null==(_options$defaultOptio2=options.defaultOptions)?void 0:_options$defaultOptio2.queries),queryKey:dehydratedQuery.queryKey,queryHash:dehydratedQuery.queryHash},dehydratedQueryState)})}}}
//# sourceMappingURL=module$node_modules$$tanstack$query_core$build$lib$hydration.js.map
