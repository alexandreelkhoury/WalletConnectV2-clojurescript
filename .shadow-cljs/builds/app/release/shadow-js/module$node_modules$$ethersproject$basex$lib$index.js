["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@ethersproject/basex/lib/index.js"],"~:js","shadow$provide[110]=function(S,A,V,q){Object.defineProperty(q,\"__esModule\",{value:!0});q.Base58=q.Base32=q.BaseX=void 0;var F=A(11),G=A(17);S=function(){function r(y){(0,G.defineReadOnly)(this,\"alphabet\",y);(0,G.defineReadOnly)(this,\"base\",y.length);(0,G.defineReadOnly)(this,\"_alphabetMap\",{});(0,G.defineReadOnly)(this,\"_leader\",y.charAt(0));for(var e=0;e<y.length;e++)this._alphabetMap[y.charAt(e)]=e}r.prototype.encode=function(y){var e=(0,F.arrayify)(y);if(0===e.length)return\"\";y=[0];for(var u=0;u<\ne.length;++u){for(var p=e[u],n=0;n<y.length;++n)p+=y[n]<<8,y[n]=p%this.base,p=p/this.base|0;for(;0<p;)y.push(p%this.base),p=p/this.base|0}u=\"\";for(p=0;0===e[p]&&p<e.length-1;++p)u+=this._leader;for(e=y.length-1;0<=e;--e)u+=this.alphabet[y[e]];return u};r.prototype.decode=function(y){if(\"string\"!==typeof y)throw new TypeError(\"Expected String\");var e=[];if(0===y.length)return new Uint8Array(e);e.push(0);for(var u=0;u<y.length;u++){var p=this._alphabetMap[y[u]];if(void 0===p)throw Error(\"Non-base\"+\nthis.base+\" character\");for(var n=0;n<e.length;++n)p+=e[n]*this.base,e[n]=p&255,p>>=8;for(;0<p;)e.push(p&255),p>>=8}for(u=0;y[u]===this._leader&&u<y.length-1;++u)e.push(0);return(0,F.arrayify)(new Uint8Array(e.reverse()))};return r}();q.BaseX=S;A=new S(\"abcdefghijklmnopqrstuvwxyz234567\");q.Base32=A;S=new S(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");q.Base58=S}","~:source","shadow$provide[110] = function(global,require,module,exports) {\n\"use strict\";\n/**\n * var basex = require(\"base-x\");\n *\n * This implementation is heavily based on base-x. The main reason to\n * deviate was to prevent the dependency of Buffer.\n *\n * Contributors:\n *\n * base-x encoding\n * Forked from https://github.com/cryptocoinjs/bs58\n * Originally written by Mike Hearn for BitcoinJ\n * Copyright (c) 2011 Google Inc\n * Ported to JavaScript by Stefan Thomas\n * Merged Buffer refactorings from base58-native by Stephen Pair\n * Copyright (c) 2013 BitPay Inc\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Base58 = exports.Base32 = exports.BaseX = void 0;\nvar bytes_1 = require(\"@ethersproject/bytes\");\nvar properties_1 = require(\"@ethersproject/properties\");\nvar BaseX = /** @class */ (function () {\n    function BaseX(alphabet) {\n        (0, properties_1.defineReadOnly)(this, \"alphabet\", alphabet);\n        (0, properties_1.defineReadOnly)(this, \"base\", alphabet.length);\n        (0, properties_1.defineReadOnly)(this, \"_alphabetMap\", {});\n        (0, properties_1.defineReadOnly)(this, \"_leader\", alphabet.charAt(0));\n        // pre-compute lookup table\n        for (var i = 0; i < alphabet.length; i++) {\n            this._alphabetMap[alphabet.charAt(i)] = i;\n        }\n    }\n    BaseX.prototype.encode = function (value) {\n        var source = (0, bytes_1.arrayify)(value);\n        if (source.length === 0) {\n            return \"\";\n        }\n        var digits = [0];\n        for (var i = 0; i < source.length; ++i) {\n            var carry = source[i];\n            for (var j = 0; j < digits.length; ++j) {\n                carry += digits[j] << 8;\n                digits[j] = carry % this.base;\n                carry = (carry / this.base) | 0;\n            }\n            while (carry > 0) {\n                digits.push(carry % this.base);\n                carry = (carry / this.base) | 0;\n            }\n        }\n        var string = \"\";\n        // deal with leading zeros\n        for (var k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n            string += this._leader;\n        }\n        // convert digits to a string\n        for (var q = digits.length - 1; q >= 0; --q) {\n            string += this.alphabet[digits[q]];\n        }\n        return string;\n    };\n    BaseX.prototype.decode = function (value) {\n        if (typeof (value) !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n        var bytes = [];\n        if (value.length === 0) {\n            return new Uint8Array(bytes);\n        }\n        bytes.push(0);\n        for (var i = 0; i < value.length; i++) {\n            var byte = this._alphabetMap[value[i]];\n            if (byte === undefined) {\n                throw new Error(\"Non-base\" + this.base + \" character\");\n            }\n            var carry = byte;\n            for (var j = 0; j < bytes.length; ++j) {\n                carry += bytes[j] * this.base;\n                bytes[j] = carry & 0xff;\n                carry >>= 8;\n            }\n            while (carry > 0) {\n                bytes.push(carry & 0xff);\n                carry >>= 8;\n            }\n        }\n        // deal with leading zeros\n        for (var k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\n            bytes.push(0);\n        }\n        return (0, bytes_1.arrayify)(new Uint8Array(bytes.reverse()));\n    };\n    return BaseX;\n}());\nexports.BaseX = BaseX;\nvar Base32 = new BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");\nexports.Base32 = Base32;\nvar Base58 = new BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");\nexports.Base58 = Base58;\n//console.log(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\"))\n//console.log(Base58.encode(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\")))\n//# sourceMappingURL=index.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$$ethersproject$bytes$lib$index","~$module$node_modules$$ethersproject$properties$lib$index"]],"~:properties",["^5",["decode","__esModule","Base58","BaseX","value","Base32","encode"]],"~:compiled-at",1695041440780,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$ethersproject$basex$lib$index.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAyC9DC,MAAOC,CAAAA,cAAP,CAAsBF,CAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,EAAQI,CAAAA,MAAR,CAAiBJ,CAAQK,CAAAA,MAAzB,CAAkCL,CAAQM,CAAAA,KAA1C,CAAkD,IAAK,EACvD,KAAIC,EAAUT,CAAA,CAAQ,EAAR,CAAd,CACIU,EAAeV,CAAA,CAAQ,EAAR,CACfQ,EAAAA,CAAuB,QAAS,EAAG,CACnCA,QAASA,EAAK,CAACG,CAAD,CAAW,CACrB,GAAID,CAAaE,CAAAA,cAAjB,EAAiC,IAAjC,CAAuC,UAAvC,CAAmDD,CAAnD,CACA,IAAID,CAAaE,CAAAA,cAAjB,EAAiC,IAAjC,CAAuC,MAAvC,CAA+CD,CAASE,CAAAA,MAAxD,CACA,IAAIH,CAAaE,CAAAA,cAAjB,EAAiC,IAAjC,CAAuC,cAAvC,CAAuD,EAAvD,CACA,IAAIF,CAAaE,CAAAA,cAAjB,EAAiC,IAAjC,CAAuC,SAAvC,CAAkDD,CAASG,CAAAA,MAAT,CAAgB,CAAhB,CAAlD,CAEA,KAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBJ,CAASE,CAAAA,MAA7B,CAAqCE,CAAA,EAArC,CACI,IAAKC,CAAAA,YAAL,CAAkBL,CAASG,CAAAA,MAAT,CAAgBC,CAAhB,CAAlB,CAAA,CAAwCA,CAPvB,CAUzBP,CAAMS,CAAAA,SAAUC,CAAAA,MAAhB,CAAyBC,QAAS,CAACd,CAAD,CAAQ,CACtC,IAAIe,EAAS,GAAIX,CAAQY,CAAAA,QAAZ,EAAsBhB,CAAtB,CACb,IAAsB,CAAtB,GAAIe,CAAOP,CAAAA,MAAX,CACI,MAAO,EAEPS,EAAAA,CAAS,CAAC,CAAD,CACb,KAAK,IAAIP,EAAI,CAAb,CAAgBA,CAAhB;AAAoBK,CAAOP,CAAAA,MAA3B,CAAmC,EAAEE,CAArC,CAAwC,CAEpC,IADA,IAAIQ,EAAQH,CAAA,CAAOL,CAAP,CAAZ,CACSS,EAAI,CAAb,CAAgBA,CAAhB,CAAoBF,CAAOT,CAAAA,MAA3B,CAAmC,EAAEW,CAArC,CACID,CAEA,EAFSD,CAAA,CAAOE,CAAP,CAET,EAFsB,CAEtB,CADAF,CAAA,CAAOE,CAAP,CACA,CADYD,CACZ,CADoB,IAAKE,CAAAA,IACzB,CAAAF,CAAA,CAASA,CAAT,CAAiB,IAAKE,CAAAA,IAAtB,CAA8B,CAElC,KAAA,CAAe,CAAf,CAAOF,CAAP,CAAA,CACID,CAAOI,CAAAA,IAAP,CAAYH,CAAZ,CAAoB,IAAKE,CAAAA,IAAzB,CACA,CAAAF,CAAA,CAASA,CAAT,CAAiB,IAAKE,CAAAA,IAAtB,CAA8B,CATE,CAYpCE,CAAAA,CAAS,EAEb,KAASC,CAAT,CAAa,CAAb,CAA8B,CAA9B,GAAgBR,CAAA,CAAOQ,CAAP,CAAhB,EAAmCA,CAAnC,CAAuCR,CAAOP,CAAAA,MAA9C,CAAuD,CAAvD,CAA0D,EAAEe,CAA5D,CACID,CAAA,EAAU,IAAKE,CAAAA,OAGnB,KAASC,CAAT,CAAaR,CAAOT,CAAAA,MAApB,CAA6B,CAA7B,CAAqC,CAArC,EAAgCiB,CAAhC,CAAwC,EAAEA,CAA1C,CACIH,CAAA,EAAU,IAAKhB,CAAAA,QAAL,CAAcW,CAAA,CAAOQ,CAAP,CAAd,CAEd,OAAOH,EA3B+B,CA6B1CnB,EAAMS,CAAAA,SAAUc,CAAAA,MAAhB,CAAyBC,QAAS,CAAC3B,CAAD,CAAQ,CACtC,GAAuB,QAAvB,GAAI,MAAQA,EAAZ,CACI,KAAM,KAAI4B,SAAJ,CAAc,iBAAd,CAAN,CAEJ,IAAIC,EAAQ,EACZ,IAAqB,CAArB,GAAI7B,CAAMQ,CAAAA,MAAV,CACI,MAAO,KAAIsB,UAAJ,CAAeD,CAAf,CAEXA,EAAMR,CAAAA,IAAN,CAAW,CAAX,CACA,KAAK,IAAIX,EAAI,CAAb,CAAgBA,CAAhB,CAAoBV,CAAMQ,CAAAA,MAA1B,CAAkCE,CAAA,EAAlC,CAAuC,CACnC,IAAIqB,EAAO,IAAKpB,CAAAA,YAAL,CAAkBX,CAAA,CAAMU,CAAN,CAAlB,CACX,IAAasB,IAAAA,EAAb,GAAID,CAAJ,CACI,KAAUE,MAAJ,CAAU,UAAV;AAAuB,IAAKb,CAAAA,IAA5B,CAAmC,YAAnC,CAAN,CAGJ,IAAK,IAAID,EAAI,CAAb,CAAgBA,CAAhB,CAAoBU,CAAMrB,CAAAA,MAA1B,CAAkC,EAAEW,CAApC,CACID,CAEA,EAFSW,CAAA,CAAMV,CAAN,CAET,CAFoB,IAAKC,CAAAA,IAEzB,CADAS,CAAA,CAAMV,CAAN,CACA,CADWD,CACX,CADmB,GACnB,CAAAA,CAAA,GAAU,CAEd,KAAA,CAAe,CAAf,CAAOA,CAAP,CAAA,CACIW,CAAMR,CAAAA,IAAN,CAAWH,CAAX,CAAmB,GAAnB,CACA,CAAAA,CAAA,GAAU,CAbqB,CAiBvC,IAASK,CAAT,CAAa,CAAb,CAAgBvB,CAAA,CAAMuB,CAAN,CAAhB,GAA6B,IAAKC,CAAAA,OAAlC,EAA6CD,CAA7C,CAAiDvB,CAAMQ,CAAAA,MAAvD,CAAgE,CAAhE,CAAmE,EAAEe,CAArE,CACIM,CAAMR,CAAAA,IAAN,CAAW,CAAX,CAEJ,OAAO,GAAIjB,CAAQY,CAAAA,QAAZ,EAAsB,IAAIc,UAAJ,CAAeD,CAAMK,CAAAA,OAAN,EAAf,CAAtB,CA7B+B,CA+B1C,OAAO/B,EAvE4B,CAAZ,EAyE3BN,EAAQM,CAAAA,KAAR,CAAgBA,CACZD,EAAAA,CAAS,IAAIC,CAAJ,CAAU,kCAAV,CACbN,EAAQK,CAAAA,MAAR,CAAiBA,CACbD,EAAAA,CAAS,IAAIE,CAAJ,CAAU,4DAAV,CACbN,EAAQI,CAAAA,MAAR,CAAiBA,CA1H6C;\",\n\"sources\":[\"node_modules/@ethersproject/basex/lib/index.js\"],\n\"sourcesContent\":[\"shadow$provide[110] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n/**\\n * var basex = require(\\\"base-x\\\");\\n *\\n * This implementation is heavily based on base-x. The main reason to\\n * deviate was to prevent the dependency of Buffer.\\n *\\n * Contributors:\\n *\\n * base-x encoding\\n * Forked from https://github.com/cryptocoinjs/bs58\\n * Originally written by Mike Hearn for BitcoinJ\\n * Copyright (c) 2011 Google Inc\\n * Ported to JavaScript by Stefan Thomas\\n * Merged Buffer refactorings from base58-native by Stephen Pair\\n * Copyright (c) 2013 BitPay Inc\\n *\\n * The MIT License (MIT)\\n *\\n * Copyright base-x contributors (c) 2016\\n *\\n * Permission is hereby granted, free of charge, to any person obtaining a\\n * copy of this software and associated documentation files (the \\\"Software\\\"),\\n * to deal in the Software without restriction, including without limitation\\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\\n * and/or sell copies of the Software, and to permit persons to whom the\\n * Software is furnished to do so, subject to the following conditions:\\n *\\n * The above copyright notice and this permission notice shall be included in\\n * all copies or substantial portions of the Software.\\n\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\\n * IN THE SOFTWARE.\\n *\\n */\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.Base58 = exports.Base32 = exports.BaseX = void 0;\\nvar bytes_1 = require(\\\"@ethersproject/bytes\\\");\\nvar properties_1 = require(\\\"@ethersproject/properties\\\");\\nvar BaseX = /** @class */ (function () {\\n    function BaseX(alphabet) {\\n        (0, properties_1.defineReadOnly)(this, \\\"alphabet\\\", alphabet);\\n        (0, properties_1.defineReadOnly)(this, \\\"base\\\", alphabet.length);\\n        (0, properties_1.defineReadOnly)(this, \\\"_alphabetMap\\\", {});\\n        (0, properties_1.defineReadOnly)(this, \\\"_leader\\\", alphabet.charAt(0));\\n        // pre-compute lookup table\\n        for (var i = 0; i < alphabet.length; i++) {\\n            this._alphabetMap[alphabet.charAt(i)] = i;\\n        }\\n    }\\n    BaseX.prototype.encode = function (value) {\\n        var source = (0, bytes_1.arrayify)(value);\\n        if (source.length === 0) {\\n            return \\\"\\\";\\n        }\\n        var digits = [0];\\n        for (var i = 0; i < source.length; ++i) {\\n            var carry = source[i];\\n            for (var j = 0; j < digits.length; ++j) {\\n                carry += digits[j] << 8;\\n                digits[j] = carry % this.base;\\n                carry = (carry / this.base) | 0;\\n            }\\n            while (carry > 0) {\\n                digits.push(carry % this.base);\\n                carry = (carry / this.base) | 0;\\n            }\\n        }\\n        var string = \\\"\\\";\\n        // deal with leading zeros\\n        for (var k = 0; source[k] === 0 && k < source.length - 1; ++k) {\\n            string += this._leader;\\n        }\\n        // convert digits to a string\\n        for (var q = digits.length - 1; q >= 0; --q) {\\n            string += this.alphabet[digits[q]];\\n        }\\n        return string;\\n    };\\n    BaseX.prototype.decode = function (value) {\\n        if (typeof (value) !== \\\"string\\\") {\\n            throw new TypeError(\\\"Expected String\\\");\\n        }\\n        var bytes = [];\\n        if (value.length === 0) {\\n            return new Uint8Array(bytes);\\n        }\\n        bytes.push(0);\\n        for (var i = 0; i < value.length; i++) {\\n            var byte = this._alphabetMap[value[i]];\\n            if (byte === undefined) {\\n                throw new Error(\\\"Non-base\\\" + this.base + \\\" character\\\");\\n            }\\n            var carry = byte;\\n            for (var j = 0; j < bytes.length; ++j) {\\n                carry += bytes[j] * this.base;\\n                bytes[j] = carry & 0xff;\\n                carry >>= 8;\\n            }\\n            while (carry > 0) {\\n                bytes.push(carry & 0xff);\\n                carry >>= 8;\\n            }\\n        }\\n        // deal with leading zeros\\n        for (var k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\\n            bytes.push(0);\\n        }\\n        return (0, bytes_1.arrayify)(new Uint8Array(bytes.reverse()));\\n    };\\n    return BaseX;\\n}());\\nexports.BaseX = BaseX;\\nvar Base32 = new BaseX(\\\"abcdefghijklmnopqrstuvwxyz234567\\\");\\nexports.Base32 = Base32;\\nvar Base58 = new BaseX(\\\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\\\");\\nexports.Base58 = Base58;\\n//console.log(Base58.decode(\\\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\\\"))\\n//console.log(Base58.encode(Base58.decode(\\\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\\\")))\\n//# sourceMappingURL=index.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"Base58\",\"Base32\",\"BaseX\",\"bytes_1\",\"properties_1\",\"alphabet\",\"defineReadOnly\",\"length\",\"charAt\",\"i\",\"_alphabetMap\",\"prototype\",\"encode\",\"BaseX.prototype.encode\",\"source\",\"arrayify\",\"digits\",\"carry\",\"j\",\"base\",\"push\",\"string\",\"k\",\"_leader\",\"q\",\"decode\",\"BaseX.prototype.decode\",\"TypeError\",\"bytes\",\"Uint8Array\",\"byte\",\"undefined\",\"Error\",\"reverse\"]\n}\n"]