shadow$provide.module$node_modules$viem$_cjs$actions$public$getTransaction=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.getTransaction=void 0;const transaction_js_1=require("module$node_modules$viem$_cjs$errors$transaction"),toHex_js_1=require("module$node_modules$viem$_cjs$utils$encoding$toHex"),transaction_js_2=require("module$node_modules$viem$_cjs$utils$formatters$transaction");exports.getTransaction=async function(client,{blockHash,blockNumber,
blockTag:blockTag_,hash,index}){blockTag_=blockTag_||"latest";const blockNumberHex=void 0!==blockNumber?(0,toHex_js_1.numberToHex)(blockNumber):void 0;let transaction=null;if(hash)transaction=await client.request({method:"eth_getTransactionByHash",params:[hash]});else if(blockHash)transaction=await client.request({method:"eth_getTransactionByBlockHashAndIndex",params:[blockHash,(0,toHex_js_1.numberToHex)(index)]});else if(blockNumberHex||blockTag_)transaction=await client.request({method:"eth_getTransactionByBlockNumberAndIndex",
params:[blockNumberHex||blockTag_,(0,toHex_js_1.numberToHex)(index)]});if(!transaction)throw new transaction_js_1.TransactionNotFoundError({blockHash,blockNumber,blockTag:blockTag_,hash,index});return(client.chain?.formatters?.transaction?.format||transaction_js_2.formatTransaction)(transaction)}}
//# sourceMappingURL=module$node_modules$viem$_cjs$actions$public$getTransaction.js.map
