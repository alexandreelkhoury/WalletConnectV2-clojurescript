shadow$provide.module$node_modules$$tanstack$query_persist_client_core$build$lib$retryStrategies=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.removeOldestQuery=({persistedClient})=>{var mutations=[...persistedClient.clientState.mutations];const queries=[...persistedClient.clientState.queries];persistedClient={...persistedClient,clientState:{mutations,queries}};mutations=[...queries].sort((a,b)=>a.state.dataUpdatedAt-b.state.dataUpdatedAt);
if(0<mutations.length){const oldestData=mutations.shift();persistedClient.clientState.queries=queries.filter(q=>q!==oldestData);return persistedClient}}}
//# sourceMappingURL=module$node_modules$$tanstack$query_persist_client_core$build$lib$retryStrategies.js.map
