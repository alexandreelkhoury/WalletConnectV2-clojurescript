["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/browserify-sign/browser/index.js"],"~:js","shadow$provide[250]=function(S,A,V,q){function F(k){p.Writable.call(this);k=h[k];if(!k)throw Error(\"Unknown message digest\");this._hashType=k.hash;this._hash=u(k.hash);this._tag=k.id;this._signType=k.sign}function G(k){p.Writable.call(this);k=h[k];if(!k)throw Error(\"Unknown message digest\");this._hash=u(k.hash);this._tag=k.id;this._signType=k.sign}function r(k){return new F(k)}function y(k){return new G(k)}var e=A(111).Buffer,u=A(163),p=A(224);S=A(76);var n=A(248),l=A(249),h=A(167);Object.keys(h).forEach(function(k){h[k].id=\ne.from(h[k].id,\"hex\");h[k.toLowerCase()]=h[k]});S(F,p.Writable);F.prototype._write=function(k,t,B){this._hash.update(k);B()};F.prototype.update=function(k,t){\"string\"===typeof k&&(k=e.from(k,t));this._hash.update(k);return this};F.prototype.sign=function(k,t){this.end();var B=this._hash.digest();k=n(B,k,this._hashType,this._signType,this._tag);return t?k.toString(t):k};S(G,p.Writable);G.prototype._write=function(k,t,B){this._hash.update(k);B()};G.prototype.update=function(k,t){\"string\"===typeof k&&\n(k=e.from(k,t));this._hash.update(k);return this};G.prototype.verify=function(k,t,B){\"string\"===typeof t&&(t=e.from(t,B));this.end();B=this._hash.digest();return l(t,B,k,this._signType,this._tag)};V.exports={Sign:r,Verify:y,createSign:r,createVerify:y}}","~:source","shadow$provide[250] = function(global,require,module,exports) {\nvar Buffer = require('safe-buffer').Buffer\nvar createHash = require('create-hash')\nvar stream = require('readable-stream')\nvar inherits = require('inherits')\nvar sign = require('./sign')\nvar verify = require('./verify')\n\nvar algorithms = require('./algorithms.json')\nObject.keys(algorithms).forEach(function (key) {\n  algorithms[key].id = Buffer.from(algorithms[key].id, 'hex')\n  algorithms[key.toLowerCase()] = algorithms[key]\n})\n\nfunction Sign (algorithm) {\n  stream.Writable.call(this)\n\n  var data = algorithms[algorithm]\n  if (!data) throw new Error('Unknown message digest')\n\n  this._hashType = data.hash\n  this._hash = createHash(data.hash)\n  this._tag = data.id\n  this._signType = data.sign\n}\ninherits(Sign, stream.Writable)\n\nSign.prototype._write = function _write (data, _, done) {\n  this._hash.update(data)\n  done()\n}\n\nSign.prototype.update = function update (data, enc) {\n  if (typeof data === 'string') data = Buffer.from(data, enc)\n\n  this._hash.update(data)\n  return this\n}\n\nSign.prototype.sign = function signMethod (key, enc) {\n  this.end()\n  var hash = this._hash.digest()\n  var sig = sign(hash, key, this._hashType, this._signType, this._tag)\n\n  return enc ? sig.toString(enc) : sig\n}\n\nfunction Verify (algorithm) {\n  stream.Writable.call(this)\n\n  var data = algorithms[algorithm]\n  if (!data) throw new Error('Unknown message digest')\n\n  this._hash = createHash(data.hash)\n  this._tag = data.id\n  this._signType = data.sign\n}\ninherits(Verify, stream.Writable)\n\nVerify.prototype._write = function _write (data, _, done) {\n  this._hash.update(data)\n  done()\n}\n\nVerify.prototype.update = function update (data, enc) {\n  if (typeof data === 'string') data = Buffer.from(data, enc)\n\n  this._hash.update(data)\n  return this\n}\n\nVerify.prototype.verify = function verifyMethod (key, sig, enc) {\n  if (typeof sig === 'string') sig = Buffer.from(sig, enc)\n\n  this.end()\n  var hash = this._hash.digest()\n  return verify(sig, hash, key, this._signType, this._tag)\n}\n\nfunction createSign (algorithm) {\n  return new Sign(algorithm)\n}\n\nfunction createVerify (algorithm) {\n  return new Verify(algorithm)\n}\n\nmodule.exports = {\n  Sign: createSign,\n  Verify: createVerify,\n  createSign: createSign,\n  createVerify: createVerify\n}\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$browserify_sign$browser$algorithms_json","~$module$node_modules$create_hash$browser","~$shadow.js","~$module$node_modules$browserify_sign$browser$sign","~$module$node_modules$inherits$inherits_browser","~$module$node_modules$safe_buffer$index","~$module$node_modules$browserify_sign$browser$verify","~$module$node_modules$browserify_sign$node_modules$readable_stream$readable_browser"]],"~:properties",["^5",["_hashType","id","createVerify","update","Sign","verify","Verify","_write","_tag","_hash","_signType","createSign","sign"]],"~:compiled-at",1695041440861,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$browserify_sign$browser$index.js\",\n\"lineCount\":3,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/browserify-sign/browser/index.js\"],\n\"sourcesContent\":[\"shadow$provide[250] = function(global,require,module,exports) {\\nvar Buffer = require('safe-buffer').Buffer\\nvar createHash = require('create-hash')\\nvar stream = require('readable-stream')\\nvar inherits = require('inherits')\\nvar sign = require('./sign')\\nvar verify = require('./verify')\\n\\nvar algorithms = require('./algorithms.json')\\nObject.keys(algorithms).forEach(function (key) {\\n  algorithms[key].id = Buffer.from(algorithms[key].id, 'hex')\\n  algorithms[key.toLowerCase()] = algorithms[key]\\n})\\n\\nfunction Sign (algorithm) {\\n  stream.Writable.call(this)\\n\\n  var data = algorithms[algorithm]\\n  if (!data) throw new Error('Unknown message digest')\\n\\n  this._hashType = data.hash\\n  this._hash = createHash(data.hash)\\n  this._tag = data.id\\n  this._signType = data.sign\\n}\\ninherits(Sign, stream.Writable)\\n\\nSign.prototype._write = function _write (data, _, done) {\\n  this._hash.update(data)\\n  done()\\n}\\n\\nSign.prototype.update = function update (data, enc) {\\n  if (typeof data === 'string') data = Buffer.from(data, enc)\\n\\n  this._hash.update(data)\\n  return this\\n}\\n\\nSign.prototype.sign = function signMethod (key, enc) {\\n  this.end()\\n  var hash = this._hash.digest()\\n  var sig = sign(hash, key, this._hashType, this._signType, this._tag)\\n\\n  return enc ? sig.toString(enc) : sig\\n}\\n\\nfunction Verify (algorithm) {\\n  stream.Writable.call(this)\\n\\n  var data = algorithms[algorithm]\\n  if (!data) throw new Error('Unknown message digest')\\n\\n  this._hash = createHash(data.hash)\\n  this._tag = data.id\\n  this._signType = data.sign\\n}\\ninherits(Verify, stream.Writable)\\n\\nVerify.prototype._write = function _write (data, _, done) {\\n  this._hash.update(data)\\n  done()\\n}\\n\\nVerify.prototype.update = function update (data, enc) {\\n  if (typeof data === 'string') data = Buffer.from(data, enc)\\n\\n  this._hash.update(data)\\n  return this\\n}\\n\\nVerify.prototype.verify = function verifyMethod (key, sig, enc) {\\n  if (typeof sig === 'string') sig = Buffer.from(sig, enc)\\n\\n  this.end()\\n  var hash = this._hash.digest()\\n  return verify(sig, hash, key, this._signType, this._tag)\\n}\\n\\nfunction createSign (algorithm) {\\n  return new Sign(algorithm)\\n}\\n\\nfunction createVerify (algorithm) {\\n  return new Verify(algorithm)\\n}\\n\\nmodule.exports = {\\n  Sign: createSign,\\n  Verify: createVerify,\\n  createSign: createSign,\\n  createVerify: createVerify\\n}\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Sign\",\"algorithm\",\"stream\",\"Writable\",\"call\",\"data\",\"algorithms\",\"Error\",\"_hashType\",\"hash\",\"_hash\",\"createHash\",\"_tag\",\"id\",\"_signType\",\"sign\",\"Verify\",\"createSign\",\"createVerify\",\"Buffer\",\"inherits\",\"verify\",\"Object\",\"keys\",\"forEach\",\"key\",\"from\",\"toLowerCase\",\"prototype\",\"_write\",\"Sign.prototype._write\",\"_\",\"done\",\"update\",\"Sign.prototype.update\",\"enc\",\"Sign.prototype.sign\",\"end\",\"digest\",\"sig\",\"toString\",\"Verify.prototype._write\",\"Verify.prototype.update\",\"Verify.prototype.verify\"]\n}\n"]