shadow$provide.module$node_modules$$tanstack$react_query$build$lib$QueryClientProvider=function(global,require,module,exports){function getQueryClientContext(context,contextSharing){return context?context:contextSharing&&"undefined"!==typeof window?(window.ReactQueryClientContext||(window.ReactQueryClientContext=defaultContext),window.ReactQueryClientContext):defaultContext}"use client";"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var React__namespace=function(e){if(e&&e.__esModule)return e;
var n=Object.create(null);e&&Object.keys(e).forEach(function(k){if("default"!==k){var d=Object.getOwnPropertyDescriptor(e,k);Object.defineProperty(n,k,d.get?d:{enumerable:!0,get:function(){return e[k]}})}});n["default"]=e;return Object.freeze(n)}(require("module$node_modules$react$index"));const defaultContext=React__namespace.createContext(void 0),QueryClientSharingContext=React__namespace.createContext(!1);exports.QueryClientProvider=({client,children,context,contextSharing=!1})=>{React__namespace.useEffect(()=>
{client.mount();return()=>{client.unmount()}},[client]);contextSharing&&client.getLogger().error("The contextSharing option has been deprecated and will be removed in the next major version");const Context=getQueryClientContext(context,contextSharing);return React__namespace.createElement(QueryClientSharingContext.Provider,{value:!context&&contextSharing},React__namespace.createElement(Context.Provider,{value:client},children))};exports.defaultContext=defaultContext;exports.useQueryClient=({context}=
{})=>{context=React__namespace.useContext(getQueryClientContext(context,React__namespace.useContext(QueryClientSharingContext)));if(!context)throw Error("No QueryClient set, use QueryClientProvider to set one");return context}}
//# sourceMappingURL=module$node_modules$$tanstack$react_query$build$lib$QueryClientProvider.js.map
