shadow$provide.module$node_modules$viem$_cjs$utils$ens$avatar$parseAvatarRecord=function(global,require,module,exports){async function parseNftAvatarUri(client,{gatewayUrls,record}){record=(0,utils_js_1.parseNftUri)(record);client=await (0,utils_js_1.getNftTokenUri)(client,{nft:record});const {uri:resolvedNftUri,isOnChain,isEncoded}=(0,utils_js_1.resolveAvatarUri)({uri:client,gatewayUrls});if(isOnChain&&(resolvedNftUri.includes("data:application/json;base64,")||resolvedNftUri.startsWith("{")))return record=
isEncoded?atob(resolvedNftUri.replace("data:application/json;base64,","")):resolvedNftUri,record=JSON.parse(record),(0,utils_js_1.parseAvatarUri)({uri:(0,utils_js_1.getJsonImage)(record),gatewayUrls});client=record.tokenID;"erc1155"===record.namespace&&(client=client.replace("0x","").padStart(64,"0"));return(0,utils_js_1.getMetadataAvatarUri)({gatewayUrls,uri:resolvedNftUri.replace(/(?:0x)?{id}/,client)})}Object.defineProperty(exports,"__esModule",{value:!0});exports.parseAvatarRecord=void 0;const utils_js_1=
require("module$node_modules$viem$_cjs$utils$ens$avatar$utils");exports.parseAvatarRecord=async function(client,{gatewayUrls,record}){return/eip155:/i.test(record)?parseNftAvatarUri(client,{gatewayUrls,record}):(0,utils_js_1.parseAvatarUri)({uri:record,gatewayUrls})}}
//# sourceMappingURL=module$node_modules$viem$_cjs$utils$ens$avatar$parseAvatarRecord.js.map
