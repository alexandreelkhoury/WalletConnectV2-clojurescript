["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/viem/_cjs/actions/ens/getEnsAddress.js"],"~:js","shadow$provide.module$node_modules$viem$_cjs$actions$ens$getEnsAddress=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.getEnsAddress=void 0;const abis_js_1=require(\"module$node_modules$viem$_cjs$constants$abis\"),decodeFunctionResult_js_1=require(\"module$node_modules$viem$_cjs$utils$abi$decodeFunctionResult\"),encodeFunctionData_js_1=require(\"module$node_modules$viem$_cjs$utils$abi$encodeFunctionData\"),chain_js_1=require(\"module$node_modules$viem$_cjs$utils$chain\"),\ntrim_js_1=require(\"module$node_modules$viem$_cjs$utils$data$trim\"),toHex_js_1=require(\"module$node_modules$viem$_cjs$utils$encoding$toHex\"),errors_js_1=require(\"module$node_modules$viem$_cjs$utils$ens$errors\"),namehash_js_1=require(\"module$node_modules$viem$_cjs$utils$ens$namehash\"),packetToBytes_js_1=require(\"module$node_modules$viem$_cjs$utils$ens$packetToBytes\"),readContract_js_1=require(\"module$node_modules$viem$_cjs$actions$public$readContract\");exports.getEnsAddress=async function(client,{blockNumber,\nblockTag,coinType,name,universalResolverAddress:universalResolverAddress_}){if(!universalResolverAddress_){if(!client.chain)throw Error(\"client chain not configured. universalResolverAddress is required.\");universalResolverAddress_=(0,chain_js_1.getChainContractAddress)({blockNumber,chain:client.chain,contract:\"ensUniversalResolver\"})}try{const functionData=(0,encodeFunctionData_js_1.encodeFunctionData)({abi:abis_js_1.addressResolverAbi,functionName:\"addr\",...(null!=coinType?{args:[(0,namehash_js_1.namehash)(name),\nBigInt(coinType)]}:{args:[(0,namehash_js_1.namehash)(name)]})}),res=await (0,readContract_js_1.readContract)(client,{address:universalResolverAddress_,abi:abis_js_1.universalResolverResolveAbi,functionName:\"resolve\",args:[(0,toHex_js_1.toHex)((0,packetToBytes_js_1.packetToBytes)(name)),functionData],blockNumber,blockTag});if(\"0x\"===res[0])return null;const address=(0,decodeFunctionResult_js_1.decodeFunctionResult)({abi:abis_js_1.addressResolverAbi,args:null!=coinType?[(0,namehash_js_1.namehash)(name),\nBigInt(coinType)]:void 0,functionName:\"addr\",data:res[0]});return\"0x\"===address||\"0x00\"===(0,trim_js_1.trim)(address)?null:address}catch(err){if((0,errors_js_1.isNullUniversalResolverError)(err,\"resolve\"))return null;throw err;}}}","~:source","shadow$provide[\"module$node_modules$viem$_cjs$actions$ens$getEnsAddress\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEnsAddress = void 0;\nconst abis_js_1 = require(\"../../constants/abis.js\");\nconst decodeFunctionResult_js_1 = require(\"../../utils/abi/decodeFunctionResult.js\");\nconst encodeFunctionData_js_1 = require(\"../../utils/abi/encodeFunctionData.js\");\nconst chain_js_1 = require(\"../../utils/chain.js\");\nconst trim_js_1 = require(\"../../utils/data/trim.js\");\nconst toHex_js_1 = require(\"../../utils/encoding/toHex.js\");\nconst errors_js_1 = require(\"../../utils/ens/errors.js\");\nconst namehash_js_1 = require(\"../../utils/ens/namehash.js\");\nconst packetToBytes_js_1 = require(\"../../utils/ens/packetToBytes.js\");\nconst readContract_js_1 = require(\"../public/readContract.js\");\nasync function getEnsAddress(client, { blockNumber, blockTag, coinType, name, universalResolverAddress: universalResolverAddress_, }) {\n    let universalResolverAddress = universalResolverAddress_;\n    if (!universalResolverAddress) {\n        if (!client.chain)\n            throw new Error('client chain not configured. universalResolverAddress is required.');\n        universalResolverAddress = (0, chain_js_1.getChainContractAddress)({\n            blockNumber,\n            chain: client.chain,\n            contract: 'ensUniversalResolver',\n        });\n    }\n    try {\n        const functionData = (0, encodeFunctionData_js_1.encodeFunctionData)({\n            abi: abis_js_1.addressResolverAbi,\n            functionName: 'addr',\n            ...(coinType != null\n                ? { args: [(0, namehash_js_1.namehash)(name), BigInt(coinType)] }\n                : { args: [(0, namehash_js_1.namehash)(name)] }),\n        });\n        const res = await (0, readContract_js_1.readContract)(client, {\n            address: universalResolverAddress,\n            abi: abis_js_1.universalResolverResolveAbi,\n            functionName: 'resolve',\n            args: [(0, toHex_js_1.toHex)((0, packetToBytes_js_1.packetToBytes)(name)), functionData],\n            blockNumber,\n            blockTag,\n        });\n        if (res[0] === '0x')\n            return null;\n        const address = (0, decodeFunctionResult_js_1.decodeFunctionResult)({\n            abi: abis_js_1.addressResolverAbi,\n            args: coinType != null ? [(0, namehash_js_1.namehash)(name), BigInt(coinType)] : undefined,\n            functionName: 'addr',\n            data: res[0],\n        });\n        if (address === '0x')\n            return null;\n        if ((0, trim_js_1.trim)(address) === '0x00')\n            return null;\n        return address;\n    }\n    catch (err) {\n        if ((0, errors_js_1.isNullUniversalResolverError)(err, 'resolve'))\n            return null;\n        throw err;\n    }\n}\nexports.getEnsAddress = getEnsAddress;\n//# sourceMappingURL=getEnsAddress.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$viem$_cjs$constants$abis","~$module$node_modules$viem$_cjs$utils$abi$decodeFunctionResult","~$module$node_modules$viem$_cjs$utils$ens$errors","~$module$node_modules$viem$_cjs$utils$abi$encodeFunctionData","~$module$node_modules$viem$_cjs$utils$data$trim","~$shadow.js","~$module$node_modules$viem$_cjs$utils$chain","~$module$node_modules$viem$_cjs$utils$encoding$toHex","~$module$node_modules$viem$_cjs$utils$ens$namehash","~$module$node_modules$viem$_cjs$actions$public$readContract","~$module$node_modules$viem$_cjs$utils$ens$packetToBytes"]],"~:properties",["^5",["abi","args","getEnsAddress","__esModule","blockNumber","value","address","contract","blockTag","functionName","data","chain"]],"~:compiled-at",1695111490289,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$viem$_cjs$actions$ens$getEnsAddress.js\",\n\"lineCount\":5,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/viem/_cjs/actions/ens/getEnsAddress.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$viem$_cjs$actions$ens$getEnsAddress\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.getEnsAddress = void 0;\\nconst abis_js_1 = require(\\\"../../constants/abis.js\\\");\\nconst decodeFunctionResult_js_1 = require(\\\"../../utils/abi/decodeFunctionResult.js\\\");\\nconst encodeFunctionData_js_1 = require(\\\"../../utils/abi/encodeFunctionData.js\\\");\\nconst chain_js_1 = require(\\\"../../utils/chain.js\\\");\\nconst trim_js_1 = require(\\\"../../utils/data/trim.js\\\");\\nconst toHex_js_1 = require(\\\"../../utils/encoding/toHex.js\\\");\\nconst errors_js_1 = require(\\\"../../utils/ens/errors.js\\\");\\nconst namehash_js_1 = require(\\\"../../utils/ens/namehash.js\\\");\\nconst packetToBytes_js_1 = require(\\\"../../utils/ens/packetToBytes.js\\\");\\nconst readContract_js_1 = require(\\\"../public/readContract.js\\\");\\nasync function getEnsAddress(client, { blockNumber, blockTag, coinType, name, universalResolverAddress: universalResolverAddress_, }) {\\n    let universalResolverAddress = universalResolverAddress_;\\n    if (!universalResolverAddress) {\\n        if (!client.chain)\\n            throw new Error('client chain not configured. universalResolverAddress is required.');\\n        universalResolverAddress = (0, chain_js_1.getChainContractAddress)({\\n            blockNumber,\\n            chain: client.chain,\\n            contract: 'ensUniversalResolver',\\n        });\\n    }\\n    try {\\n        const functionData = (0, encodeFunctionData_js_1.encodeFunctionData)({\\n            abi: abis_js_1.addressResolverAbi,\\n            functionName: 'addr',\\n            ...(coinType != null\\n                ? { args: [(0, namehash_js_1.namehash)(name), BigInt(coinType)] }\\n                : { args: [(0, namehash_js_1.namehash)(name)] }),\\n        });\\n        const res = await (0, readContract_js_1.readContract)(client, {\\n            address: universalResolverAddress,\\n            abi: abis_js_1.universalResolverResolveAbi,\\n            functionName: 'resolve',\\n            args: [(0, toHex_js_1.toHex)((0, packetToBytes_js_1.packetToBytes)(name)), functionData],\\n            blockNumber,\\n            blockTag,\\n        });\\n        if (res[0] === '0x')\\n            return null;\\n        const address = (0, decodeFunctionResult_js_1.decodeFunctionResult)({\\n            abi: abis_js_1.addressResolverAbi,\\n            args: coinType != null ? [(0, namehash_js_1.namehash)(name), BigInt(coinType)] : undefined,\\n            functionName: 'addr',\\n            data: res[0],\\n        });\\n        if (address === '0x')\\n            return null;\\n        if ((0, trim_js_1.trim)(address) === '0x00')\\n            return null;\\n        return address;\\n    }\\n    catch (err) {\\n        if ((0, errors_js_1.isNullUniversalResolverError)(err, 'resolve'))\\n            return null;\\n        throw err;\\n    }\\n}\\nexports.getEnsAddress = getEnsAddress;\\n//# sourceMappingURL=getEnsAddress.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"getEnsAddress\",\"abis_js_1\",\"decodeFunctionResult_js_1\",\"encodeFunctionData_js_1\",\"chain_js_1\",\"trim_js_1\",\"toHex_js_1\",\"errors_js_1\",\"namehash_js_1\",\"packetToBytes_js_1\",\"readContract_js_1\",\"client\",\"blockNumber\",\"blockTag\",\"coinType\",\"name\",\"universalResolverAddress_\",\"universalResolverAddress\",\"chain\",\"Error\",\"getChainContractAddress\",\"contract\",\"functionData\",\"encodeFunctionData\",\"abi\",\"addressResolverAbi\",\"functionName\",\"args\",\"namehash\",\"BigInt\",\"res\",\"readContract\",\"address\",\"universalResolverResolveAbi\",\"toHex\",\"packetToBytes\",\"decodeFunctionResult\",\"undefined\",\"data\",\"trim\",\"err\",\"isNullUniversalResolverError\"]\n}\n"]