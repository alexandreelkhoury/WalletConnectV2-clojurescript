["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@ethersproject/transactions/lib/index.js"],"~:js","shadow$provide[107]=function(S,A,V,q){function F(d){return\"0x\"===d?null:(0,H.getAddress)(d)}function G(d){return\"0x\"===d?I.Zero:D.BigNumber.from(d)}function r(d){d=(0,T.computePublicKey)(d);return(0,H.getAddress)((0,C.hexDataSlice)((0,M.keccak256)((0,C.hexDataSlice)(d,1)),12))}function y(d,f){return r((0,T.recoverPublicKey)((0,C.arrayify)(d),f))}function e(d,f){var g=(0,C.stripZeros)(D.BigNumber.from(d).toHexString());32<g.length&&a.throwArgumentError(\"invalid length for \"+f,\"transaction:\"+f,d);return g}\nfunction u(d,f){return{address:(0,H.getAddress)(d),storageKeys:(f||[]).map(function(g,m){32!==(0,C.hexDataLength)(g)&&a.throwArgumentError(\"invalid access list storageKey\",\"accessList[\"+d+\":\"+m+\"]\",g);return g.toLowerCase()})}}function p(d){if(Array.isArray(d))return d.map(function(g,m){return Array.isArray(g)?(2<g.length&&a.throwArgumentError(\"access list expected to be [ address, storageKeys[] ]\",\"value[\"+m+\"]\",g),u(g[0],g[1])):u(g.address,g.storageKeys)});var f=Object.keys(d).map(function(g){var m=\nd[g].reduce(function(w,x){w[x]=!0;return w},{});return u(g,Object.keys(m).sort())});f.sort(function(g,m){return g.address.localeCompare(m.address)});return f}function n(d){return p(d).map(function(f){return[f.address,f.storageKeys]})}function l(d,f){if(null!=d.gasPrice){var g=D.BigNumber.from(d.gasPrice),m=D.BigNumber.from(d.maxFeePerGas||0);g.eq(m)||a.throwArgumentError(\"mismatch EIP-1559 gasPrice !\\x3d maxFeePerGas\",\"tx\",{gasPrice:g,maxFeePerGas:m})}d=[e(d.chainId||0,\"chainId\"),e(d.nonce||0,\"nonce\"),\ne(d.maxPriorityFeePerGas||0,\"maxPriorityFeePerGas\"),e(d.maxFeePerGas||0,\"maxFeePerGas\"),e(d.gasLimit||0,\"gasLimit\"),null!=d.to?(0,H.getAddress)(d.to):\"0x\",e(d.value||0,\"value\"),d.data||\"0x\",n(d.accessList||[])];f&&(f=(0,C.splitSignature)(f),d.push(e(f.recoveryParam,\"recoveryParam\")),d.push((0,C.stripZeros)(f.r)),d.push((0,C.stripZeros)(f.s)));return(0,C.hexConcat)([\"0x02\",J.encode(d)])}function h(d,f){d=[e(d.chainId||0,\"chainId\"),e(d.nonce||0,\"nonce\"),e(d.gasPrice||0,\"gasPrice\"),e(d.gasLimit||0,\"gasLimit\"),\nnull!=d.to?(0,H.getAddress)(d.to):\"0x\",e(d.value||0,\"value\"),d.data||\"0x\",n(d.accessList||[])];f&&(f=(0,C.splitSignature)(f),d.push(e(f.recoveryParam,\"recoveryParam\")),d.push((0,C.stripZeros)(f.r)),d.push((0,C.stripZeros)(f.s)));return(0,C.hexConcat)([\"0x01\",J.encode(d)])}function k(d,f){(0,P.checkProperties)(d,c);var g=[];b.forEach(function(z){var v=d[z.name]||[],R={};z.numeric&&(R.hexPad=\"left\");v=(0,C.arrayify)((0,C.hexlify)(v,R));z.length&&v.length!==z.length&&0<v.length&&a.throwArgumentError(\"invalid length for \"+\nz.name,\"transaction:\"+z.name,v);z.maxLength&&(v=(0,C.stripZeros)(v),v.length>z.maxLength&&a.throwArgumentError(\"invalid length for \"+z.name,\"transaction:\"+z.name,v));g.push((0,C.hexlify)(v))});var m=0;null!=d.chainId?(m=d.chainId,\"number\"!==typeof m&&a.throwArgumentError(\"invalid transaction.chainId\",\"transaction\",d)):f&&!(0,C.isBytesLike)(f)&&28<f.v&&(m=Math.floor((f.v-35)/2));0!==m&&(g.push((0,C.hexlify)(m)),g.push(\"0x\"),g.push(\"0x\"));if(!f)return J.encode(g);var w=(0,C.splitSignature)(f),x=27+\nw.recoveryParam;0!==m?(g.pop(),g.pop(),g.pop(),x+=2*m+8,28<w.v&&w.v!==x&&a.throwArgumentError(\"transaction.chainId/signature.v mismatch\",\"signature\",f)):w.v!==x&&a.throwArgumentError(\"transaction.chainId/signature.v mismatch\",\"signature\",f);g.push((0,C.hexlify)(x));g.push((0,C.stripZeros)((0,C.arrayify)(w.r)));g.push((0,C.stripZeros)((0,C.arrayify)(w.s)));return J.encode(g)}function t(d,f,g){try{var m=G(f[0]).toNumber();if(0!==m&&1!==m)throw Error(\"bad recid\");d.v=m}catch(x){a.throwArgumentError(\"invalid v for transaction type: 1\",\n\"v\",f[0])}d.r=(0,C.hexZeroPad)(f[1],32);d.s=(0,C.hexZeroPad)(f[2],32);try{var w=(0,M.keccak256)(g(d));d.from=y(w,{r:d.r,s:d.s,recoveryParam:d.v})}catch(x){}}var B=this&&this.__createBinding||(Object.create?function(d,f,g,m){void 0===m&&(m=g);Object.defineProperty(d,m,{enumerable:!0,get:function(){return f[g]}})}:function(d,f,g,m){void 0===m&&(m=g);d[m]=f[g]}),E=this&&this.__setModuleDefault||(Object.create?function(d,f){Object.defineProperty(d,\"default\",{enumerable:!0,value:f})}:function(d,f){d[\"default\"]=\nf});S=this&&this.__importStar||function(d){if(d&&d.__esModule)return d;var f={};if(null!=d)for(var g in d)\"default\"!==g&&Object.prototype.hasOwnProperty.call(d,g)&&B(f,d,g);E(f,d);return f};Object.defineProperty(q,\"__esModule\",{value:!0});q.parse=q.serialize=q.accessListify=q.recoverAddress=q.computeAddress=q.TransactionTypes=void 0;var H=A(26),D=A(15),C=A(11),I=A(38),M=A(22),P=A(17),J=S(A(24)),T=A(105),N=A(9);A=A(106);var a=new N.Logger(A.version);(function(d){d[d.legacy=0]=\"legacy\";d[d.eip2930=\n1]=\"eip2930\";d[d.eip1559=2]=\"eip1559\"})(q.TransactionTypes||(q.TransactionTypes={}));var b=[{name:\"nonce\",maxLength:32,numeric:!0},{name:\"gasPrice\",maxLength:32,numeric:!0},{name:\"gasLimit\",maxLength:32,numeric:!0},{name:\"to\",length:20},{name:\"value\",maxLength:32,numeric:!0},{name:\"data\"}],c={chainId:!0,data:!0,gasLimit:!0,gasPrice:!0,nonce:!0,to:!0,type:!0,value:!0};q.computeAddress=r;q.recoverAddress=y;q.accessListify=p;q.serialize=function(d,f){if(null==d.type||0===d.type)return null!=d.accessList&&\na.throwArgumentError(\"untyped transactions do not support accessList; include type: 1\",\"transaction\",d),k(d,f);switch(d.type){case 1:return h(d,f);case 2:return l(d,f)}return a.throwError(\"unsupported transaction type: \"+d.type,N.Logger.errors.UNSUPPORTED_OPERATION,{operation:\"serializeTransaction\",transactionType:d.type})};q.parse=function(d){d=(0,C.arrayify)(d);if(127<d[0]){a:{var f=J.decode(d);9!==f.length&&6!==f.length&&a.throwArgumentError(\"invalid raw transaction\",\"rawTransaction\",d);var g=\n{nonce:G(f[0]).toNumber(),gasPrice:G(f[1]),gasLimit:G(f[2]),to:F(f[3]),value:G(f[4]),data:f[5],chainId:0};if(6!==f.length){try{g.v=D.BigNumber.from(f[6]).toNumber()}catch(w){d=g;break a}g.r=(0,C.hexZeroPad)(f[7],32);g.s=(0,C.hexZeroPad)(f[8],32);if(D.BigNumber.from(g.r).isZero()&&D.BigNumber.from(g.s).isZero())g.chainId=g.v,g.v=0;else{g.chainId=Math.floor((g.v-35)/2);0>g.chainId&&(g.chainId=0);var m=g.v-27;f=f.slice(0,6);0!==g.chainId&&(f.push((0,C.hexlify)(g.chainId)),f.push(\"0x\"),f.push(\"0x\"),m-=\n2*g.chainId+8);f=(0,M.keccak256)(J.encode(f));try{g.from=y(f,{r:(0,C.hexlify)(g.r),s:(0,C.hexlify)(g.s),recoveryParam:m})}catch(w){}g.hash=(0,M.keccak256)(d)}g.type=null}d=g}return d}switch(d[0]){case 1:return g=J.decode(d.slice(1)),8!==g.length&&11!==g.length&&a.throwArgumentError(\"invalid component count for transaction type: 1\",\"payload\",(0,C.hexlify)(d)),m={type:1,chainId:G(g[0]).toNumber(),nonce:G(g[1]).toNumber(),gasPrice:G(g[2]),gasLimit:G(g[3]),to:F(g[4]),value:G(g[5]),data:g[6],accessList:p(g[7])},\n8!==g.length&&(m.hash=(0,M.keccak256)(d),t(m,g.slice(8),h)),m;case 2:return g=J.decode(d.slice(1)),9!==g.length&&12!==g.length&&a.throwArgumentError(\"invalid component count for transaction type: 2\",\"payload\",(0,C.hexlify)(d)),m=G(g[2]),f=G(g[3]),m={type:2,chainId:G(g[0]).toNumber(),nonce:G(g[1]).toNumber(),maxPriorityFeePerGas:m,maxFeePerGas:f,gasPrice:null,gasLimit:G(g[4]),to:F(g[5]),value:G(g[6]),data:g[7],accessList:p(g[8])},9!==g.length&&(m.hash=(0,M.keccak256)(d),t(m,g.slice(9),l)),m}return a.throwError(\"unsupported transaction type: \"+\nd[0],N.Logger.errors.UNSUPPORTED_OPERATION,{operation:\"parseTransaction\",transactionType:d[0]})}}","~:source","shadow$provide[107] = function(global,require,module,exports) {\n\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parse = exports.serialize = exports.accessListify = exports.recoverAddress = exports.computeAddress = exports.TransactionTypes = void 0;\nvar address_1 = require(\"@ethersproject/address\");\nvar bignumber_1 = require(\"@ethersproject/bignumber\");\nvar bytes_1 = require(\"@ethersproject/bytes\");\nvar constants_1 = require(\"@ethersproject/constants\");\nvar keccak256_1 = require(\"@ethersproject/keccak256\");\nvar properties_1 = require(\"@ethersproject/properties\");\nvar RLP = __importStar(require(\"@ethersproject/rlp\"));\nvar signing_key_1 = require(\"@ethersproject/signing-key\");\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\nvar TransactionTypes;\n(function (TransactionTypes) {\n    TransactionTypes[TransactionTypes[\"legacy\"] = 0] = \"legacy\";\n    TransactionTypes[TransactionTypes[\"eip2930\"] = 1] = \"eip2930\";\n    TransactionTypes[TransactionTypes[\"eip1559\"] = 2] = \"eip1559\";\n})(TransactionTypes = exports.TransactionTypes || (exports.TransactionTypes = {}));\n;\n///////////////////////////////\nfunction handleAddress(value) {\n    if (value === \"0x\") {\n        return null;\n    }\n    return (0, address_1.getAddress)(value);\n}\nfunction handleNumber(value) {\n    if (value === \"0x\") {\n        return constants_1.Zero;\n    }\n    return bignumber_1.BigNumber.from(value);\n}\n// Legacy Transaction Fields\nvar transactionFields = [\n    { name: \"nonce\", maxLength: 32, numeric: true },\n    { name: \"gasPrice\", maxLength: 32, numeric: true },\n    { name: \"gasLimit\", maxLength: 32, numeric: true },\n    { name: \"to\", length: 20 },\n    { name: \"value\", maxLength: 32, numeric: true },\n    { name: \"data\" },\n];\nvar allowedTransactionKeys = {\n    chainId: true, data: true, gasLimit: true, gasPrice: true, nonce: true, to: true, type: true, value: true\n};\nfunction computeAddress(key) {\n    var publicKey = (0, signing_key_1.computePublicKey)(key);\n    return (0, address_1.getAddress)((0, bytes_1.hexDataSlice)((0, keccak256_1.keccak256)((0, bytes_1.hexDataSlice)(publicKey, 1)), 12));\n}\nexports.computeAddress = computeAddress;\nfunction recoverAddress(digest, signature) {\n    return computeAddress((0, signing_key_1.recoverPublicKey)((0, bytes_1.arrayify)(digest), signature));\n}\nexports.recoverAddress = recoverAddress;\nfunction formatNumber(value, name) {\n    var result = (0, bytes_1.stripZeros)(bignumber_1.BigNumber.from(value).toHexString());\n    if (result.length > 32) {\n        logger.throwArgumentError(\"invalid length for \" + name, (\"transaction:\" + name), value);\n    }\n    return result;\n}\nfunction accessSetify(addr, storageKeys) {\n    return {\n        address: (0, address_1.getAddress)(addr),\n        storageKeys: (storageKeys || []).map(function (storageKey, index) {\n            if ((0, bytes_1.hexDataLength)(storageKey) !== 32) {\n                logger.throwArgumentError(\"invalid access list storageKey\", \"accessList[\" + addr + \":\" + index + \"]\", storageKey);\n            }\n            return storageKey.toLowerCase();\n        })\n    };\n}\nfunction accessListify(value) {\n    if (Array.isArray(value)) {\n        return value.map(function (set, index) {\n            if (Array.isArray(set)) {\n                if (set.length > 2) {\n                    logger.throwArgumentError(\"access list expected to be [ address, storageKeys[] ]\", \"value[\" + index + \"]\", set);\n                }\n                return accessSetify(set[0], set[1]);\n            }\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n    var result = Object.keys(value).map(function (addr) {\n        var storageKeys = value[addr].reduce(function (accum, storageKey) {\n            accum[storageKey] = true;\n            return accum;\n        }, {});\n        return accessSetify(addr, Object.keys(storageKeys).sort());\n    });\n    result.sort(function (a, b) { return (a.address.localeCompare(b.address)); });\n    return result;\n}\nexports.accessListify = accessListify;\nfunction formatAccessList(value) {\n    return accessListify(value).map(function (set) { return [set.address, set.storageKeys]; });\n}\nfunction _serializeEip1559(transaction, signature) {\n    // If there is an explicit gasPrice, make sure it matches the\n    // EIP-1559 fees; otherwise they may not understand what they\n    // think they are setting in terms of fee.\n    if (transaction.gasPrice != null) {\n        var gasPrice = bignumber_1.BigNumber.from(transaction.gasPrice);\n        var maxFeePerGas = bignumber_1.BigNumber.from(transaction.maxFeePerGas || 0);\n        if (!gasPrice.eq(maxFeePerGas)) {\n            logger.throwArgumentError(\"mismatch EIP-1559 gasPrice != maxFeePerGas\", \"tx\", {\n                gasPrice: gasPrice,\n                maxFeePerGas: maxFeePerGas\n            });\n        }\n    }\n    var fields = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(transaction.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? (0, address_1.getAddress)(transaction.to) : \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n    if (signature) {\n        var sig = (0, bytes_1.splitSignature)(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push((0, bytes_1.stripZeros)(sig.r));\n        fields.push((0, bytes_1.stripZeros)(sig.s));\n    }\n    return (0, bytes_1.hexConcat)([\"0x02\", RLP.encode(fields)]);\n}\nfunction _serializeEip2930(transaction, signature) {\n    var fields = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.gasPrice || 0, \"gasPrice\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? (0, address_1.getAddress)(transaction.to) : \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n    if (signature) {\n        var sig = (0, bytes_1.splitSignature)(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push((0, bytes_1.stripZeros)(sig.r));\n        fields.push((0, bytes_1.stripZeros)(sig.s));\n    }\n    return (0, bytes_1.hexConcat)([\"0x01\", RLP.encode(fields)]);\n}\n// Legacy Transactions and EIP-155\nfunction _serialize(transaction, signature) {\n    (0, properties_1.checkProperties)(transaction, allowedTransactionKeys);\n    var raw = [];\n    transactionFields.forEach(function (fieldInfo) {\n        var value = transaction[fieldInfo.name] || ([]);\n        var options = {};\n        if (fieldInfo.numeric) {\n            options.hexPad = \"left\";\n        }\n        value = (0, bytes_1.arrayify)((0, bytes_1.hexlify)(value, options));\n        // Fixed-width field\n        if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {\n            logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value);\n        }\n        // Variable-width (with a maximum)\n        if (fieldInfo.maxLength) {\n            value = (0, bytes_1.stripZeros)(value);\n            if (value.length > fieldInfo.maxLength) {\n                logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value);\n            }\n        }\n        raw.push((0, bytes_1.hexlify)(value));\n    });\n    var chainId = 0;\n    if (transaction.chainId != null) {\n        // A chainId was provided; if non-zero we'll use EIP-155\n        chainId = transaction.chainId;\n        if (typeof (chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid transaction.chainId\", \"transaction\", transaction);\n        }\n    }\n    else if (signature && !(0, bytes_1.isBytesLike)(signature) && signature.v > 28) {\n        // No chainId provided, but the signature is signing with EIP-155; derive chainId\n        chainId = Math.floor((signature.v - 35) / 2);\n    }\n    // We have an EIP-155 transaction (chainId was specified and non-zero)\n    if (chainId !== 0) {\n        raw.push((0, bytes_1.hexlify)(chainId)); // @TODO: hexValue?\n        raw.push(\"0x\");\n        raw.push(\"0x\");\n    }\n    // Requesting an unsigned transaction\n    if (!signature) {\n        return RLP.encode(raw);\n    }\n    // The splitSignature will ensure the transaction has a recoveryParam in the\n    // case that the signTransaction function only adds a v.\n    var sig = (0, bytes_1.splitSignature)(signature);\n    // We pushed a chainId and null r, s on for hashing only; remove those\n    var v = 27 + sig.recoveryParam;\n    if (chainId !== 0) {\n        raw.pop();\n        raw.pop();\n        raw.pop();\n        v += chainId * 2 + 8;\n        // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!\n        if (sig.v > 28 && sig.v !== v) {\n            logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n        }\n    }\n    else if (sig.v !== v) {\n        logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n    }\n    raw.push((0, bytes_1.hexlify)(v));\n    raw.push((0, bytes_1.stripZeros)((0, bytes_1.arrayify)(sig.r)));\n    raw.push((0, bytes_1.stripZeros)((0, bytes_1.arrayify)(sig.s)));\n    return RLP.encode(raw);\n}\nfunction serialize(transaction, signature) {\n    // Legacy and EIP-155 Transactions\n    if (transaction.type == null || transaction.type === 0) {\n        if (transaction.accessList != null) {\n            logger.throwArgumentError(\"untyped transactions do not support accessList; include type: 1\", \"transaction\", transaction);\n        }\n        return _serialize(transaction, signature);\n    }\n    // Typed Transactions (EIP-2718)\n    switch (transaction.type) {\n        case 1:\n            return _serializeEip2930(transaction, signature);\n        case 2:\n            return _serializeEip1559(transaction, signature);\n        default:\n            break;\n    }\n    return logger.throwError(\"unsupported transaction type: \" + transaction.type, logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"serializeTransaction\",\n        transactionType: transaction.type\n    });\n}\nexports.serialize = serialize;\nfunction _parseEipSignature(tx, fields, serialize) {\n    try {\n        var recid = handleNumber(fields[0]).toNumber();\n        if (recid !== 0 && recid !== 1) {\n            throw new Error(\"bad recid\");\n        }\n        tx.v = recid;\n    }\n    catch (error) {\n        logger.throwArgumentError(\"invalid v for transaction type: 1\", \"v\", fields[0]);\n    }\n    tx.r = (0, bytes_1.hexZeroPad)(fields[1], 32);\n    tx.s = (0, bytes_1.hexZeroPad)(fields[2], 32);\n    try {\n        var digest = (0, keccak256_1.keccak256)(serialize(tx));\n        tx.from = recoverAddress(digest, { r: tx.r, s: tx.s, recoveryParam: tx.v });\n    }\n    catch (error) { }\n}\nfunction _parseEip1559(payload) {\n    var transaction = RLP.decode(payload.slice(1));\n    if (transaction.length !== 9 && transaction.length !== 12) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 2\", \"payload\", (0, bytes_1.hexlify)(payload));\n    }\n    var maxPriorityFeePerGas = handleNumber(transaction[2]);\n    var maxFeePerGas = handleNumber(transaction[3]);\n    var tx = {\n        type: 2,\n        chainId: handleNumber(transaction[0]).toNumber(),\n        nonce: handleNumber(transaction[1]).toNumber(),\n        maxPriorityFeePerGas: maxPriorityFeePerGas,\n        maxFeePerGas: maxFeePerGas,\n        gasPrice: null,\n        gasLimit: handleNumber(transaction[4]),\n        to: handleAddress(transaction[5]),\n        value: handleNumber(transaction[6]),\n        data: transaction[7],\n        accessList: accessListify(transaction[8]),\n    };\n    // Unsigned EIP-1559 Transaction\n    if (transaction.length === 9) {\n        return tx;\n    }\n    tx.hash = (0, keccak256_1.keccak256)(payload);\n    _parseEipSignature(tx, transaction.slice(9), _serializeEip1559);\n    return tx;\n}\nfunction _parseEip2930(payload) {\n    var transaction = RLP.decode(payload.slice(1));\n    if (transaction.length !== 8 && transaction.length !== 11) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 1\", \"payload\", (0, bytes_1.hexlify)(payload));\n    }\n    var tx = {\n        type: 1,\n        chainId: handleNumber(transaction[0]).toNumber(),\n        nonce: handleNumber(transaction[1]).toNumber(),\n        gasPrice: handleNumber(transaction[2]),\n        gasLimit: handleNumber(transaction[3]),\n        to: handleAddress(transaction[4]),\n        value: handleNumber(transaction[5]),\n        data: transaction[6],\n        accessList: accessListify(transaction[7])\n    };\n    // Unsigned EIP-2930 Transaction\n    if (transaction.length === 8) {\n        return tx;\n    }\n    tx.hash = (0, keccak256_1.keccak256)(payload);\n    _parseEipSignature(tx, transaction.slice(8), _serializeEip2930);\n    return tx;\n}\n// Legacy Transactions and EIP-155\nfunction _parse(rawTransaction) {\n    var transaction = RLP.decode(rawTransaction);\n    if (transaction.length !== 9 && transaction.length !== 6) {\n        logger.throwArgumentError(\"invalid raw transaction\", \"rawTransaction\", rawTransaction);\n    }\n    var tx = {\n        nonce: handleNumber(transaction[0]).toNumber(),\n        gasPrice: handleNumber(transaction[1]),\n        gasLimit: handleNumber(transaction[2]),\n        to: handleAddress(transaction[3]),\n        value: handleNumber(transaction[4]),\n        data: transaction[5],\n        chainId: 0\n    };\n    // Legacy unsigned transaction\n    if (transaction.length === 6) {\n        return tx;\n    }\n    try {\n        tx.v = bignumber_1.BigNumber.from(transaction[6]).toNumber();\n    }\n    catch (error) {\n        // @TODO: What makes snese to do? The v is too big\n        return tx;\n    }\n    tx.r = (0, bytes_1.hexZeroPad)(transaction[7], 32);\n    tx.s = (0, bytes_1.hexZeroPad)(transaction[8], 32);\n    if (bignumber_1.BigNumber.from(tx.r).isZero() && bignumber_1.BigNumber.from(tx.s).isZero()) {\n        // EIP-155 unsigned transaction\n        tx.chainId = tx.v;\n        tx.v = 0;\n    }\n    else {\n        // Signed Transaction\n        tx.chainId = Math.floor((tx.v - 35) / 2);\n        if (tx.chainId < 0) {\n            tx.chainId = 0;\n        }\n        var recoveryParam = tx.v - 27;\n        var raw = transaction.slice(0, 6);\n        if (tx.chainId !== 0) {\n            raw.push((0, bytes_1.hexlify)(tx.chainId));\n            raw.push(\"0x\");\n            raw.push(\"0x\");\n            recoveryParam -= tx.chainId * 2 + 8;\n        }\n        var digest = (0, keccak256_1.keccak256)(RLP.encode(raw));\n        try {\n            tx.from = recoverAddress(digest, { r: (0, bytes_1.hexlify)(tx.r), s: (0, bytes_1.hexlify)(tx.s), recoveryParam: recoveryParam });\n        }\n        catch (error) { }\n        tx.hash = (0, keccak256_1.keccak256)(rawTransaction);\n    }\n    tx.type = null;\n    return tx;\n}\nfunction parse(rawTransaction) {\n    var payload = (0, bytes_1.arrayify)(rawTransaction);\n    // Legacy and EIP-155 Transactions\n    if (payload[0] > 0x7f) {\n        return _parse(payload);\n    }\n    // Typed Transaction (EIP-2718)\n    switch (payload[0]) {\n        case 1:\n            return _parseEip2930(payload);\n        case 2:\n            return _parseEip1559(payload);\n        default:\n            break;\n    }\n    return logger.throwError(\"unsupported transaction type: \" + payload[0], logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"parseTransaction\",\n        transactionType: payload[0]\n    });\n}\nexports.parse = parse;\n//# sourceMappingURL=index.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$ethersproject$constants$lib$index","~$module$node_modules$$ethersproject$signing_key$lib$index","~$module$node_modules$$ethersproject$rlp$lib$index","~$shadow.js","~$module$node_modules$$ethersproject$bytes$lib$index","~$module$node_modules$$ethersproject$bignumber$lib$index","~$module$node_modules$$ethersproject$address$lib$index","~$module$node_modules$$ethersproject$keccak256$lib$index","~$module$node_modules$$ethersproject$transactions$lib$_version","~$module$node_modules$$ethersproject$logger$lib$index","~$module$node_modules$$ethersproject$properties$lib$index"]],"~:properties",["^5",["gasLimit","s","numeric","chainId","serialize","gasPrice","recoveryParam","hexPad","accessList","hash","__esModule","v","storageKeys","recoverAddress","maxLength","name","maxPriorityFeePerGas","maxFeePerGas","value","accessListify","enumerable","address","operation","computeAddress","length","type","r","from","parse","nonce","to","TransactionTypes","data","get","default","transactionType"]],"~:compiled-at",1695041440759,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$ethersproject$transactions$lib$index.js\",\n\"lineCount\":15,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@ethersproject/transactions/lib/index.js\"],\n\"sourcesContent\":[\"shadow$provide[107] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\\n    if (k2 === undefined) k2 = k;\\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\\n}) : (function(o, m, k, k2) {\\n    if (k2 === undefined) k2 = k;\\n    o[k2] = m[k];\\n}));\\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\\n    Object.defineProperty(o, \\\"default\\\", { enumerable: true, value: v });\\n}) : function(o, v) {\\n    o[\\\"default\\\"] = v;\\n});\\nvar __importStar = (this && this.__importStar) || function (mod) {\\n    if (mod && mod.__esModule) return mod;\\n    var result = {};\\n    if (mod != null) for (var k in mod) if (k !== \\\"default\\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\\n    __setModuleDefault(result, mod);\\n    return result;\\n};\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.parse = exports.serialize = exports.accessListify = exports.recoverAddress = exports.computeAddress = exports.TransactionTypes = void 0;\\nvar address_1 = require(\\\"@ethersproject/address\\\");\\nvar bignumber_1 = require(\\\"@ethersproject/bignumber\\\");\\nvar bytes_1 = require(\\\"@ethersproject/bytes\\\");\\nvar constants_1 = require(\\\"@ethersproject/constants\\\");\\nvar keccak256_1 = require(\\\"@ethersproject/keccak256\\\");\\nvar properties_1 = require(\\\"@ethersproject/properties\\\");\\nvar RLP = __importStar(require(\\\"@ethersproject/rlp\\\"));\\nvar signing_key_1 = require(\\\"@ethersproject/signing-key\\\");\\nvar logger_1 = require(\\\"@ethersproject/logger\\\");\\nvar _version_1 = require(\\\"./_version\\\");\\nvar logger = new logger_1.Logger(_version_1.version);\\nvar TransactionTypes;\\n(function (TransactionTypes) {\\n    TransactionTypes[TransactionTypes[\\\"legacy\\\"] = 0] = \\\"legacy\\\";\\n    TransactionTypes[TransactionTypes[\\\"eip2930\\\"] = 1] = \\\"eip2930\\\";\\n    TransactionTypes[TransactionTypes[\\\"eip1559\\\"] = 2] = \\\"eip1559\\\";\\n})(TransactionTypes = exports.TransactionTypes || (exports.TransactionTypes = {}));\\n;\\n///////////////////////////////\\nfunction handleAddress(value) {\\n    if (value === \\\"0x\\\") {\\n        return null;\\n    }\\n    return (0, address_1.getAddress)(value);\\n}\\nfunction handleNumber(value) {\\n    if (value === \\\"0x\\\") {\\n        return constants_1.Zero;\\n    }\\n    return bignumber_1.BigNumber.from(value);\\n}\\n// Legacy Transaction Fields\\nvar transactionFields = [\\n    { name: \\\"nonce\\\", maxLength: 32, numeric: true },\\n    { name: \\\"gasPrice\\\", maxLength: 32, numeric: true },\\n    { name: \\\"gasLimit\\\", maxLength: 32, numeric: true },\\n    { name: \\\"to\\\", length: 20 },\\n    { name: \\\"value\\\", maxLength: 32, numeric: true },\\n    { name: \\\"data\\\" },\\n];\\nvar allowedTransactionKeys = {\\n    chainId: true, data: true, gasLimit: true, gasPrice: true, nonce: true, to: true, type: true, value: true\\n};\\nfunction computeAddress(key) {\\n    var publicKey = (0, signing_key_1.computePublicKey)(key);\\n    return (0, address_1.getAddress)((0, bytes_1.hexDataSlice)((0, keccak256_1.keccak256)((0, bytes_1.hexDataSlice)(publicKey, 1)), 12));\\n}\\nexports.computeAddress = computeAddress;\\nfunction recoverAddress(digest, signature) {\\n    return computeAddress((0, signing_key_1.recoverPublicKey)((0, bytes_1.arrayify)(digest), signature));\\n}\\nexports.recoverAddress = recoverAddress;\\nfunction formatNumber(value, name) {\\n    var result = (0, bytes_1.stripZeros)(bignumber_1.BigNumber.from(value).toHexString());\\n    if (result.length > 32) {\\n        logger.throwArgumentError(\\\"invalid length for \\\" + name, (\\\"transaction:\\\" + name), value);\\n    }\\n    return result;\\n}\\nfunction accessSetify(addr, storageKeys) {\\n    return {\\n        address: (0, address_1.getAddress)(addr),\\n        storageKeys: (storageKeys || []).map(function (storageKey, index) {\\n            if ((0, bytes_1.hexDataLength)(storageKey) !== 32) {\\n                logger.throwArgumentError(\\\"invalid access list storageKey\\\", \\\"accessList[\\\" + addr + \\\":\\\" + index + \\\"]\\\", storageKey);\\n            }\\n            return storageKey.toLowerCase();\\n        })\\n    };\\n}\\nfunction accessListify(value) {\\n    if (Array.isArray(value)) {\\n        return value.map(function (set, index) {\\n            if (Array.isArray(set)) {\\n                if (set.length > 2) {\\n                    logger.throwArgumentError(\\\"access list expected to be [ address, storageKeys[] ]\\\", \\\"value[\\\" + index + \\\"]\\\", set);\\n                }\\n                return accessSetify(set[0], set[1]);\\n            }\\n            return accessSetify(set.address, set.storageKeys);\\n        });\\n    }\\n    var result = Object.keys(value).map(function (addr) {\\n        var storageKeys = value[addr].reduce(function (accum, storageKey) {\\n            accum[storageKey] = true;\\n            return accum;\\n        }, {});\\n        return accessSetify(addr, Object.keys(storageKeys).sort());\\n    });\\n    result.sort(function (a, b) { return (a.address.localeCompare(b.address)); });\\n    return result;\\n}\\nexports.accessListify = accessListify;\\nfunction formatAccessList(value) {\\n    return accessListify(value).map(function (set) { return [set.address, set.storageKeys]; });\\n}\\nfunction _serializeEip1559(transaction, signature) {\\n    // If there is an explicit gasPrice, make sure it matches the\\n    // EIP-1559 fees; otherwise they may not understand what they\\n    // think they are setting in terms of fee.\\n    if (transaction.gasPrice != null) {\\n        var gasPrice = bignumber_1.BigNumber.from(transaction.gasPrice);\\n        var maxFeePerGas = bignumber_1.BigNumber.from(transaction.maxFeePerGas || 0);\\n        if (!gasPrice.eq(maxFeePerGas)) {\\n            logger.throwArgumentError(\\\"mismatch EIP-1559 gasPrice != maxFeePerGas\\\", \\\"tx\\\", {\\n                gasPrice: gasPrice,\\n                maxFeePerGas: maxFeePerGas\\n            });\\n        }\\n    }\\n    var fields = [\\n        formatNumber(transaction.chainId || 0, \\\"chainId\\\"),\\n        formatNumber(transaction.nonce || 0, \\\"nonce\\\"),\\n        formatNumber(transaction.maxPriorityFeePerGas || 0, \\\"maxPriorityFeePerGas\\\"),\\n        formatNumber(transaction.maxFeePerGas || 0, \\\"maxFeePerGas\\\"),\\n        formatNumber(transaction.gasLimit || 0, \\\"gasLimit\\\"),\\n        ((transaction.to != null) ? (0, address_1.getAddress)(transaction.to) : \\\"0x\\\"),\\n        formatNumber(transaction.value || 0, \\\"value\\\"),\\n        (transaction.data || \\\"0x\\\"),\\n        (formatAccessList(transaction.accessList || []))\\n    ];\\n    if (signature) {\\n        var sig = (0, bytes_1.splitSignature)(signature);\\n        fields.push(formatNumber(sig.recoveryParam, \\\"recoveryParam\\\"));\\n        fields.push((0, bytes_1.stripZeros)(sig.r));\\n        fields.push((0, bytes_1.stripZeros)(sig.s));\\n    }\\n    return (0, bytes_1.hexConcat)([\\\"0x02\\\", RLP.encode(fields)]);\\n}\\nfunction _serializeEip2930(transaction, signature) {\\n    var fields = [\\n        formatNumber(transaction.chainId || 0, \\\"chainId\\\"),\\n        formatNumber(transaction.nonce || 0, \\\"nonce\\\"),\\n        formatNumber(transaction.gasPrice || 0, \\\"gasPrice\\\"),\\n        formatNumber(transaction.gasLimit || 0, \\\"gasLimit\\\"),\\n        ((transaction.to != null) ? (0, address_1.getAddress)(transaction.to) : \\\"0x\\\"),\\n        formatNumber(transaction.value || 0, \\\"value\\\"),\\n        (transaction.data || \\\"0x\\\"),\\n        (formatAccessList(transaction.accessList || []))\\n    ];\\n    if (signature) {\\n        var sig = (0, bytes_1.splitSignature)(signature);\\n        fields.push(formatNumber(sig.recoveryParam, \\\"recoveryParam\\\"));\\n        fields.push((0, bytes_1.stripZeros)(sig.r));\\n        fields.push((0, bytes_1.stripZeros)(sig.s));\\n    }\\n    return (0, bytes_1.hexConcat)([\\\"0x01\\\", RLP.encode(fields)]);\\n}\\n// Legacy Transactions and EIP-155\\nfunction _serialize(transaction, signature) {\\n    (0, properties_1.checkProperties)(transaction, allowedTransactionKeys);\\n    var raw = [];\\n    transactionFields.forEach(function (fieldInfo) {\\n        var value = transaction[fieldInfo.name] || ([]);\\n        var options = {};\\n        if (fieldInfo.numeric) {\\n            options.hexPad = \\\"left\\\";\\n        }\\n        value = (0, bytes_1.arrayify)((0, bytes_1.hexlify)(value, options));\\n        // Fixed-width field\\n        if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {\\n            logger.throwArgumentError(\\\"invalid length for \\\" + fieldInfo.name, (\\\"transaction:\\\" + fieldInfo.name), value);\\n        }\\n        // Variable-width (with a maximum)\\n        if (fieldInfo.maxLength) {\\n            value = (0, bytes_1.stripZeros)(value);\\n            if (value.length > fieldInfo.maxLength) {\\n                logger.throwArgumentError(\\\"invalid length for \\\" + fieldInfo.name, (\\\"transaction:\\\" + fieldInfo.name), value);\\n            }\\n        }\\n        raw.push((0, bytes_1.hexlify)(value));\\n    });\\n    var chainId = 0;\\n    if (transaction.chainId != null) {\\n        // A chainId was provided; if non-zero we'll use EIP-155\\n        chainId = transaction.chainId;\\n        if (typeof (chainId) !== \\\"number\\\") {\\n            logger.throwArgumentError(\\\"invalid transaction.chainId\\\", \\\"transaction\\\", transaction);\\n        }\\n    }\\n    else if (signature && !(0, bytes_1.isBytesLike)(signature) && signature.v > 28) {\\n        // No chainId provided, but the signature is signing with EIP-155; derive chainId\\n        chainId = Math.floor((signature.v - 35) / 2);\\n    }\\n    // We have an EIP-155 transaction (chainId was specified and non-zero)\\n    if (chainId !== 0) {\\n        raw.push((0, bytes_1.hexlify)(chainId)); // @TODO: hexValue?\\n        raw.push(\\\"0x\\\");\\n        raw.push(\\\"0x\\\");\\n    }\\n    // Requesting an unsigned transaction\\n    if (!signature) {\\n        return RLP.encode(raw);\\n    }\\n    // The splitSignature will ensure the transaction has a recoveryParam in the\\n    // case that the signTransaction function only adds a v.\\n    var sig = (0, bytes_1.splitSignature)(signature);\\n    // We pushed a chainId and null r, s on for hashing only; remove those\\n    var v = 27 + sig.recoveryParam;\\n    if (chainId !== 0) {\\n        raw.pop();\\n        raw.pop();\\n        raw.pop();\\n        v += chainId * 2 + 8;\\n        // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!\\n        if (sig.v > 28 && sig.v !== v) {\\n            logger.throwArgumentError(\\\"transaction.chainId/signature.v mismatch\\\", \\\"signature\\\", signature);\\n        }\\n    }\\n    else if (sig.v !== v) {\\n        logger.throwArgumentError(\\\"transaction.chainId/signature.v mismatch\\\", \\\"signature\\\", signature);\\n    }\\n    raw.push((0, bytes_1.hexlify)(v));\\n    raw.push((0, bytes_1.stripZeros)((0, bytes_1.arrayify)(sig.r)));\\n    raw.push((0, bytes_1.stripZeros)((0, bytes_1.arrayify)(sig.s)));\\n    return RLP.encode(raw);\\n}\\nfunction serialize(transaction, signature) {\\n    // Legacy and EIP-155 Transactions\\n    if (transaction.type == null || transaction.type === 0) {\\n        if (transaction.accessList != null) {\\n            logger.throwArgumentError(\\\"untyped transactions do not support accessList; include type: 1\\\", \\\"transaction\\\", transaction);\\n        }\\n        return _serialize(transaction, signature);\\n    }\\n    // Typed Transactions (EIP-2718)\\n    switch (transaction.type) {\\n        case 1:\\n            return _serializeEip2930(transaction, signature);\\n        case 2:\\n            return _serializeEip1559(transaction, signature);\\n        default:\\n            break;\\n    }\\n    return logger.throwError(\\\"unsupported transaction type: \\\" + transaction.type, logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\\n        operation: \\\"serializeTransaction\\\",\\n        transactionType: transaction.type\\n    });\\n}\\nexports.serialize = serialize;\\nfunction _parseEipSignature(tx, fields, serialize) {\\n    try {\\n        var recid = handleNumber(fields[0]).toNumber();\\n        if (recid !== 0 && recid !== 1) {\\n            throw new Error(\\\"bad recid\\\");\\n        }\\n        tx.v = recid;\\n    }\\n    catch (error) {\\n        logger.throwArgumentError(\\\"invalid v for transaction type: 1\\\", \\\"v\\\", fields[0]);\\n    }\\n    tx.r = (0, bytes_1.hexZeroPad)(fields[1], 32);\\n    tx.s = (0, bytes_1.hexZeroPad)(fields[2], 32);\\n    try {\\n        var digest = (0, keccak256_1.keccak256)(serialize(tx));\\n        tx.from = recoverAddress(digest, { r: tx.r, s: tx.s, recoveryParam: tx.v });\\n    }\\n    catch (error) { }\\n}\\nfunction _parseEip1559(payload) {\\n    var transaction = RLP.decode(payload.slice(1));\\n    if (transaction.length !== 9 && transaction.length !== 12) {\\n        logger.throwArgumentError(\\\"invalid component count for transaction type: 2\\\", \\\"payload\\\", (0, bytes_1.hexlify)(payload));\\n    }\\n    var maxPriorityFeePerGas = handleNumber(transaction[2]);\\n    var maxFeePerGas = handleNumber(transaction[3]);\\n    var tx = {\\n        type: 2,\\n        chainId: handleNumber(transaction[0]).toNumber(),\\n        nonce: handleNumber(transaction[1]).toNumber(),\\n        maxPriorityFeePerGas: maxPriorityFeePerGas,\\n        maxFeePerGas: maxFeePerGas,\\n        gasPrice: null,\\n        gasLimit: handleNumber(transaction[4]),\\n        to: handleAddress(transaction[5]),\\n        value: handleNumber(transaction[6]),\\n        data: transaction[7],\\n        accessList: accessListify(transaction[8]),\\n    };\\n    // Unsigned EIP-1559 Transaction\\n    if (transaction.length === 9) {\\n        return tx;\\n    }\\n    tx.hash = (0, keccak256_1.keccak256)(payload);\\n    _parseEipSignature(tx, transaction.slice(9), _serializeEip1559);\\n    return tx;\\n}\\nfunction _parseEip2930(payload) {\\n    var transaction = RLP.decode(payload.slice(1));\\n    if (transaction.length !== 8 && transaction.length !== 11) {\\n        logger.throwArgumentError(\\\"invalid component count for transaction type: 1\\\", \\\"payload\\\", (0, bytes_1.hexlify)(payload));\\n    }\\n    var tx = {\\n        type: 1,\\n        chainId: handleNumber(transaction[0]).toNumber(),\\n        nonce: handleNumber(transaction[1]).toNumber(),\\n        gasPrice: handleNumber(transaction[2]),\\n        gasLimit: handleNumber(transaction[3]),\\n        to: handleAddress(transaction[4]),\\n        value: handleNumber(transaction[5]),\\n        data: transaction[6],\\n        accessList: accessListify(transaction[7])\\n    };\\n    // Unsigned EIP-2930 Transaction\\n    if (transaction.length === 8) {\\n        return tx;\\n    }\\n    tx.hash = (0, keccak256_1.keccak256)(payload);\\n    _parseEipSignature(tx, transaction.slice(8), _serializeEip2930);\\n    return tx;\\n}\\n// Legacy Transactions and EIP-155\\nfunction _parse(rawTransaction) {\\n    var transaction = RLP.decode(rawTransaction);\\n    if (transaction.length !== 9 && transaction.length !== 6) {\\n        logger.throwArgumentError(\\\"invalid raw transaction\\\", \\\"rawTransaction\\\", rawTransaction);\\n    }\\n    var tx = {\\n        nonce: handleNumber(transaction[0]).toNumber(),\\n        gasPrice: handleNumber(transaction[1]),\\n        gasLimit: handleNumber(transaction[2]),\\n        to: handleAddress(transaction[3]),\\n        value: handleNumber(transaction[4]),\\n        data: transaction[5],\\n        chainId: 0\\n    };\\n    // Legacy unsigned transaction\\n    if (transaction.length === 6) {\\n        return tx;\\n    }\\n    try {\\n        tx.v = bignumber_1.BigNumber.from(transaction[6]).toNumber();\\n    }\\n    catch (error) {\\n        // @TODO: What makes snese to do? The v is too big\\n        return tx;\\n    }\\n    tx.r = (0, bytes_1.hexZeroPad)(transaction[7], 32);\\n    tx.s = (0, bytes_1.hexZeroPad)(transaction[8], 32);\\n    if (bignumber_1.BigNumber.from(tx.r).isZero() && bignumber_1.BigNumber.from(tx.s).isZero()) {\\n        // EIP-155 unsigned transaction\\n        tx.chainId = tx.v;\\n        tx.v = 0;\\n    }\\n    else {\\n        // Signed Transaction\\n        tx.chainId = Math.floor((tx.v - 35) / 2);\\n        if (tx.chainId < 0) {\\n            tx.chainId = 0;\\n        }\\n        var recoveryParam = tx.v - 27;\\n        var raw = transaction.slice(0, 6);\\n        if (tx.chainId !== 0) {\\n            raw.push((0, bytes_1.hexlify)(tx.chainId));\\n            raw.push(\\\"0x\\\");\\n            raw.push(\\\"0x\\\");\\n            recoveryParam -= tx.chainId * 2 + 8;\\n        }\\n        var digest = (0, keccak256_1.keccak256)(RLP.encode(raw));\\n        try {\\n            tx.from = recoverAddress(digest, { r: (0, bytes_1.hexlify)(tx.r), s: (0, bytes_1.hexlify)(tx.s), recoveryParam: recoveryParam });\\n        }\\n        catch (error) { }\\n        tx.hash = (0, keccak256_1.keccak256)(rawTransaction);\\n    }\\n    tx.type = null;\\n    return tx;\\n}\\nfunction parse(rawTransaction) {\\n    var payload = (0, bytes_1.arrayify)(rawTransaction);\\n    // Legacy and EIP-155 Transactions\\n    if (payload[0] > 0x7f) {\\n        return _parse(payload);\\n    }\\n    // Typed Transaction (EIP-2718)\\n    switch (payload[0]) {\\n        case 1:\\n            return _parseEip2930(payload);\\n        case 2:\\n            return _parseEip1559(payload);\\n        default:\\n            break;\\n    }\\n    return logger.throwError(\\\"unsupported transaction type: \\\" + payload[0], logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\\n        operation: \\\"parseTransaction\\\",\\n        transactionType: payload[0]\\n    });\\n}\\nexports.parse = parse;\\n//# sourceMappingURL=index.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"handleAddress\",\"value\",\"address_1\",\"getAddress\",\"handleNumber\",\"constants_1\",\"Zero\",\"bignumber_1\",\"BigNumber\",\"from\",\"computeAddress\",\"key\",\"publicKey\",\"signing_key_1\",\"computePublicKey\",\"bytes_1\",\"hexDataSlice\",\"keccak256_1\",\"keccak256\",\"recoverAddress\",\"digest\",\"signature\",\"recoverPublicKey\",\"arrayify\",\"formatNumber\",\"name\",\"result\",\"stripZeros\",\"toHexString\",\"length\",\"logger\",\"throwArgumentError\",\"accessSetify\",\"addr\",\"storageKeys\",\"address\",\"map\",\"storageKey\",\"index\",\"hexDataLength\",\"toLowerCase\",\"accessListify\",\"Array\",\"isArray\",\"set\",\"Object\",\"keys\",\"reduce\",\"accum\",\"sort\",\"a\",\"b\",\"localeCompare\",\"formatAccessList\",\"_serializeEip1559\",\"transaction\",\"gasPrice\",\"maxFeePerGas\",\"eq\",\"fields\",\"chainId\",\"nonce\",\"maxPriorityFeePerGas\",\"gasLimit\",\"to\",\"data\",\"accessList\",\"sig\",\"splitSignature\",\"push\",\"recoveryParam\",\"r\",\"s\",\"hexConcat\",\"RLP\",\"encode\",\"_serializeEip2930\",\"_serialize\",\"properties_1\",\"checkProperties\",\"allowedTransactionKeys\",\"raw\",\"transactionFields\",\"forEach\",\"fieldInfo\",\"options\",\"numeric\",\"hexPad\",\"hexlify\",\"maxLength\",\"isBytesLike\",\"v\",\"Math\",\"floor\",\"pop\",\"_parseEipSignature\",\"tx\",\"serialize\",\"recid\",\"toNumber\",\"Error\",\"error\",\"hexZeroPad\",\"__createBinding\",\"create\",\"o\",\"m\",\"k\",\"k2\",\"undefined\",\"defineProperty\",\"enumerable\",\"get\",\"__setModuleDefault\",\"__importStar\",\"mod\",\"__esModule\",\"prototype\",\"hasOwnProperty\",\"call\",\"parse\",\"TransactionTypes\",\"logger_1\",\"_version_1\",\"Logger\",\"version\",\"type\",\"throwError\",\"errors\",\"UNSUPPORTED_OPERATION\",\"operation\",\"transactionType\",\"rawTransaction\",\"payload\",\"decode\",\"isZero\",\"slice\",\"hash\"]\n}\n"]