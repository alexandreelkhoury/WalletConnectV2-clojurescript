["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@tanstack/query-core/build/lib/index.js"],"~:js","shadow$provide.module$node_modules$$tanstack$query_core$build$lib$index=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});global=require(\"module$node_modules$$tanstack$query_core$build$lib$retryer\");module=require(\"module$node_modules$$tanstack$query_core$build$lib$queryCache\");var queryClient=require(\"module$node_modules$$tanstack$query_core$build$lib$queryClient\"),queryObserver=require(\"module$node_modules$$tanstack$query_core$build$lib$queryObserver\"),\nqueriesObserver=require(\"module$node_modules$$tanstack$query_core$build$lib$queriesObserver\"),infiniteQueryObserver=require(\"module$node_modules$$tanstack$query_core$build$lib$infiniteQueryObserver\"),mutationCache=require(\"module$node_modules$$tanstack$query_core$build$lib$mutationCache\"),mutationObserver=require(\"module$node_modules$$tanstack$query_core$build$lib$mutationObserver\"),notifyManager=require(\"module$node_modules$$tanstack$query_core$build$lib$notifyManager\"),focusManager=require(\"module$node_modules$$tanstack$query_core$build$lib$focusManager\"),\nonlineManager=require(\"module$node_modules$$tanstack$query_core$build$lib$onlineManager\"),utils=require(\"module$node_modules$$tanstack$query_core$build$lib$utils\"),hydration=require(\"module$node_modules$$tanstack$query_core$build$lib$hydration\");require=require(\"module$node_modules$$tanstack$query_core$build$lib$query\");exports.CancelledError=global.CancelledError;exports.isCancelledError=global.isCancelledError;exports.QueryCache=module.QueryCache;exports.QueryClient=queryClient.QueryClient;exports.QueryObserver=\nqueryObserver.QueryObserver;exports.QueriesObserver=queriesObserver.QueriesObserver;exports.InfiniteQueryObserver=infiniteQueryObserver.InfiniteQueryObserver;exports.MutationCache=mutationCache.MutationCache;exports.MutationObserver=mutationObserver.MutationObserver;exports.notifyManager=notifyManager.notifyManager;exports.focusManager=focusManager.focusManager;exports.onlineManager=onlineManager.onlineManager;exports.hashQueryKey=utils.hashQueryKey;exports.isError=utils.isError;exports.isServer=\nutils.isServer;exports.matchQuery=utils.matchQuery;exports.parseFilterArgs=utils.parseFilterArgs;exports.parseMutationArgs=utils.parseMutationArgs;exports.parseMutationFilterArgs=utils.parseMutationFilterArgs;exports.parseQueryArgs=utils.parseQueryArgs;exports.replaceEqualDeep=utils.replaceEqualDeep;exports.defaultShouldDehydrateMutation=hydration.defaultShouldDehydrateMutation;exports.defaultShouldDehydrateQuery=hydration.defaultShouldDehydrateQuery;exports.dehydrate=hydration.dehydrate;exports.hydrate=\nhydration.hydrate;exports.Query=require.Query}","~:source","shadow$provide[\"module$node_modules$$tanstack$query_core$build$lib$index\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar retryer = require('./retryer.js');\nvar queryCache = require('./queryCache.js');\nvar queryClient = require('./queryClient.js');\nvar queryObserver = require('./queryObserver.js');\nvar queriesObserver = require('./queriesObserver.js');\nvar infiniteQueryObserver = require('./infiniteQueryObserver.js');\nvar mutationCache = require('./mutationCache.js');\nvar mutationObserver = require('./mutationObserver.js');\nvar notifyManager = require('./notifyManager.js');\nvar focusManager = require('./focusManager.js');\nvar onlineManager = require('./onlineManager.js');\nvar utils = require('./utils.js');\nvar hydration = require('./hydration.js');\nvar query = require('./query.js');\n\n\n\nexports.CancelledError = retryer.CancelledError;\nexports.isCancelledError = retryer.isCancelledError;\nexports.QueryCache = queryCache.QueryCache;\nexports.QueryClient = queryClient.QueryClient;\nexports.QueryObserver = queryObserver.QueryObserver;\nexports.QueriesObserver = queriesObserver.QueriesObserver;\nexports.InfiniteQueryObserver = infiniteQueryObserver.InfiniteQueryObserver;\nexports.MutationCache = mutationCache.MutationCache;\nexports.MutationObserver = mutationObserver.MutationObserver;\nexports.notifyManager = notifyManager.notifyManager;\nexports.focusManager = focusManager.focusManager;\nexports.onlineManager = onlineManager.onlineManager;\nexports.hashQueryKey = utils.hashQueryKey;\nexports.isError = utils.isError;\nexports.isServer = utils.isServer;\nexports.matchQuery = utils.matchQuery;\nexports.parseFilterArgs = utils.parseFilterArgs;\nexports.parseMutationArgs = utils.parseMutationArgs;\nexports.parseMutationFilterArgs = utils.parseMutationFilterArgs;\nexports.parseQueryArgs = utils.parseQueryArgs;\nexports.replaceEqualDeep = utils.replaceEqualDeep;\nexports.defaultShouldDehydrateMutation = hydration.defaultShouldDehydrateMutation;\nexports.defaultShouldDehydrateQuery = hydration.defaultShouldDehydrateQuery;\nexports.dehydrate = hydration.dehydrate;\nexports.hydrate = hydration.hydrate;\nexports.Query = query.Query;\n//# sourceMappingURL=index.js.map\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$tanstack$query_core$build$lib$queriesObserver","~$module$node_modules$$tanstack$query_core$build$lib$mutationObserver","~$module$node_modules$$tanstack$query_core$build$lib$focusManager","~$module$node_modules$$tanstack$query_core$build$lib$onlineManager","~$shadow.js","~$module$node_modules$$tanstack$query_core$build$lib$utils","~$module$node_modules$$tanstack$query_core$build$lib$mutationCache","~$module$node_modules$$tanstack$query_core$build$lib$query","~$module$node_modules$$tanstack$query_core$build$lib$hydration","~$module$node_modules$$tanstack$query_core$build$lib$queryObserver","~$module$node_modules$$tanstack$query_core$build$lib$queryClient","~$module$node_modules$$tanstack$query_core$build$lib$retryer","~$module$node_modules$$tanstack$query_core$build$lib$infiniteQueryObserver","~$module$node_modules$$tanstack$query_core$build$lib$notifyManager","~$module$node_modules$$tanstack$query_core$build$lib$queryCache"]],"~:properties",["^5",["CancelledError","InfiniteQueryObserver","parseMutationArgs","QueryCache","focusManager","isCancelledError","parseMutationFilterArgs","defaultShouldDehydrateQuery","__esModule","parseFilterArgs","MutationCache","QueriesObserver","Query","hashQueryKey","value","hydrate","matchQuery","defaultShouldDehydrateMutation","isServer","dehydrate","QueryObserver","isError","onlineManager","parseQueryArgs","MutationObserver","notifyManager","replaceEqualDeep","QueryClient"]],"~:compiled-at",1695111489948,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$tanstack$query_core$build$lib$index.js\",\n\"lineCount\":6,\n\"mappings\":\"AAAAA,cAAA,CAAA,wDAAA,CAA6E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGrHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CAEIC,OAAAA,CAAUN,OAAA,CAAQ,4DAAR,CACVO,OAAAA,CAAaP,OAAA,CAAQ,+DAAR,CACjB,KAAIQ,YAAcR,OAAA,CAAQ,gEAAR,CAAlB,CACIS,cAAgBT,OAAA,CAAQ,kEAAR,CADpB;AAEIU,gBAAkBV,OAAA,CAAQ,oEAAR,CAFtB,CAGIW,sBAAwBX,OAAA,CAAQ,0EAAR,CAH5B,CAIIY,cAAgBZ,OAAA,CAAQ,kEAAR,CAJpB,CAKIa,iBAAmBb,OAAA,CAAQ,qEAAR,CALvB,CAMIc,cAAgBd,OAAA,CAAQ,kEAAR,CANpB,CAOIe,aAAef,OAAA,CAAQ,iEAAR,CAPnB;AAQIgB,cAAgBhB,OAAA,CAAQ,kEAAR,CARpB,CASIiB,MAAQjB,OAAA,CAAQ,0DAAR,CATZ,CAUIkB,UAAYlB,OAAA,CAAQ,8DAAR,CACZmB,QAAAA,CAAQnB,OAAA,CAAQ,0DAAR,CAIZE,QAAQkB,CAAAA,cAAR,CAAyBd,MAAQc,CAAAA,cACjClB,QAAQmB,CAAAA,gBAAR,CAA2Bf,MAAQe,CAAAA,gBACnCnB,QAAQoB,CAAAA,UAAR,CAAqBf,MAAWe,CAAAA,UAChCpB,QAAQqB,CAAAA,WAAR,CAAsBf,WAAYe,CAAAA,WAClCrB,QAAQsB,CAAAA,aAAR;AAAwBf,aAAce,CAAAA,aACtCtB,QAAQuB,CAAAA,eAAR,CAA0Bf,eAAgBe,CAAAA,eAC1CvB,QAAQwB,CAAAA,qBAAR,CAAgCf,qBAAsBe,CAAAA,qBACtDxB,QAAQyB,CAAAA,aAAR,CAAwBf,aAAce,CAAAA,aACtCzB,QAAQ0B,CAAAA,gBAAR,CAA2Bf,gBAAiBe,CAAAA,gBAC5C1B,QAAQY,CAAAA,aAAR,CAAwBA,aAAcA,CAAAA,aACtCZ,QAAQa,CAAAA,YAAR,CAAuBA,YAAaA,CAAAA,YACpCb,QAAQc,CAAAA,aAAR,CAAwBA,aAAcA,CAAAA,aACtCd,QAAQ2B,CAAAA,YAAR,CAAuBZ,KAAMY,CAAAA,YAC7B3B,QAAQ4B,CAAAA,OAAR,CAAkBb,KAAMa,CAAAA,OACxB5B,QAAQ6B,CAAAA,QAAR;AAAmBd,KAAMc,CAAAA,QACzB7B,QAAQ8B,CAAAA,UAAR,CAAqBf,KAAMe,CAAAA,UAC3B9B,QAAQ+B,CAAAA,eAAR,CAA0BhB,KAAMgB,CAAAA,eAChC/B,QAAQgC,CAAAA,iBAAR,CAA4BjB,KAAMiB,CAAAA,iBAClChC,QAAQiC,CAAAA,uBAAR,CAAkClB,KAAMkB,CAAAA,uBACxCjC,QAAQkC,CAAAA,cAAR,CAAyBnB,KAAMmB,CAAAA,cAC/BlC,QAAQmC,CAAAA,gBAAR,CAA2BpB,KAAMoB,CAAAA,gBACjCnC,QAAQoC,CAAAA,8BAAR,CAAyCpB,SAAUoB,CAAAA,8BACnDpC,QAAQqC,CAAAA,2BAAR,CAAsCrB,SAAUqB,CAAAA,2BAChDrC,QAAQsC,CAAAA,SAAR,CAAoBtB,SAAUsB,CAAAA,SAC9BtC,QAAQuC,CAAAA,OAAR;AAAkBvB,SAAUuB,CAAAA,OAC5BvC,QAAQwC,CAAAA,KAAR,CAAgBvB,OAAMuB,CAAAA,KA/C+F;\",\n\"sources\":[\"node_modules/@tanstack/query-core/build/lib/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$tanstack$query_core$build$lib$index\\\"] = function(global,require,module,exports) {\\n'use strict';\\n\\nObject.defineProperty(exports, '__esModule', { value: true });\\n\\nvar retryer = require('./retryer.js');\\nvar queryCache = require('./queryCache.js');\\nvar queryClient = require('./queryClient.js');\\nvar queryObserver = require('./queryObserver.js');\\nvar queriesObserver = require('./queriesObserver.js');\\nvar infiniteQueryObserver = require('./infiniteQueryObserver.js');\\nvar mutationCache = require('./mutationCache.js');\\nvar mutationObserver = require('./mutationObserver.js');\\nvar notifyManager = require('./notifyManager.js');\\nvar focusManager = require('./focusManager.js');\\nvar onlineManager = require('./onlineManager.js');\\nvar utils = require('./utils.js');\\nvar hydration = require('./hydration.js');\\nvar query = require('./query.js');\\n\\n\\n\\nexports.CancelledError = retryer.CancelledError;\\nexports.isCancelledError = retryer.isCancelledError;\\nexports.QueryCache = queryCache.QueryCache;\\nexports.QueryClient = queryClient.QueryClient;\\nexports.QueryObserver = queryObserver.QueryObserver;\\nexports.QueriesObserver = queriesObserver.QueriesObserver;\\nexports.InfiniteQueryObserver = infiniteQueryObserver.InfiniteQueryObserver;\\nexports.MutationCache = mutationCache.MutationCache;\\nexports.MutationObserver = mutationObserver.MutationObserver;\\nexports.notifyManager = notifyManager.notifyManager;\\nexports.focusManager = focusManager.focusManager;\\nexports.onlineManager = onlineManager.onlineManager;\\nexports.hashQueryKey = utils.hashQueryKey;\\nexports.isError = utils.isError;\\nexports.isServer = utils.isServer;\\nexports.matchQuery = utils.matchQuery;\\nexports.parseFilterArgs = utils.parseFilterArgs;\\nexports.parseMutationArgs = utils.parseMutationArgs;\\nexports.parseMutationFilterArgs = utils.parseMutationFilterArgs;\\nexports.parseQueryArgs = utils.parseQueryArgs;\\nexports.replaceEqualDeep = utils.replaceEqualDeep;\\nexports.defaultShouldDehydrateMutation = hydration.defaultShouldDehydrateMutation;\\nexports.defaultShouldDehydrateQuery = hydration.defaultShouldDehydrateQuery;\\nexports.dehydrate = hydration.dehydrate;\\nexports.hydrate = hydration.hydrate;\\nexports.Query = query.Query;\\n//# sourceMappingURL=index.js.map\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"retryer\",\"queryCache\",\"queryClient\",\"queryObserver\",\"queriesObserver\",\"infiniteQueryObserver\",\"mutationCache\",\"mutationObserver\",\"notifyManager\",\"focusManager\",\"onlineManager\",\"utils\",\"hydration\",\"query\",\"CancelledError\",\"isCancelledError\",\"QueryCache\",\"QueryClient\",\"QueryObserver\",\"QueriesObserver\",\"InfiniteQueryObserver\",\"MutationCache\",\"MutationObserver\",\"hashQueryKey\",\"isError\",\"isServer\",\"matchQuery\",\"parseFilterArgs\",\"parseMutationArgs\",\"parseMutationFilterArgs\",\"parseQueryArgs\",\"replaceEqualDeep\",\"defaultShouldDehydrateMutation\",\"defaultShouldDehydrateQuery\",\"dehydrate\",\"hydrate\",\"Query\"]\n}\n"]