shadow$provide.module$node_modules$$ethersproject$hash$lib$namehash=function(global,require,module,exports){function checkComponent(comp){if(0===comp.length)throw Error("invalid ENS name; empty component");return comp}function ensNameSplit(name){var bytes=(0,strings_1.toUtf8Bytes)((0,lib_1.ens_normalize)(name)),comps=[];if(0===name.length)return comps;for(var i=name=0;i<bytes.length;i++)46===bytes[i]&&(comps.push(checkComponent(bytes.slice(name,i))),name=i+1);if(name>=bytes.length)throw Error("invalid ENS name; empty component");
comps.push(checkComponent(bytes.slice(name)));return comps}Object.defineProperty(exports,"__esModule",{value:!0});exports.dnsEncode=exports.namehash=exports.isValidName=exports.ensNormalize=void 0;var bytes_1=require("module$node_modules$$ethersproject$bytes$lib$index"),strings_1=require("module$node_modules$$ethersproject$strings$lib$index"),keccak256_1=require("module$node_modules$$ethersproject$keccak256$lib$index");global=require("module$node_modules$$ethersproject$logger$lib$index");module=require("module$node_modules$$ethersproject$hash$lib$_version");
var logger=new global.Logger(module.version),lib_1=require("module$node_modules$$ethersproject$hash$lib$ens_normalize$lib"),Zeros=new Uint8Array(32);Zeros.fill(0);exports.ensNormalize=function(name){return ensNameSplit(name).map(function(comp){return(0,strings_1.toUtf8String)(comp)}).join(".")};exports.isValidName=function(name){try{return 0!==ensNameSplit(name).length}catch(error){}return!1};exports.namehash=function(name){"string"!==typeof name&&logger.throwArgumentError("invalid ENS name; not a string",
"name",name);var result=Zeros;for(name=ensNameSplit(name);name.length;)result=(0,keccak256_1.keccak256)((0,bytes_1.concat)([result,(0,keccak256_1.keccak256)(name.pop())]));return(0,bytes_1.hexlify)(result)};exports.dnsEncode=function(name){return(0,bytes_1.hexlify)((0,bytes_1.concat)(ensNameSplit(name).map(function(comp){if(63<comp.length)throw Error("invalid DNS encoded entry; length exceeds 63 bytes");var bytes=new Uint8Array(comp.length+1);bytes.set(comp,1);bytes[0]=bytes.length-1;return bytes})))+
"00"}}
//# sourceMappingURL=module$node_modules$$ethersproject$hash$lib$namehash.js.map
