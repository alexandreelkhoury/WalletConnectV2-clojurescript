["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@tanstack/react-query/build/lib/Hydrate.js"],"~:js","shadow$provide.module$node_modules$$tanstack$react_query$build$lib$Hydrate=function(global,require,module,exports){function useHydrate(state,options={}){const queryClient=QueryClientProvider.useQueryClient({context:options.context}),optionsRef=React__namespace.useRef(options);optionsRef.current=options;React__namespace.useMemo(()=>{state&&queryCore.hydrate(queryClient,state,optionsRef.current)},[queryClient,state])}\"use client\";\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});global=\nrequire(\"module$node_modules$react$index\");var queryCore=require(\"module$node_modules$$tanstack$query_core$build$lib$index\"),QueryClientProvider=require(\"module$node_modules$$tanstack$react_query$build$lib$QueryClientProvider\"),React__namespace=function(e){if(e&&e.__esModule)return e;var n=Object.create(null);e&&Object.keys(e).forEach(function(k){if(\"default\"!==k){var d=Object.getOwnPropertyDescriptor(e,k);Object.defineProperty(n,k,d.get?d:{enumerable:!0,get:function(){return e[k]}})}});n[\"default\"]=\ne;return Object.freeze(n)}(global);exports.Hydrate=({children,options,state})=>{useHydrate(state,options);return children};exports.useHydrate=useHydrate}","~:source","shadow$provide[\"module$node_modules$$tanstack$react_query$build$lib$Hydrate\"] = function(global,require,module,exports) {\n'use client';\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar React = require('react');\nvar queryCore = require('@tanstack/query-core');\nvar QueryClientProvider = require('./QueryClientProvider.js');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nfunction useHydrate(state, options = {}) {\n  const queryClient = QueryClientProvider.useQueryClient({\n    context: options.context\n  });\n  const optionsRef = React__namespace.useRef(options);\n  optionsRef.current = options; // Running hydrate again with the same queries is safe,\n  // it wont overwrite or initialize existing queries,\n  // relying on useMemo here is only a performance optimization.\n  // hydrate can and should be run *during* render here for SSR to work properly\n\n  React__namespace.useMemo(() => {\n    if (state) {\n      queryCore.hydrate(queryClient, state, optionsRef.current);\n    }\n  }, [queryClient, state]);\n}\nconst Hydrate = ({\n  children,\n  options,\n  state\n}) => {\n  useHydrate(state, options);\n  return children;\n};\n\nexports.Hydrate = Hydrate;\nexports.useHydrate = useHydrate;\n//# sourceMappingURL=Hydrate.js.map\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$tanstack$query_core$build$lib$index","~$module$node_modules$react$index","~$shadow.js","~$module$node_modules$$tanstack$react_query$build$lib$QueryClientProvider"]],"~:properties",["^5",["__esModule","value","enumerable","context","current","get","useHydrate","Hydrate"]],"~:compiled-at",1695111490191,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$tanstack$react_query$build$lib$Hydrate.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,2DAAA,CAAgF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA8BxHC,QAASA,WAAU,CAACC,KAAD,CAAQC,OAAA,CAAU,EAAlB,CAAsB,CACvC,MAAMC,YAAcC,mBAAoBC,CAAAA,cAApB,CAAmC,CACrDC,QAASJ,OAAQI,CAAAA,OADoC,CAAnC,CAApB,CAGMC,WAAaC,gBAAiBC,CAAAA,MAAjB,CAAwBP,OAAxB,CACnBK,WAAWG,CAAAA,OAAX,CAAqBR,OAKrBM,iBAAiBG,CAAAA,OAAjB,CAAyB,EAAA,EAAM,CACzBV,KAAJ,EACEW,SAAUC,CAAAA,OAAV,CAAkBV,WAAlB,CAA+BF,KAA/B,CAAsCM,UAAWG,CAAAA,OAAjD,CAF2B,CAA/B,CAIG,CAACP,WAAD,CAAcF,KAAd,CAJH,CAVuC,CA7BzC,YACA,aAEAa,OAAOC,CAAAA,cAAP,CAAsBhB,OAAtB,CAA+B,YAA/B,CAA6C,CAAEiB,MAAO,CAAA,CAAT,CAA7C,CAEIC,OAAAA;AAAQpB,OAAA,CAAQ,iCAAR,CACZ,KAAIe,UAAYf,OAAA,CAAQ,0DAAR,CAAhB,CACIO,oBAAsBP,OAAA,CAAQ,yEAAR,CAD1B,CAqBIW,iBAlBJU,QAA0B,CAACC,CAAD,CAAI,CAC5B,GAAIA,CAAJ,EAASA,CAAEC,CAAAA,UAAX,CAAuB,MAAOD,EAC9B,KAAIE,EAAIP,MAAOQ,CAAAA,MAAP,CAAc,IAAd,CACJH,EAAJ,EACEL,MAAOS,CAAAA,IAAP,CAAYJ,CAAZ,CAAeK,CAAAA,OAAf,CAAuB,QAAS,CAACC,CAAD,CAAI,CAClC,GAAU,SAAV,GAAIA,CAAJ,CAAqB,CACnB,IAAIC,EAAIZ,MAAOa,CAAAA,wBAAP,CAAgCR,CAAhC,CAAmCM,CAAnC,CACRX,OAAOC,CAAAA,cAAP,CAAsBM,CAAtB,CAAyBI,CAAzB,CAA4BC,CAAEE,CAAAA,GAAF,CAAQF,CAAR,CAAY,CACtCG,WAAY,CAAA,CAD0B,CAEtCD,IAAKA,QAAS,EAAG,CAAE,MAAOT,EAAA,CAAEM,CAAF,CAAT,CAFqB,CAAxC,CAFmB,CADa,CAApC,CAUFJ,EAAA,CAAE,SAAF,CAAA;AAAeF,CACf,OAAOL,OAAOgB,CAAAA,MAAP,CAAcT,CAAd,CAfqB,CAkBM,CAAkBJ,MAAlB,CA2BpClB,QAAQgC,CAAAA,OAAR,CATgB,CAAC,CACfC,QADe,CAEf9B,OAFe,CAGfD,KAHe,CAAD,CAAA8B,EAIV,CACJ/B,UAAA,CAAWC,KAAX,CAAkBC,OAAlB,CACA,OAAO8B,SAFH,CAMNjC,QAAQC,CAAAA,UAAR,CAAqBA,UAxDmG;\",\n\"sources\":[\"node_modules/@tanstack/react-query/build/lib/Hydrate.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$tanstack$react_query$build$lib$Hydrate\\\"] = function(global,require,module,exports) {\\n'use client';\\n'use strict';\\n\\nObject.defineProperty(exports, '__esModule', { value: true });\\n\\nvar React = require('react');\\nvar queryCore = require('@tanstack/query-core');\\nvar QueryClientProvider = require('./QueryClientProvider.js');\\n\\nfunction _interopNamespace(e) {\\n  if (e && e.__esModule) return e;\\n  var n = Object.create(null);\\n  if (e) {\\n    Object.keys(e).forEach(function (k) {\\n      if (k !== 'default') {\\n        var d = Object.getOwnPropertyDescriptor(e, k);\\n        Object.defineProperty(n, k, d.get ? d : {\\n          enumerable: true,\\n          get: function () { return e[k]; }\\n        });\\n      }\\n    });\\n  }\\n  n[\\\"default\\\"] = e;\\n  return Object.freeze(n);\\n}\\n\\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\\n\\nfunction useHydrate(state, options = {}) {\\n  const queryClient = QueryClientProvider.useQueryClient({\\n    context: options.context\\n  });\\n  const optionsRef = React__namespace.useRef(options);\\n  optionsRef.current = options; // Running hydrate again with the same queries is safe,\\n  // it wont overwrite or initialize existing queries,\\n  // relying on useMemo here is only a performance optimization.\\n  // hydrate can and should be run *during* render here for SSR to work properly\\n\\n  React__namespace.useMemo(() => {\\n    if (state) {\\n      queryCore.hydrate(queryClient, state, optionsRef.current);\\n    }\\n  }, [queryClient, state]);\\n}\\nconst Hydrate = ({\\n  children,\\n  options,\\n  state\\n}) => {\\n  useHydrate(state, options);\\n  return children;\\n};\\n\\nexports.Hydrate = Hydrate;\\nexports.useHydrate = useHydrate;\\n//# sourceMappingURL=Hydrate.js.map\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"useHydrate\",\"state\",\"options\",\"queryClient\",\"QueryClientProvider\",\"useQueryClient\",\"context\",\"optionsRef\",\"React__namespace\",\"useRef\",\"current\",\"useMemo\",\"queryCore\",\"hydrate\",\"Object\",\"defineProperty\",\"value\",\"React\",\"_interopNamespace\",\"e\",\"__esModule\",\"n\",\"create\",\"keys\",\"forEach\",\"k\",\"d\",\"getOwnPropertyDescriptor\",\"get\",\"enumerable\",\"freeze\",\"Hydrate\",\"children\"]\n}\n"]