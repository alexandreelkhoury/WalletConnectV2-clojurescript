shadow$provide.module$node_modules$viem$_cjs$actions$ens$getEnsResolver=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.getEnsResolver=void 0;const chain_js_1=require("module$node_modules$viem$_cjs$utils$chain"),toHex_js_1=require("module$node_modules$viem$_cjs$utils$encoding$toHex"),packetToBytes_js_1=require("module$node_modules$viem$_cjs$utils$ens$packetToBytes"),readContract_js_1=require("module$node_modules$viem$_cjs$actions$public$readContract");
exports.getEnsResolver=async function(client,{blockNumber,blockTag,name,universalResolverAddress:universalResolverAddress_}){if(!universalResolverAddress_){if(!client.chain)throw Error("client chain not configured. universalResolverAddress is required.");universalResolverAddress_=(0,chain_js_1.getChainContractAddress)({blockNumber,chain:client.chain,contract:"ensUniversalResolver"})}[client]=await (0,readContract_js_1.readContract)(client,{address:universalResolverAddress_,abi:[{inputs:[{type:"bytes"}],
name:"findResolver",outputs:[{type:"address"},{type:"bytes32"}],stateMutability:"view",type:"function"}],functionName:"findResolver",args:[(0,toHex_js_1.toHex)((0,packetToBytes_js_1.packetToBytes)(name))],blockNumber,blockTag});return client}}
//# sourceMappingURL=module$node_modules$viem$_cjs$actions$ens$getEnsResolver.js.map
