shadow$provide.module$node_modules$viem$_cjs$actions$wallet$sendTransaction=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.sendTransaction=void 0;const parseAccount_js_1=require("module$node_modules$viem$_cjs$accounts$utils$parseAccount"),account_js_1=require("module$node_modules$viem$_cjs$errors$account"),chain_js_1=require("module$node_modules$viem$_cjs$utils$chain"),getTransactionError_js_1=require("module$node_modules$viem$_cjs$utils$errors$getTransactionError"),
extract_js_1=require("module$node_modules$viem$_cjs$utils$formatters$extract"),transactionRequest_js_1=require("module$node_modules$viem$_cjs$utils$formatters$transactionRequest"),assertRequest_js_1=require("module$node_modules$viem$_cjs$utils$transaction$assertRequest"),getChainId_js_1=require("module$node_modules$viem$_cjs$actions$public$getChainId"),prepareTransactionRequest_js_1=require("module$node_modules$viem$_cjs$actions$wallet$prepareTransactionRequest"),sendRawTransaction_js_1=require("module$node_modules$viem$_cjs$actions$wallet$sendRawTransaction");
exports.sendTransaction=async function(client,args){const {account:account_=client.account,chain=client.chain,accessList,data,gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,nonce,to,value,...rest}=args;if(!account_)throw new account_js_1.AccountNotFoundError({docsPath:"/docs/actions/wallet/sendTransaction"});const account=(0,parseAccount_js_1.parseAccount)(account_);try{(0,assertRequest_js_1.assertRequest)(args);let chainId;null!==chain&&(chainId=await (0,getChainId_js_1.getChainId)(client),(0,chain_js_1.assertCurrentChain)({currentChainId:chainId,
chain}));if("local"===account.type){const request=await (0,prepareTransactionRequest_js_1.prepareTransactionRequest)(client,{account,accessList,chain,data,gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,nonce,to,value,...rest});chainId||(chainId=await (0,getChainId_js_1.getChainId)(client));const serializedTransaction=await account.signTransaction({...request,chainId},{serializer:chain?.serializers?.transaction});return await (0,sendRawTransaction_js_1.sendRawTransaction)(client,{serializedTransaction})}const format=
chain?.formatters?.transactionRequest?.format||transactionRequest_js_1.formatTransactionRequest,request$jscomp$0=format({...(0,extract_js_1.extract)(rest,{format}),accessList,data,from:account.address,gas,gasPrice,maxFeePerGas,maxPriorityFeePerGas,nonce,to,value});return await client.request({method:"eth_sendTransaction",params:[request$jscomp$0]})}catch(err){throw(0,getTransactionError_js_1.getTransactionError)(err,{...args,account,chain:args.chain||void 0});}}}
//# sourceMappingURL=module$node_modules$viem$_cjs$actions$wallet$sendTransaction.js.map
