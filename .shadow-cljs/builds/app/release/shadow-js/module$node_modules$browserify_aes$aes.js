["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/browserify-aes/aes.js"],"~:js","shadow$provide[193]=function(S,A,V,q){function F(n){e.isBuffer(n)||(n=e.from(n));for(var l=n.length/4|0,h=Array(l),k=0;k<l;k++)h[k]=n.readUInt32BE(4*k);return h}function G(n){for(;0<n.length;n++)n[0]=0}function r(n,l,h,k,t){var B=h[0],E=h[1],H=h[2];h=h[3];for(var D=n[0]^l[0],C=n[1]^l[1],I=n[2]^l[2],M=n[3]^l[3],P,J,T=4,N=1;N<t;N++)n=B[D>>>24]^E[C>>>16&255]^H[I>>>8&255]^h[M&255]^l[T++],P=B[C>>>24]^E[I>>>16&255]^H[M>>>8&255]^h[D&255]^l[T++],J=B[I>>>24]^E[M>>>16&255]^H[D>>>8&255]^h[C&255]^l[T++],M=B[M>>>\n24]^E[D>>>16&255]^H[C>>>8&255]^h[I&255]^l[T++],D=n,C=P,I=J;n=(k[D>>>24]<<24|k[C>>>16&255]<<16|k[I>>>8&255]<<8|k[M&255])^l[T++];P=(k[C>>>24]<<24|k[I>>>16&255]<<16|k[M>>>8&255]<<8|k[D&255])^l[T++];J=(k[I>>>24]<<24|k[M>>>16&255]<<16|k[D>>>8&255]<<8|k[C&255])^l[T++];M=(k[M>>>24]<<24|k[D>>>16&255]<<16|k[C>>>8&255]<<8|k[I&255])^l[T++];return[n>>>0,P>>>0,J>>>0,M>>>0]}function y(n){this._key=F(n);this._reset()}var e=A(111).Buffer,u=[0,1,2,4,8,16,32,64,128,27,54],p=function(){for(var n=Array(256),l=0;256>\nl;l++)n[l]=128>l?l<<1:l<<1^283;l=[];for(var h=[],k=[[],[],[],[]],t=[[],[],[],[]],B=0,E=0,H=0;256>H;++H){var D=E^E<<1^E<<2^E<<3^E<<4;D=D>>>8^D&255^99;l[B]=D;h[D]=B;var C=n[B],I=n[C],M=n[I],P=257*n[D]^16843008*D;k[0][B]=P<<24|P>>>8;k[1][B]=P<<16|P>>>16;k[2][B]=P<<8|P>>>24;k[3][B]=P;P=16843009*M^65537*I^257*C^16843008*B;t[0][D]=P<<24|P>>>8;t[1][D]=P<<16|P>>>16;t[2][D]=P<<8|P>>>24;t[3][D]=P;0===B?B=E=1:(B=C^n[n[n[M^C]]],E^=n[n[E]])}return{SBOX:l,INV_SBOX:h,SUB_MIX:k,INV_SUB_MIX:t}}();y.blockSize=16;y.keySize=\n32;y.prototype.blockSize=y.blockSize;y.prototype.keySize=y.keySize;y.prototype._reset=function(){for(var n=this._key,l=n.length,h=l+6,k=4*(h+1),t=[],B=0;B<l;B++)t[B]=n[B];for(B=l;B<k;B++)n=t[B-1],0===B%l?(n=n<<8|n>>>24,n=p.SBOX[n>>>24]<<24|p.SBOX[n>>>16&255]<<16|p.SBOX[n>>>8&255]<<8|p.SBOX[n&255],n^=u[B/l|0]<<24):6<l&&4===B%l&&(n=p.SBOX[n>>>24]<<24|p.SBOX[n>>>16&255]<<16|p.SBOX[n>>>8&255]<<8|p.SBOX[n&255]),t[B]=t[B-l]^n;l=[];for(B=0;B<k;B++){n=k-B;var E=t[n-(B%4?0:4)];l[B]=4>B||4>=n?E:p.INV_SUB_MIX[0][p.SBOX[E>>>\n24]]^p.INV_SUB_MIX[1][p.SBOX[E>>>16&255]]^p.INV_SUB_MIX[2][p.SBOX[E>>>8&255]]^p.INV_SUB_MIX[3][p.SBOX[E&255]]}this._nRounds=h;this._keySchedule=t;this._invKeySchedule=l};y.prototype.encryptBlockRaw=function(n){n=F(n);return r(n,this._keySchedule,p.SUB_MIX,p.SBOX,this._nRounds)};y.prototype.encryptBlock=function(n){n=this.encryptBlockRaw(n);var l=e.allocUnsafe(16);l.writeUInt32BE(n[0],0);l.writeUInt32BE(n[1],4);l.writeUInt32BE(n[2],8);l.writeUInt32BE(n[3],12);return l};y.prototype.decryptBlock=function(n){n=\nF(n);var l=n[1];n[1]=n[3];n[3]=l;n=r(n,this._invKeySchedule,p.INV_SUB_MIX,p.INV_SBOX,this._nRounds);l=e.allocUnsafe(16);l.writeUInt32BE(n[0],0);l.writeUInt32BE(n[3],4);l.writeUInt32BE(n[2],8);l.writeUInt32BE(n[1],12);return l};y.prototype.scrub=function(){G(this._keySchedule);G(this._invKeySchedule);G(this._key)};V.exports.AES=y}","~:source","shadow$provide[193] = function(global,require,module,exports) {\n// based on the aes implimentation in triple sec\n// https://github.com/keybase/triplesec\n// which is in turn based on the one from crypto-js\n// https://code.google.com/p/crypto-js/\n\nvar Buffer = require('safe-buffer').Buffer\n\nfunction asUInt32Array (buf) {\n  if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n\n  var len = (buf.length / 4) | 0\n  var out = new Array(len)\n\n  for (var i = 0; i < len; i++) {\n    out[i] = buf.readUInt32BE(i * 4)\n  }\n\n  return out\n}\n\nfunction scrubVec (v) {\n  for (var i = 0; i < v.length; v++) {\n    v[i] = 0\n  }\n}\n\nfunction cryptBlock (M, keySchedule, SUB_MIX, SBOX, nRounds) {\n  var SUB_MIX0 = SUB_MIX[0]\n  var SUB_MIX1 = SUB_MIX[1]\n  var SUB_MIX2 = SUB_MIX[2]\n  var SUB_MIX3 = SUB_MIX[3]\n\n  var s0 = M[0] ^ keySchedule[0]\n  var s1 = M[1] ^ keySchedule[1]\n  var s2 = M[2] ^ keySchedule[2]\n  var s3 = M[3] ^ keySchedule[3]\n  var t0, t1, t2, t3\n  var ksRow = 4\n\n  for (var round = 1; round < nRounds; round++) {\n    t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[(s1 >>> 16) & 0xff] ^ SUB_MIX2[(s2 >>> 8) & 0xff] ^ SUB_MIX3[s3 & 0xff] ^ keySchedule[ksRow++]\n    t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[(s2 >>> 16) & 0xff] ^ SUB_MIX2[(s3 >>> 8) & 0xff] ^ SUB_MIX3[s0 & 0xff] ^ keySchedule[ksRow++]\n    t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[(s3 >>> 16) & 0xff] ^ SUB_MIX2[(s0 >>> 8) & 0xff] ^ SUB_MIX3[s1 & 0xff] ^ keySchedule[ksRow++]\n    t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[(s0 >>> 16) & 0xff] ^ SUB_MIX2[(s1 >>> 8) & 0xff] ^ SUB_MIX3[s2 & 0xff] ^ keySchedule[ksRow++]\n    s0 = t0\n    s1 = t1\n    s2 = t2\n    s3 = t3\n  }\n\n  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]\n  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]\n  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]\n  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]\n  t0 = t0 >>> 0\n  t1 = t1 >>> 0\n  t2 = t2 >>> 0\n  t3 = t3 >>> 0\n\n  return [t0, t1, t2, t3]\n}\n\n// AES constants\nvar RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]\nvar G = (function () {\n  // Compute double table\n  var d = new Array(256)\n  for (var j = 0; j < 256; j++) {\n    if (j < 128) {\n      d[j] = j << 1\n    } else {\n      d[j] = (j << 1) ^ 0x11b\n    }\n  }\n\n  var SBOX = []\n  var INV_SBOX = []\n  var SUB_MIX = [[], [], [], []]\n  var INV_SUB_MIX = [[], [], [], []]\n\n  // Walk GF(2^8)\n  var x = 0\n  var xi = 0\n  for (var i = 0; i < 256; ++i) {\n    // Compute sbox\n    var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)\n    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63\n    SBOX[x] = sx\n    INV_SBOX[sx] = x\n\n    // Compute multiplication\n    var x2 = d[x]\n    var x4 = d[x2]\n    var x8 = d[x4]\n\n    // Compute sub bytes, mix columns tables\n    var t = (d[sx] * 0x101) ^ (sx * 0x1010100)\n    SUB_MIX[0][x] = (t << 24) | (t >>> 8)\n    SUB_MIX[1][x] = (t << 16) | (t >>> 16)\n    SUB_MIX[2][x] = (t << 8) | (t >>> 24)\n    SUB_MIX[3][x] = t\n\n    // Compute inv sub bytes, inv mix columns tables\n    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)\n    INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)\n    INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)\n    INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)\n    INV_SUB_MIX[3][sx] = t\n\n    if (x === 0) {\n      x = xi = 1\n    } else {\n      x = x2 ^ d[d[d[x8 ^ x2]]]\n      xi ^= d[d[xi]]\n    }\n  }\n\n  return {\n    SBOX: SBOX,\n    INV_SBOX: INV_SBOX,\n    SUB_MIX: SUB_MIX,\n    INV_SUB_MIX: INV_SUB_MIX\n  }\n})()\n\nfunction AES (key) {\n  this._key = asUInt32Array(key)\n  this._reset()\n}\n\nAES.blockSize = 4 * 4\nAES.keySize = 256 / 8\nAES.prototype.blockSize = AES.blockSize\nAES.prototype.keySize = AES.keySize\nAES.prototype._reset = function () {\n  var keyWords = this._key\n  var keySize = keyWords.length\n  var nRounds = keySize + 6\n  var ksRows = (nRounds + 1) * 4\n\n  var keySchedule = []\n  for (var k = 0; k < keySize; k++) {\n    keySchedule[k] = keyWords[k]\n  }\n\n  for (k = keySize; k < ksRows; k++) {\n    var t = keySchedule[k - 1]\n\n    if (k % keySize === 0) {\n      t = (t << 8) | (t >>> 24)\n      t =\n        (G.SBOX[t >>> 24] << 24) |\n        (G.SBOX[(t >>> 16) & 0xff] << 16) |\n        (G.SBOX[(t >>> 8) & 0xff] << 8) |\n        (G.SBOX[t & 0xff])\n\n      t ^= RCON[(k / keySize) | 0] << 24\n    } else if (keySize > 6 && k % keySize === 4) {\n      t =\n        (G.SBOX[t >>> 24] << 24) |\n        (G.SBOX[(t >>> 16) & 0xff] << 16) |\n        (G.SBOX[(t >>> 8) & 0xff] << 8) |\n        (G.SBOX[t & 0xff])\n    }\n\n    keySchedule[k] = keySchedule[k - keySize] ^ t\n  }\n\n  var invKeySchedule = []\n  for (var ik = 0; ik < ksRows; ik++) {\n    var ksR = ksRows - ik\n    var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)]\n\n    if (ik < 4 || ksR <= 4) {\n      invKeySchedule[ik] = tt\n    } else {\n      invKeySchedule[ik] =\n        G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^\n        G.INV_SUB_MIX[1][G.SBOX[(tt >>> 16) & 0xff]] ^\n        G.INV_SUB_MIX[2][G.SBOX[(tt >>> 8) & 0xff]] ^\n        G.INV_SUB_MIX[3][G.SBOX[tt & 0xff]]\n    }\n  }\n\n  this._nRounds = nRounds\n  this._keySchedule = keySchedule\n  this._invKeySchedule = invKeySchedule\n}\n\nAES.prototype.encryptBlockRaw = function (M) {\n  M = asUInt32Array(M)\n  return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds)\n}\n\nAES.prototype.encryptBlock = function (M) {\n  var out = this.encryptBlockRaw(M)\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[1], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[3], 12)\n  return buf\n}\n\nAES.prototype.decryptBlock = function (M) {\n  M = asUInt32Array(M)\n\n  // swap\n  var m1 = M[1]\n  M[1] = M[3]\n  M[3] = m1\n\n  var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds)\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[3], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[1], 12)\n  return buf\n}\n\nAES.prototype.scrub = function () {\n  scrubVec(this._keySchedule)\n  scrubVec(this._invKeySchedule)\n  scrubVec(this._key)\n}\n\nmodule.exports.AES = AES\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$safe_buffer$index"]],"~:properties",["^5",["_key","keySize","encryptBlockRaw","decryptBlock","SBOX","AES","INV_SBOX","_nRounds","scrub","_reset","blockSize","INV_SUB_MIX","encryptBlock","_invKeySchedule","SUB_MIX","_keySchedule"]],"~:compiled-at",1695041440826,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$browserify_aes$aes.js\",\n\"lineCount\":6,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/browserify-aes/aes.js\"],\n\"sourcesContent\":[\"shadow$provide[193] = function(global,require,module,exports) {\\n// based on the aes implimentation in triple sec\\n// https://github.com/keybase/triplesec\\n// which is in turn based on the one from crypto-js\\n// https://code.google.com/p/crypto-js/\\n\\nvar Buffer = require('safe-buffer').Buffer\\n\\nfunction asUInt32Array (buf) {\\n  if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\\n\\n  var len = (buf.length / 4) | 0\\n  var out = new Array(len)\\n\\n  for (var i = 0; i < len; i++) {\\n    out[i] = buf.readUInt32BE(i * 4)\\n  }\\n\\n  return out\\n}\\n\\nfunction scrubVec (v) {\\n  for (var i = 0; i < v.length; v++) {\\n    v[i] = 0\\n  }\\n}\\n\\nfunction cryptBlock (M, keySchedule, SUB_MIX, SBOX, nRounds) {\\n  var SUB_MIX0 = SUB_MIX[0]\\n  var SUB_MIX1 = SUB_MIX[1]\\n  var SUB_MIX2 = SUB_MIX[2]\\n  var SUB_MIX3 = SUB_MIX[3]\\n\\n  var s0 = M[0] ^ keySchedule[0]\\n  var s1 = M[1] ^ keySchedule[1]\\n  var s2 = M[2] ^ keySchedule[2]\\n  var s3 = M[3] ^ keySchedule[3]\\n  var t0, t1, t2, t3\\n  var ksRow = 4\\n\\n  for (var round = 1; round < nRounds; round++) {\\n    t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[(s1 >>> 16) & 0xff] ^ SUB_MIX2[(s2 >>> 8) & 0xff] ^ SUB_MIX3[s3 & 0xff] ^ keySchedule[ksRow++]\\n    t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[(s2 >>> 16) & 0xff] ^ SUB_MIX2[(s3 >>> 8) & 0xff] ^ SUB_MIX3[s0 & 0xff] ^ keySchedule[ksRow++]\\n    t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[(s3 >>> 16) & 0xff] ^ SUB_MIX2[(s0 >>> 8) & 0xff] ^ SUB_MIX3[s1 & 0xff] ^ keySchedule[ksRow++]\\n    t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[(s0 >>> 16) & 0xff] ^ SUB_MIX2[(s1 >>> 8) & 0xff] ^ SUB_MIX3[s2 & 0xff] ^ keySchedule[ksRow++]\\n    s0 = t0\\n    s1 = t1\\n    s2 = t2\\n    s3 = t3\\n  }\\n\\n  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]\\n  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]\\n  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]\\n  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]\\n  t0 = t0 >>> 0\\n  t1 = t1 >>> 0\\n  t2 = t2 >>> 0\\n  t3 = t3 >>> 0\\n\\n  return [t0, t1, t2, t3]\\n}\\n\\n// AES constants\\nvar RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]\\nvar G = (function () {\\n  // Compute double table\\n  var d = new Array(256)\\n  for (var j = 0; j < 256; j++) {\\n    if (j < 128) {\\n      d[j] = j << 1\\n    } else {\\n      d[j] = (j << 1) ^ 0x11b\\n    }\\n  }\\n\\n  var SBOX = []\\n  var INV_SBOX = []\\n  var SUB_MIX = [[], [], [], []]\\n  var INV_SUB_MIX = [[], [], [], []]\\n\\n  // Walk GF(2^8)\\n  var x = 0\\n  var xi = 0\\n  for (var i = 0; i < 256; ++i) {\\n    // Compute sbox\\n    var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)\\n    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63\\n    SBOX[x] = sx\\n    INV_SBOX[sx] = x\\n\\n    // Compute multiplication\\n    var x2 = d[x]\\n    var x4 = d[x2]\\n    var x8 = d[x4]\\n\\n    // Compute sub bytes, mix columns tables\\n    var t = (d[sx] * 0x101) ^ (sx * 0x1010100)\\n    SUB_MIX[0][x] = (t << 24) | (t >>> 8)\\n    SUB_MIX[1][x] = (t << 16) | (t >>> 16)\\n    SUB_MIX[2][x] = (t << 8) | (t >>> 24)\\n    SUB_MIX[3][x] = t\\n\\n    // Compute inv sub bytes, inv mix columns tables\\n    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)\\n    INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)\\n    INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)\\n    INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)\\n    INV_SUB_MIX[3][sx] = t\\n\\n    if (x === 0) {\\n      x = xi = 1\\n    } else {\\n      x = x2 ^ d[d[d[x8 ^ x2]]]\\n      xi ^= d[d[xi]]\\n    }\\n  }\\n\\n  return {\\n    SBOX: SBOX,\\n    INV_SBOX: INV_SBOX,\\n    SUB_MIX: SUB_MIX,\\n    INV_SUB_MIX: INV_SUB_MIX\\n  }\\n})()\\n\\nfunction AES (key) {\\n  this._key = asUInt32Array(key)\\n  this._reset()\\n}\\n\\nAES.blockSize = 4 * 4\\nAES.keySize = 256 / 8\\nAES.prototype.blockSize = AES.blockSize\\nAES.prototype.keySize = AES.keySize\\nAES.prototype._reset = function () {\\n  var keyWords = this._key\\n  var keySize = keyWords.length\\n  var nRounds = keySize + 6\\n  var ksRows = (nRounds + 1) * 4\\n\\n  var keySchedule = []\\n  for (var k = 0; k < keySize; k++) {\\n    keySchedule[k] = keyWords[k]\\n  }\\n\\n  for (k = keySize; k < ksRows; k++) {\\n    var t = keySchedule[k - 1]\\n\\n    if (k % keySize === 0) {\\n      t = (t << 8) | (t >>> 24)\\n      t =\\n        (G.SBOX[t >>> 24] << 24) |\\n        (G.SBOX[(t >>> 16) & 0xff] << 16) |\\n        (G.SBOX[(t >>> 8) & 0xff] << 8) |\\n        (G.SBOX[t & 0xff])\\n\\n      t ^= RCON[(k / keySize) | 0] << 24\\n    } else if (keySize > 6 && k % keySize === 4) {\\n      t =\\n        (G.SBOX[t >>> 24] << 24) |\\n        (G.SBOX[(t >>> 16) & 0xff] << 16) |\\n        (G.SBOX[(t >>> 8) & 0xff] << 8) |\\n        (G.SBOX[t & 0xff])\\n    }\\n\\n    keySchedule[k] = keySchedule[k - keySize] ^ t\\n  }\\n\\n  var invKeySchedule = []\\n  for (var ik = 0; ik < ksRows; ik++) {\\n    var ksR = ksRows - ik\\n    var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)]\\n\\n    if (ik < 4 || ksR <= 4) {\\n      invKeySchedule[ik] = tt\\n    } else {\\n      invKeySchedule[ik] =\\n        G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^\\n        G.INV_SUB_MIX[1][G.SBOX[(tt >>> 16) & 0xff]] ^\\n        G.INV_SUB_MIX[2][G.SBOX[(tt >>> 8) & 0xff]] ^\\n        G.INV_SUB_MIX[3][G.SBOX[tt & 0xff]]\\n    }\\n  }\\n\\n  this._nRounds = nRounds\\n  this._keySchedule = keySchedule\\n  this._invKeySchedule = invKeySchedule\\n}\\n\\nAES.prototype.encryptBlockRaw = function (M) {\\n  M = asUInt32Array(M)\\n  return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds)\\n}\\n\\nAES.prototype.encryptBlock = function (M) {\\n  var out = this.encryptBlockRaw(M)\\n  var buf = Buffer.allocUnsafe(16)\\n  buf.writeUInt32BE(out[0], 0)\\n  buf.writeUInt32BE(out[1], 4)\\n  buf.writeUInt32BE(out[2], 8)\\n  buf.writeUInt32BE(out[3], 12)\\n  return buf\\n}\\n\\nAES.prototype.decryptBlock = function (M) {\\n  M = asUInt32Array(M)\\n\\n  // swap\\n  var m1 = M[1]\\n  M[1] = M[3]\\n  M[3] = m1\\n\\n  var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds)\\n  var buf = Buffer.allocUnsafe(16)\\n  buf.writeUInt32BE(out[0], 0)\\n  buf.writeUInt32BE(out[3], 4)\\n  buf.writeUInt32BE(out[2], 8)\\n  buf.writeUInt32BE(out[1], 12)\\n  return buf\\n}\\n\\nAES.prototype.scrub = function () {\\n  scrubVec(this._keySchedule)\\n  scrubVec(this._invKeySchedule)\\n  scrubVec(this._key)\\n}\\n\\nmodule.exports.AES = AES\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"asUInt32Array\",\"buf\",\"Buffer\",\"isBuffer\",\"from\",\"len\",\"length\",\"out\",\"Array\",\"i\",\"readUInt32BE\",\"scrubVec\",\"v\",\"cryptBlock\",\"M\",\"keySchedule\",\"SUB_MIX\",\"SBOX\",\"nRounds\",\"SUB_MIX0\",\"SUB_MIX1\",\"SUB_MIX2\",\"SUB_MIX3\",\"s0\",\"s1\",\"s2\",\"s3\",\"t1\",\"t2\",\"ksRow\",\"round\",\"t0\",\"t3\",\"AES\",\"key\",\"_key\",\"_reset\",\"RCON\",\"G\",\"d\",\"j\",\"INV_SBOX\",\"INV_SUB_MIX\",\"x\",\"xi\",\"sx\",\"x2\",\"x4\",\"x8\",\"t\",\"blockSize\",\"keySize\",\"prototype\",\"AES.prototype._reset\",\"keyWords\",\"ksRows\",\"k\",\"invKeySchedule\",\"ik\",\"ksR\",\"tt\",\"_nRounds\",\"_keySchedule\",\"_invKeySchedule\",\"encryptBlockRaw\",\"AES.prototype.encryptBlockRaw\",\"encryptBlock\",\"AES.prototype.encryptBlock\",\"allocUnsafe\",\"writeUInt32BE\",\"decryptBlock\",\"AES.prototype.decryptBlock\",\"m1\",\"scrub\",\"AES.prototype.scrub\"]\n}\n"]