["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@tanstack/query-core/build/lib/removable.js"],"~:js","shadow$provide.module$node_modules$$tanstack$query_core$build$lib$removable=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});var utils=require(\"module$node_modules$$tanstack$query_core$build$lib$utils\");class Removable{destroy(){this.clearGcTimeout()}scheduleGc(){this.clearGcTimeout();utils.isValidTimeout(this.cacheTime)&&(this.gcTimeout=setTimeout(()=>{this.optionalRemove()},this.cacheTime))}updateCacheTime(newCacheTime){this.cacheTime=Math.max(this.cacheTime||\n0,null!=newCacheTime?newCacheTime:utils.isServer?Infinity:3E5)}clearGcTimeout(){this.gcTimeout&&(clearTimeout(this.gcTimeout),this.gcTimeout=void 0)}}exports.Removable=Removable}","~:source","shadow$provide[\"module$node_modules$$tanstack$query_core$build$lib$removable\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar utils = require('./utils.js');\n\nclass Removable {\n  destroy() {\n    this.clearGcTimeout();\n  }\n\n  scheduleGc() {\n    this.clearGcTimeout();\n\n    if (utils.isValidTimeout(this.cacheTime)) {\n      this.gcTimeout = setTimeout(() => {\n        this.optionalRemove();\n      }, this.cacheTime);\n    }\n  }\n\n  updateCacheTime(newCacheTime) {\n    // Default to 5 minutes (Infinity for server-side) if no cache time is set\n    this.cacheTime = Math.max(this.cacheTime || 0, newCacheTime != null ? newCacheTime : utils.isServer ? Infinity : 5 * 60 * 1000);\n  }\n\n  clearGcTimeout() {\n    if (this.gcTimeout) {\n      clearTimeout(this.gcTimeout);\n      this.gcTimeout = undefined;\n    }\n  }\n\n}\n\nexports.Removable = Removable;\n//# sourceMappingURL=removable.js.map\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$$tanstack$query_core$build$lib$utils"]],"~:properties",["^5",["__esModule","Removable","value","gcTimeout","cacheTime"]],"~:compiled-at",1695111489922,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$tanstack$query_core$build$lib$removable.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,4DAAA,CAAiF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGzHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CAEA,KAAIC,MAAQN,OAAA,CAAQ,0DAAR,CAEZ,MAAMO,UAAN,CACEC,OAAO,EAAG,CACR,IAAKC,CAAAA,cAAL,EADQ,CAIVC,UAAU,EAAG,CACX,IAAKD,CAAAA,cAAL,EAEIH,MAAMK,CAAAA,cAAN,CAAqB,IAAKC,CAAAA,SAA1B,CAAJ,GACE,IAAKC,CAAAA,SADP,CACmBC,UAAA,CAAW,EAAA,EAAM,CAChC,IAAKC,CAAAA,cAAL,EADgC,CAAjB,CAEd,IAAKH,CAAAA,SAFS,CADnB,CAHW,CAUbI,eAAe,CAACC,YAAD,CAAe,CAE5B,IAAKL,CAAAA,SAAL,CAAiBM,IAAKC,CAAAA,GAAL,CAAS,IAAKP,CAAAA,SAAd;AAA2B,CAA3B,CAA8C,IAAhB,EAAAK,YAAA,CAAuBA,YAAvB,CAAsCX,KAAMc,CAAAA,QAAN,CAAiBC,QAAjB,CAA4B,GAAhG,CAFW,CAK9BZ,cAAc,EAAG,CACX,IAAKI,CAAAA,SAAT,GACES,YAAA,CAAa,IAAKT,CAAAA,SAAlB,CACA,CAAA,IAAKA,CAAAA,SAAL,CAAiBU,IAAAA,EAFnB,CADe,CApBnB,CA6BArB,OAAQK,CAAAA,SAAR,CAAoBA,SApCqG;\",\n\"sources\":[\"node_modules/@tanstack/query-core/build/lib/removable.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$tanstack$query_core$build$lib$removable\\\"] = function(global,require,module,exports) {\\n'use strict';\\n\\nObject.defineProperty(exports, '__esModule', { value: true });\\n\\nvar utils = require('./utils.js');\\n\\nclass Removable {\\n  destroy() {\\n    this.clearGcTimeout();\\n  }\\n\\n  scheduleGc() {\\n    this.clearGcTimeout();\\n\\n    if (utils.isValidTimeout(this.cacheTime)) {\\n      this.gcTimeout = setTimeout(() => {\\n        this.optionalRemove();\\n      }, this.cacheTime);\\n    }\\n  }\\n\\n  updateCacheTime(newCacheTime) {\\n    // Default to 5 minutes (Infinity for server-side) if no cache time is set\\n    this.cacheTime = Math.max(this.cacheTime || 0, newCacheTime != null ? newCacheTime : utils.isServer ? Infinity : 5 * 60 * 1000);\\n  }\\n\\n  clearGcTimeout() {\\n    if (this.gcTimeout) {\\n      clearTimeout(this.gcTimeout);\\n      this.gcTimeout = undefined;\\n    }\\n  }\\n\\n}\\n\\nexports.Removable = Removable;\\n//# sourceMappingURL=removable.js.map\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"utils\",\"Removable\",\"destroy\",\"clearGcTimeout\",\"scheduleGc\",\"isValidTimeout\",\"cacheTime\",\"gcTimeout\",\"setTimeout\",\"optionalRemove\",\"updateCacheTime\",\"newCacheTime\",\"Math\",\"max\",\"isServer\",\"Infinity\",\"clearTimeout\",\"undefined\"]\n}\n"]