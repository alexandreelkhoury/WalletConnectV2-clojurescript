shadow$provide.module$node_modules$$tanstack$react_query$build$lib$Hydrate=function(global,require,module,exports){function useHydrate(state,options={}){const queryClient=QueryClientProvider.useQueryClient({context:options.context}),optionsRef=React__namespace.useRef(options);optionsRef.current=options;React__namespace.useMemo(()=>{state&&queryCore.hydrate(queryClient,state,optionsRef.current)},[queryClient,state])}"use client";"use strict";Object.defineProperty(exports,"__esModule",{value:!0});global=
require("module$node_modules$react$index");var queryCore=require("module$node_modules$$tanstack$query_core$build$lib$index"),QueryClientProvider=require("module$node_modules$$tanstack$react_query$build$lib$QueryClientProvider"),React__namespace=function(e){if(e&&e.__esModule)return e;var n=Object.create(null);e&&Object.keys(e).forEach(function(k){if("default"!==k){var d=Object.getOwnPropertyDescriptor(e,k);Object.defineProperty(n,k,d.get?d:{enumerable:!0,get:function(){return e[k]}})}});n["default"]=
e;return Object.freeze(n)}(global);exports.Hydrate=({children,options,state})=>{useHydrate(state,options);return children};exports.useHydrate=useHydrate}
//# sourceMappingURL=module$node_modules$$tanstack$react_query$build$lib$Hydrate.js.map
