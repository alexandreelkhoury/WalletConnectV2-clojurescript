["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@ethersproject/providers/lib/base-provider.js"],"~:js","shadow$provide[335]=function(S,A,V,q){function F(da){if(null==da)return\"null\";32!==(0,J.hexDataLength)(da)&&w.throwArgumentError(\"invalid topic\",\"topic\",da);return da.toLowerCase()}function G(da){for(da=da.slice();0<da.length&&null==da[da.length-1];)da.pop();return da.map(function(X){if(Array.isArray(X)){var Y={};X.forEach(function(aa){Y[F(aa)]=!0});X=Object.keys(Y);X.sort();return X.join(\"|\")}return F(X)}).join(\"\\x26\")}function r(da){return\"\"===da?[]:da.split(/&/g).map(function(X){if(\"\"===X)return[];\nX=X.split(\"|\").map(function(Y){return\"null\"===Y?null:Y});return 1===X.length?X[0]:X})}function y(da){if(\"string\"===typeof da){da=da.toLowerCase();if(32===(0,J.hexDataLength)(da))return\"tx:\"+da;if(-1===da.indexOf(\":\"))return da}else{if(Array.isArray(da))return\"filter:*:\"+G(da);if(C.ForkEvent.isForkEvent(da))throw w.warn(\"not implemented\"),Error(\"not implemented\");if(da&&\"object\"===typeof da)return\"filter:\"+(da.address||\"*\")+\":\"+G(da.topics||[])}throw Error(\"invalid event - \"+da);}function e(){return(new Date).getTime()}\nfunction u(da){return new Promise(function(X){setTimeout(X,da)})}function p(da){return(0,J.hexZeroPad)(P.BigNumber.from(da).toHexString(),32)}function n(da){return M.Base58.encode((0,J.concat)([da,(0,J.hexDataSlice)((0,c.sha256)((0,c.sha256)(da)),0,4)]))}function l(da,X){try{return(0,d.toUtf8String)(h(da,X))}catch(Y){}return null}function h(da,X){if(\"0x\"===da)return null;X=P.BigNumber.from((0,J.hexDataSlice)(da,X,X+32)).toNumber();var Y=P.BigNumber.from((0,J.hexDataSlice)(da,X,X+32)).toNumber();return(0,J.hexDataSlice)(da,\nX+32,X+32+Y)}function k(da){da.match(/^ipfs:\\/\\/ipfs\\//i)?da=da.substring(12):da.match(/^ipfs:\\/\\//i)?da=da.substring(7):w.throwArgumentError(\"unsupported IPFS format\",\"link\",da);return\"https://gateway.ipfs.io/ipfs/\"+da}function t(da){da=(0,J.arrayify)(da);if(32<da.length)throw Error(\"internal; should not happen\");var X=new Uint8Array(32);X.set(da,32-da.length);return X}function B(da){for(var X=[],Y=0,aa=0;aa<da.length;aa++)X.push(null),Y+=32;for(aa=0;aa<da.length;aa++){var ca=(0,J.arrayify)(da[aa]);\nX[aa]=t(Y);X.push(t(ca.length));var ea=X,ja=ea.push;var ka=ca;if(0!==ka.length%32){var la=new Uint8Array(32*Math.ceil(ka.length/32));la.set(ka);ka=la}ja.call(ea,ka);Y+=32+32*Math.ceil(ca.length/32)}return(0,J.hexConcat)(X)}var E=this&&this.__extends||function(){var da=function(X,Y){da=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(aa,ca){aa.__proto__=ca}||function(aa,ca){for(var ea in ca)Object.prototype.hasOwnProperty.call(ca,ea)&&(aa[ea]=ca[ea])};return da(X,Y)};return function(X,\nY){function aa(){this.constructor=X}if(\"function\"!==typeof Y&&null!==Y)throw new TypeError(\"Class extends value \"+String(Y)+\" is not a constructor or null\");da(X,Y);X.prototype=null===Y?Object.create(Y):(aa.prototype=Y.prototype,new aa)}}(),H=this&&this.__awaiter||function(da,X,Y,aa){function ca(ea){return ea instanceof Y?ea:new Y(function(ja){ja(ea)})}return new (Y||(Y=Promise))(function(ea,ja){function ka(na){try{ia(aa.next(na))}catch(ua){ja(ua)}}function la(na){try{ia(aa[\"throw\"](na))}catch(ua){ja(ua)}}\nfunction ia(na){na.done?ea(na.value):ca(na.value).then(ka,la)}ia((aa=aa.apply(da,X||[])).next())})},D=this&&this.__generator||function(da,X){function Y(ia){return function(na){return aa([ia,na])}}function aa(ia){if(ea)throw new TypeError(\"Generator is already executing.\");for(;ca;)try{if(ea=1,ja&&(ka=ia[0]&2?ja[\"return\"]:ia[0]?ja[\"throw\"]||((ka=ja[\"return\"])&&ka.call(ja),0):ja.next)&&!(ka=ka.call(ja,ia[1])).done)return ka;if(ja=0,ka)ia=[ia[0]&2,ka.value];switch(ia[0]){case 0:case 1:ka=ia;break;case 4:return ca.label++,\n{value:ia[1],done:!1};case 5:ca.label++;ja=ia[1];ia=[0];continue;case 7:ia=ca.ops.pop();ca.trys.pop();continue;default:if(!(ka=ca.trys,ka=0<ka.length&&ka[ka.length-1])&&(6===ia[0]||2===ia[0])){ca=0;continue}if(3===ia[0]&&(!ka||ia[1]>ka[0]&&ia[1]<ka[3]))ca.label=ia[1];else if(6===ia[0]&&ca.label<ka[1])ca.label=ka[1],ka=ia;else if(ka&&ca.label<ka[2])ca.label=ka[2],ca.ops.push(ia);else{ka[2]&&ca.ops.pop();ca.trys.pop();continue}}ia=X.call(da,ca)}catch(na){ia=[6,na],ja=0}finally{ea=ka=0}if(ia[0]&5)throw ia[1];\nreturn{value:ia[0]?ia[1]:void 0,done:!0}}var ca={label:0,sent:function(){if(ka[0]&1)throw ka[1];return ka[1]},trys:[],ops:[]},ea,ja,ka,la;return la={next:Y(0),\"throw\":Y(1),\"return\":Y(2)},\"function\"===typeof Symbol&&(la[Symbol.iterator]=function(){return this}),la};S=this&&this.__importDefault||function(da){return da&&da.__esModule?da:{\"default\":da}};Object.defineProperty(q,\"__esModule\",{value:!0});q.BaseProvider=q.Resolver=q.Event=void 0;var C=A(66),I=A(55),M=A(110),P=A(15),J=A(11),T=A(38),N=A(62),\na=A(296),b=A(17),c=A(267),d=A(44),f=A(331),g=S(A(332)),m=A(9);S=A(333);var w=new m.Logger(S.version),x=A(334),z=[\"block\",\"network\",\"pending\",\"poll\"],v=function(){function da(X,Y,aa){(0,b.defineReadOnly)(this,\"tag\",X);(0,b.defineReadOnly)(this,\"listener\",Y);(0,b.defineReadOnly)(this,\"once\",aa);this._lastBlockNumber=-2;this._inflight=!1}Object.defineProperty(da.prototype,\"event\",{get:function(){switch(this.type){case \"tx\":return this.hash;case \"filter\":return this.filter}return this.tag},enumerable:!1,\nconfigurable:!0});Object.defineProperty(da.prototype,\"type\",{get:function(){return this.tag.split(\":\")[0]},enumerable:!1,configurable:!0});Object.defineProperty(da.prototype,\"hash\",{get:function(){var X=this.tag.split(\":\");return\"tx\"!==X[0]?null:X[1]},enumerable:!1,configurable:!0});Object.defineProperty(da.prototype,\"filter\",{get:function(){var X=this.tag.split(\":\");if(\"filter\"!==X[0])return null;var Y=X[1];X=r(X[2]);var aa={};0<X.length&&(aa.topics=X);Y&&\"*\"!==Y&&(aa.address=Y);return aa},enumerable:!1,\nconfigurable:!0});da.prototype.pollable=function(){return 0<=this.tag.indexOf(\":\")||0<=z.indexOf(this.tag)};return da}();q.Event=v;var R={0:{symbol:\"btc\",p2pkh:0,p2sh:5,prefix:\"bc\"},2:{symbol:\"ltc\",p2pkh:48,p2sh:50,prefix:\"ltc\"},3:{symbol:\"doge\",p2pkh:30,p2sh:22},60:{symbol:\"eth\",ilk:\"eth\"},61:{symbol:\"etc\",ilk:\"eth\"},700:{symbol:\"xdai\",ilk:\"eth\"}},O=RegExp(\"^(ipfs)://(.*)$\",\"i\"),L=[RegExp(\"^(https)://(.*)$\",\"i\"),RegExp(\"^(data):(.*)$\",\"i\"),O,RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\",\"i\")],Q=function(){function da(X,\nY,aa,ca){(0,b.defineReadOnly)(this,\"provider\",X);(0,b.defineReadOnly)(this,\"name\",aa);(0,b.defineReadOnly)(this,\"address\",X.formatter.address(Y));(0,b.defineReadOnly)(this,\"_resolvedAddress\",ca)}da.prototype.supportsWildcard=function(){var X=this;this._supportsEip2544||(this._supportsEip2544=this.provider.call({to:this.address,data:\"0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000\"}).then(function(Y){return P.BigNumber.from(Y).eq(1)}).catch(function(Y){if(Y.code===m.Logger.errors.CALL_EXCEPTION)return!1;\nX._supportsEip2544=null;throw Y;}));return this._supportsEip2544};da.prototype._fetch=function(X,Y){return H(this,void 0,void 0,function(){var aa,ca,ea,ja;return D(this,function(ka){switch(ka.label){case 0:return aa={to:this.address,ccipReadEnabled:!0,data:(0,J.hexConcat)([X,(0,N.namehash)(this.name),Y||\"0x\"])},ca=!1,[4,this.supportsWildcard()];case 1:ka.sent()&&(ca=!0,aa.data=(0,J.hexConcat)([\"0x9061b923\",B([(0,N.dnsEncode)(this.name),aa.data])])),ka.label=2;case 2:return ka.trys.push([2,4,,5]),\n[4,this.provider.call(aa)];case 3:return ea=ka.sent(),4===(0,J.arrayify)(ea).length%32&&w.throwError(\"resolver threw error\",m.Logger.errors.CALL_EXCEPTION,{transaction:aa,data:ea}),ca&&(ea=h(ea,0)),[2,ea];case 4:ja=ka.sent();if(ja.code===m.Logger.errors.CALL_EXCEPTION)return[2,null];throw ja;case 5:return[2]}})})};da.prototype._fetchBytes=function(X,Y){return H(this,void 0,void 0,function(){var aa;return D(this,function(ca){switch(ca.label){case 0:return[4,this._fetch(X,Y)];case 1:return aa=ca.sent(),\nnull!=aa?[2,h(aa,0)]:[2,null]}})})};da.prototype._getAddress=function(X,Y){var aa=R[String(X)];null==aa&&w.throwError(\"unsupported coin type: \"+X,m.Logger.errors.UNSUPPORTED_OPERATION,{operation:\"getAddress(\"+X+\")\"});if(\"eth\"===aa.ilk)return this.provider.formatter.address(Y);X=(0,J.arrayify)(Y);if(null!=aa.p2pkh){var ca=Y.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);if(ca){var ea=parseInt(ca[1],16);if(ca[2].length===2*ea&&1<=ea&&75>=ea)return n((0,J.concat)([[aa.p2pkh],\"0x\"+ca[2]]))}}return null!=\naa.p2sh&&(Y=Y.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/))&&(ca=parseInt(Y[1],16),Y[2].length===2*ca&&1<=ca&&75>=ca)?n((0,J.concat)([[aa.p2sh],\"0x\"+Y[2]])):null!=aa.prefix&&(ca=X[1],Y=X[0],0===Y?20!==ca&&32!==ca&&(Y=-1):Y=-1,0<=Y&&X.length===2+ca&&1<=ca&&75>=ca)?(X=g.default.toWords(X.slice(2)),X.unshift(Y),g.default.encode(aa.prefix,X)):null};da.prototype.getAddress=function(X){return H(this,void 0,void 0,function(){var Y,aa,ca,ea;return D(this,function(ja){switch(ja.label){case 0:null==X&&(X=\n60);if(60!==X)return[3,4];ja.label=1;case 1:return ja.trys.push([1,3,,4]),[4,this._fetch(\"0x3b3b57de\")];case 2:return Y=ja.sent(),\"0x\"===Y||Y===T.HashZero?[2,null]:[2,this.provider.formatter.callAddress(Y)];case 3:aa=ja.sent();if(aa.code===m.Logger.errors.CALL_EXCEPTION)return[2,null];throw aa;case 4:return[4,this._fetchBytes(\"0xf1cb7e06\",p(X))];case 5:ca=ja.sent();if(null==ca||\"0x\"===ca)return[2,null];ea=this._getAddress(X,ca);null==ea&&w.throwError(\"invalid or unsupported coin data\",m.Logger.errors.UNSUPPORTED_OPERATION,\n{operation:\"getAddress(\"+X+\")\",coinType:X,data:ca});return[2,ea]}})})};da.prototype.getAvatar=function(){return H(this,void 0,void 0,function(){var X,Y,aa,ca,ea,ja,ka,la,ia,na,ua,qa,oa,va,Fa,xa,Ja,Aa,Ia,sa,Ka,Ba,Ga,ta;return D(this,function(Ea){switch(Ea.label){case 0:X=[{type:\"name\",content:this.name}],Ea.label=1;case 1:return Ea.trys.push([1,19,,20]),[4,this.getText(\"avatar\")];case 2:Y=Ea.sent();if(null==Y)return[2,null];aa=0;Ea.label=3;case 3:if(!(aa<L.length))return[3,18];ca=Y.match(L[aa]);if(null==\nca)return[3,17];ja=ea=ca[1].toLowerCase();switch(ja){case \"https\":return[3,4];case \"data\":return[3,5];case \"ipfs\":return[3,6];case \"erc721\":return[3,7];case \"erc1155\":return[3,7]}return[3,17];case 4:return X.push({type:\"url\",content:Y}),[2,{linkage:X,url:Y}];case 5:return X.push({type:\"data\",content:Y}),[2,{linkage:X,url:Y}];case 6:return X.push({type:\"ipfs\",content:Y}),[2,{linkage:X,url:k(Y)}];case 7:return ka=\"erc721\"===ea?\"0xc87b56dd\":\"0x0e89341c\",X.push({type:ea,content:Y}),(ia=this._resolvedAddress)?\n[3,9]:[4,this.getAddress()];case 8:ia=Ea.sent(),Ea.label=9;case 9:return la=ia,na=(ca[2]||\"\").split(\"/\"),2!==na.length?[2,null]:[4,this.provider.formatter.address(na[0])];case 10:ua=Ea.sent();qa=(0,J.hexZeroPad)(P.BigNumber.from(na[1]).toHexString(),32);if(\"erc721\"!==ea)return[3,12];Fa=(va=this.provider.formatter).callAddress;return[4,this.provider.call({to:ua,data:(0,J.hexConcat)([\"0x6352211e\",qa])})];case 11:oa=Fa.apply(va,[Ea.sent()]);if(la!==oa)return[2,null];X.push({type:\"owner\",content:oa});\nreturn[3,14];case 12:if(\"erc1155\"!==ea)return[3,14];Aa=(Ja=P.BigNumber).from;return[4,this.provider.call({to:ua,data:(0,J.hexConcat)([\"0x00fdd58e\",(0,J.hexZeroPad)(la,32),qa])})];case 13:xa=Aa.apply(Ja,[Ea.sent()]);if(xa.isZero())return[2,null];X.push({type:\"balance\",content:xa.toString()});Ea.label=14;case 14:return Ia={to:this.provider.formatter.address(na[0]),data:(0,J.hexConcat)([ka,qa])},Ka=l,[4,this.provider.call(Ia)];case 15:sa=Ka.apply(void 0,[Ea.sent(),0]);if(null==sa)return[2,null];X.push({type:\"metadata-url-base\",\ncontent:sa});\"erc1155\"===ea&&(sa=sa.replace(\"{id}\",qa.substring(2)),X.push({type:\"metadata-url-expanded\",content:sa}));sa.match(/^ipfs:/i)&&(sa=k(sa));X.push({type:\"metadata-url\",content:sa});return[4,(0,f.fetchJson)(sa)];case 16:Ba=Ea.sent();if(!Ba)return[2,null];X.push({type:\"metadata\",content:JSON.stringify(Ba)});Ga=Ba.image;if(\"string\"!==typeof Ga)return[2,null];if(!Ga.match(/^(https:\\/\\/|data:)/i)){ta=Ga.match(O);if(null==ta)return[2,null];X.push({type:\"url-ipfs\",content:Ga});Ga=k(Ga)}X.push({type:\"url\",\ncontent:Ga});return[2,{linkage:X,url:Ga}];case 17:return aa++,[3,3];case 18:return[3,20];case 19:return Ea.sent(),[3,20];case 20:return[2,null]}})})};da.prototype.getContentHash=function(){return H(this,void 0,void 0,function(){var X,Y,aa,ca,ea,ja,ka,la,ia;return D(this,function(na){switch(na.label){case 0:return[4,this._fetchBytes(\"0xbc1c58d1\")];case 1:X=na.sent();if(null==X||\"0x\"===X)return[2,null];if(Y=X.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/))if(aa=parseInt(Y[3],\n16),Y[4].length===2*aa)return[2,\"ipfs://\"+M.Base58.encode(\"0x\"+Y[1])];if(ca=X.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/))if(ea=parseInt(ca[3],16),ca[4].length===2*ea)return[2,\"ipns://\"+M.Base58.encode(\"0x\"+ca[1])];return(ja=X.match(/^0xe40101fa011b20([0-9a-f]*)$/))&&64===ja[1].length?[2,\"bzz://\"+ja[1]]:(ka=X.match(/^0x90b2c605([0-9a-f]*)$/))&&68===ka[1].length?(la={\"\\x3d\":\"\",\"+\":\"-\",\"/\":\"_\"},ia=(0,I.encode)(\"0x\"+ka[1]).replace(/[=+\\/]/g,function(ua){return la[ua]}),[2,\n\"sia://\"+ia]):[2,w.throwError(\"invalid or unsupported content hash data\",m.Logger.errors.UNSUPPORTED_OPERATION,{operation:\"getContentHash()\",data:X})]}})})};da.prototype.getText=function(X){return H(this,void 0,void 0,function(){var Y,aa;return D(this,function(ca){switch(ca.label){case 0:return Y=(0,d.toUtf8Bytes)(X),Y=(0,J.concat)([p(64),p(Y.length),Y]),0!==Y.length%32&&(Y=(0,J.concat)([Y,(0,J.hexZeroPad)(\"0x\",32-X.length%32)])),[4,this._fetchBytes(\"0x59d1d43c\",(0,J.hexlify)(Y))];case 1:return aa=\nca.sent(),null==aa||\"0x\"===aa?[2,null]:[2,(0,d.toUtf8String)(aa)]}})})};return da}();q.Resolver=Q;var W=null,Z=1;A=function(da){function X(Y){var aa=this.constructor,ca=da.call(this)||this;ca._events=[];ca._emitted={block:-2};ca.disableCcipRead=!1;ca.formatter=aa.getFormatter();(0,b.defineReadOnly)(ca,\"anyNetwork\",\"any\"===Y);ca.anyNetwork&&(Y=ca.detectNetwork());Y instanceof Promise?(ca._networkPromise=Y,Y.catch(function(ea){}),ca._ready().catch(function(ea){})):(aa=(0,b.getStatic)(aa,\"getNetwork\")(Y))?\n((0,b.defineReadOnly)(ca,\"_network\",aa),ca.emit(\"network\",aa,null)):w.throwArgumentError(\"invalid network\",\"network\",Y);ca._maxInternalBlockNumber=-1024;ca._lastBlockNumber=-2;ca._maxFilterBlockRange=10;ca._pollingInterval=4E3;ca._fastQueryDate=0;return ca}E(X,da);X.prototype._ready=function(){return H(this,void 0,void 0,function(){var Y;return D(this,function(aa){switch(aa.label){case 0:if(null!=this._network)return[3,7];Y=null;if(!this._networkPromise)return[3,4];aa.label=1;case 1:return aa.trys.push([1,\n3,,4]),[4,this._networkPromise];case 2:return Y=aa.sent(),[3,4];case 3:return aa.sent(),[3,4];case 4:return null!=Y?[3,6]:[4,this.detectNetwork()];case 5:Y=aa.sent(),aa.label=6;case 6:Y||w.throwError(\"no network detected\",m.Logger.errors.UNKNOWN_ERROR,{}),null==this._network&&(this.anyNetwork?this._network=Y:(0,b.defineReadOnly)(this,\"_network\",Y),this.emit(\"network\",Y,null)),aa.label=7;case 7:return[2,this._network]}})})};Object.defineProperty(X.prototype,\"ready\",{get:function(){var Y=this;return(0,f.poll)(function(){return Y._ready().then(function(aa){return aa},\nfunction(aa){if(aa.code!==m.Logger.errors.NETWORK_ERROR||\"noNetwork\"!==aa.event)throw aa;})})},enumerable:!1,configurable:!0});X.getFormatter=function(){null==W&&(W=new x.Formatter);return W};X.getNetwork=function(Y){return(0,a.getNetwork)(null==Y?\"homestead\":Y)};X.prototype.ccipReadFetch=function(Y,aa,ca){return H(this,void 0,void 0,function(){var ea,ja,ka,la,ia,na,ua,qa,oa;return D(this,function(va){switch(va.label){case 0:if(this.disableCcipRead||0===ca.length)return[2,null];ea=Y.to.toLowerCase();\nja=aa.toLowerCase();ka=[];la=0;va.label=1;case 1:if(!(la<ca.length))return[3,4];ia=ca[la];na=ia.replace(\"{sender}\",ea).replace(\"{data}\",ja);ua=0<=ia.indexOf(\"{data}\")?null:JSON.stringify({data:ja,sender:ea});return[4,(0,f.fetchJson)({url:na,errorPassThrough:!0},ua,function(Fa,xa){Fa.status=xa.statusCode;return Fa})];case 2:qa=va.sent();if(qa.data)return[2,qa.data];oa=qa.message||\"unknown error\";if(400<=qa.status&&500>qa.status)return[2,w.throwError(\"response not found during CCIP fetch: \"+oa,m.Logger.errors.SERVER_ERROR,\n{url:ia,errorMessage:oa})];ka.push(oa);va.label=3;case 3:return la++,[3,1];case 4:return[2,w.throwError(\"error encountered during CCIP fetch: \"+ka.map(function(Fa){return JSON.stringify(Fa)}).join(\", \"),m.Logger.errors.SERVER_ERROR,{urls:ca,errorMessages:ka})]}})})};X.prototype._getInternalBlockNumber=function(Y){return H(this,void 0,void 0,function(){var aa,ca,ea,ja,ka=this;return D(this,function(la){switch(la.label){case 0:return[4,this._ready()];case 1:la.sent();if(!(0<Y))return[3,7];la.label=\n2;case 2:if(!this._internalBlockNumber)return[3,7];aa=this._internalBlockNumber;la.label=3;case 3:return la.trys.push([3,5,,6]),[4,aa];case 4:return ca=la.sent(),e()-ca.respTime<=Y?[2,ca.blockNumber]:[3,7];case 5:return la.sent(),this._internalBlockNumber===aa?[3,7]:[3,6];case 6:return[3,2];case 7:return ea=e(),this._internalBlockNumber=ja=(0,b.resolveProperties)({blockNumber:this.perform(\"getBlockNumber\",{}),networkError:this.getNetwork().then(function(ia){return null},function(ia){return ia})}).then(function(ia){var na=\nia.blockNumber;if(ia=ia.networkError)throw ka._internalBlockNumber===ja&&(ka._internalBlockNumber=null),ia;ia=e();na=P.BigNumber.from(na).toNumber();na<ka._maxInternalBlockNumber&&(na=ka._maxInternalBlockNumber);ka._maxInternalBlockNumber=na;ka._setFastBlockNumber(na);return{blockNumber:na,reqTime:ea,respTime:ia}}),ja.catch(function(ia){ka._internalBlockNumber===ja&&(ka._internalBlockNumber=null)}),[4,ja];case 8:return[2,la.sent().blockNumber]}})})};X.prototype.poll=function(){return H(this,void 0,\nvoid 0,function(){var Y,aa,ca,ea,ja,ka=this;return D(this,function(la){switch(la.label){case 0:Y=Z++,aa=[],ca=null,la.label=1;case 1:return la.trys.push([1,3,,4]),[4,this._getInternalBlockNumber(100+this.pollingInterval/2)];case 2:return ca=la.sent(),[3,4];case 3:return ea=la.sent(),this.emit(\"error\",ea),[2];case 4:this._setFastBlockNumber(ca);this.emit(\"poll\",Y,ca);if(ca===this._lastBlockNumber)return this.emit(\"didPoll\",Y),[2];-2===this._emitted.block&&(this._emitted.block=ca-1);if(1E3<Math.abs(this._emitted.block-\nca))w.warn(\"network block skew detected; skipping block events (emitted\\x3d\"+this._emitted.block+\" blockNumber\"+ca+\")\"),this.emit(\"error\",w.makeError(\"network block skew detected\",m.Logger.errors.NETWORK_ERROR,{blockNumber:ca,event:\"blockSkew\",previousBlockNumber:this._emitted.block})),this.emit(\"block\",ca);else for(ja=this._emitted.block+1;ja<=ca;ja++)this.emit(\"block\",ja);this._emitted.block!==ca&&(this._emitted.block=ca,Object.keys(this._emitted).forEach(function(ia){if(\"block\"!==ia){var na=ka._emitted[ia];\n\"pending\"!==na&&12<ca-na&&delete ka._emitted[ia]}}));-2===this._lastBlockNumber&&(this._lastBlockNumber=ca-1);this._events.forEach(function(ia){switch(ia.type){case \"tx\":var na=ia.hash,ua=ka.getTransactionReceipt(na).then(function(oa){if(!oa||null==oa.blockNumber)return null;ka._emitted[\"t:\"+na]=oa.blockNumber;ka.emit(na,oa);return null}).catch(function(oa){ka.emit(\"error\",oa)});aa.push(ua);break;case \"filter\":if(!ia._inflight){ia._inflight=!0;-2===ia._lastBlockNumber&&(ia._lastBlockNumber=ca-1);\nvar qa=ia.filter;qa.fromBlock=ia._lastBlockNumber+1;qa.toBlock=ca;ua=qa.toBlock-ka._maxFilterBlockRange;ua>qa.fromBlock&&(qa.fromBlock=ua);0>qa.fromBlock&&(qa.fromBlock=0);ua=ka.getLogs(qa).then(function(oa){ia._inflight=!1;0!==oa.length&&oa.forEach(function(va){va.blockNumber>ia._lastBlockNumber&&(ia._lastBlockNumber=va.blockNumber);ka._emitted[\"b:\"+va.blockHash]=va.blockNumber;ka._emitted[\"t:\"+va.transactionHash]=va.blockNumber;ka.emit(qa,va)})}).catch(function(oa){ka.emit(\"error\",oa);ia._inflight=\n!1});aa.push(ua)}}});this._lastBlockNumber=ca;Promise.all(aa).then(function(){ka.emit(\"didPoll\",Y)}).catch(function(ia){ka.emit(\"error\",ia)});return[2]}})})};X.prototype.resetEventsBlock=function(Y){this._lastBlockNumber=Y-1;this.polling&&this.poll()};Object.defineProperty(X.prototype,\"network\",{get:function(){return this._network},enumerable:!1,configurable:!0});X.prototype.detectNetwork=function(){return H(this,void 0,void 0,function(){return D(this,function(Y){return[2,w.throwError(\"provider does not support network detection\",\nm.Logger.errors.UNSUPPORTED_OPERATION,{operation:\"provider.detectNetwork\"})]})})};X.prototype.getNetwork=function(){return H(this,void 0,void 0,function(){var Y,aa,ca;return D(this,function(ea){switch(ea.label){case 0:return[4,this._ready()];case 1:return Y=ea.sent(),[4,this.detectNetwork()];case 2:aa=ea.sent();if(Y.chainId===aa.chainId)return[3,5];if(!this.anyNetwork)return[3,4];this._network=aa;this._lastBlockNumber=-2;this._fastBlockNumberPromise=this._fastBlockNumber=null;this._fastQueryDate=\n0;this._emitted.block=-2;this._maxInternalBlockNumber=-1024;this._internalBlockNumber=null;this.emit(\"network\",aa,Y);return[4,u(0)];case 3:return ea.sent(),[2,this._network];case 4:throw ca=w.makeError(\"underlying network changed\",m.Logger.errors.NETWORK_ERROR,{event:\"changed\",network:Y,detectedNetwork:aa}),this.emit(\"error\",ca),ca;case 5:return[2,Y]}})})};Object.defineProperty(X.prototype,\"blockNumber\",{get:function(){var Y=this;this._getInternalBlockNumber(100+this.pollingInterval/2).then(function(aa){Y._setFastBlockNumber(aa)},\nfunction(aa){});return null!=this._fastBlockNumber?this._fastBlockNumber:-1},enumerable:!1,configurable:!0});Object.defineProperty(X.prototype,\"polling\",{get:function(){return null!=this._poller},set:function(Y){var aa=this;Y&&!this._poller?(this._poller=setInterval(function(){aa.poll()},this.pollingInterval),this._bootstrapPoll||(this._bootstrapPoll=setTimeout(function(){aa.poll();aa._bootstrapPoll=setTimeout(function(){aa._poller||aa.poll();aa._bootstrapPoll=null},aa.pollingInterval)},0))):!Y&&\nthis._poller&&(clearInterval(this._poller),this._poller=null)},enumerable:!1,configurable:!0});Object.defineProperty(X.prototype,\"pollingInterval\",{get:function(){return this._pollingInterval},set:function(Y){var aa=this;if(\"number\"!==typeof Y||0>=Y||parseInt(String(Y))!=Y)throw Error(\"invalid polling interval\");this._pollingInterval=Y;this._poller&&(clearInterval(this._poller),this._poller=setInterval(function(){aa.poll()},this._pollingInterval))},enumerable:!1,configurable:!0});X.prototype._getFastBlockNumber=\nfunction(){var Y=this,aa=e();aa-this._fastQueryDate>2*this._pollingInterval&&(this._fastQueryDate=aa,this._fastBlockNumberPromise=this.getBlockNumber().then(function(ca){if(null==Y._fastBlockNumber||ca>Y._fastBlockNumber)Y._fastBlockNumber=ca;return Y._fastBlockNumber}));return this._fastBlockNumberPromise};X.prototype._setFastBlockNumber=function(Y){!(null!=this._fastBlockNumber&&Y<this._fastBlockNumber)&&(this._fastQueryDate=e(),null==this._fastBlockNumber||Y>this._fastBlockNumber)&&(this._fastBlockNumber=\nY,this._fastBlockNumberPromise=Promise.resolve(Y))};X.prototype.waitForTransaction=function(Y,aa,ca){return H(this,void 0,void 0,function(){return D(this,function(ea){return[2,this._waitForTransaction(Y,null==aa?1:aa,ca||0,null)]})})};X.prototype._waitForTransaction=function(Y,aa,ca,ea){return H(this,void 0,void 0,function(){var ja,ka=this;return D(this,function(la){switch(la.label){case 0:return[4,this.getTransactionReceipt(Y)];case 1:return ja=la.sent(),(ja?ja.confirmations:0)>=aa?[2,ja]:[2,new Promise(function(ia,\nna){var ua=[],qa=!1,oa=function(){if(qa)return!0;qa=!0;ua.forEach(function(Ia){Ia()});return!1},va=function(Ia){Ia.confirmations<aa||oa()||ia(Ia)};ka.on(Y,va);ua.push(function(){ka.removeListener(Y,va)});if(ea){var Fa=ea.startBlock,xa=null,Ja=function(Ia){return H(ka,void 0,void 0,function(){var sa=this;return D(this,function(Ka){switch(Ka.label){case 0:return qa?[2]:[4,u(1E3)];case 1:return Ka.sent(),this.getTransactionCount(ea.from).then(function(Ba){return H(sa,void 0,void 0,function(){var Ga,\nta,Ea,Ca,Ha,K;return D(this,function(fa){switch(fa.label){case 0:if(qa)return[2];if(!(Ba<=ea.nonce))return[3,1];Fa=Ia;return[3,9];case 1:return[4,this.getTransaction(Y)];case 2:if((Ga=fa.sent())&&null!=Ga.blockNumber)return[2];null==xa&&(xa=Fa-3,xa<ea.startBlock&&(xa=ea.startBlock));fa.label=3;case 3:return xa<=Ia?qa?[2]:[4,this.getBlockWithTransactions(xa)]:[3,9];case 4:ta=fa.sent(),Ea=0,fa.label=5;case 5:if(!(Ea<ta.transactions.length))return[3,8];Ca=ta.transactions[Ea];return Ca.hash===Y?[2]:Ca.from!==\nea.from||Ca.nonce!==ea.nonce?[3,7]:qa?[2]:[4,this.waitForTransaction(Ca.hash,aa)];case 6:Ha=fa.sent();if(oa())return[2];K=\"replaced\";Ca.data===ea.data&&Ca.to===ea.to&&Ca.value.eq(ea.value)?K=\"repriced\":\"0x\"===Ca.data&&Ca.from===Ca.to&&Ca.value.isZero()&&(K=\"cancelled\");na(w.makeError(\"transaction was replaced\",m.Logger.errors.TRANSACTION_REPLACED,{cancelled:\"replaced\"===K||\"cancelled\"===K,reason:K,replacement:this._wrapTransaction(Ca),hash:Y,receipt:Ha}));return[2];case 7:return Ea++,[3,5];case 8:return xa++,\n[3,3];case 9:if(qa)return[2];this.once(\"block\",Ja);return[2]}})})},function(Ba){if(!qa)sa.once(\"block\",Ja)}),[2]}})})};if(qa)return;ka.once(\"block\",Ja);ua.push(function(){ka.removeListener(\"block\",Ja)})}if(\"number\"===typeof ca&&0<ca){var Aa=setTimeout(function(){oa()||na(w.makeError(\"timeout exceeded\",m.Logger.errors.TIMEOUT,{timeout:ca}))},ca);Aa.unref&&Aa.unref();ua.push(function(){clearTimeout(Aa)})}})]}})})};X.prototype.getBlockNumber=function(){return H(this,void 0,void 0,function(){return D(this,\nfunction(Y){return[2,this._getInternalBlockNumber(0)]})})};X.prototype.getGasPrice=function(){return H(this,void 0,void 0,function(){var Y;return D(this,function(aa){switch(aa.label){case 0:return[4,this.getNetwork()];case 1:return aa.sent(),[4,this.perform(\"getGasPrice\",{})];case 2:Y=aa.sent();try{return[2,P.BigNumber.from(Y)]}catch(ca){return[2,w.throwError(\"bad result from backend\",m.Logger.errors.SERVER_ERROR,{method:\"getGasPrice\",result:Y,error:ca})]}}})})};X.prototype.getBalance=function(Y,\naa){return H(this,void 0,void 0,function(){var ca,ea;return D(this,function(ja){switch(ja.label){case 0:return[4,this.getNetwork()];case 1:return ja.sent(),[4,(0,b.resolveProperties)({address:this._getAddress(Y),blockTag:this._getBlockTag(aa)})];case 2:return ca=ja.sent(),[4,this.perform(\"getBalance\",ca)];case 3:ea=ja.sent();try{return[2,P.BigNumber.from(ea)]}catch(ka){return[2,w.throwError(\"bad result from backend\",m.Logger.errors.SERVER_ERROR,{method:\"getBalance\",params:ca,result:ea,error:ka})]}}})})};\nX.prototype.getTransactionCount=function(Y,aa){return H(this,void 0,void 0,function(){var ca,ea;return D(this,function(ja){switch(ja.label){case 0:return[4,this.getNetwork()];case 1:return ja.sent(),[4,(0,b.resolveProperties)({address:this._getAddress(Y),blockTag:this._getBlockTag(aa)})];case 2:return ca=ja.sent(),[4,this.perform(\"getTransactionCount\",ca)];case 3:ea=ja.sent();try{return[2,P.BigNumber.from(ea).toNumber()]}catch(ka){return[2,w.throwError(\"bad result from backend\",m.Logger.errors.SERVER_ERROR,\n{method:\"getTransactionCount\",params:ca,result:ea,error:ka})]}}})})};X.prototype.getCode=function(Y,aa){return H(this,void 0,void 0,function(){var ca,ea;return D(this,function(ja){switch(ja.label){case 0:return[4,this.getNetwork()];case 1:return ja.sent(),[4,(0,b.resolveProperties)({address:this._getAddress(Y),blockTag:this._getBlockTag(aa)})];case 2:return ca=ja.sent(),[4,this.perform(\"getCode\",ca)];case 3:ea=ja.sent();try{return[2,(0,J.hexlify)(ea)]}catch(ka){return[2,w.throwError(\"bad result from backend\",\nm.Logger.errors.SERVER_ERROR,{method:\"getCode\",params:ca,result:ea,error:ka})]}}})})};X.prototype.getStorageAt=function(Y,aa,ca){return H(this,void 0,void 0,function(){var ea,ja;return D(this,function(ka){switch(ka.label){case 0:return[4,this.getNetwork()];case 1:return ka.sent(),[4,(0,b.resolveProperties)({address:this._getAddress(Y),blockTag:this._getBlockTag(ca),position:Promise.resolve(aa).then(function(la){return(0,J.hexValue)(la)})})];case 2:return ea=ka.sent(),[4,this.perform(\"getStorageAt\",\nea)];case 3:ja=ka.sent();try{return[2,(0,J.hexlify)(ja)]}catch(la){return[2,w.throwError(\"bad result from backend\",m.Logger.errors.SERVER_ERROR,{method:\"getStorageAt\",params:ea,result:ja,error:la})]}}})})};X.prototype._wrapTransaction=function(Y,aa,ca){var ea=this;if(null!=aa&&32!==(0,J.hexDataLength)(aa))throw Error(\"invalid response - sendTransaction\");null!=aa&&Y.hash!==aa&&w.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\",m.Logger.errors.UNKNOWN_ERROR,{expectedHash:Y.hash,\nreturnedHash:aa});Y.wait=function(ja,ka){return H(ea,void 0,void 0,function(){var la,ia;return D(this,function(na){switch(na.label){case 0:return null==ja&&(ja=1),null==ka&&(ka=0),la=void 0,0!==ja&&null!=ca&&(la={data:Y.data,from:Y.from,nonce:Y.nonce,to:Y.to,value:Y.value,startBlock:ca}),[4,this._waitForTransaction(Y.hash,ja,ka,la)];case 1:ia=na.sent();if(null==ia&&0===ja)return[2,null];this._emitted[\"t:\"+Y.hash]=ia.blockNumber;0===ia.status&&w.throwError(\"transaction failed\",m.Logger.errors.CALL_EXCEPTION,\n{transactionHash:Y.hash,transaction:Y,receipt:ia});return[2,ia]}})})};return Y};X.prototype.sendTransaction=function(Y){return H(this,void 0,void 0,function(){var aa,ca,ea,ja,ka;return D(this,function(la){switch(la.label){case 0:return[4,this.getNetwork()];case 1:return la.sent(),[4,Promise.resolve(Y).then(function(ia){return(0,J.hexlify)(ia)})];case 2:return aa=la.sent(),ca=this.formatter.transaction(Y),null==ca.confirmations&&(ca.confirmations=0),[4,this._getInternalBlockNumber(100+2*this.pollingInterval)];\ncase 3:ea=la.sent(),la.label=4;case 4:return la.trys.push([4,6,,7]),[4,this.perform(\"sendTransaction\",{signedTransaction:aa})];case 5:return ja=la.sent(),[2,this._wrapTransaction(ca,ja,ea)];case 6:throw ka=la.sent(),ka.transaction=ca,ka.transactionHash=ca.hash,ka;case 7:return[2]}})})};X.prototype._getTransactionRequest=function(Y){return H(this,void 0,void 0,function(){var aa,ca,ea,ja,ka=this;return D(this,function(la){switch(la.label){case 0:return[4,Y];case 1:return aa=la.sent(),ca={},[\"from\",\n\"to\"].forEach(function(ia){null!=aa[ia]&&(ca[ia]=Promise.resolve(aa[ia]).then(function(na){return na?ka._getAddress(na):null}))}),[\"gasLimit\",\"gasPrice\",\"maxFeePerGas\",\"maxPriorityFeePerGas\",\"value\"].forEach(function(ia){null!=aa[ia]&&(ca[ia]=Promise.resolve(aa[ia]).then(function(na){return na?P.BigNumber.from(na):null}))}),[\"type\"].forEach(function(ia){null!=aa[ia]&&(ca[ia]=Promise.resolve(aa[ia]).then(function(na){return null!=na?na:null}))}),aa.accessList&&(ca.accessList=this.formatter.accessList(aa.accessList)),\n[\"data\"].forEach(function(ia){null!=aa[ia]&&(ca[ia]=Promise.resolve(aa[ia]).then(function(na){return na?(0,J.hexlify)(na):null}))}),ja=(ea=this.formatter).transactionRequest,[4,(0,b.resolveProperties)(ca)];case 2:return[2,ja.apply(ea,[la.sent()])]}})})};X.prototype._getFilter=function(Y){return H(this,void 0,void 0,function(){var aa,ca,ea,ja=this;return D(this,function(ka){switch(ka.label){case 0:return[4,Y];case 1:return Y=ka.sent(),aa={},null!=Y.address&&(aa.address=this._getAddress(Y.address)),\n[\"blockHash\",\"topics\"].forEach(function(la){null!=Y[la]&&(aa[la]=Y[la])}),[\"fromBlock\",\"toBlock\"].forEach(function(la){null!=Y[la]&&(aa[la]=ja._getBlockTag(Y[la]))}),ea=(ca=this.formatter).filter,[4,(0,b.resolveProperties)(aa)];case 2:return[2,ea.apply(ca,[ka.sent()])]}})})};X.prototype._call=function(Y,aa,ca){return H(this,void 0,void 0,function(){var ea,ja,ka,la,ia,na,ua,qa,oa,va,Fa,xa,Ja,Aa,Ia,sa;return D(this,function(Ka){switch(Ka.label){case 0:return 10<=ca&&w.throwError(\"CCIP read exceeded maximum redirections\",\nm.Logger.errors.SERVER_ERROR,{redirects:ca,transaction:Y}),ea=Y.to,[4,this.perform(\"call\",{transaction:Y,blockTag:aa})];case 1:ja=Ka.sent();if(!(0<=ca&&\"latest\"===aa&&null!=ea&&\"0x556f1830\"===ja.substring(0,10)&&4===(0,J.hexDataLength)(ja)%32))return[3,5];Ka.label=2;case 2:Ka.trys.push([2,4,,5]);ka=(0,J.hexDataSlice)(ja,4);la=(0,J.hexDataSlice)(ka,0,32);P.BigNumber.from(la).eq(ea)||w.throwError(\"CCIP Read sender did not match\",m.Logger.errors.CALL_EXCEPTION,{name:\"OffchainLookup\",signature:\"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\ntransaction:Y,data:ja});ia=[];na=P.BigNumber.from((0,J.hexDataSlice)(ka,32,64)).toNumber();ua=P.BigNumber.from((0,J.hexDataSlice)(ka,na,na+32)).toNumber();qa=(0,J.hexDataSlice)(ka,na+32);for(oa=0;oa<ua;oa++)va=l(qa,32*oa),null==va&&w.throwError(\"CCIP Read contained corrupt URL string\",m.Logger.errors.CALL_EXCEPTION,{name:\"OffchainLookup\",signature:\"OffchainLookup(address,string[],bytes,bytes4,bytes)\",transaction:Y,data:ja}),ia.push(va);Fa=h(ka,64);P.BigNumber.from((0,J.hexDataSlice)(ka,100,128)).isZero()||\nw.throwError(\"CCIP Read callback selector included junk\",m.Logger.errors.CALL_EXCEPTION,{name:\"OffchainLookup\",signature:\"OffchainLookup(address,string[],bytes,bytes4,bytes)\",transaction:Y,data:ja});xa=(0,J.hexDataSlice)(ka,96,100);Ja=h(ka,128);return[4,this.ccipReadFetch(Y,Fa,ia)];case 3:return Aa=Ka.sent(),null==Aa&&w.throwError(\"CCIP Read disabled or provided no URLs\",m.Logger.errors.CALL_EXCEPTION,{name:\"OffchainLookup\",signature:\"OffchainLookup(address,string[],bytes,bytes4,bytes)\",transaction:Y,\ndata:ja}),Ia={to:ea,data:(0,J.hexConcat)([xa,B([Aa,Ja])])},[2,this._call(Ia,aa,ca+1)];case 4:sa=Ka.sent();if(sa.code===m.Logger.errors.SERVER_ERROR)throw sa;return[3,5];case 5:try{return[2,(0,J.hexlify)(ja)]}catch(Ba){return[2,w.throwError(\"bad result from backend\",m.Logger.errors.SERVER_ERROR,{method:\"call\",params:{transaction:Y,blockTag:aa},result:ja,error:Ba})]}}})})};X.prototype.call=function(Y,aa){return H(this,void 0,void 0,function(){var ca;return D(this,function(ea){switch(ea.label){case 0:return[4,\nthis.getNetwork()];case 1:return ea.sent(),[4,(0,b.resolveProperties)({transaction:this._getTransactionRequest(Y),blockTag:this._getBlockTag(aa),ccipReadEnabled:Promise.resolve(Y.ccipReadEnabled)})];case 2:return ca=ea.sent(),[2,this._call(ca.transaction,ca.blockTag,ca.ccipReadEnabled?0:-1)]}})})};X.prototype.estimateGas=function(Y){return H(this,void 0,void 0,function(){var aa,ca;return D(this,function(ea){switch(ea.label){case 0:return[4,this.getNetwork()];case 1:return ea.sent(),[4,(0,b.resolveProperties)({transaction:this._getTransactionRequest(Y)})];\ncase 2:return aa=ea.sent(),[4,this.perform(\"estimateGas\",aa)];case 3:ca=ea.sent();try{return[2,P.BigNumber.from(ca)]}catch(ja){return[2,w.throwError(\"bad result from backend\",m.Logger.errors.SERVER_ERROR,{method:\"estimateGas\",params:aa,result:ca,error:ja})]}}})})};X.prototype._getAddress=function(Y){return H(this,void 0,void 0,function(){var aa;return D(this,function(ca){switch(ca.label){case 0:return[4,Y];case 1:return Y=ca.sent(),\"string\"!==typeof Y&&w.throwArgumentError(\"invalid address or ENS name\",\n\"name\",Y),[4,this.resolveName(Y)];case 2:return aa=ca.sent(),null==aa&&w.throwError(\"ENS name not configured\",m.Logger.errors.UNSUPPORTED_OPERATION,{operation:\"resolveName(\"+JSON.stringify(Y)+\")\"}),[2,aa]}})})};X.prototype._getBlock=function(Y,aa){return H(this,void 0,void 0,function(){var ca,ea,ja,ka=this;return D(this,function(la){switch(la.label){case 0:return[4,this.getNetwork()];case 1:return la.sent(),[4,Y];case 2:Y=la.sent();ca=-128;ea={includeTransactions:!!aa};if(!(0,J.isHexString)(Y,32))return[3,\n3];ea.blockHash=Y;return[3,6];case 3:return la.trys.push([3,5,,6]),ja=ea,[4,this._getBlockTag(Y)];case 4:return ja.blockTag=la.sent(),(0,J.isHexString)(ea.blockTag)&&(ca=parseInt(ea.blockTag.substring(2),16)),[3,6];case 5:return la.sent(),w.throwArgumentError(\"invalid block hash or block tag\",\"blockHashOrBlockTag\",Y),[3,6];case 6:return[2,(0,f.poll)(function(){return H(ka,void 0,void 0,function(){var ia,na,ua,qa,oa,va,Fa=this;return D(this,function(xa){switch(xa.label){case 0:return[4,this.perform(\"getBlock\",\nea)];case 1:ia=xa.sent();if(null==ia)return null!=ea.blockHash&&null==this._emitted[\"b:\"+ea.blockHash]||null!=ea.blockTag&&ca>this._emitted.block?[2,null]:[2,void 0];if(!aa)return[3,8];na=null;ua=0;xa.label=2;case 2:if(!(ua<ia.transactions.length))return[3,7];qa=ia.transactions[ua];if(null!=qa.blockNumber)return[3,3];qa.confirmations=0;return[3,6];case 3:return null!=qa.confirmations?[3,6]:null!=na?[3,5]:[4,this._getInternalBlockNumber(100+2*this.pollingInterval)];case 4:na=xa.sent(),xa.label=5;case 5:oa=\nna-qa.blockNumber+1,0>=oa&&(oa=1),qa.confirmations=oa,xa.label=6;case 6:return ua++,[3,2];case 7:return va=this.formatter.blockWithTransactions(ia),va.transactions=va.transactions.map(function(Ja){return Fa._wrapTransaction(Ja)}),[2,va];case 8:return[2,this.formatter.block(ia)]}})})},{oncePoll:this})]}})})};X.prototype.getBlock=function(Y){return this._getBlock(Y,!1)};X.prototype.getBlockWithTransactions=function(Y){return this._getBlock(Y,!0)};X.prototype.getTransaction=function(Y){return H(this,\nvoid 0,void 0,function(){var aa,ca=this;return D(this,function(ea){switch(ea.label){case 0:return[4,this.getNetwork()];case 1:return ea.sent(),[4,Y];case 2:return Y=ea.sent(),aa={transactionHash:this.formatter.hash(Y,!0)},[2,(0,f.poll)(function(){return H(ca,void 0,void 0,function(){var ja,ka,la,ia;return D(this,function(na){switch(na.label){case 0:return[4,this.perform(\"getTransaction\",aa)];case 1:ja=na.sent();if(null==ja)return null==this._emitted[\"t:\"+Y]?[2,null]:[2,void 0];ka=this.formatter.transactionResponse(ja);\nif(null!=ka.blockNumber)return[3,2];ka.confirmations=0;return[3,4];case 2:return null!=ka.confirmations?[3,4]:[4,this._getInternalBlockNumber(100+2*this.pollingInterval)];case 3:la=na.sent(),ia=la-ka.blockNumber+1,0>=ia&&(ia=1),ka.confirmations=ia,na.label=4;case 4:return[2,this._wrapTransaction(ka)]}})})},{oncePoll:this})]}})})};X.prototype.getTransactionReceipt=function(Y){return H(this,void 0,void 0,function(){var aa,ca=this;return D(this,function(ea){switch(ea.label){case 0:return[4,this.getNetwork()];\ncase 1:return ea.sent(),[4,Y];case 2:return Y=ea.sent(),aa={transactionHash:this.formatter.hash(Y,!0)},[2,(0,f.poll)(function(){return H(ca,void 0,void 0,function(){var ja,ka,la,ia;return D(this,function(na){switch(na.label){case 0:return[4,this.perform(\"getTransactionReceipt\",aa)];case 1:ja=na.sent();if(null==ja)return null==this._emitted[\"t:\"+Y]?[2,null]:[2,void 0];if(null==ja.blockHash)return[2,void 0];ka=this.formatter.receipt(ja);if(null!=ka.blockNumber)return[3,2];ka.confirmations=0;return[3,\n4];case 2:return null!=ka.confirmations?[3,4]:[4,this._getInternalBlockNumber(100+2*this.pollingInterval)];case 3:la=na.sent(),ia=la-ka.blockNumber+1,0>=ia&&(ia=1),ka.confirmations=ia,na.label=4;case 4:return[2,ka]}})})},{oncePoll:this})]}})})};X.prototype.getLogs=function(Y){return H(this,void 0,void 0,function(){var aa,ca;return D(this,function(ea){switch(ea.label){case 0:return[4,this.getNetwork()];case 1:return ea.sent(),[4,(0,b.resolveProperties)({filter:this._getFilter(Y)})];case 2:return aa=\nea.sent(),[4,this.perform(\"getLogs\",aa)];case 3:return ca=ea.sent(),ca.forEach(function(ja){null==ja.removed&&(ja.removed=!1)}),[2,x.Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(ca)]}})})};X.prototype.getEtherPrice=function(){return H(this,void 0,void 0,function(){return D(this,function(Y){switch(Y.label){case 0:return[4,this.getNetwork()];case 1:return Y.sent(),[2,this.perform(\"getEtherPrice\",{})]}})})};X.prototype._getBlockTag=function(Y){return H(this,void 0,void 0,function(){var aa;\nreturn D(this,function(ca){switch(ca.label){case 0:return[4,Y];case 1:Y=ca.sent();if(!(\"number\"===typeof Y&&0>Y))return[3,3];Y%1&&w.throwArgumentError(\"invalid BlockTag\",\"blockTag\",Y);return[4,this._getInternalBlockNumber(100+2*this.pollingInterval)];case 2:return aa=ca.sent(),aa+=Y,0>aa&&(aa=0),[2,this.formatter.blockTag(aa)];case 3:return[2,this.formatter.blockTag(Y)]}})})};X.prototype.getResolver=function(Y){return H(this,void 0,void 0,function(){var aa,ca,ea,ja;return D(this,function(ka){switch(ka.label){case 0:aa=\nY,ka.label=1;case 1:return\"\"===aa||\".\"===aa||\"eth\"!==Y&&\"eth\"===aa?[2,null]:[4,this._getResolver(aa,\"getResolver\")];case 2:ca=ka.sent();if(null==ca)return[3,5];ea=new Q(this,ca,Y);return(ja=aa!==Y)?[4,ea.supportsWildcard()]:[3,4];case 3:ja=!ka.sent(),ka.label=4;case 4:return ja?[2,null]:[2,ea];case 5:return aa=aa.split(\".\").slice(1).join(\".\"),[3,1];case 6:return[2]}})})};X.prototype._getResolver=function(Y,aa){return H(this,void 0,void 0,function(){var ca,ea;return D(this,function(ja){switch(ja.label){case 0:return null==\naa&&(aa=\"ENS\"),[4,this.getNetwork()];case 1:ca=ja.sent(),ca.ensAddress||w.throwError(\"network does not support ENS\",m.Logger.errors.UNSUPPORTED_OPERATION,{operation:aa,network:ca.name}),ja.label=2;case 2:return ja.trys.push([2,4,,5]),[4,this.call({to:ca.ensAddress,data:\"0x0178b8bf\"+(0,N.namehash)(Y).substring(2)})];case 3:return ea=ja.sent(),[2,this.formatter.callAddress(ea)];case 4:return ja.sent(),[3,5];case 5:return[2,null]}})})};X.prototype.resolveName=function(Y){return H(this,void 0,void 0,\nfunction(){var aa;return D(this,function(ca){switch(ca.label){case 0:return[4,Y];case 1:Y=ca.sent();try{return[2,Promise.resolve(this.formatter.address(Y))]}catch(ea){if((0,J.isHexString)(Y))throw ea;}\"string\"!==typeof Y&&w.throwArgumentError(\"invalid ENS name\",\"name\",Y);return[4,this.getResolver(Y)];case 2:return(aa=ca.sent())?[4,aa.getAddress()]:[2,null];case 3:return[2,ca.sent()]}})})};X.prototype.lookupAddress=function(Y){return H(this,void 0,void 0,function(){var aa,ca,ea,ja,ka;return D(this,\nfunction(la){switch(la.label){case 0:return[4,Y];case 1:return Y=la.sent(),Y=this.formatter.address(Y),aa=Y.substring(2).toLowerCase()+\".addr.reverse\",[4,this._getResolver(aa,\"lookupAddress\")];case 2:ca=la.sent();if(null==ca)return[2,null];ja=l;return[4,this.call({to:ca,data:\"0x691f3431\"+(0,N.namehash)(aa).substring(2)})];case 3:return ea=ja.apply(void 0,[la.sent(),0]),[4,this.resolveName(ea)];case 4:return ka=la.sent(),ka!=Y?[2,null]:[2,ea]}})})};X.prototype.getAvatar=function(Y){return H(this,void 0,\nvoid 0,function(){var aa,ca,ea,ja,ka,la,ia,na,ua,qa;return D(this,function(oa){switch(oa.label){case 0:aa=null;if(!(0,J.isHexString)(Y))return[3,10];ca=this.formatter.address(Y);ea=ca.substring(2).toLowerCase()+\".addr.reverse\";return[4,this._getResolver(ea,\"getAvatar\")];case 1:ja=oa.sent();if(!ja)return[2,null];aa=new Q(this,ja,ea);oa.label=2;case 2:return oa.trys.push([2,4,,5]),[4,aa.getAvatar()];case 3:return(ka=oa.sent())?[2,ka.url]:[3,5];case 4:la=oa.sent();if(la.code!==m.Logger.errors.CALL_EXCEPTION)throw la;\nreturn[3,5];case 5:return oa.trys.push([5,8,,9]),na=l,[4,this.call({to:ja,data:\"0x691f3431\"+(0,N.namehash)(ea).substring(2)})];case 6:return ia=na.apply(void 0,[oa.sent(),0]),[4,this.getResolver(ia)];case 7:return aa=oa.sent(),[3,9];case 8:ua=oa.sent();if(ua.code!==m.Logger.errors.CALL_EXCEPTION)throw ua;return[2,null];case 9:return[3,12];case 10:return[4,this.getResolver(Y)];case 11:aa=oa.sent();if(!aa)return[2,null];oa.label=12;case 12:return[4,aa.getAvatar()];case 13:return qa=oa.sent(),null==\nqa?[2,null]:[2,qa.url]}})})};X.prototype.perform=function(Y,aa){return w.throwError(Y+\" not implemented\",m.Logger.errors.NOT_IMPLEMENTED,{operation:Y})};X.prototype._startEvent=function(Y){this.polling=0<this._events.filter(function(aa){return aa.pollable()}).length};X.prototype._stopEvent=function(Y){this.polling=0<this._events.filter(function(aa){return aa.pollable()}).length};X.prototype._addEventListener=function(Y,aa,ca){Y=new v(y(Y),aa,ca);this._events.push(Y);this._startEvent(Y);return this};\nX.prototype.on=function(Y,aa){return this._addEventListener(Y,aa,!1)};X.prototype.once=function(Y,aa){return this._addEventListener(Y,aa,!0)};X.prototype.emit=function(Y){for(var aa=this,ca=[],ea=1;ea<arguments.length;ea++)ca[ea-1]=arguments[ea];var ja=!1,ka=[],la=y(Y);this._events=this._events.filter(function(ia){if(ia.tag!==la)return!0;setTimeout(function(){ia.listener.apply(aa,ca)},0);ja=!0;return ia.once?(ka.push(ia),!1):!0});ka.forEach(function(ia){aa._stopEvent(ia)});return ja};X.prototype.listenerCount=\nfunction(Y){if(!Y)return this._events.length;var aa=y(Y);return this._events.filter(function(ca){return ca.tag===aa}).length};X.prototype.listeners=function(Y){if(null==Y)return this._events.map(function(ca){return ca.listener});var aa=y(Y);return this._events.filter(function(ca){return ca.tag===aa}).map(function(ca){return ca.listener})};X.prototype.off=function(Y,aa){var ca=this;if(null==aa)return this.removeAllListeners(Y);var ea=[],ja=!1,ka=y(Y);this._events=this._events.filter(function(la){if(la.tag!==\nka||la.listener!=aa||ja)return!0;ja=!0;ea.push(la);return!1});ea.forEach(function(la){ca._stopEvent(la)});return this};X.prototype.removeAllListeners=function(Y){var aa=this,ca=[];if(null==Y)ca=this._events,this._events=[];else{var ea=y(Y);this._events=this._events.filter(function(ja){if(ja.tag!==ea)return!0;ca.push(ja);return!1})}ca.forEach(function(ja){aa._stopEvent(ja)});return this};return X}(C.Provider);q.BaseProvider=A}","~:source","shadow$provide[335] = function(global,require,module,exports) {\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseProvider = exports.Resolver = exports.Event = void 0;\nvar abstract_provider_1 = require(\"@ethersproject/abstract-provider\");\nvar base64_1 = require(\"@ethersproject/base64\");\nvar basex_1 = require(\"@ethersproject/basex\");\nvar bignumber_1 = require(\"@ethersproject/bignumber\");\nvar bytes_1 = require(\"@ethersproject/bytes\");\nvar constants_1 = require(\"@ethersproject/constants\");\nvar hash_1 = require(\"@ethersproject/hash\");\nvar networks_1 = require(\"@ethersproject/networks\");\nvar properties_1 = require(\"@ethersproject/properties\");\nvar sha2_1 = require(\"@ethersproject/sha2\");\nvar strings_1 = require(\"@ethersproject/strings\");\nvar web_1 = require(\"@ethersproject/web\");\nvar bech32_1 = __importDefault(require(\"bech32\"));\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\nvar formatter_1 = require(\"./formatter\");\nvar MAX_CCIP_REDIRECTS = 10;\n//////////////////////////////\n// Event Serializeing\nfunction checkTopic(topic) {\n    if (topic == null) {\n        return \"null\";\n    }\n    if ((0, bytes_1.hexDataLength)(topic) !== 32) {\n        logger.throwArgumentError(\"invalid topic\", \"topic\", topic);\n    }\n    return topic.toLowerCase();\n}\nfunction serializeTopics(topics) {\n    // Remove trailing null AND-topics; they are redundant\n    topics = topics.slice();\n    while (topics.length > 0 && topics[topics.length - 1] == null) {\n        topics.pop();\n    }\n    return topics.map(function (topic) {\n        if (Array.isArray(topic)) {\n            // Only track unique OR-topics\n            var unique_1 = {};\n            topic.forEach(function (topic) {\n                unique_1[checkTopic(topic)] = true;\n            });\n            // The order of OR-topics does not matter\n            var sorted = Object.keys(unique_1);\n            sorted.sort();\n            return sorted.join(\"|\");\n        }\n        else {\n            return checkTopic(topic);\n        }\n    }).join(\"&\");\n}\nfunction deserializeTopics(data) {\n    if (data === \"\") {\n        return [];\n    }\n    return data.split(/&/g).map(function (topic) {\n        if (topic === \"\") {\n            return [];\n        }\n        var comps = topic.split(\"|\").map(function (topic) {\n            return ((topic === \"null\") ? null : topic);\n        });\n        return ((comps.length === 1) ? comps[0] : comps);\n    });\n}\nfunction getEventTag(eventName) {\n    if (typeof (eventName) === \"string\") {\n        eventName = eventName.toLowerCase();\n        if ((0, bytes_1.hexDataLength)(eventName) === 32) {\n            return \"tx:\" + eventName;\n        }\n        if (eventName.indexOf(\":\") === -1) {\n            return eventName;\n        }\n    }\n    else if (Array.isArray(eventName)) {\n        return \"filter:*:\" + serializeTopics(eventName);\n    }\n    else if (abstract_provider_1.ForkEvent.isForkEvent(eventName)) {\n        logger.warn(\"not implemented\");\n        throw new Error(\"not implemented\");\n    }\n    else if (eventName && typeof (eventName) === \"object\") {\n        return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n    }\n    throw new Error(\"invalid event - \" + eventName);\n}\n//////////////////////////////\n// Helper Object\nfunction getTime() {\n    return (new Date()).getTime();\n}\nfunction stall(duration) {\n    return new Promise(function (resolve) {\n        setTimeout(resolve, duration);\n    });\n}\n//////////////////////////////\n// Provider Object\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\nvar PollableEvents = [\"block\", \"network\", \"pending\", \"poll\"];\nvar Event = /** @class */ (function () {\n    function Event(tag, listener, once) {\n        (0, properties_1.defineReadOnly)(this, \"tag\", tag);\n        (0, properties_1.defineReadOnly)(this, \"listener\", listener);\n        (0, properties_1.defineReadOnly)(this, \"once\", once);\n        this._lastBlockNumber = -2;\n        this._inflight = false;\n    }\n    Object.defineProperty(Event.prototype, \"event\", {\n        get: function () {\n            switch (this.type) {\n                case \"tx\":\n                    return this.hash;\n                case \"filter\":\n                    return this.filter;\n            }\n            return this.tag;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Event.prototype, \"type\", {\n        get: function () {\n            return this.tag.split(\":\")[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Event.prototype, \"hash\", {\n        get: function () {\n            var comps = this.tag.split(\":\");\n            if (comps[0] !== \"tx\") {\n                return null;\n            }\n            return comps[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Event.prototype, \"filter\", {\n        get: function () {\n            var comps = this.tag.split(\":\");\n            if (comps[0] !== \"filter\") {\n                return null;\n            }\n            var address = comps[1];\n            var topics = deserializeTopics(comps[2]);\n            var filter = {};\n            if (topics.length > 0) {\n                filter.topics = topics;\n            }\n            if (address && address !== \"*\") {\n                filter.address = address;\n            }\n            return filter;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Event.prototype.pollable = function () {\n        return (this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0);\n    };\n    return Event;\n}());\nexports.Event = Event;\n;\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\nvar coinInfos = {\n    \"0\": { symbol: \"btc\", p2pkh: 0x00, p2sh: 0x05, prefix: \"bc\" },\n    \"2\": { symbol: \"ltc\", p2pkh: 0x30, p2sh: 0x32, prefix: \"ltc\" },\n    \"3\": { symbol: \"doge\", p2pkh: 0x1e, p2sh: 0x16 },\n    \"60\": { symbol: \"eth\", ilk: \"eth\" },\n    \"61\": { symbol: \"etc\", ilk: \"eth\" },\n    \"700\": { symbol: \"xdai\", ilk: \"eth\" },\n};\nfunction bytes32ify(value) {\n    return (0, bytes_1.hexZeroPad)(bignumber_1.BigNumber.from(value).toHexString(), 32);\n}\n// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\nfunction base58Encode(data) {\n    return basex_1.Base58.encode((0, bytes_1.concat)([data, (0, bytes_1.hexDataSlice)((0, sha2_1.sha256)((0, sha2_1.sha256)(data)), 0, 4)]));\n}\nvar matcherIpfs = new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\");\nvar matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    matcherIpfs,\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\nfunction _parseString(result, start) {\n    try {\n        return (0, strings_1.toUtf8String)(_parseBytes(result, start));\n    }\n    catch (error) { }\n    return null;\n}\nfunction _parseBytes(result, start) {\n    if (result === \"0x\") {\n        return null;\n    }\n    var offset = bignumber_1.BigNumber.from((0, bytes_1.hexDataSlice)(result, start, start + 32)).toNumber();\n    var length = bignumber_1.BigNumber.from((0, bytes_1.hexDataSlice)(result, offset, offset + 32)).toNumber();\n    return (0, bytes_1.hexDataSlice)(result, offset + 32, offset + 32 + length);\n}\n// Trim off the ipfs:// prefix and return the default gateway URL\nfunction getIpfsLink(link) {\n    if (link.match(/^ipfs:\\/\\/ipfs\\//i)) {\n        link = link.substring(12);\n    }\n    else if (link.match(/^ipfs:\\/\\//i)) {\n        link = link.substring(7);\n    }\n    else {\n        logger.throwArgumentError(\"unsupported IPFS format\", \"link\", link);\n    }\n    return \"https://gateway.ipfs.io/ipfs/\" + link;\n}\nfunction numPad(value) {\n    var result = (0, bytes_1.arrayify)(value);\n    if (result.length > 32) {\n        throw new Error(\"internal; should not happen\");\n    }\n    var padded = new Uint8Array(32);\n    padded.set(result, 32 - result.length);\n    return padded;\n}\nfunction bytesPad(value) {\n    if ((value.length % 32) === 0) {\n        return value;\n    }\n    var result = new Uint8Array(Math.ceil(value.length / 32) * 32);\n    result.set(value);\n    return result;\n}\n// ABI Encodes a series of (bytes, bytes, ...)\nfunction encodeBytes(datas) {\n    var result = [];\n    var byteCount = 0;\n    // Add place-holders for pointers as we add items\n    for (var i = 0; i < datas.length; i++) {\n        result.push(null);\n        byteCount += 32;\n    }\n    for (var i = 0; i < datas.length; i++) {\n        var data = (0, bytes_1.arrayify)(datas[i]);\n        // Update the bytes offset\n        result[i] = numPad(byteCount);\n        // The length and padded value of data\n        result.push(numPad(data.length));\n        result.push(bytesPad(data));\n        byteCount += 32 + Math.ceil(data.length / 32) * 32;\n    }\n    return (0, bytes_1.hexConcat)(result);\n}\nvar Resolver = /** @class */ (function () {\n    // The resolvedAddress is only for creating a ReverseLookup resolver\n    function Resolver(provider, address, name, resolvedAddress) {\n        (0, properties_1.defineReadOnly)(this, \"provider\", provider);\n        (0, properties_1.defineReadOnly)(this, \"name\", name);\n        (0, properties_1.defineReadOnly)(this, \"address\", provider.formatter.address(address));\n        (0, properties_1.defineReadOnly)(this, \"_resolvedAddress\", resolvedAddress);\n    }\n    Resolver.prototype.supportsWildcard = function () {\n        var _this = this;\n        if (!this._supportsEip2544) {\n            // supportsInterface(bytes4 = selector(\"resolve(bytes,bytes)\"))\n            this._supportsEip2544 = this.provider.call({\n                to: this.address,\n                data: \"0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000\"\n            }).then(function (result) {\n                return bignumber_1.BigNumber.from(result).eq(1);\n            }).catch(function (error) {\n                if (error.code === logger_1.Logger.errors.CALL_EXCEPTION) {\n                    return false;\n                }\n                // Rethrow the error: link is down, etc. Let future attempts retry.\n                _this._supportsEip2544 = null;\n                throw error;\n            });\n        }\n        return this._supportsEip2544;\n    };\n    Resolver.prototype._fetch = function (selector, parameters) {\n        return __awaiter(this, void 0, void 0, function () {\n            var tx, parseBytes, result, error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        tx = {\n                            to: this.address,\n                            ccipReadEnabled: true,\n                            data: (0, bytes_1.hexConcat)([selector, (0, hash_1.namehash)(this.name), (parameters || \"0x\")])\n                        };\n                        parseBytes = false;\n                        return [4 /*yield*/, this.supportsWildcard()];\n                    case 1:\n                        if (_a.sent()) {\n                            parseBytes = true;\n                            // selector(\"resolve(bytes,bytes)\")\n                            tx.data = (0, bytes_1.hexConcat)([\"0x9061b923\", encodeBytes([(0, hash_1.dnsEncode)(this.name), tx.data])]);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, this.provider.call(tx)];\n                    case 3:\n                        result = _a.sent();\n                        if (((0, bytes_1.arrayify)(result).length % 32) === 4) {\n                            logger.throwError(\"resolver threw error\", logger_1.Logger.errors.CALL_EXCEPTION, {\n                                transaction: tx, data: result\n                            });\n                        }\n                        if (parseBytes) {\n                            result = _parseBytes(result, 0);\n                        }\n                        return [2 /*return*/, result];\n                    case 4:\n                        error_1 = _a.sent();\n                        if (error_1.code === logger_1.Logger.errors.CALL_EXCEPTION) {\n                            return [2 /*return*/, null];\n                        }\n                        throw error_1;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Resolver.prototype._fetchBytes = function (selector, parameters) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._fetch(selector, parameters)];\n                    case 1:\n                        result = _a.sent();\n                        if (result != null) {\n                            return [2 /*return*/, _parseBytes(result, 0)];\n                        }\n                        return [2 /*return*/, null];\n                }\n            });\n        });\n    };\n    Resolver.prototype._getAddress = function (coinType, hexBytes) {\n        var coinInfo = coinInfos[String(coinType)];\n        if (coinInfo == null) {\n            logger.throwError(\"unsupported coin type: \" + coinType, logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"getAddress(\" + coinType + \")\"\n            });\n        }\n        if (coinInfo.ilk === \"eth\") {\n            return this.provider.formatter.address(hexBytes);\n        }\n        var bytes = (0, bytes_1.arrayify)(hexBytes);\n        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (coinInfo.p2pkh != null) {\n            var p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n            if (p2pkh) {\n                var length_1 = parseInt(p2pkh[1], 16);\n                if (p2pkh[2].length === length_1 * 2 && length_1 >= 1 && length_1 <= 75) {\n                    return base58Encode((0, bytes_1.concat)([[coinInfo.p2pkh], (\"0x\" + p2pkh[2])]));\n                }\n            }\n        }\n        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (coinInfo.p2sh != null) {\n            var p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n            if (p2sh) {\n                var length_2 = parseInt(p2sh[1], 16);\n                if (p2sh[2].length === length_2 * 2 && length_2 >= 1 && length_2 <= 75) {\n                    return base58Encode((0, bytes_1.concat)([[coinInfo.p2sh], (\"0x\" + p2sh[2])]));\n                }\n            }\n        }\n        // Bech32\n        if (coinInfo.prefix != null) {\n            var length_3 = bytes[1];\n            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n            var version_1 = bytes[0];\n            if (version_1 === 0x00) {\n                if (length_3 !== 20 && length_3 !== 32) {\n                    version_1 = -1;\n                }\n            }\n            else {\n                version_1 = -1;\n            }\n            if (version_1 >= 0 && bytes.length === 2 + length_3 && length_3 >= 1 && length_3 <= 75) {\n                var words = bech32_1.default.toWords(bytes.slice(2));\n                words.unshift(version_1);\n                return bech32_1.default.encode(coinInfo.prefix, words);\n            }\n        }\n        return null;\n    };\n    Resolver.prototype.getAddress = function (coinType) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result, error_2, hexBytes, address;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (coinType == null) {\n                            coinType = 60;\n                        }\n                        if (!(coinType === 60)) return [3 /*break*/, 4];\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this._fetch(\"0x3b3b57de\")];\n                    case 2:\n                        result = _a.sent();\n                        // No address\n                        if (result === \"0x\" || result === constants_1.HashZero) {\n                            return [2 /*return*/, null];\n                        }\n                        return [2 /*return*/, this.provider.formatter.callAddress(result)];\n                    case 3:\n                        error_2 = _a.sent();\n                        if (error_2.code === logger_1.Logger.errors.CALL_EXCEPTION) {\n                            return [2 /*return*/, null];\n                        }\n                        throw error_2;\n                    case 4: return [4 /*yield*/, this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType))];\n                    case 5:\n                        hexBytes = _a.sent();\n                        // No address\n                        if (hexBytes == null || hexBytes === \"0x\") {\n                            return [2 /*return*/, null];\n                        }\n                        address = this._getAddress(coinType, hexBytes);\n                        if (address == null) {\n                            logger.throwError(\"invalid or unsupported coin data\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                                operation: \"getAddress(\" + coinType + \")\",\n                                coinType: coinType,\n                                data: hexBytes\n                            });\n                        }\n                        return [2 /*return*/, address];\n                }\n            });\n        });\n    };\n    Resolver.prototype.getAvatar = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var linkage, avatar, i, match, scheme, _a, selector, owner, _b, comps, addr, tokenId, tokenOwner, _c, _d, balance, _e, _f, tx, metadataUrl, _g, metadata, imageUrl, ipfs, error_3;\n            return __generator(this, function (_h) {\n                switch (_h.label) {\n                    case 0:\n                        linkage = [{ type: \"name\", content: this.name }];\n                        _h.label = 1;\n                    case 1:\n                        _h.trys.push([1, 19, , 20]);\n                        return [4 /*yield*/, this.getText(\"avatar\")];\n                    case 2:\n                        avatar = _h.sent();\n                        if (avatar == null) {\n                            return [2 /*return*/, null];\n                        }\n                        i = 0;\n                        _h.label = 3;\n                    case 3:\n                        if (!(i < matchers.length)) return [3 /*break*/, 18];\n                        match = avatar.match(matchers[i]);\n                        if (match == null) {\n                            return [3 /*break*/, 17];\n                        }\n                        scheme = match[1].toLowerCase();\n                        _a = scheme;\n                        switch (_a) {\n                            case \"https\": return [3 /*break*/, 4];\n                            case \"data\": return [3 /*break*/, 5];\n                            case \"ipfs\": return [3 /*break*/, 6];\n                            case \"erc721\": return [3 /*break*/, 7];\n                            case \"erc1155\": return [3 /*break*/, 7];\n                        }\n                        return [3 /*break*/, 17];\n                    case 4:\n                        linkage.push({ type: \"url\", content: avatar });\n                        return [2 /*return*/, { linkage: linkage, url: avatar }];\n                    case 5:\n                        linkage.push({ type: \"data\", content: avatar });\n                        return [2 /*return*/, { linkage: linkage, url: avatar }];\n                    case 6:\n                        linkage.push({ type: \"ipfs\", content: avatar });\n                        return [2 /*return*/, { linkage: linkage, url: getIpfsLink(avatar) }];\n                    case 7:\n                        selector = (scheme === \"erc721\") ? \"0xc87b56dd\" : \"0x0e89341c\";\n                        linkage.push({ type: scheme, content: avatar });\n                        _b = this._resolvedAddress;\n                        if (_b) return [3 /*break*/, 9];\n                        return [4 /*yield*/, this.getAddress()];\n                    case 8:\n                        _b = (_h.sent());\n                        _h.label = 9;\n                    case 9:\n                        owner = (_b);\n                        comps = (match[2] || \"\").split(\"/\");\n                        if (comps.length !== 2) {\n                            return [2 /*return*/, null];\n                        }\n                        return [4 /*yield*/, this.provider.formatter.address(comps[0])];\n                    case 10:\n                        addr = _h.sent();\n                        tokenId = (0, bytes_1.hexZeroPad)(bignumber_1.BigNumber.from(comps[1]).toHexString(), 32);\n                        if (!(scheme === \"erc721\")) return [3 /*break*/, 12];\n                        _d = (_c = this.provider.formatter).callAddress;\n                        return [4 /*yield*/, this.provider.call({\n                                to: addr, data: (0, bytes_1.hexConcat)([\"0x6352211e\", tokenId])\n                            })];\n                    case 11:\n                        tokenOwner = _d.apply(_c, [_h.sent()]);\n                        if (owner !== tokenOwner) {\n                            return [2 /*return*/, null];\n                        }\n                        linkage.push({ type: \"owner\", content: tokenOwner });\n                        return [3 /*break*/, 14];\n                    case 12:\n                        if (!(scheme === \"erc1155\")) return [3 /*break*/, 14];\n                        _f = (_e = bignumber_1.BigNumber).from;\n                        return [4 /*yield*/, this.provider.call({\n                                to: addr, data: (0, bytes_1.hexConcat)([\"0x00fdd58e\", (0, bytes_1.hexZeroPad)(owner, 32), tokenId])\n                            })];\n                    case 13:\n                        balance = _f.apply(_e, [_h.sent()]);\n                        if (balance.isZero()) {\n                            return [2 /*return*/, null];\n                        }\n                        linkage.push({ type: \"balance\", content: balance.toString() });\n                        _h.label = 14;\n                    case 14:\n                        tx = {\n                            to: this.provider.formatter.address(comps[0]),\n                            data: (0, bytes_1.hexConcat)([selector, tokenId])\n                        };\n                        _g = _parseString;\n                        return [4 /*yield*/, this.provider.call(tx)];\n                    case 15:\n                        metadataUrl = _g.apply(void 0, [_h.sent(), 0]);\n                        if (metadataUrl == null) {\n                            return [2 /*return*/, null];\n                        }\n                        linkage.push({ type: \"metadata-url-base\", content: metadataUrl });\n                        // ERC-1155 allows a generic {id} in the URL\n                        if (scheme === \"erc1155\") {\n                            metadataUrl = metadataUrl.replace(\"{id}\", tokenId.substring(2));\n                            linkage.push({ type: \"metadata-url-expanded\", content: metadataUrl });\n                        }\n                        // Transform IPFS metadata links\n                        if (metadataUrl.match(/^ipfs:/i)) {\n                            metadataUrl = getIpfsLink(metadataUrl);\n                        }\n                        linkage.push({ type: \"metadata-url\", content: metadataUrl });\n                        return [4 /*yield*/, (0, web_1.fetchJson)(metadataUrl)];\n                    case 16:\n                        metadata = _h.sent();\n                        if (!metadata) {\n                            return [2 /*return*/, null];\n                        }\n                        linkage.push({ type: \"metadata\", content: JSON.stringify(metadata) });\n                        imageUrl = metadata.image;\n                        if (typeof (imageUrl) !== \"string\") {\n                            return [2 /*return*/, null];\n                        }\n                        if (imageUrl.match(/^(https:\\/\\/|data:)/i)) {\n                            // Allow\n                        }\n                        else {\n                            ipfs = imageUrl.match(matcherIpfs);\n                            if (ipfs == null) {\n                                return [2 /*return*/, null];\n                            }\n                            linkage.push({ type: \"url-ipfs\", content: imageUrl });\n                            imageUrl = getIpfsLink(imageUrl);\n                        }\n                        linkage.push({ type: \"url\", content: imageUrl });\n                        return [2 /*return*/, { linkage: linkage, url: imageUrl }];\n                    case 17:\n                        i++;\n                        return [3 /*break*/, 3];\n                    case 18: return [3 /*break*/, 20];\n                    case 19:\n                        error_3 = _h.sent();\n                        return [3 /*break*/, 20];\n                    case 20: return [2 /*return*/, null];\n                }\n            });\n        });\n    };\n    Resolver.prototype.getContentHash = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var hexBytes, ipfs, length_4, ipns, length_5, swarm, skynet, urlSafe_1, hash;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._fetchBytes(\"0xbc1c58d1\")];\n                    case 1:\n                        hexBytes = _a.sent();\n                        // No contenthash\n                        if (hexBytes == null || hexBytes === \"0x\") {\n                            return [2 /*return*/, null];\n                        }\n                        ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n                        if (ipfs) {\n                            length_4 = parseInt(ipfs[3], 16);\n                            if (ipfs[4].length === length_4 * 2) {\n                                return [2 /*return*/, \"ipfs:/\\/\" + basex_1.Base58.encode(\"0x\" + ipfs[1])];\n                            }\n                        }\n                        ipns = hexBytes.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n                        if (ipns) {\n                            length_5 = parseInt(ipns[3], 16);\n                            if (ipns[4].length === length_5 * 2) {\n                                return [2 /*return*/, \"ipns:/\\/\" + basex_1.Base58.encode(\"0x\" + ipns[1])];\n                            }\n                        }\n                        swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/);\n                        if (swarm) {\n                            if (swarm[1].length === (32 * 2)) {\n                                return [2 /*return*/, \"bzz:/\\/\" + swarm[1]];\n                            }\n                        }\n                        skynet = hexBytes.match(/^0x90b2c605([0-9a-f]*)$/);\n                        if (skynet) {\n                            if (skynet[1].length === (34 * 2)) {\n                                urlSafe_1 = { \"=\": \"\", \"+\": \"-\", \"/\": \"_\" };\n                                hash = (0, base64_1.encode)(\"0x\" + skynet[1]).replace(/[=+\\/]/g, function (a) { return (urlSafe_1[a]); });\n                                return [2 /*return*/, \"sia:/\\/\" + hash];\n                            }\n                        }\n                        return [2 /*return*/, logger.throwError(\"invalid or unsupported content hash data\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                                operation: \"getContentHash()\",\n                                data: hexBytes\n                            })];\n                }\n            });\n        });\n    };\n    Resolver.prototype.getText = function (key) {\n        return __awaiter(this, void 0, void 0, function () {\n            var keyBytes, hexBytes;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        keyBytes = (0, strings_1.toUtf8Bytes)(key);\n                        // The nodehash consumes the first slot, so the string pointer targets\n                        // offset 64, with the length at offset 64 and data starting at offset 96\n                        keyBytes = (0, bytes_1.concat)([bytes32ify(64), bytes32ify(keyBytes.length), keyBytes]);\n                        // Pad to word-size (32 bytes)\n                        if ((keyBytes.length % 32) !== 0) {\n                            keyBytes = (0, bytes_1.concat)([keyBytes, (0, bytes_1.hexZeroPad)(\"0x\", 32 - (key.length % 32))]);\n                        }\n                        return [4 /*yield*/, this._fetchBytes(\"0x59d1d43c\", (0, bytes_1.hexlify)(keyBytes))];\n                    case 1:\n                        hexBytes = _a.sent();\n                        if (hexBytes == null || hexBytes === \"0x\") {\n                            return [2 /*return*/, null];\n                        }\n                        return [2 /*return*/, (0, strings_1.toUtf8String)(hexBytes)];\n                }\n            });\n        });\n    };\n    return Resolver;\n}());\nexports.Resolver = Resolver;\nvar defaultFormatter = null;\nvar nextPollId = 1;\nvar BaseProvider = /** @class */ (function (_super) {\n    __extends(BaseProvider, _super);\n    /**\n     *  ready\n     *\n     *  A Promise<Network> that resolves only once the provider is ready.\n     *\n     *  Sub-classes that call the super with a network without a chainId\n     *  MUST set this. Standard named networks have a known chainId.\n     *\n     */\n    function BaseProvider(network) {\n        var _newTarget = this.constructor;\n        var _this = _super.call(this) || this;\n        // Events being listened to\n        _this._events = [];\n        _this._emitted = { block: -2 };\n        _this.disableCcipRead = false;\n        _this.formatter = _newTarget.getFormatter();\n        // If network is any, this Provider allows the underlying\n        // network to change dynamically, and we auto-detect the\n        // current network\n        (0, properties_1.defineReadOnly)(_this, \"anyNetwork\", (network === \"any\"));\n        if (_this.anyNetwork) {\n            network = _this.detectNetwork();\n        }\n        if (network instanceof Promise) {\n            _this._networkPromise = network;\n            // Squash any \"unhandled promise\" errors; that do not need to be handled\n            network.catch(function (error) { });\n            // Trigger initial network setting (async)\n            _this._ready().catch(function (error) { });\n        }\n        else {\n            var knownNetwork = (0, properties_1.getStatic)(_newTarget, \"getNetwork\")(network);\n            if (knownNetwork) {\n                (0, properties_1.defineReadOnly)(_this, \"_network\", knownNetwork);\n                _this.emit(\"network\", knownNetwork, null);\n            }\n            else {\n                logger.throwArgumentError(\"invalid network\", \"network\", network);\n            }\n        }\n        _this._maxInternalBlockNumber = -1024;\n        _this._lastBlockNumber = -2;\n        _this._maxFilterBlockRange = 10;\n        _this._pollingInterval = 4000;\n        _this._fastQueryDate = 0;\n        return _this;\n    }\n    BaseProvider.prototype._ready = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var network, error_4;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this._network == null)) return [3 /*break*/, 7];\n                        network = null;\n                        if (!this._networkPromise) return [3 /*break*/, 4];\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this._networkPromise];\n                    case 2:\n                        network = _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        error_4 = _a.sent();\n                        return [3 /*break*/, 4];\n                    case 4:\n                        if (!(network == null)) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this.detectNetwork()];\n                    case 5:\n                        network = _a.sent();\n                        _a.label = 6;\n                    case 6:\n                        // This should never happen; every Provider sub-class should have\n                        // suggested a network by here (or have thrown).\n                        if (!network) {\n                            logger.throwError(\"no network detected\", logger_1.Logger.errors.UNKNOWN_ERROR, {});\n                        }\n                        // Possible this call stacked so do not call defineReadOnly again\n                        if (this._network == null) {\n                            if (this.anyNetwork) {\n                                this._network = network;\n                            }\n                            else {\n                                (0, properties_1.defineReadOnly)(this, \"_network\", network);\n                            }\n                            this.emit(\"network\", network, null);\n                        }\n                        _a.label = 7;\n                    case 7: return [2 /*return*/, this._network];\n                }\n            });\n        });\n    };\n    Object.defineProperty(BaseProvider.prototype, \"ready\", {\n        // This will always return the most recently established network.\n        // For \"any\", this can change (a \"network\" event is emitted before\n        // any change is reflected); otherwise this cannot change\n        get: function () {\n            var _this = this;\n            return (0, web_1.poll)(function () {\n                return _this._ready().then(function (network) {\n                    return network;\n                }, function (error) {\n                    // If the network isn't running yet, we will wait\n                    if (error.code === logger_1.Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n                        return undefined;\n                    }\n                    throw error;\n                });\n            });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // @TODO: Remove this and just create a singleton formatter\n    BaseProvider.getFormatter = function () {\n        if (defaultFormatter == null) {\n            defaultFormatter = new formatter_1.Formatter();\n        }\n        return defaultFormatter;\n    };\n    // @TODO: Remove this and just use getNetwork\n    BaseProvider.getNetwork = function (network) {\n        return (0, networks_1.getNetwork)((network == null) ? \"homestead\" : network);\n    };\n    BaseProvider.prototype.ccipReadFetch = function (tx, calldata, urls) {\n        return __awaiter(this, void 0, void 0, function () {\n            var sender, data, errorMessages, i, url, href, json, result, errorMessage;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.disableCcipRead || urls.length === 0) {\n                            return [2 /*return*/, null];\n                        }\n                        sender = tx.to.toLowerCase();\n                        data = calldata.toLowerCase();\n                        errorMessages = [];\n                        i = 0;\n                        _a.label = 1;\n                    case 1:\n                        if (!(i < urls.length)) return [3 /*break*/, 4];\n                        url = urls[i];\n                        href = url.replace(\"{sender}\", sender).replace(\"{data}\", data);\n                        json = (url.indexOf(\"{data}\") >= 0) ? null : JSON.stringify({ data: data, sender: sender });\n                        return [4 /*yield*/, (0, web_1.fetchJson)({ url: href, errorPassThrough: true }, json, function (value, response) {\n                                value.status = response.statusCode;\n                                return value;\n                            })];\n                    case 2:\n                        result = _a.sent();\n                        if (result.data) {\n                            return [2 /*return*/, result.data];\n                        }\n                        errorMessage = (result.message || \"unknown error\");\n                        // 4xx indicates the result is not present; stop\n                        if (result.status >= 400 && result.status < 500) {\n                            return [2 /*return*/, logger.throwError(\"response not found during CCIP fetch: \" + errorMessage, logger_1.Logger.errors.SERVER_ERROR, { url: url, errorMessage: errorMessage })];\n                        }\n                        // 5xx indicates server issue; try the next url\n                        errorMessages.push(errorMessage);\n                        _a.label = 3;\n                    case 3:\n                        i++;\n                        return [3 /*break*/, 1];\n                    case 4: return [2 /*return*/, logger.throwError(\"error encountered during CCIP fetch: \" + errorMessages.map(function (m) { return JSON.stringify(m); }).join(\", \"), logger_1.Logger.errors.SERVER_ERROR, {\n                            urls: urls,\n                            errorMessages: errorMessages\n                        })];\n                }\n            });\n        });\n    };\n    // Fetches the blockNumber, but will reuse any result that is less\n    // than maxAge old or has been requested since the last request\n    BaseProvider.prototype._getInternalBlockNumber = function (maxAge) {\n        return __awaiter(this, void 0, void 0, function () {\n            var internalBlockNumber, result, error_5, reqTime, checkInternalBlockNumber;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._ready()];\n                    case 1:\n                        _a.sent();\n                        if (!(maxAge > 0)) return [3 /*break*/, 7];\n                        _a.label = 2;\n                    case 2:\n                        if (!this._internalBlockNumber) return [3 /*break*/, 7];\n                        internalBlockNumber = this._internalBlockNumber;\n                        _a.label = 3;\n                    case 3:\n                        _a.trys.push([3, 5, , 6]);\n                        return [4 /*yield*/, internalBlockNumber];\n                    case 4:\n                        result = _a.sent();\n                        if ((getTime() - result.respTime) <= maxAge) {\n                            return [2 /*return*/, result.blockNumber];\n                        }\n                        // Too old; fetch a new value\n                        return [3 /*break*/, 7];\n                    case 5:\n                        error_5 = _a.sent();\n                        // The fetch rejected; if we are the first to get the\n                        // rejection, drop through so we replace it with a new\n                        // fetch; all others blocked will then get that fetch\n                        // which won't match the one they \"remembered\" and loop\n                        if (this._internalBlockNumber === internalBlockNumber) {\n                            return [3 /*break*/, 7];\n                        }\n                        return [3 /*break*/, 6];\n                    case 6: return [3 /*break*/, 2];\n                    case 7:\n                        reqTime = getTime();\n                        checkInternalBlockNumber = (0, properties_1.resolveProperties)({\n                            blockNumber: this.perform(\"getBlockNumber\", {}),\n                            networkError: this.getNetwork().then(function (network) { return (null); }, function (error) { return (error); })\n                        }).then(function (_a) {\n                            var blockNumber = _a.blockNumber, networkError = _a.networkError;\n                            if (networkError) {\n                                // Unremember this bad internal block number\n                                if (_this._internalBlockNumber === checkInternalBlockNumber) {\n                                    _this._internalBlockNumber = null;\n                                }\n                                throw networkError;\n                            }\n                            var respTime = getTime();\n                            blockNumber = bignumber_1.BigNumber.from(blockNumber).toNumber();\n                            if (blockNumber < _this._maxInternalBlockNumber) {\n                                blockNumber = _this._maxInternalBlockNumber;\n                            }\n                            _this._maxInternalBlockNumber = blockNumber;\n                            _this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n                            return { blockNumber: blockNumber, reqTime: reqTime, respTime: respTime };\n                        });\n                        this._internalBlockNumber = checkInternalBlockNumber;\n                        // Swallow unhandled exceptions; if needed they are handled else where\n                        checkInternalBlockNumber.catch(function (error) {\n                            // Don't null the dead (rejected) fetch, if it has already been updated\n                            if (_this._internalBlockNumber === checkInternalBlockNumber) {\n                                _this._internalBlockNumber = null;\n                            }\n                        });\n                        return [4 /*yield*/, checkInternalBlockNumber];\n                    case 8: return [2 /*return*/, (_a.sent()).blockNumber];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype.poll = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var pollId, runners, blockNumber, error_6, i;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        pollId = nextPollId++;\n                        runners = [];\n                        blockNumber = null;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this._getInternalBlockNumber(100 + this.pollingInterval / 2)];\n                    case 2:\n                        blockNumber = _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        error_6 = _a.sent();\n                        this.emit(\"error\", error_6);\n                        return [2 /*return*/];\n                    case 4:\n                        this._setFastBlockNumber(blockNumber);\n                        // Emit a poll event after we have the latest (fast) block number\n                        this.emit(\"poll\", pollId, blockNumber);\n                        // If the block has not changed, meh.\n                        if (blockNumber === this._lastBlockNumber) {\n                            this.emit(\"didPoll\", pollId);\n                            return [2 /*return*/];\n                        }\n                        // First polling cycle, trigger a \"block\" events\n                        if (this._emitted.block === -2) {\n                            this._emitted.block = blockNumber - 1;\n                        }\n                        if (Math.abs((this._emitted.block) - blockNumber) > 1000) {\n                            logger.warn(\"network block skew detected; skipping block events (emitted=\" + this._emitted.block + \" blockNumber\" + blockNumber + \")\");\n                            this.emit(\"error\", logger.makeError(\"network block skew detected\", logger_1.Logger.errors.NETWORK_ERROR, {\n                                blockNumber: blockNumber,\n                                event: \"blockSkew\",\n                                previousBlockNumber: this._emitted.block\n                            }));\n                            this.emit(\"block\", blockNumber);\n                        }\n                        else {\n                            // Notify all listener for each block that has passed\n                            for (i = this._emitted.block + 1; i <= blockNumber; i++) {\n                                this.emit(\"block\", i);\n                            }\n                        }\n                        // The emitted block was updated, check for obsolete events\n                        if (this._emitted.block !== blockNumber) {\n                            this._emitted.block = blockNumber;\n                            Object.keys(this._emitted).forEach(function (key) {\n                                // The block event does not expire\n                                if (key === \"block\") {\n                                    return;\n                                }\n                                // The block we were at when we emitted this event\n                                var eventBlockNumber = _this._emitted[key];\n                                // We cannot garbage collect pending transactions or blocks here\n                                // They should be garbage collected by the Provider when setting\n                                // \"pending\" events\n                                if (eventBlockNumber === \"pending\") {\n                                    return;\n                                }\n                                // Evict any transaction hashes or block hashes over 12 blocks\n                                // old, since they should not return null anyways\n                                if (blockNumber - eventBlockNumber > 12) {\n                                    delete _this._emitted[key];\n                                }\n                            });\n                        }\n                        // First polling cycle\n                        if (this._lastBlockNumber === -2) {\n                            this._lastBlockNumber = blockNumber - 1;\n                        }\n                        // Find all transaction hashes we are waiting on\n                        this._events.forEach(function (event) {\n                            switch (event.type) {\n                                case \"tx\": {\n                                    var hash_2 = event.hash;\n                                    var runner = _this.getTransactionReceipt(hash_2).then(function (receipt) {\n                                        if (!receipt || receipt.blockNumber == null) {\n                                            return null;\n                                        }\n                                        _this._emitted[\"t:\" + hash_2] = receipt.blockNumber;\n                                        _this.emit(hash_2, receipt);\n                                        return null;\n                                    }).catch(function (error) { _this.emit(\"error\", error); });\n                                    runners.push(runner);\n                                    break;\n                                }\n                                case \"filter\": {\n                                    // We only allow a single getLogs to be in-flight at a time\n                                    if (!event._inflight) {\n                                        event._inflight = true;\n                                        // This is the first filter for this event, so we want to\n                                        // restrict events to events that happened no earlier than now\n                                        if (event._lastBlockNumber === -2) {\n                                            event._lastBlockNumber = blockNumber - 1;\n                                        }\n                                        // Filter from the last *known* event; due to load-balancing\n                                        // and some nodes returning updated block numbers before\n                                        // indexing events, a logs result with 0 entries cannot be\n                                        // trusted and we must retry a range which includes it again\n                                        var filter_1 = event.filter;\n                                        filter_1.fromBlock = event._lastBlockNumber + 1;\n                                        filter_1.toBlock = blockNumber;\n                                        // Prevent fitler ranges from growing too wild, since it is quite\n                                        // likely there just haven't been any events to move the lastBlockNumber.\n                                        var minFromBlock = filter_1.toBlock - _this._maxFilterBlockRange;\n                                        if (minFromBlock > filter_1.fromBlock) {\n                                            filter_1.fromBlock = minFromBlock;\n                                        }\n                                        if (filter_1.fromBlock < 0) {\n                                            filter_1.fromBlock = 0;\n                                        }\n                                        var runner = _this.getLogs(filter_1).then(function (logs) {\n                                            // Allow the next getLogs\n                                            event._inflight = false;\n                                            if (logs.length === 0) {\n                                                return;\n                                            }\n                                            logs.forEach(function (log) {\n                                                // Only when we get an event for a given block number\n                                                // can we trust the events are indexed\n                                                if (log.blockNumber > event._lastBlockNumber) {\n                                                    event._lastBlockNumber = log.blockNumber;\n                                                }\n                                                // Make sure we stall requests to fetch blocks and txs\n                                                _this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                                                _this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n                                                _this.emit(filter_1, log);\n                                            });\n                                        }).catch(function (error) {\n                                            _this.emit(\"error\", error);\n                                            // Allow another getLogs (the range was not updated)\n                                            event._inflight = false;\n                                        });\n                                        runners.push(runner);\n                                    }\n                                    break;\n                                }\n                            }\n                        });\n                        this._lastBlockNumber = blockNumber;\n                        // Once all events for this loop have been processed, emit \"didPoll\"\n                        Promise.all(runners).then(function () {\n                            _this.emit(\"didPoll\", pollId);\n                        }).catch(function (error) { _this.emit(\"error\", error); });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // Deprecated; do not use this\n    BaseProvider.prototype.resetEventsBlock = function (blockNumber) {\n        this._lastBlockNumber = blockNumber - 1;\n        if (this.polling) {\n            this.poll();\n        }\n    };\n    Object.defineProperty(BaseProvider.prototype, \"network\", {\n        get: function () {\n            return this._network;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // This method should query the network if the underlying network\n    // can change, such as when connected to a JSON-RPC backend\n    BaseProvider.prototype.detectNetwork = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, logger.throwError(\"provider does not support network detection\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"provider.detectNetwork\"\n                    })];\n            });\n        });\n    };\n    BaseProvider.prototype.getNetwork = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var network, currentNetwork, error;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._ready()];\n                    case 1:\n                        network = _a.sent();\n                        return [4 /*yield*/, this.detectNetwork()];\n                    case 2:\n                        currentNetwork = _a.sent();\n                        if (!(network.chainId !== currentNetwork.chainId)) return [3 /*break*/, 5];\n                        if (!this.anyNetwork) return [3 /*break*/, 4];\n                        this._network = currentNetwork;\n                        // Reset all internal block number guards and caches\n                        this._lastBlockNumber = -2;\n                        this._fastBlockNumber = null;\n                        this._fastBlockNumberPromise = null;\n                        this._fastQueryDate = 0;\n                        this._emitted.block = -2;\n                        this._maxInternalBlockNumber = -1024;\n                        this._internalBlockNumber = null;\n                        // The \"network\" event MUST happen before this method resolves\n                        // so any events have a chance to unregister, so we stall an\n                        // additional event loop before returning from /this/ call\n                        this.emit(\"network\", currentNetwork, network);\n                        return [4 /*yield*/, stall(0)];\n                    case 3:\n                        _a.sent();\n                        return [2 /*return*/, this._network];\n                    case 4:\n                        error = logger.makeError(\"underlying network changed\", logger_1.Logger.errors.NETWORK_ERROR, {\n                            event: \"changed\",\n                            network: network,\n                            detectedNetwork: currentNetwork\n                        });\n                        this.emit(\"error\", error);\n                        throw error;\n                    case 5: return [2 /*return*/, network];\n                }\n            });\n        });\n    };\n    Object.defineProperty(BaseProvider.prototype, \"blockNumber\", {\n        get: function () {\n            var _this = this;\n            this._getInternalBlockNumber(100 + this.pollingInterval / 2).then(function (blockNumber) {\n                _this._setFastBlockNumber(blockNumber);\n            }, function (error) { });\n            return (this._fastBlockNumber != null) ? this._fastBlockNumber : -1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseProvider.prototype, \"polling\", {\n        get: function () {\n            return (this._poller != null);\n        },\n        set: function (value) {\n            var _this = this;\n            if (value && !this._poller) {\n                this._poller = setInterval(function () { _this.poll(); }, this.pollingInterval);\n                if (!this._bootstrapPoll) {\n                    this._bootstrapPoll = setTimeout(function () {\n                        _this.poll();\n                        // We block additional polls until the polling interval\n                        // is done, to prevent overwhelming the poll function\n                        _this._bootstrapPoll = setTimeout(function () {\n                            // If polling was disabled, something may require a poke\n                            // since starting the bootstrap poll and it was disabled\n                            if (!_this._poller) {\n                                _this.poll();\n                            }\n                            // Clear out the bootstrap so we can do another\n                            _this._bootstrapPoll = null;\n                        }, _this.pollingInterval);\n                    }, 0);\n                }\n            }\n            else if (!value && this._poller) {\n                clearInterval(this._poller);\n                this._poller = null;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseProvider.prototype, \"pollingInterval\", {\n        get: function () {\n            return this._pollingInterval;\n        },\n        set: function (value) {\n            var _this = this;\n            if (typeof (value) !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n                throw new Error(\"invalid polling interval\");\n            }\n            this._pollingInterval = value;\n            if (this._poller) {\n                clearInterval(this._poller);\n                this._poller = setInterval(function () { _this.poll(); }, this._pollingInterval);\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BaseProvider.prototype._getFastBlockNumber = function () {\n        var _this = this;\n        var now = getTime();\n        // Stale block number, request a newer value\n        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {\n            this._fastQueryDate = now;\n            this._fastBlockNumberPromise = this.getBlockNumber().then(function (blockNumber) {\n                if (_this._fastBlockNumber == null || blockNumber > _this._fastBlockNumber) {\n                    _this._fastBlockNumber = blockNumber;\n                }\n                return _this._fastBlockNumber;\n            });\n        }\n        return this._fastBlockNumberPromise;\n    };\n    BaseProvider.prototype._setFastBlockNumber = function (blockNumber) {\n        // Older block, maybe a stale request\n        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) {\n            return;\n        }\n        // Update the time we updated the blocknumber\n        this._fastQueryDate = getTime();\n        // Newer block number, use  it\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n            this._fastBlockNumber = blockNumber;\n            this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n        }\n    };\n    BaseProvider.prototype.waitForTransaction = function (transactionHash, confirmations, timeout) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this._waitForTransaction(transactionHash, (confirmations == null) ? 1 : confirmations, timeout || 0, null)];\n            });\n        });\n    };\n    BaseProvider.prototype._waitForTransaction = function (transactionHash, confirmations, timeout, replaceable) {\n        return __awaiter(this, void 0, void 0, function () {\n            var receipt;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getTransactionReceipt(transactionHash)];\n                    case 1:\n                        receipt = _a.sent();\n                        // Receipt is already good\n                        if ((receipt ? receipt.confirmations : 0) >= confirmations) {\n                            return [2 /*return*/, receipt];\n                        }\n                        // Poll until the receipt is good...\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\n                                var cancelFuncs = [];\n                                var done = false;\n                                var alreadyDone = function () {\n                                    if (done) {\n                                        return true;\n                                    }\n                                    done = true;\n                                    cancelFuncs.forEach(function (func) { func(); });\n                                    return false;\n                                };\n                                var minedHandler = function (receipt) {\n                                    if (receipt.confirmations < confirmations) {\n                                        return;\n                                    }\n                                    if (alreadyDone()) {\n                                        return;\n                                    }\n                                    resolve(receipt);\n                                };\n                                _this.on(transactionHash, minedHandler);\n                                cancelFuncs.push(function () { _this.removeListener(transactionHash, minedHandler); });\n                                if (replaceable) {\n                                    var lastBlockNumber_1 = replaceable.startBlock;\n                                    var scannedBlock_1 = null;\n                                    var replaceHandler_1 = function (blockNumber) { return __awaiter(_this, void 0, void 0, function () {\n                                        var _this = this;\n                                        return __generator(this, function (_a) {\n                                            switch (_a.label) {\n                                                case 0:\n                                                    if (done) {\n                                                        return [2 /*return*/];\n                                                    }\n                                                    // Wait 1 second; this is only used in the case of a fault, so\n                                                    // we will trade off a little bit of latency for more consistent\n                                                    // results and fewer JSON-RPC calls\n                                                    return [4 /*yield*/, stall(1000)];\n                                                case 1:\n                                                    // Wait 1 second; this is only used in the case of a fault, so\n                                                    // we will trade off a little bit of latency for more consistent\n                                                    // results and fewer JSON-RPC calls\n                                                    _a.sent();\n                                                    this.getTransactionCount(replaceable.from).then(function (nonce) { return __awaiter(_this, void 0, void 0, function () {\n                                                        var mined, block, ti, tx, receipt_1, reason;\n                                                        return __generator(this, function (_a) {\n                                                            switch (_a.label) {\n                                                                case 0:\n                                                                    if (done) {\n                                                                        return [2 /*return*/];\n                                                                    }\n                                                                    if (!(nonce <= replaceable.nonce)) return [3 /*break*/, 1];\n                                                                    lastBlockNumber_1 = blockNumber;\n                                                                    return [3 /*break*/, 9];\n                                                                case 1: return [4 /*yield*/, this.getTransaction(transactionHash)];\n                                                                case 2:\n                                                                    mined = _a.sent();\n                                                                    if (mined && mined.blockNumber != null) {\n                                                                        return [2 /*return*/];\n                                                                    }\n                                                                    // First time scanning. We start a little earlier for some\n                                                                    // wiggle room here to handle the eventually consistent nature\n                                                                    // of blockchain (e.g. the getTransactionCount was for a\n                                                                    // different block)\n                                                                    if (scannedBlock_1 == null) {\n                                                                        scannedBlock_1 = lastBlockNumber_1 - 3;\n                                                                        if (scannedBlock_1 < replaceable.startBlock) {\n                                                                            scannedBlock_1 = replaceable.startBlock;\n                                                                        }\n                                                                    }\n                                                                    _a.label = 3;\n                                                                case 3:\n                                                                    if (!(scannedBlock_1 <= blockNumber)) return [3 /*break*/, 9];\n                                                                    if (done) {\n                                                                        return [2 /*return*/];\n                                                                    }\n                                                                    return [4 /*yield*/, this.getBlockWithTransactions(scannedBlock_1)];\n                                                                case 4:\n                                                                    block = _a.sent();\n                                                                    ti = 0;\n                                                                    _a.label = 5;\n                                                                case 5:\n                                                                    if (!(ti < block.transactions.length)) return [3 /*break*/, 8];\n                                                                    tx = block.transactions[ti];\n                                                                    // Successfully mined!\n                                                                    if (tx.hash === transactionHash) {\n                                                                        return [2 /*return*/];\n                                                                    }\n                                                                    if (!(tx.from === replaceable.from && tx.nonce === replaceable.nonce)) return [3 /*break*/, 7];\n                                                                    if (done) {\n                                                                        return [2 /*return*/];\n                                                                    }\n                                                                    return [4 /*yield*/, this.waitForTransaction(tx.hash, confirmations)];\n                                                                case 6:\n                                                                    receipt_1 = _a.sent();\n                                                                    // Already resolved or rejected (prolly a timeout)\n                                                                    if (alreadyDone()) {\n                                                                        return [2 /*return*/];\n                                                                    }\n                                                                    reason = \"replaced\";\n                                                                    if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\n                                                                        reason = \"repriced\";\n                                                                    }\n                                                                    else if (tx.data === \"0x\" && tx.from === tx.to && tx.value.isZero()) {\n                                                                        reason = \"cancelled\";\n                                                                    }\n                                                                    // Explain why we were replaced\n                                                                    reject(logger.makeError(\"transaction was replaced\", logger_1.Logger.errors.TRANSACTION_REPLACED, {\n                                                                        cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                                                                        reason: reason,\n                                                                        replacement: this._wrapTransaction(tx),\n                                                                        hash: transactionHash,\n                                                                        receipt: receipt_1\n                                                                    }));\n                                                                    return [2 /*return*/];\n                                                                case 7:\n                                                                    ti++;\n                                                                    return [3 /*break*/, 5];\n                                                                case 8:\n                                                                    scannedBlock_1++;\n                                                                    return [3 /*break*/, 3];\n                                                                case 9:\n                                                                    if (done) {\n                                                                        return [2 /*return*/];\n                                                                    }\n                                                                    this.once(\"block\", replaceHandler_1);\n                                                                    return [2 /*return*/];\n                                                            }\n                                                        });\n                                                    }); }, function (error) {\n                                                        if (done) {\n                                                            return;\n                                                        }\n                                                        _this.once(\"block\", replaceHandler_1);\n                                                    });\n                                                    return [2 /*return*/];\n                                            }\n                                        });\n                                    }); };\n                                    if (done) {\n                                        return;\n                                    }\n                                    _this.once(\"block\", replaceHandler_1);\n                                    cancelFuncs.push(function () {\n                                        _this.removeListener(\"block\", replaceHandler_1);\n                                    });\n                                }\n                                if (typeof (timeout) === \"number\" && timeout > 0) {\n                                    var timer_1 = setTimeout(function () {\n                                        if (alreadyDone()) {\n                                            return;\n                                        }\n                                        reject(logger.makeError(\"timeout exceeded\", logger_1.Logger.errors.TIMEOUT, { timeout: timeout }));\n                                    }, timeout);\n                                    if (timer_1.unref) {\n                                        timer_1.unref();\n                                    }\n                                    cancelFuncs.push(function () { clearTimeout(timer_1); });\n                                }\n                            })];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype.getBlockNumber = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this._getInternalBlockNumber(0)];\n            });\n        });\n    };\n    BaseProvider.prototype.getGasPrice = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getNetwork()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.perform(\"getGasPrice\", {})];\n                    case 2:\n                        result = _a.sent();\n                        try {\n                            return [2 /*return*/, bignumber_1.BigNumber.from(result)];\n                        }\n                        catch (error) {\n                            return [2 /*return*/, logger.throwError(\"bad result from backend\", logger_1.Logger.errors.SERVER_ERROR, {\n                                    method: \"getGasPrice\",\n                                    result: result,\n                                    error: error\n                                })];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype.getBalance = function (addressOrName, blockTag) {\n        return __awaiter(this, void 0, void 0, function () {\n            var params, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getNetwork()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, (0, properties_1.resolveProperties)({\n                                address: this._getAddress(addressOrName),\n                                blockTag: this._getBlockTag(blockTag)\n                            })];\n                    case 2:\n                        params = _a.sent();\n                        return [4 /*yield*/, this.perform(\"getBalance\", params)];\n                    case 3:\n                        result = _a.sent();\n                        try {\n                            return [2 /*return*/, bignumber_1.BigNumber.from(result)];\n                        }\n                        catch (error) {\n                            return [2 /*return*/, logger.throwError(\"bad result from backend\", logger_1.Logger.errors.SERVER_ERROR, {\n                                    method: \"getBalance\",\n                                    params: params,\n                                    result: result,\n                                    error: error\n                                })];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype.getTransactionCount = function (addressOrName, blockTag) {\n        return __awaiter(this, void 0, void 0, function () {\n            var params, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getNetwork()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, (0, properties_1.resolveProperties)({\n                                address: this._getAddress(addressOrName),\n                                blockTag: this._getBlockTag(blockTag)\n                            })];\n                    case 2:\n                        params = _a.sent();\n                        return [4 /*yield*/, this.perform(\"getTransactionCount\", params)];\n                    case 3:\n                        result = _a.sent();\n                        try {\n                            return [2 /*return*/, bignumber_1.BigNumber.from(result).toNumber()];\n                        }\n                        catch (error) {\n                            return [2 /*return*/, logger.throwError(\"bad result from backend\", logger_1.Logger.errors.SERVER_ERROR, {\n                                    method: \"getTransactionCount\",\n                                    params: params,\n                                    result: result,\n                                    error: error\n                                })];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype.getCode = function (addressOrName, blockTag) {\n        return __awaiter(this, void 0, void 0, function () {\n            var params, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getNetwork()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, (0, properties_1.resolveProperties)({\n                                address: this._getAddress(addressOrName),\n                                blockTag: this._getBlockTag(blockTag)\n                            })];\n                    case 2:\n                        params = _a.sent();\n                        return [4 /*yield*/, this.perform(\"getCode\", params)];\n                    case 3:\n                        result = _a.sent();\n                        try {\n                            return [2 /*return*/, (0, bytes_1.hexlify)(result)];\n                        }\n                        catch (error) {\n                            return [2 /*return*/, logger.throwError(\"bad result from backend\", logger_1.Logger.errors.SERVER_ERROR, {\n                                    method: \"getCode\",\n                                    params: params,\n                                    result: result,\n                                    error: error\n                                })];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype.getStorageAt = function (addressOrName, position, blockTag) {\n        return __awaiter(this, void 0, void 0, function () {\n            var params, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getNetwork()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, (0, properties_1.resolveProperties)({\n                                address: this._getAddress(addressOrName),\n                                blockTag: this._getBlockTag(blockTag),\n                                position: Promise.resolve(position).then(function (p) { return (0, bytes_1.hexValue)(p); })\n                            })];\n                    case 2:\n                        params = _a.sent();\n                        return [4 /*yield*/, this.perform(\"getStorageAt\", params)];\n                    case 3:\n                        result = _a.sent();\n                        try {\n                            return [2 /*return*/, (0, bytes_1.hexlify)(result)];\n                        }\n                        catch (error) {\n                            return [2 /*return*/, logger.throwError(\"bad result from backend\", logger_1.Logger.errors.SERVER_ERROR, {\n                                    method: \"getStorageAt\",\n                                    params: params,\n                                    result: result,\n                                    error: error\n                                })];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // This should be called by any subclass wrapping a TransactionResponse\n    BaseProvider.prototype._wrapTransaction = function (tx, hash, startBlock) {\n        var _this = this;\n        if (hash != null && (0, bytes_1.hexDataLength)(hash) !== 32) {\n            throw new Error(\"invalid response - sendTransaction\");\n        }\n        var result = tx;\n        // Check the hash we expect is the same as the hash the server reported\n        if (hash != null && tx.hash !== hash) {\n            logger.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", logger_1.Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });\n        }\n        result.wait = function (confirms, timeout) { return __awaiter(_this, void 0, void 0, function () {\n            var replacement, receipt;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (confirms == null) {\n                            confirms = 1;\n                        }\n                        if (timeout == null) {\n                            timeout = 0;\n                        }\n                        replacement = undefined;\n                        if (confirms !== 0 && startBlock != null) {\n                            replacement = {\n                                data: tx.data,\n                                from: tx.from,\n                                nonce: tx.nonce,\n                                to: tx.to,\n                                value: tx.value,\n                                startBlock: startBlock\n                            };\n                        }\n                        return [4 /*yield*/, this._waitForTransaction(tx.hash, confirms, timeout, replacement)];\n                    case 1:\n                        receipt = _a.sent();\n                        if (receipt == null && confirms === 0) {\n                            return [2 /*return*/, null];\n                        }\n                        // No longer pending, allow the polling loop to garbage collect this\n                        this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n                        if (receipt.status === 0) {\n                            logger.throwError(\"transaction failed\", logger_1.Logger.errors.CALL_EXCEPTION, {\n                                transactionHash: tx.hash,\n                                transaction: tx,\n                                receipt: receipt\n                            });\n                        }\n                        return [2 /*return*/, receipt];\n                }\n            });\n        }); };\n        return result;\n    };\n    BaseProvider.prototype.sendTransaction = function (signedTransaction) {\n        return __awaiter(this, void 0, void 0, function () {\n            var hexTx, tx, blockNumber, hash, error_7;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getNetwork()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, Promise.resolve(signedTransaction).then(function (t) { return (0, bytes_1.hexlify)(t); })];\n                    case 2:\n                        hexTx = _a.sent();\n                        tx = this.formatter.transaction(signedTransaction);\n                        if (tx.confirmations == null) {\n                            tx.confirmations = 0;\n                        }\n                        return [4 /*yield*/, this._getInternalBlockNumber(100 + 2 * this.pollingInterval)];\n                    case 3:\n                        blockNumber = _a.sent();\n                        _a.label = 4;\n                    case 4:\n                        _a.trys.push([4, 6, , 7]);\n                        return [4 /*yield*/, this.perform(\"sendTransaction\", { signedTransaction: hexTx })];\n                    case 5:\n                        hash = _a.sent();\n                        return [2 /*return*/, this._wrapTransaction(tx, hash, blockNumber)];\n                    case 6:\n                        error_7 = _a.sent();\n                        error_7.transaction = tx;\n                        error_7.transactionHash = tx.hash;\n                        throw error_7;\n                    case 7: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype._getTransactionRequest = function (transaction) {\n        return __awaiter(this, void 0, void 0, function () {\n            var values, tx, _a, _b;\n            var _this = this;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, transaction];\n                    case 1:\n                        values = _c.sent();\n                        tx = {};\n                        [\"from\", \"to\"].forEach(function (key) {\n                            if (values[key] == null) {\n                                return;\n                            }\n                            tx[key] = Promise.resolve(values[key]).then(function (v) { return (v ? _this._getAddress(v) : null); });\n                        });\n                        [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"value\"].forEach(function (key) {\n                            if (values[key] == null) {\n                                return;\n                            }\n                            tx[key] = Promise.resolve(values[key]).then(function (v) { return (v ? bignumber_1.BigNumber.from(v) : null); });\n                        });\n                        [\"type\"].forEach(function (key) {\n                            if (values[key] == null) {\n                                return;\n                            }\n                            tx[key] = Promise.resolve(values[key]).then(function (v) { return ((v != null) ? v : null); });\n                        });\n                        if (values.accessList) {\n                            tx.accessList = this.formatter.accessList(values.accessList);\n                        }\n                        [\"data\"].forEach(function (key) {\n                            if (values[key] == null) {\n                                return;\n                            }\n                            tx[key] = Promise.resolve(values[key]).then(function (v) { return (v ? (0, bytes_1.hexlify)(v) : null); });\n                        });\n                        _b = (_a = this.formatter).transactionRequest;\n                        return [4 /*yield*/, (0, properties_1.resolveProperties)(tx)];\n                    case 2: return [2 /*return*/, _b.apply(_a, [_c.sent()])];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype._getFilter = function (filter) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result, _a, _b;\n            var _this = this;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, filter];\n                    case 1:\n                        filter = _c.sent();\n                        result = {};\n                        if (filter.address != null) {\n                            result.address = this._getAddress(filter.address);\n                        }\n                        [\"blockHash\", \"topics\"].forEach(function (key) {\n                            if (filter[key] == null) {\n                                return;\n                            }\n                            result[key] = filter[key];\n                        });\n                        [\"fromBlock\", \"toBlock\"].forEach(function (key) {\n                            if (filter[key] == null) {\n                                return;\n                            }\n                            result[key] = _this._getBlockTag(filter[key]);\n                        });\n                        _b = (_a = this.formatter).filter;\n                        return [4 /*yield*/, (0, properties_1.resolveProperties)(result)];\n                    case 2: return [2 /*return*/, _b.apply(_a, [_c.sent()])];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype._call = function (transaction, blockTag, attempt) {\n        return __awaiter(this, void 0, void 0, function () {\n            var txSender, result, data, sender, urls, urlsOffset, urlsLength, urlsData, u, url, calldata, callbackSelector, extraData, ccipResult, tx, error_8;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (attempt >= MAX_CCIP_REDIRECTS) {\n                            logger.throwError(\"CCIP read exceeded maximum redirections\", logger_1.Logger.errors.SERVER_ERROR, {\n                                redirects: attempt,\n                                transaction: transaction\n                            });\n                        }\n                        txSender = transaction.to;\n                        return [4 /*yield*/, this.perform(\"call\", { transaction: transaction, blockTag: blockTag })];\n                    case 1:\n                        result = _a.sent();\n                        if (!(attempt >= 0 && blockTag === \"latest\" && txSender != null && result.substring(0, 10) === \"0x556f1830\" && ((0, bytes_1.hexDataLength)(result) % 32 === 4))) return [3 /*break*/, 5];\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 5]);\n                        data = (0, bytes_1.hexDataSlice)(result, 4);\n                        sender = (0, bytes_1.hexDataSlice)(data, 0, 32);\n                        if (!bignumber_1.BigNumber.from(sender).eq(txSender)) {\n                            logger.throwError(\"CCIP Read sender did not match\", logger_1.Logger.errors.CALL_EXCEPTION, {\n                                name: \"OffchainLookup\",\n                                signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                                transaction: transaction,\n                                data: result\n                            });\n                        }\n                        urls = [];\n                        urlsOffset = bignumber_1.BigNumber.from((0, bytes_1.hexDataSlice)(data, 32, 64)).toNumber();\n                        urlsLength = bignumber_1.BigNumber.from((0, bytes_1.hexDataSlice)(data, urlsOffset, urlsOffset + 32)).toNumber();\n                        urlsData = (0, bytes_1.hexDataSlice)(data, urlsOffset + 32);\n                        for (u = 0; u < urlsLength; u++) {\n                            url = _parseString(urlsData, u * 32);\n                            if (url == null) {\n                                logger.throwError(\"CCIP Read contained corrupt URL string\", logger_1.Logger.errors.CALL_EXCEPTION, {\n                                    name: \"OffchainLookup\",\n                                    signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                                    transaction: transaction,\n                                    data: result\n                                });\n                            }\n                            urls.push(url);\n                        }\n                        calldata = _parseBytes(data, 64);\n                        // Get the callbackSelector (bytes4)\n                        if (!bignumber_1.BigNumber.from((0, bytes_1.hexDataSlice)(data, 100, 128)).isZero()) {\n                            logger.throwError(\"CCIP Read callback selector included junk\", logger_1.Logger.errors.CALL_EXCEPTION, {\n                                name: \"OffchainLookup\",\n                                signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                                transaction: transaction,\n                                data: result\n                            });\n                        }\n                        callbackSelector = (0, bytes_1.hexDataSlice)(data, 96, 100);\n                        extraData = _parseBytes(data, 128);\n                        return [4 /*yield*/, this.ccipReadFetch(transaction, calldata, urls)];\n                    case 3:\n                        ccipResult = _a.sent();\n                        if (ccipResult == null) {\n                            logger.throwError(\"CCIP Read disabled or provided no URLs\", logger_1.Logger.errors.CALL_EXCEPTION, {\n                                name: \"OffchainLookup\",\n                                signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                                transaction: transaction,\n                                data: result\n                            });\n                        }\n                        tx = {\n                            to: txSender,\n                            data: (0, bytes_1.hexConcat)([callbackSelector, encodeBytes([ccipResult, extraData])])\n                        };\n                        return [2 /*return*/, this._call(tx, blockTag, attempt + 1)];\n                    case 4:\n                        error_8 = _a.sent();\n                        if (error_8.code === logger_1.Logger.errors.SERVER_ERROR) {\n                            throw error_8;\n                        }\n                        return [3 /*break*/, 5];\n                    case 5:\n                        try {\n                            return [2 /*return*/, (0, bytes_1.hexlify)(result)];\n                        }\n                        catch (error) {\n                            return [2 /*return*/, logger.throwError(\"bad result from backend\", logger_1.Logger.errors.SERVER_ERROR, {\n                                    method: \"call\",\n                                    params: { transaction: transaction, blockTag: blockTag },\n                                    result: result,\n                                    error: error\n                                })];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype.call = function (transaction, blockTag) {\n        return __awaiter(this, void 0, void 0, function () {\n            var resolved;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getNetwork()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, (0, properties_1.resolveProperties)({\n                                transaction: this._getTransactionRequest(transaction),\n                                blockTag: this._getBlockTag(blockTag),\n                                ccipReadEnabled: Promise.resolve(transaction.ccipReadEnabled)\n                            })];\n                    case 2:\n                        resolved = _a.sent();\n                        return [2 /*return*/, this._call(resolved.transaction, resolved.blockTag, resolved.ccipReadEnabled ? 0 : -1)];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype.estimateGas = function (transaction) {\n        return __awaiter(this, void 0, void 0, function () {\n            var params, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getNetwork()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, (0, properties_1.resolveProperties)({\n                                transaction: this._getTransactionRequest(transaction)\n                            })];\n                    case 2:\n                        params = _a.sent();\n                        return [4 /*yield*/, this.perform(\"estimateGas\", params)];\n                    case 3:\n                        result = _a.sent();\n                        try {\n                            return [2 /*return*/, bignumber_1.BigNumber.from(result)];\n                        }\n                        catch (error) {\n                            return [2 /*return*/, logger.throwError(\"bad result from backend\", logger_1.Logger.errors.SERVER_ERROR, {\n                                    method: \"estimateGas\",\n                                    params: params,\n                                    result: result,\n                                    error: error\n                                })];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype._getAddress = function (addressOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var address;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, addressOrName];\n                    case 1:\n                        addressOrName = _a.sent();\n                        if (typeof (addressOrName) !== \"string\") {\n                            logger.throwArgumentError(\"invalid address or ENS name\", \"name\", addressOrName);\n                        }\n                        return [4 /*yield*/, this.resolveName(addressOrName)];\n                    case 2:\n                        address = _a.sent();\n                        if (address == null) {\n                            logger.throwError(\"ENS name not configured\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                                operation: \"resolveName(\" + JSON.stringify(addressOrName) + \")\"\n                            });\n                        }\n                        return [2 /*return*/, address];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype._getBlock = function (blockHashOrBlockTag, includeTransactions) {\n        return __awaiter(this, void 0, void 0, function () {\n            var blockNumber, params, _a, error_9;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.getNetwork()];\n                    case 1:\n                        _b.sent();\n                        return [4 /*yield*/, blockHashOrBlockTag];\n                    case 2:\n                        blockHashOrBlockTag = _b.sent();\n                        blockNumber = -128;\n                        params = {\n                            includeTransactions: !!includeTransactions\n                        };\n                        if (!(0, bytes_1.isHexString)(blockHashOrBlockTag, 32)) return [3 /*break*/, 3];\n                        params.blockHash = blockHashOrBlockTag;\n                        return [3 /*break*/, 6];\n                    case 3:\n                        _b.trys.push([3, 5, , 6]);\n                        _a = params;\n                        return [4 /*yield*/, this._getBlockTag(blockHashOrBlockTag)];\n                    case 4:\n                        _a.blockTag = _b.sent();\n                        if ((0, bytes_1.isHexString)(params.blockTag)) {\n                            blockNumber = parseInt(params.blockTag.substring(2), 16);\n                        }\n                        return [3 /*break*/, 6];\n                    case 5:\n                        error_9 = _b.sent();\n                        logger.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n                        return [3 /*break*/, 6];\n                    case 6: return [2 /*return*/, (0, web_1.poll)(function () { return __awaiter(_this, void 0, void 0, function () {\n                            var block, blockNumber_1, i, tx, confirmations, blockWithTxs;\n                            var _this = this;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0: return [4 /*yield*/, this.perform(\"getBlock\", params)];\n                                    case 1:\n                                        block = _a.sent();\n                                        // Block was not found\n                                        if (block == null) {\n                                            // For blockhashes, if we didn't say it existed, that blockhash may\n                                            // not exist. If we did see it though, perhaps from a log, we know\n                                            // it exists, and this node is just not caught up yet.\n                                            if (params.blockHash != null) {\n                                                if (this._emitted[\"b:\" + params.blockHash] == null) {\n                                                    return [2 /*return*/, null];\n                                                }\n                                            }\n                                            // For block tags, if we are asking for a future block, we return null\n                                            if (params.blockTag != null) {\n                                                if (blockNumber > this._emitted.block) {\n                                                    return [2 /*return*/, null];\n                                                }\n                                            }\n                                            // Retry on the next block\n                                            return [2 /*return*/, undefined];\n                                        }\n                                        if (!includeTransactions) return [3 /*break*/, 8];\n                                        blockNumber_1 = null;\n                                        i = 0;\n                                        _a.label = 2;\n                                    case 2:\n                                        if (!(i < block.transactions.length)) return [3 /*break*/, 7];\n                                        tx = block.transactions[i];\n                                        if (!(tx.blockNumber == null)) return [3 /*break*/, 3];\n                                        tx.confirmations = 0;\n                                        return [3 /*break*/, 6];\n                                    case 3:\n                                        if (!(tx.confirmations == null)) return [3 /*break*/, 6];\n                                        if (!(blockNumber_1 == null)) return [3 /*break*/, 5];\n                                        return [4 /*yield*/, this._getInternalBlockNumber(100 + 2 * this.pollingInterval)];\n                                    case 4:\n                                        blockNumber_1 = _a.sent();\n                                        _a.label = 5;\n                                    case 5:\n                                        confirmations = (blockNumber_1 - tx.blockNumber) + 1;\n                                        if (confirmations <= 0) {\n                                            confirmations = 1;\n                                        }\n                                        tx.confirmations = confirmations;\n                                        _a.label = 6;\n                                    case 6:\n                                        i++;\n                                        return [3 /*break*/, 2];\n                                    case 7:\n                                        blockWithTxs = this.formatter.blockWithTransactions(block);\n                                        blockWithTxs.transactions = blockWithTxs.transactions.map(function (tx) { return _this._wrapTransaction(tx); });\n                                        return [2 /*return*/, blockWithTxs];\n                                    case 8: return [2 /*return*/, this.formatter.block(block)];\n                                }\n                            });\n                        }); }, { oncePoll: this })];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype.getBlock = function (blockHashOrBlockTag) {\n        return (this._getBlock(blockHashOrBlockTag, false));\n    };\n    BaseProvider.prototype.getBlockWithTransactions = function (blockHashOrBlockTag) {\n        return (this._getBlock(blockHashOrBlockTag, true));\n    };\n    BaseProvider.prototype.getTransaction = function (transactionHash) {\n        return __awaiter(this, void 0, void 0, function () {\n            var params;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getNetwork()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, transactionHash];\n                    case 2:\n                        transactionHash = _a.sent();\n                        params = { transactionHash: this.formatter.hash(transactionHash, true) };\n                        return [2 /*return*/, (0, web_1.poll)(function () { return __awaiter(_this, void 0, void 0, function () {\n                                var result, tx, blockNumber, confirmations;\n                                return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0: return [4 /*yield*/, this.perform(\"getTransaction\", params)];\n                                        case 1:\n                                            result = _a.sent();\n                                            if (result == null) {\n                                                if (this._emitted[\"t:\" + transactionHash] == null) {\n                                                    return [2 /*return*/, null];\n                                                }\n                                                return [2 /*return*/, undefined];\n                                            }\n                                            tx = this.formatter.transactionResponse(result);\n                                            if (!(tx.blockNumber == null)) return [3 /*break*/, 2];\n                                            tx.confirmations = 0;\n                                            return [3 /*break*/, 4];\n                                        case 2:\n                                            if (!(tx.confirmations == null)) return [3 /*break*/, 4];\n                                            return [4 /*yield*/, this._getInternalBlockNumber(100 + 2 * this.pollingInterval)];\n                                        case 3:\n                                            blockNumber = _a.sent();\n                                            confirmations = (blockNumber - tx.blockNumber) + 1;\n                                            if (confirmations <= 0) {\n                                                confirmations = 1;\n                                            }\n                                            tx.confirmations = confirmations;\n                                            _a.label = 4;\n                                        case 4: return [2 /*return*/, this._wrapTransaction(tx)];\n                                    }\n                                });\n                            }); }, { oncePoll: this })];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype.getTransactionReceipt = function (transactionHash) {\n        return __awaiter(this, void 0, void 0, function () {\n            var params;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getNetwork()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, transactionHash];\n                    case 2:\n                        transactionHash = _a.sent();\n                        params = { transactionHash: this.formatter.hash(transactionHash, true) };\n                        return [2 /*return*/, (0, web_1.poll)(function () { return __awaiter(_this, void 0, void 0, function () {\n                                var result, receipt, blockNumber, confirmations;\n                                return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0: return [4 /*yield*/, this.perform(\"getTransactionReceipt\", params)];\n                                        case 1:\n                                            result = _a.sent();\n                                            if (result == null) {\n                                                if (this._emitted[\"t:\" + transactionHash] == null) {\n                                                    return [2 /*return*/, null];\n                                                }\n                                                return [2 /*return*/, undefined];\n                                            }\n                                            // \"geth-etc\" returns receipts before they are ready\n                                            if (result.blockHash == null) {\n                                                return [2 /*return*/, undefined];\n                                            }\n                                            receipt = this.formatter.receipt(result);\n                                            if (!(receipt.blockNumber == null)) return [3 /*break*/, 2];\n                                            receipt.confirmations = 0;\n                                            return [3 /*break*/, 4];\n                                        case 2:\n                                            if (!(receipt.confirmations == null)) return [3 /*break*/, 4];\n                                            return [4 /*yield*/, this._getInternalBlockNumber(100 + 2 * this.pollingInterval)];\n                                        case 3:\n                                            blockNumber = _a.sent();\n                                            confirmations = (blockNumber - receipt.blockNumber) + 1;\n                                            if (confirmations <= 0) {\n                                                confirmations = 1;\n                                            }\n                                            receipt.confirmations = confirmations;\n                                            _a.label = 4;\n                                        case 4: return [2 /*return*/, receipt];\n                                    }\n                                });\n                            }); }, { oncePoll: this })];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype.getLogs = function (filter) {\n        return __awaiter(this, void 0, void 0, function () {\n            var params, logs;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getNetwork()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, (0, properties_1.resolveProperties)({ filter: this._getFilter(filter) })];\n                    case 2:\n                        params = _a.sent();\n                        return [4 /*yield*/, this.perform(\"getLogs\", params)];\n                    case 3:\n                        logs = _a.sent();\n                        logs.forEach(function (log) {\n                            if (log.removed == null) {\n                                log.removed = false;\n                            }\n                        });\n                        return [2 /*return*/, formatter_1.Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs)];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype.getEtherPrice = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getNetwork()];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, this.perform(\"getEtherPrice\", {})];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype._getBlockTag = function (blockTag) {\n        return __awaiter(this, void 0, void 0, function () {\n            var blockNumber;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, blockTag];\n                    case 1:\n                        blockTag = _a.sent();\n                        if (!(typeof (blockTag) === \"number\" && blockTag < 0)) return [3 /*break*/, 3];\n                        if (blockTag % 1) {\n                            logger.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n                        }\n                        return [4 /*yield*/, this._getInternalBlockNumber(100 + 2 * this.pollingInterval)];\n                    case 2:\n                        blockNumber = _a.sent();\n                        blockNumber += blockTag;\n                        if (blockNumber < 0) {\n                            blockNumber = 0;\n                        }\n                        return [2 /*return*/, this.formatter.blockTag(blockNumber)];\n                    case 3: return [2 /*return*/, this.formatter.blockTag(blockTag)];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype.getResolver = function (name) {\n        return __awaiter(this, void 0, void 0, function () {\n            var currentName, addr, resolver, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        currentName = name;\n                        _b.label = 1;\n                    case 1:\n                        if (!true) return [3 /*break*/, 6];\n                        if (currentName === \"\" || currentName === \".\") {\n                            return [2 /*return*/, null];\n                        }\n                        // Optimization since the eth node cannot change and does\n                        // not have a wildcard resolver\n                        if (name !== \"eth\" && currentName === \"eth\") {\n                            return [2 /*return*/, null];\n                        }\n                        return [4 /*yield*/, this._getResolver(currentName, \"getResolver\")];\n                    case 2:\n                        addr = _b.sent();\n                        if (!(addr != null)) return [3 /*break*/, 5];\n                        resolver = new Resolver(this, addr, name);\n                        _a = currentName !== name;\n                        if (!_a) return [3 /*break*/, 4];\n                        return [4 /*yield*/, resolver.supportsWildcard()];\n                    case 3:\n                        _a = !(_b.sent());\n                        _b.label = 4;\n                    case 4:\n                        // Legacy resolver found, using EIP-2544 so it isn't safe to use\n                        if (_a) {\n                            return [2 /*return*/, null];\n                        }\n                        return [2 /*return*/, resolver];\n                    case 5:\n                        // Get the parent node\n                        currentName = currentName.split(\".\").slice(1).join(\".\");\n                        return [3 /*break*/, 1];\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype._getResolver = function (name, operation) {\n        return __awaiter(this, void 0, void 0, function () {\n            var network, addrData, error_10;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (operation == null) {\n                            operation = \"ENS\";\n                        }\n                        return [4 /*yield*/, this.getNetwork()];\n                    case 1:\n                        network = _a.sent();\n                        // No ENS...\n                        if (!network.ensAddress) {\n                            logger.throwError(\"network does not support ENS\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, { operation: operation, network: network.name });\n                        }\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, this.call({\n                                to: network.ensAddress,\n                                data: (\"0x0178b8bf\" + (0, hash_1.namehash)(name).substring(2))\n                            })];\n                    case 3:\n                        addrData = _a.sent();\n                        return [2 /*return*/, this.formatter.callAddress(addrData)];\n                    case 4:\n                        error_10 = _a.sent();\n                        return [3 /*break*/, 5];\n                    case 5: return [2 /*return*/, null];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype.resolveName = function (name) {\n        return __awaiter(this, void 0, void 0, function () {\n            var resolver;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, name];\n                    case 1:\n                        name = _a.sent();\n                        // If it is already an address, nothing to resolve\n                        try {\n                            return [2 /*return*/, Promise.resolve(this.formatter.address(name))];\n                        }\n                        catch (error) {\n                            // If is is a hexstring, the address is bad (See #694)\n                            if ((0, bytes_1.isHexString)(name)) {\n                                throw error;\n                            }\n                        }\n                        if (typeof (name) !== \"string\") {\n                            logger.throwArgumentError(\"invalid ENS name\", \"name\", name);\n                        }\n                        return [4 /*yield*/, this.getResolver(name)];\n                    case 2:\n                        resolver = _a.sent();\n                        if (!resolver) {\n                            return [2 /*return*/, null];\n                        }\n                        return [4 /*yield*/, resolver.getAddress()];\n                    case 3: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype.lookupAddress = function (address) {\n        return __awaiter(this, void 0, void 0, function () {\n            var node, resolverAddr, name, _a, addr;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, address];\n                    case 1:\n                        address = _b.sent();\n                        address = this.formatter.address(address);\n                        node = address.substring(2).toLowerCase() + \".addr.reverse\";\n                        return [4 /*yield*/, this._getResolver(node, \"lookupAddress\")];\n                    case 2:\n                        resolverAddr = _b.sent();\n                        if (resolverAddr == null) {\n                            return [2 /*return*/, null];\n                        }\n                        _a = _parseString;\n                        return [4 /*yield*/, this.call({\n                                to: resolverAddr,\n                                data: (\"0x691f3431\" + (0, hash_1.namehash)(node).substring(2))\n                            })];\n                    case 3:\n                        name = _a.apply(void 0, [_b.sent(), 0]);\n                        return [4 /*yield*/, this.resolveName(name)];\n                    case 4:\n                        addr = _b.sent();\n                        if (addr != address) {\n                            return [2 /*return*/, null];\n                        }\n                        return [2 /*return*/, name];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype.getAvatar = function (nameOrAddress) {\n        return __awaiter(this, void 0, void 0, function () {\n            var resolver, address, node, resolverAddress, avatar_1, error_11, name_1, _a, error_12, avatar;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        resolver = null;\n                        if (!(0, bytes_1.isHexString)(nameOrAddress)) return [3 /*break*/, 10];\n                        address = this.formatter.address(nameOrAddress);\n                        node = address.substring(2).toLowerCase() + \".addr.reverse\";\n                        return [4 /*yield*/, this._getResolver(node, \"getAvatar\")];\n                    case 1:\n                        resolverAddress = _b.sent();\n                        if (!resolverAddress) {\n                            return [2 /*return*/, null];\n                        }\n                        // Try resolving the avatar against the addr.reverse resolver\n                        resolver = new Resolver(this, resolverAddress, node);\n                        _b.label = 2;\n                    case 2:\n                        _b.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, resolver.getAvatar()];\n                    case 3:\n                        avatar_1 = _b.sent();\n                        if (avatar_1) {\n                            return [2 /*return*/, avatar_1.url];\n                        }\n                        return [3 /*break*/, 5];\n                    case 4:\n                        error_11 = _b.sent();\n                        if (error_11.code !== logger_1.Logger.errors.CALL_EXCEPTION) {\n                            throw error_11;\n                        }\n                        return [3 /*break*/, 5];\n                    case 5:\n                        _b.trys.push([5, 8, , 9]);\n                        _a = _parseString;\n                        return [4 /*yield*/, this.call({\n                                to: resolverAddress,\n                                data: (\"0x691f3431\" + (0, hash_1.namehash)(node).substring(2))\n                            })];\n                    case 6:\n                        name_1 = _a.apply(void 0, [_b.sent(), 0]);\n                        return [4 /*yield*/, this.getResolver(name_1)];\n                    case 7:\n                        resolver = _b.sent();\n                        return [3 /*break*/, 9];\n                    case 8:\n                        error_12 = _b.sent();\n                        if (error_12.code !== logger_1.Logger.errors.CALL_EXCEPTION) {\n                            throw error_12;\n                        }\n                        return [2 /*return*/, null];\n                    case 9: return [3 /*break*/, 12];\n                    case 10: return [4 /*yield*/, this.getResolver(nameOrAddress)];\n                    case 11:\n                        // ENS name; forward lookup with wildcard\n                        resolver = _b.sent();\n                        if (!resolver) {\n                            return [2 /*return*/, null];\n                        }\n                        _b.label = 12;\n                    case 12: return [4 /*yield*/, resolver.getAvatar()];\n                    case 13:\n                        avatar = _b.sent();\n                        if (avatar == null) {\n                            return [2 /*return*/, null];\n                        }\n                        return [2 /*return*/, avatar.url];\n                }\n            });\n        });\n    };\n    BaseProvider.prototype.perform = function (method, params) {\n        return logger.throwError(method + \" not implemented\", logger_1.Logger.errors.NOT_IMPLEMENTED, { operation: method });\n    };\n    BaseProvider.prototype._startEvent = function (event) {\n        this.polling = (this._events.filter(function (e) { return e.pollable(); }).length > 0);\n    };\n    BaseProvider.prototype._stopEvent = function (event) {\n        this.polling = (this._events.filter(function (e) { return e.pollable(); }).length > 0);\n    };\n    BaseProvider.prototype._addEventListener = function (eventName, listener, once) {\n        var event = new Event(getEventTag(eventName), listener, once);\n        this._events.push(event);\n        this._startEvent(event);\n        return this;\n    };\n    BaseProvider.prototype.on = function (eventName, listener) {\n        return this._addEventListener(eventName, listener, false);\n    };\n    BaseProvider.prototype.once = function (eventName, listener) {\n        return this._addEventListener(eventName, listener, true);\n    };\n    BaseProvider.prototype.emit = function (eventName) {\n        var _this = this;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var result = false;\n        var stopped = [];\n        var eventTag = getEventTag(eventName);\n        this._events = this._events.filter(function (event) {\n            if (event.tag !== eventTag) {\n                return true;\n            }\n            setTimeout(function () {\n                event.listener.apply(_this, args);\n            }, 0);\n            result = true;\n            if (event.once) {\n                stopped.push(event);\n                return false;\n            }\n            return true;\n        });\n        stopped.forEach(function (event) { _this._stopEvent(event); });\n        return result;\n    };\n    BaseProvider.prototype.listenerCount = function (eventName) {\n        if (!eventName) {\n            return this._events.length;\n        }\n        var eventTag = getEventTag(eventName);\n        return this._events.filter(function (event) {\n            return (event.tag === eventTag);\n        }).length;\n    };\n    BaseProvider.prototype.listeners = function (eventName) {\n        if (eventName == null) {\n            return this._events.map(function (event) { return event.listener; });\n        }\n        var eventTag = getEventTag(eventName);\n        return this._events\n            .filter(function (event) { return (event.tag === eventTag); })\n            .map(function (event) { return event.listener; });\n    };\n    BaseProvider.prototype.off = function (eventName, listener) {\n        var _this = this;\n        if (listener == null) {\n            return this.removeAllListeners(eventName);\n        }\n        var stopped = [];\n        var found = false;\n        var eventTag = getEventTag(eventName);\n        this._events = this._events.filter(function (event) {\n            if (event.tag !== eventTag || event.listener != listener) {\n                return true;\n            }\n            if (found) {\n                return true;\n            }\n            found = true;\n            stopped.push(event);\n            return false;\n        });\n        stopped.forEach(function (event) { _this._stopEvent(event); });\n        return this;\n    };\n    BaseProvider.prototype.removeAllListeners = function (eventName) {\n        var _this = this;\n        var stopped = [];\n        if (eventName == null) {\n            stopped = this._events;\n            this._events = [];\n        }\n        else {\n            var eventTag_1 = getEventTag(eventName);\n            this._events = this._events.filter(function (event) {\n                if (event.tag !== eventTag_1) {\n                    return true;\n                }\n                stopped.push(event);\n                return false;\n            });\n        }\n        stopped.forEach(function (event) { _this._stopEvent(event); });\n        return this;\n    };\n    return BaseProvider;\n}(abstract_provider_1.Provider));\nexports.BaseProvider = BaseProvider;\n//# sourceMappingURL=base-provider.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$ethersproject$constants$lib$index","~$module$node_modules$$ethersproject$networks$lib$index","~$module$node_modules$$ethersproject$strings$lib$index","~$module$node_modules$$ethersproject$sha2$lib$index","~$shadow.js","~$module$node_modules$$ethersproject$bytes$lib$index","~$module$node_modules$$ethersproject$providers$lib$_version","~$module$node_modules$$ethersproject$bignumber$lib$index","~$module$node_modules$$ethersproject$abstract_provider$lib$index","~$module$node_modules$bech32$index","~$module$node_modules$$ethersproject$web$lib$index","~$module$node_modules$$ethersproject$logger$lib$index","~$module$node_modules$$ethersproject$properties$lib$index","~$module$node_modules$$ethersproject$hash$lib$index","~$module$node_modules$$ethersproject$basex$lib$index","~$module$node_modules$$ethersproject$base64$lib$index","~$module$node_modules$$ethersproject$providers$lib$formatter"]],"~:properties",["^5",["_getInternalBlockNumber","respTime","_getFilter","sent","ready","supportsWildcard","lookupAddress","BaseProvider","topics","expectedHash","ccipReadEnabled","_fetch","removed","url","next","_poller","getGasPrice","pollable","transaction","call","_events","getLogs","_startEvent","once","off","networkError","confirmations","_wrapTransaction","_pollingInterval","params","prototype","prefix","errorMessage","getBlockWithTransactions","urls","getAvatar","getCode","accessList","_getResolver","_getTransactionRequest","hash","replacement","label","ops","method","resetEventsBlock","__esModule","getText","getBlock","estimateGas","getTransactionCount","error","_fastBlockNumberPromise","_getAddress","Event","getAddress","getEtherPrice","block","toBlock","_setFastBlockNumber","event","removeAllListeners","detectedNetwork","blockNumber","_stopEvent","receipt","ilk","_getFastBlockNumber","pollingInterval","position","name","errorPassThrough","_inflight","configurable","previousBlockNumber","fromBlock","network","value","getBalance","cancelled","enumerable","disableCcipRead","_call","address","_waitForTransaction","_networkPromise","wait","status","sendTransaction","timeout","emit","operation","getResolver","p2sh","getFormatter","returnedHash","on","signature","content","_getBlockTag","filter","symbol","trys","poll","p2pkh","startBlock","includeTransactions","blockHash","getTransactionReceipt","errorMessages","perform","transactionHash","type","getContentHash","getTransaction","_emitted","signedTransaction","linkage","_fetchBytes","__proto__","getNetwork","from","_fastBlockNumber","_lastBlockNumber","reason","_maxInternalBlockNumber","formatter","waitForTransaction","listenerCount","transactions","getBlockNumber","reqTime","set","nonce","redirects","oncePoll","getStorageAt","ccipReadFetch","sender","to","Resolver","listeners","blockTag","_bootstrapPoll","detectNetwork","_supportsEip2544","data","get","_addEventListener","done","polling","_getBlock","_ready","coinType","_internalBlockNumber","_fastQueryDate","result","constructor","_network","resolveName","_maxFilterBlockRange"]],"~:compiled-at",1695041440915,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$ethersproject$providers$lib$base_provider.js\",\n\"lineCount\":87,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@ethersproject/providers/lib/base-provider.js\"],\n\"sourcesContent\":[\"shadow$provide[335] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nvar __extends = (this && this.__extends) || (function () {\\n    var extendStatics = function (d, b) {\\n        extendStatics = Object.setPrototypeOf ||\\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\\n        return extendStatics(d, b);\\n    };\\n    return function (d, b) {\\n        if (typeof b !== \\\"function\\\" && b !== null)\\n            throw new TypeError(\\\"Class extends value \\\" + String(b) + \\\" is not a constructor or null\\\");\\n        extendStatics(d, b);\\n        function __() { this.constructor = d; }\\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\n    };\\n})();\\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\\n    return new (P || (P = Promise))(function (resolve, reject) {\\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\\n        function rejected(value) { try { step(generator[\\\"throw\\\"](value)); } catch (e) { reject(e); } }\\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\\n    });\\n};\\nvar __generator = (this && this.__generator) || function (thisArg, body) {\\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\\n    return g = { next: verb(0), \\\"throw\\\": verb(1), \\\"return\\\": verb(2) }, typeof Symbol === \\\"function\\\" && (g[Symbol.iterator] = function() { return this; }), g;\\n    function verb(n) { return function (v) { return step([n, v]); }; }\\n    function step(op) {\\n        if (f) throw new TypeError(\\\"Generator is already executing.\\\");\\n        while (_) try {\\n            if (f = 1, y && (t = op[0] & 2 ? y[\\\"return\\\"] : op[0] ? y[\\\"throw\\\"] || ((t = y[\\\"return\\\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\\n            if (y = 0, t) op = [op[0] & 2, t.value];\\n            switch (op[0]) {\\n                case 0: case 1: t = op; break;\\n                case 4: _.label++; return { value: op[1], done: false };\\n                case 5: _.label++; y = op[1]; op = [0]; continue;\\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\\n                default:\\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\\n                    if (t[2]) _.ops.pop();\\n                    _.trys.pop(); continue;\\n            }\\n            op = body.call(thisArg, _);\\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\\n    }\\n};\\nvar __importDefault = (this && this.__importDefault) || function (mod) {\\n    return (mod && mod.__esModule) ? mod : { \\\"default\\\": mod };\\n};\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.BaseProvider = exports.Resolver = exports.Event = void 0;\\nvar abstract_provider_1 = require(\\\"@ethersproject/abstract-provider\\\");\\nvar base64_1 = require(\\\"@ethersproject/base64\\\");\\nvar basex_1 = require(\\\"@ethersproject/basex\\\");\\nvar bignumber_1 = require(\\\"@ethersproject/bignumber\\\");\\nvar bytes_1 = require(\\\"@ethersproject/bytes\\\");\\nvar constants_1 = require(\\\"@ethersproject/constants\\\");\\nvar hash_1 = require(\\\"@ethersproject/hash\\\");\\nvar networks_1 = require(\\\"@ethersproject/networks\\\");\\nvar properties_1 = require(\\\"@ethersproject/properties\\\");\\nvar sha2_1 = require(\\\"@ethersproject/sha2\\\");\\nvar strings_1 = require(\\\"@ethersproject/strings\\\");\\nvar web_1 = require(\\\"@ethersproject/web\\\");\\nvar bech32_1 = __importDefault(require(\\\"bech32\\\"));\\nvar logger_1 = require(\\\"@ethersproject/logger\\\");\\nvar _version_1 = require(\\\"./_version\\\");\\nvar logger = new logger_1.Logger(_version_1.version);\\nvar formatter_1 = require(\\\"./formatter\\\");\\nvar MAX_CCIP_REDIRECTS = 10;\\n//////////////////////////////\\n// Event Serializeing\\nfunction checkTopic(topic) {\\n    if (topic == null) {\\n        return \\\"null\\\";\\n    }\\n    if ((0, bytes_1.hexDataLength)(topic) !== 32) {\\n        logger.throwArgumentError(\\\"invalid topic\\\", \\\"topic\\\", topic);\\n    }\\n    return topic.toLowerCase();\\n}\\nfunction serializeTopics(topics) {\\n    // Remove trailing null AND-topics; they are redundant\\n    topics = topics.slice();\\n    while (topics.length > 0 && topics[topics.length - 1] == null) {\\n        topics.pop();\\n    }\\n    return topics.map(function (topic) {\\n        if (Array.isArray(topic)) {\\n            // Only track unique OR-topics\\n            var unique_1 = {};\\n            topic.forEach(function (topic) {\\n                unique_1[checkTopic(topic)] = true;\\n            });\\n            // The order of OR-topics does not matter\\n            var sorted = Object.keys(unique_1);\\n            sorted.sort();\\n            return sorted.join(\\\"|\\\");\\n        }\\n        else {\\n            return checkTopic(topic);\\n        }\\n    }).join(\\\"&\\\");\\n}\\nfunction deserializeTopics(data) {\\n    if (data === \\\"\\\") {\\n        return [];\\n    }\\n    return data.split(/&/g).map(function (topic) {\\n        if (topic === \\\"\\\") {\\n            return [];\\n        }\\n        var comps = topic.split(\\\"|\\\").map(function (topic) {\\n            return ((topic === \\\"null\\\") ? null : topic);\\n        });\\n        return ((comps.length === 1) ? comps[0] : comps);\\n    });\\n}\\nfunction getEventTag(eventName) {\\n    if (typeof (eventName) === \\\"string\\\") {\\n        eventName = eventName.toLowerCase();\\n        if ((0, bytes_1.hexDataLength)(eventName) === 32) {\\n            return \\\"tx:\\\" + eventName;\\n        }\\n        if (eventName.indexOf(\\\":\\\") === -1) {\\n            return eventName;\\n        }\\n    }\\n    else if (Array.isArray(eventName)) {\\n        return \\\"filter:*:\\\" + serializeTopics(eventName);\\n    }\\n    else if (abstract_provider_1.ForkEvent.isForkEvent(eventName)) {\\n        logger.warn(\\\"not implemented\\\");\\n        throw new Error(\\\"not implemented\\\");\\n    }\\n    else if (eventName && typeof (eventName) === \\\"object\\\") {\\n        return \\\"filter:\\\" + (eventName.address || \\\"*\\\") + \\\":\\\" + serializeTopics(eventName.topics || []);\\n    }\\n    throw new Error(\\\"invalid event - \\\" + eventName);\\n}\\n//////////////////////////////\\n// Helper Object\\nfunction getTime() {\\n    return (new Date()).getTime();\\n}\\nfunction stall(duration) {\\n    return new Promise(function (resolve) {\\n        setTimeout(resolve, duration);\\n    });\\n}\\n//////////////////////////////\\n// Provider Object\\n/**\\n *  EventType\\n *   - \\\"block\\\"\\n *   - \\\"poll\\\"\\n *   - \\\"didPoll\\\"\\n *   - \\\"pending\\\"\\n *   - \\\"error\\\"\\n *   - \\\"network\\\"\\n *   - filter\\n *   - topics array\\n *   - transaction hash\\n */\\nvar PollableEvents = [\\\"block\\\", \\\"network\\\", \\\"pending\\\", \\\"poll\\\"];\\nvar Event = /** @class */ (function () {\\n    function Event(tag, listener, once) {\\n        (0, properties_1.defineReadOnly)(this, \\\"tag\\\", tag);\\n        (0, properties_1.defineReadOnly)(this, \\\"listener\\\", listener);\\n        (0, properties_1.defineReadOnly)(this, \\\"once\\\", once);\\n        this._lastBlockNumber = -2;\\n        this._inflight = false;\\n    }\\n    Object.defineProperty(Event.prototype, \\\"event\\\", {\\n        get: function () {\\n            switch (this.type) {\\n                case \\\"tx\\\":\\n                    return this.hash;\\n                case \\\"filter\\\":\\n                    return this.filter;\\n            }\\n            return this.tag;\\n        },\\n        enumerable: false,\\n        configurable: true\\n    });\\n    Object.defineProperty(Event.prototype, \\\"type\\\", {\\n        get: function () {\\n            return this.tag.split(\\\":\\\")[0];\\n        },\\n        enumerable: false,\\n        configurable: true\\n    });\\n    Object.defineProperty(Event.prototype, \\\"hash\\\", {\\n        get: function () {\\n            var comps = this.tag.split(\\\":\\\");\\n            if (comps[0] !== \\\"tx\\\") {\\n                return null;\\n            }\\n            return comps[1];\\n        },\\n        enumerable: false,\\n        configurable: true\\n    });\\n    Object.defineProperty(Event.prototype, \\\"filter\\\", {\\n        get: function () {\\n            var comps = this.tag.split(\\\":\\\");\\n            if (comps[0] !== \\\"filter\\\") {\\n                return null;\\n            }\\n            var address = comps[1];\\n            var topics = deserializeTopics(comps[2]);\\n            var filter = {};\\n            if (topics.length > 0) {\\n                filter.topics = topics;\\n            }\\n            if (address && address !== \\\"*\\\") {\\n                filter.address = address;\\n            }\\n            return filter;\\n        },\\n        enumerable: false,\\n        configurable: true\\n    });\\n    Event.prototype.pollable = function () {\\n        return (this.tag.indexOf(\\\":\\\") >= 0 || PollableEvents.indexOf(this.tag) >= 0);\\n    };\\n    return Event;\\n}());\\nexports.Event = Event;\\n;\\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\\nvar coinInfos = {\\n    \\\"0\\\": { symbol: \\\"btc\\\", p2pkh: 0x00, p2sh: 0x05, prefix: \\\"bc\\\" },\\n    \\\"2\\\": { symbol: \\\"ltc\\\", p2pkh: 0x30, p2sh: 0x32, prefix: \\\"ltc\\\" },\\n    \\\"3\\\": { symbol: \\\"doge\\\", p2pkh: 0x1e, p2sh: 0x16 },\\n    \\\"60\\\": { symbol: \\\"eth\\\", ilk: \\\"eth\\\" },\\n    \\\"61\\\": { symbol: \\\"etc\\\", ilk: \\\"eth\\\" },\\n    \\\"700\\\": { symbol: \\\"xdai\\\", ilk: \\\"eth\\\" },\\n};\\nfunction bytes32ify(value) {\\n    return (0, bytes_1.hexZeroPad)(bignumber_1.BigNumber.from(value).toHexString(), 32);\\n}\\n// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\\nfunction base58Encode(data) {\\n    return basex_1.Base58.encode((0, bytes_1.concat)([data, (0, bytes_1.hexDataSlice)((0, sha2_1.sha256)((0, sha2_1.sha256)(data)), 0, 4)]));\\n}\\nvar matcherIpfs = new RegExp(\\\"^(ipfs):/\\\\/(.*)$\\\", \\\"i\\\");\\nvar matchers = [\\n    new RegExp(\\\"^(https):/\\\\/(.*)$\\\", \\\"i\\\"),\\n    new RegExp(\\\"^(data):(.*)$\\\", \\\"i\\\"),\\n    matcherIpfs,\\n    new RegExp(\\\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\\\", \\\"i\\\"),\\n];\\nfunction _parseString(result, start) {\\n    try {\\n        return (0, strings_1.toUtf8String)(_parseBytes(result, start));\\n    }\\n    catch (error) { }\\n    return null;\\n}\\nfunction _parseBytes(result, start) {\\n    if (result === \\\"0x\\\") {\\n        return null;\\n    }\\n    var offset = bignumber_1.BigNumber.from((0, bytes_1.hexDataSlice)(result, start, start + 32)).toNumber();\\n    var length = bignumber_1.BigNumber.from((0, bytes_1.hexDataSlice)(result, offset, offset + 32)).toNumber();\\n    return (0, bytes_1.hexDataSlice)(result, offset + 32, offset + 32 + length);\\n}\\n// Trim off the ipfs:// prefix and return the default gateway URL\\nfunction getIpfsLink(link) {\\n    if (link.match(/^ipfs:\\\\/\\\\/ipfs\\\\//i)) {\\n        link = link.substring(12);\\n    }\\n    else if (link.match(/^ipfs:\\\\/\\\\//i)) {\\n        link = link.substring(7);\\n    }\\n    else {\\n        logger.throwArgumentError(\\\"unsupported IPFS format\\\", \\\"link\\\", link);\\n    }\\n    return \\\"https://gateway.ipfs.io/ipfs/\\\" + link;\\n}\\nfunction numPad(value) {\\n    var result = (0, bytes_1.arrayify)(value);\\n    if (result.length > 32) {\\n        throw new Error(\\\"internal; should not happen\\\");\\n    }\\n    var padded = new Uint8Array(32);\\n    padded.set(result, 32 - result.length);\\n    return padded;\\n}\\nfunction bytesPad(value) {\\n    if ((value.length % 32) === 0) {\\n        return value;\\n    }\\n    var result = new Uint8Array(Math.ceil(value.length / 32) * 32);\\n    result.set(value);\\n    return result;\\n}\\n// ABI Encodes a series of (bytes, bytes, ...)\\nfunction encodeBytes(datas) {\\n    var result = [];\\n    var byteCount = 0;\\n    // Add place-holders for pointers as we add items\\n    for (var i = 0; i < datas.length; i++) {\\n        result.push(null);\\n        byteCount += 32;\\n    }\\n    for (var i = 0; i < datas.length; i++) {\\n        var data = (0, bytes_1.arrayify)(datas[i]);\\n        // Update the bytes offset\\n        result[i] = numPad(byteCount);\\n        // The length and padded value of data\\n        result.push(numPad(data.length));\\n        result.push(bytesPad(data));\\n        byteCount += 32 + Math.ceil(data.length / 32) * 32;\\n    }\\n    return (0, bytes_1.hexConcat)(result);\\n}\\nvar Resolver = /** @class */ (function () {\\n    // The resolvedAddress is only for creating a ReverseLookup resolver\\n    function Resolver(provider, address, name, resolvedAddress) {\\n        (0, properties_1.defineReadOnly)(this, \\\"provider\\\", provider);\\n        (0, properties_1.defineReadOnly)(this, \\\"name\\\", name);\\n        (0, properties_1.defineReadOnly)(this, \\\"address\\\", provider.formatter.address(address));\\n        (0, properties_1.defineReadOnly)(this, \\\"_resolvedAddress\\\", resolvedAddress);\\n    }\\n    Resolver.prototype.supportsWildcard = function () {\\n        var _this = this;\\n        if (!this._supportsEip2544) {\\n            // supportsInterface(bytes4 = selector(\\\"resolve(bytes,bytes)\\\"))\\n            this._supportsEip2544 = this.provider.call({\\n                to: this.address,\\n                data: \\\"0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000\\\"\\n            }).then(function (result) {\\n                return bignumber_1.BigNumber.from(result).eq(1);\\n            }).catch(function (error) {\\n                if (error.code === logger_1.Logger.errors.CALL_EXCEPTION) {\\n                    return false;\\n                }\\n                // Rethrow the error: link is down, etc. Let future attempts retry.\\n                _this._supportsEip2544 = null;\\n                throw error;\\n            });\\n        }\\n        return this._supportsEip2544;\\n    };\\n    Resolver.prototype._fetch = function (selector, parameters) {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var tx, parseBytes, result, error_1;\\n            return __generator(this, function (_a) {\\n                switch (_a.label) {\\n                    case 0:\\n                        tx = {\\n                            to: this.address,\\n                            ccipReadEnabled: true,\\n                            data: (0, bytes_1.hexConcat)([selector, (0, hash_1.namehash)(this.name), (parameters || \\\"0x\\\")])\\n                        };\\n                        parseBytes = false;\\n                        return [4 /*yield*/, this.supportsWildcard()];\\n                    case 1:\\n                        if (_a.sent()) {\\n                            parseBytes = true;\\n                            // selector(\\\"resolve(bytes,bytes)\\\")\\n                            tx.data = (0, bytes_1.hexConcat)([\\\"0x9061b923\\\", encodeBytes([(0, hash_1.dnsEncode)(this.name), tx.data])]);\\n                        }\\n                        _a.label = 2;\\n                    case 2:\\n                        _a.trys.push([2, 4, , 5]);\\n                        return [4 /*yield*/, this.provider.call(tx)];\\n                    case 3:\\n                        result = _a.sent();\\n                        if (((0, bytes_1.arrayify)(result).length % 32) === 4) {\\n                            logger.throwError(\\\"resolver threw error\\\", logger_1.Logger.errors.CALL_EXCEPTION, {\\n                                transaction: tx, data: result\\n                            });\\n                        }\\n                        if (parseBytes) {\\n                            result = _parseBytes(result, 0);\\n                        }\\n                        return [2 /*return*/, result];\\n                    case 4:\\n                        error_1 = _a.sent();\\n                        if (error_1.code === logger_1.Logger.errors.CALL_EXCEPTION) {\\n                            return [2 /*return*/, null];\\n                        }\\n                        throw error_1;\\n                    case 5: return [2 /*return*/];\\n                }\\n            });\\n        });\\n    };\\n    Resolver.prototype._fetchBytes = function (selector, parameters) {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var result;\\n            return __generator(this, function (_a) {\\n                switch (_a.label) {\\n                    case 0: return [4 /*yield*/, this._fetch(selector, parameters)];\\n                    case 1:\\n                        result = _a.sent();\\n                        if (result != null) {\\n                            return [2 /*return*/, _parseBytes(result, 0)];\\n                        }\\n                        return [2 /*return*/, null];\\n                }\\n            });\\n        });\\n    };\\n    Resolver.prototype._getAddress = function (coinType, hexBytes) {\\n        var coinInfo = coinInfos[String(coinType)];\\n        if (coinInfo == null) {\\n            logger.throwError(\\\"unsupported coin type: \\\" + coinType, logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\\n                operation: \\\"getAddress(\\\" + coinType + \\\")\\\"\\n            });\\n        }\\n        if (coinInfo.ilk === \\\"eth\\\") {\\n            return this.provider.formatter.address(hexBytes);\\n        }\\n        var bytes = (0, bytes_1.arrayify)(hexBytes);\\n        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\\n        if (coinInfo.p2pkh != null) {\\n            var p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\\n            if (p2pkh) {\\n                var length_1 = parseInt(p2pkh[1], 16);\\n                if (p2pkh[2].length === length_1 * 2 && length_1 >= 1 && length_1 <= 75) {\\n                    return base58Encode((0, bytes_1.concat)([[coinInfo.p2pkh], (\\\"0x\\\" + p2pkh[2])]));\\n                }\\n            }\\n        }\\n        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\\n        if (coinInfo.p2sh != null) {\\n            var p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\\n            if (p2sh) {\\n                var length_2 = parseInt(p2sh[1], 16);\\n                if (p2sh[2].length === length_2 * 2 && length_2 >= 1 && length_2 <= 75) {\\n                    return base58Encode((0, bytes_1.concat)([[coinInfo.p2sh], (\\\"0x\\\" + p2sh[2])]));\\n                }\\n            }\\n        }\\n        // Bech32\\n        if (coinInfo.prefix != null) {\\n            var length_3 = bytes[1];\\n            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\\n            var version_1 = bytes[0];\\n            if (version_1 === 0x00) {\\n                if (length_3 !== 20 && length_3 !== 32) {\\n                    version_1 = -1;\\n                }\\n            }\\n            else {\\n                version_1 = -1;\\n            }\\n            if (version_1 >= 0 && bytes.length === 2 + length_3 && length_3 >= 1 && length_3 <= 75) {\\n                var words = bech32_1.default.toWords(bytes.slice(2));\\n                words.unshift(version_1);\\n                return bech32_1.default.encode(coinInfo.prefix, words);\\n            }\\n        }\\n        return null;\\n    };\\n    Resolver.prototype.getAddress = function (coinType) {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var result, error_2, hexBytes, address;\\n            return __generator(this, function (_a) {\\n                switch (_a.label) {\\n                    case 0:\\n                        if (coinType == null) {\\n                            coinType = 60;\\n                        }\\n                        if (!(coinType === 60)) return [3 /*break*/, 4];\\n                        _a.label = 1;\\n                    case 1:\\n                        _a.trys.push([1, 3, , 4]);\\n                        return [4 /*yield*/, this._fetch(\\\"0x3b3b57de\\\")];\\n                    case 2:\\n                        result = _a.sent();\\n                        // No address\\n                        if (result === \\\"0x\\\" || result === constants_1.HashZero) {\\n                            return [2 /*return*/, null];\\n                        }\\n                        return [2 /*return*/, this.provider.formatter.callAddress(result)];\\n                    case 3:\\n                        error_2 = _a.sent();\\n                        if (error_2.code === logger_1.Logger.errors.CALL_EXCEPTION) {\\n                            return [2 /*return*/, null];\\n                        }\\n                        throw error_2;\\n                    case 4: return [4 /*yield*/, this._fetchBytes(\\\"0xf1cb7e06\\\", bytes32ify(coinType))];\\n                    case 5:\\n                        hexBytes = _a.sent();\\n                        // No address\\n                        if (hexBytes == null || hexBytes === \\\"0x\\\") {\\n                            return [2 /*return*/, null];\\n                        }\\n                        address = this._getAddress(coinType, hexBytes);\\n                        if (address == null) {\\n                            logger.throwError(\\\"invalid or unsupported coin data\\\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\\n                                operation: \\\"getAddress(\\\" + coinType + \\\")\\\",\\n                                coinType: coinType,\\n                                data: hexBytes\\n                            });\\n                        }\\n                        return [2 /*return*/, address];\\n                }\\n            });\\n        });\\n    };\\n    Resolver.prototype.getAvatar = function () {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var linkage, avatar, i, match, scheme, _a, selector, owner, _b, comps, addr, tokenId, tokenOwner, _c, _d, balance, _e, _f, tx, metadataUrl, _g, metadata, imageUrl, ipfs, error_3;\\n            return __generator(this, function (_h) {\\n                switch (_h.label) {\\n                    case 0:\\n                        linkage = [{ type: \\\"name\\\", content: this.name }];\\n                        _h.label = 1;\\n                    case 1:\\n                        _h.trys.push([1, 19, , 20]);\\n                        return [4 /*yield*/, this.getText(\\\"avatar\\\")];\\n                    case 2:\\n                        avatar = _h.sent();\\n                        if (avatar == null) {\\n                            return [2 /*return*/, null];\\n                        }\\n                        i = 0;\\n                        _h.label = 3;\\n                    case 3:\\n                        if (!(i < matchers.length)) return [3 /*break*/, 18];\\n                        match = avatar.match(matchers[i]);\\n                        if (match == null) {\\n                            return [3 /*break*/, 17];\\n                        }\\n                        scheme = match[1].toLowerCase();\\n                        _a = scheme;\\n                        switch (_a) {\\n                            case \\\"https\\\": return [3 /*break*/, 4];\\n                            case \\\"data\\\": return [3 /*break*/, 5];\\n                            case \\\"ipfs\\\": return [3 /*break*/, 6];\\n                            case \\\"erc721\\\": return [3 /*break*/, 7];\\n                            case \\\"erc1155\\\": return [3 /*break*/, 7];\\n                        }\\n                        return [3 /*break*/, 17];\\n                    case 4:\\n                        linkage.push({ type: \\\"url\\\", content: avatar });\\n                        return [2 /*return*/, { linkage: linkage, url: avatar }];\\n                    case 5:\\n                        linkage.push({ type: \\\"data\\\", content: avatar });\\n                        return [2 /*return*/, { linkage: linkage, url: avatar }];\\n                    case 6:\\n                        linkage.push({ type: \\\"ipfs\\\", content: avatar });\\n                        return [2 /*return*/, { linkage: linkage, url: getIpfsLink(avatar) }];\\n                    case 7:\\n                        selector = (scheme === \\\"erc721\\\") ? \\\"0xc87b56dd\\\" : \\\"0x0e89341c\\\";\\n                        linkage.push({ type: scheme, content: avatar });\\n                        _b = this._resolvedAddress;\\n                        if (_b) return [3 /*break*/, 9];\\n                        return [4 /*yield*/, this.getAddress()];\\n                    case 8:\\n                        _b = (_h.sent());\\n                        _h.label = 9;\\n                    case 9:\\n                        owner = (_b);\\n                        comps = (match[2] || \\\"\\\").split(\\\"/\\\");\\n                        if (comps.length !== 2) {\\n                            return [2 /*return*/, null];\\n                        }\\n                        return [4 /*yield*/, this.provider.formatter.address(comps[0])];\\n                    case 10:\\n                        addr = _h.sent();\\n                        tokenId = (0, bytes_1.hexZeroPad)(bignumber_1.BigNumber.from(comps[1]).toHexString(), 32);\\n                        if (!(scheme === \\\"erc721\\\")) return [3 /*break*/, 12];\\n                        _d = (_c = this.provider.formatter).callAddress;\\n                        return [4 /*yield*/, this.provider.call({\\n                                to: addr, data: (0, bytes_1.hexConcat)([\\\"0x6352211e\\\", tokenId])\\n                            })];\\n                    case 11:\\n                        tokenOwner = _d.apply(_c, [_h.sent()]);\\n                        if (owner !== tokenOwner) {\\n                            return [2 /*return*/, null];\\n                        }\\n                        linkage.push({ type: \\\"owner\\\", content: tokenOwner });\\n                        return [3 /*break*/, 14];\\n                    case 12:\\n                        if (!(scheme === \\\"erc1155\\\")) return [3 /*break*/, 14];\\n                        _f = (_e = bignumber_1.BigNumber).from;\\n                        return [4 /*yield*/, this.provider.call({\\n                                to: addr, data: (0, bytes_1.hexConcat)([\\\"0x00fdd58e\\\", (0, bytes_1.hexZeroPad)(owner, 32), tokenId])\\n                            })];\\n                    case 13:\\n                        balance = _f.apply(_e, [_h.sent()]);\\n                        if (balance.isZero()) {\\n                            return [2 /*return*/, null];\\n                        }\\n                        linkage.push({ type: \\\"balance\\\", content: balance.toString() });\\n                        _h.label = 14;\\n                    case 14:\\n                        tx = {\\n                            to: this.provider.formatter.address(comps[0]),\\n                            data: (0, bytes_1.hexConcat)([selector, tokenId])\\n                        };\\n                        _g = _parseString;\\n                        return [4 /*yield*/, this.provider.call(tx)];\\n                    case 15:\\n                        metadataUrl = _g.apply(void 0, [_h.sent(), 0]);\\n                        if (metadataUrl == null) {\\n                            return [2 /*return*/, null];\\n                        }\\n                        linkage.push({ type: \\\"metadata-url-base\\\", content: metadataUrl });\\n                        // ERC-1155 allows a generic {id} in the URL\\n                        if (scheme === \\\"erc1155\\\") {\\n                            metadataUrl = metadataUrl.replace(\\\"{id}\\\", tokenId.substring(2));\\n                            linkage.push({ type: \\\"metadata-url-expanded\\\", content: metadataUrl });\\n                        }\\n                        // Transform IPFS metadata links\\n                        if (metadataUrl.match(/^ipfs:/i)) {\\n                            metadataUrl = getIpfsLink(metadataUrl);\\n                        }\\n                        linkage.push({ type: \\\"metadata-url\\\", content: metadataUrl });\\n                        return [4 /*yield*/, (0, web_1.fetchJson)(metadataUrl)];\\n                    case 16:\\n                        metadata = _h.sent();\\n                        if (!metadata) {\\n                            return [2 /*return*/, null];\\n                        }\\n                        linkage.push({ type: \\\"metadata\\\", content: JSON.stringify(metadata) });\\n                        imageUrl = metadata.image;\\n                        if (typeof (imageUrl) !== \\\"string\\\") {\\n                            return [2 /*return*/, null];\\n                        }\\n                        if (imageUrl.match(/^(https:\\\\/\\\\/|data:)/i)) {\\n                            // Allow\\n                        }\\n                        else {\\n                            ipfs = imageUrl.match(matcherIpfs);\\n                            if (ipfs == null) {\\n                                return [2 /*return*/, null];\\n                            }\\n                            linkage.push({ type: \\\"url-ipfs\\\", content: imageUrl });\\n                            imageUrl = getIpfsLink(imageUrl);\\n                        }\\n                        linkage.push({ type: \\\"url\\\", content: imageUrl });\\n                        return [2 /*return*/, { linkage: linkage, url: imageUrl }];\\n                    case 17:\\n                        i++;\\n                        return [3 /*break*/, 3];\\n                    case 18: return [3 /*break*/, 20];\\n                    case 19:\\n                        error_3 = _h.sent();\\n                        return [3 /*break*/, 20];\\n                    case 20: return [2 /*return*/, null];\\n                }\\n            });\\n        });\\n    };\\n    Resolver.prototype.getContentHash = function () {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var hexBytes, ipfs, length_4, ipns, length_5, swarm, skynet, urlSafe_1, hash;\\n            return __generator(this, function (_a) {\\n                switch (_a.label) {\\n                    case 0: return [4 /*yield*/, this._fetchBytes(\\\"0xbc1c58d1\\\")];\\n                    case 1:\\n                        hexBytes = _a.sent();\\n                        // No contenthash\\n                        if (hexBytes == null || hexBytes === \\\"0x\\\") {\\n                            return [2 /*return*/, null];\\n                        }\\n                        ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\\n                        if (ipfs) {\\n                            length_4 = parseInt(ipfs[3], 16);\\n                            if (ipfs[4].length === length_4 * 2) {\\n                                return [2 /*return*/, \\\"ipfs:/\\\\/\\\" + basex_1.Base58.encode(\\\"0x\\\" + ipfs[1])];\\n                            }\\n                        }\\n                        ipns = hexBytes.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\\n                        if (ipns) {\\n                            length_5 = parseInt(ipns[3], 16);\\n                            if (ipns[4].length === length_5 * 2) {\\n                                return [2 /*return*/, \\\"ipns:/\\\\/\\\" + basex_1.Base58.encode(\\\"0x\\\" + ipns[1])];\\n                            }\\n                        }\\n                        swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/);\\n                        if (swarm) {\\n                            if (swarm[1].length === (32 * 2)) {\\n                                return [2 /*return*/, \\\"bzz:/\\\\/\\\" + swarm[1]];\\n                            }\\n                        }\\n                        skynet = hexBytes.match(/^0x90b2c605([0-9a-f]*)$/);\\n                        if (skynet) {\\n                            if (skynet[1].length === (34 * 2)) {\\n                                urlSafe_1 = { \\\"=\\\": \\\"\\\", \\\"+\\\": \\\"-\\\", \\\"/\\\": \\\"_\\\" };\\n                                hash = (0, base64_1.encode)(\\\"0x\\\" + skynet[1]).replace(/[=+\\\\/]/g, function (a) { return (urlSafe_1[a]); });\\n                                return [2 /*return*/, \\\"sia:/\\\\/\\\" + hash];\\n                            }\\n                        }\\n                        return [2 /*return*/, logger.throwError(\\\"invalid or unsupported content hash data\\\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\\n                                operation: \\\"getContentHash()\\\",\\n                                data: hexBytes\\n                            })];\\n                }\\n            });\\n        });\\n    };\\n    Resolver.prototype.getText = function (key) {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var keyBytes, hexBytes;\\n            return __generator(this, function (_a) {\\n                switch (_a.label) {\\n                    case 0:\\n                        keyBytes = (0, strings_1.toUtf8Bytes)(key);\\n                        // The nodehash consumes the first slot, so the string pointer targets\\n                        // offset 64, with the length at offset 64 and data starting at offset 96\\n                        keyBytes = (0, bytes_1.concat)([bytes32ify(64), bytes32ify(keyBytes.length), keyBytes]);\\n                        // Pad to word-size (32 bytes)\\n                        if ((keyBytes.length % 32) !== 0) {\\n                            keyBytes = (0, bytes_1.concat)([keyBytes, (0, bytes_1.hexZeroPad)(\\\"0x\\\", 32 - (key.length % 32))]);\\n                        }\\n                        return [4 /*yield*/, this._fetchBytes(\\\"0x59d1d43c\\\", (0, bytes_1.hexlify)(keyBytes))];\\n                    case 1:\\n                        hexBytes = _a.sent();\\n                        if (hexBytes == null || hexBytes === \\\"0x\\\") {\\n                            return [2 /*return*/, null];\\n                        }\\n                        return [2 /*return*/, (0, strings_1.toUtf8String)(hexBytes)];\\n                }\\n            });\\n        });\\n    };\\n    return Resolver;\\n}());\\nexports.Resolver = Resolver;\\nvar defaultFormatter = null;\\nvar nextPollId = 1;\\nvar BaseProvider = /** @class */ (function (_super) {\\n    __extends(BaseProvider, _super);\\n    /**\\n     *  ready\\n     *\\n     *  A Promise<Network> that resolves only once the provider is ready.\\n     *\\n     *  Sub-classes that call the super with a network without a chainId\\n     *  MUST set this. Standard named networks have a known chainId.\\n     *\\n     */\\n    function BaseProvider(network) {\\n        var _newTarget = this.constructor;\\n        var _this = _super.call(this) || this;\\n        // Events being listened to\\n        _this._events = [];\\n        _this._emitted = { block: -2 };\\n        _this.disableCcipRead = false;\\n        _this.formatter = _newTarget.getFormatter();\\n        // If network is any, this Provider allows the underlying\\n        // network to change dynamically, and we auto-detect the\\n        // current network\\n        (0, properties_1.defineReadOnly)(_this, \\\"anyNetwork\\\", (network === \\\"any\\\"));\\n        if (_this.anyNetwork) {\\n            network = _this.detectNetwork();\\n        }\\n        if (network instanceof Promise) {\\n            _this._networkPromise = network;\\n            // Squash any \\\"unhandled promise\\\" errors; that do not need to be handled\\n            network.catch(function (error) { });\\n            // Trigger initial network setting (async)\\n            _this._ready().catch(function (error) { });\\n        }\\n        else {\\n            var knownNetwork = (0, properties_1.getStatic)(_newTarget, \\\"getNetwork\\\")(network);\\n            if (knownNetwork) {\\n                (0, properties_1.defineReadOnly)(_this, \\\"_network\\\", knownNetwork);\\n                _this.emit(\\\"network\\\", knownNetwork, null);\\n            }\\n            else {\\n                logger.throwArgumentError(\\\"invalid network\\\", \\\"network\\\", network);\\n            }\\n        }\\n        _this._maxInternalBlockNumber = -1024;\\n        _this._lastBlockNumber = -2;\\n        _this._maxFilterBlockRange = 10;\\n        _this._pollingInterval = 4000;\\n        _this._fastQueryDate = 0;\\n        return _this;\\n    }\\n    BaseProvider.prototype._ready = function () {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var network, error_4;\\n            return __generator(this, function (_a) {\\n                switch (_a.label) {\\n                    case 0:\\n                        if (!(this._network == null)) return [3 /*break*/, 7];\\n                        network = null;\\n                        if (!this._networkPromise) return [3 /*break*/, 4];\\n                        _a.label = 1;\\n                    case 1:\\n                        _a.trys.push([1, 3, , 4]);\\n                        return [4 /*yield*/, this._networkPromise];\\n                    case 2:\\n                        network = _a.sent();\\n                        return [3 /*break*/, 4];\\n                    case 3:\\n                        error_4 = _a.sent();\\n                        return [3 /*break*/, 4];\\n                    case 4:\\n                        if (!(network == null)) return [3 /*break*/, 6];\\n                        return [4 /*yield*/, this.detectNetwork()];\\n                    case 5:\\n                        network = _a.sent();\\n                        _a.label = 6;\\n                    case 6:\\n                        // This should never happen; every Provider sub-class should have\\n                        // suggested a network by here (or have thrown).\\n                        if (!network) {\\n                            logger.throwError(\\\"no network detected\\\", logger_1.Logger.errors.UNKNOWN_ERROR, {});\\n                        }\\n                        // Possible this call stacked so do not call defineReadOnly again\\n                        if (this._network == null) {\\n                            if (this.anyNetwork) {\\n                                this._network = network;\\n                            }\\n                            else {\\n                                (0, properties_1.defineReadOnly)(this, \\\"_network\\\", network);\\n                            }\\n                            this.emit(\\\"network\\\", network, null);\\n                        }\\n                        _a.label = 7;\\n                    case 7: return [2 /*return*/, this._network];\\n                }\\n            });\\n        });\\n    };\\n    Object.defineProperty(BaseProvider.prototype, \\\"ready\\\", {\\n        // This will always return the most recently established network.\\n        // For \\\"any\\\", this can change (a \\\"network\\\" event is emitted before\\n        // any change is reflected); otherwise this cannot change\\n        get: function () {\\n            var _this = this;\\n            return (0, web_1.poll)(function () {\\n                return _this._ready().then(function (network) {\\n                    return network;\\n                }, function (error) {\\n                    // If the network isn't running yet, we will wait\\n                    if (error.code === logger_1.Logger.errors.NETWORK_ERROR && error.event === \\\"noNetwork\\\") {\\n                        return undefined;\\n                    }\\n                    throw error;\\n                });\\n            });\\n        },\\n        enumerable: false,\\n        configurable: true\\n    });\\n    // @TODO: Remove this and just create a singleton formatter\\n    BaseProvider.getFormatter = function () {\\n        if (defaultFormatter == null) {\\n            defaultFormatter = new formatter_1.Formatter();\\n        }\\n        return defaultFormatter;\\n    };\\n    // @TODO: Remove this and just use getNetwork\\n    BaseProvider.getNetwork = function (network) {\\n        return (0, networks_1.getNetwork)((network == null) ? \\\"homestead\\\" : network);\\n    };\\n    BaseProvider.prototype.ccipReadFetch = function (tx, calldata, urls) {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var sender, data, errorMessages, i, url, href, json, result, errorMessage;\\n            return __generator(this, function (_a) {\\n                switch (_a.label) {\\n                    case 0:\\n                        if (this.disableCcipRead || urls.length === 0) {\\n                            return [2 /*return*/, null];\\n                        }\\n                        sender = tx.to.toLowerCase();\\n                        data = calldata.toLowerCase();\\n                        errorMessages = [];\\n                        i = 0;\\n                        _a.label = 1;\\n                    case 1:\\n                        if (!(i < urls.length)) return [3 /*break*/, 4];\\n                        url = urls[i];\\n                        href = url.replace(\\\"{sender}\\\", sender).replace(\\\"{data}\\\", data);\\n                        json = (url.indexOf(\\\"{data}\\\") >= 0) ? null : JSON.stringify({ data: data, sender: sender });\\n                        return [4 /*yield*/, (0, web_1.fetchJson)({ url: href, errorPassThrough: true }, json, function (value, response) {\\n                                value.status = response.statusCode;\\n                                return value;\\n                            })];\\n                    case 2:\\n                        result = _a.sent();\\n                        if (result.data) {\\n                            return [2 /*return*/, result.data];\\n                        }\\n                        errorMessage = (result.message || \\\"unknown error\\\");\\n                        // 4xx indicates the result is not present; stop\\n                        if (result.status >= 400 && result.status < 500) {\\n                            return [2 /*return*/, logger.throwError(\\\"response not found during CCIP fetch: \\\" + errorMessage, logger_1.Logger.errors.SERVER_ERROR, { url: url, errorMessage: errorMessage })];\\n                        }\\n                        // 5xx indicates server issue; try the next url\\n                        errorMessages.push(errorMessage);\\n                        _a.label = 3;\\n                    case 3:\\n                        i++;\\n                        return [3 /*break*/, 1];\\n                    case 4: return [2 /*return*/, logger.throwError(\\\"error encountered during CCIP fetch: \\\" + errorMessages.map(function (m) { return JSON.stringify(m); }).join(\\\", \\\"), logger_1.Logger.errors.SERVER_ERROR, {\\n                            urls: urls,\\n                            errorMessages: errorMessages\\n                        })];\\n                }\\n            });\\n        });\\n    };\\n    // Fetches the blockNumber, but will reuse any result that is less\\n    // than maxAge old or has been requested since the last request\\n    BaseProvider.prototype._getInternalBlockNumber = function (maxAge) {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var internalBlockNumber, result, error_5, reqTime, checkInternalBlockNumber;\\n            var _this = this;\\n            return __generator(this, function (_a) {\\n                switch (_a.label) {\\n                    case 0: return [4 /*yield*/, this._ready()];\\n                    case 1:\\n                        _a.sent();\\n                        if (!(maxAge > 0)) return [3 /*break*/, 7];\\n                        _a.label = 2;\\n                    case 2:\\n                        if (!this._internalBlockNumber) return [3 /*break*/, 7];\\n                        internalBlockNumber = this._internalBlockNumber;\\n                        _a.label = 3;\\n                    case 3:\\n                        _a.trys.push([3, 5, , 6]);\\n                        return [4 /*yield*/, internalBlockNumber];\\n                    case 4:\\n                        result = _a.sent();\\n                        if ((getTime() - result.respTime) <= maxAge) {\\n                            return [2 /*return*/, result.blockNumber];\\n                        }\\n                        // Too old; fetch a new value\\n                        return [3 /*break*/, 7];\\n                    case 5:\\n                        error_5 = _a.sent();\\n                        // The fetch rejected; if we are the first to get the\\n                        // rejection, drop through so we replace it with a new\\n                        // fetch; all others blocked will then get that fetch\\n                        // which won't match the one they \\\"remembered\\\" and loop\\n                        if (this._internalBlockNumber === internalBlockNumber) {\\n                            return [3 /*break*/, 7];\\n                        }\\n                        return [3 /*break*/, 6];\\n                    case 6: return [3 /*break*/, 2];\\n                    case 7:\\n                        reqTime = getTime();\\n                        checkInternalBlockNumber = (0, properties_1.resolveProperties)({\\n                            blockNumber: this.perform(\\\"getBlockNumber\\\", {}),\\n                            networkError: this.getNetwork().then(function (network) { return (null); }, function (error) { return (error); })\\n                        }).then(function (_a) {\\n                            var blockNumber = _a.blockNumber, networkError = _a.networkError;\\n                            if (networkError) {\\n                                // Unremember this bad internal block number\\n                                if (_this._internalBlockNumber === checkInternalBlockNumber) {\\n                                    _this._internalBlockNumber = null;\\n                                }\\n                                throw networkError;\\n                            }\\n                            var respTime = getTime();\\n                            blockNumber = bignumber_1.BigNumber.from(blockNumber).toNumber();\\n                            if (blockNumber < _this._maxInternalBlockNumber) {\\n                                blockNumber = _this._maxInternalBlockNumber;\\n                            }\\n                            _this._maxInternalBlockNumber = blockNumber;\\n                            _this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\\n                            return { blockNumber: blockNumber, reqTime: reqTime, respTime: respTime };\\n                        });\\n                        this._internalBlockNumber = checkInternalBlockNumber;\\n                        // Swallow unhandled exceptions; if needed they are handled else where\\n                        checkInternalBlockNumber.catch(function (error) {\\n                            // Don't null the dead (rejected) fetch, if it has already been updated\\n                            if (_this._internalBlockNumber === checkInternalBlockNumber) {\\n                                _this._internalBlockNumber = null;\\n                            }\\n                        });\\n                        return [4 /*yield*/, checkInternalBlockNumber];\\n                    case 8: return [2 /*return*/, (_a.sent()).blockNumber];\\n                }\\n            });\\n        });\\n    };\\n    BaseProvider.prototype.poll = function () {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var pollId, runners, blockNumber, error_6, i;\\n            var _this = this;\\n            return __generator(this, function (_a) {\\n                switch (_a.label) {\\n                    case 0:\\n                        pollId = nextPollId++;\\n                        runners = [];\\n                        blockNumber = null;\\n                        _a.label = 1;\\n                    case 1:\\n                        _a.trys.push([1, 3, , 4]);\\n                        return [4 /*yield*/, this._getInternalBlockNumber(100 + this.pollingInterval / 2)];\\n                    case 2:\\n                        blockNumber = _a.sent();\\n                        return [3 /*break*/, 4];\\n                    case 3:\\n                        error_6 = _a.sent();\\n                        this.emit(\\\"error\\\", error_6);\\n                        return [2 /*return*/];\\n                    case 4:\\n                        this._setFastBlockNumber(blockNumber);\\n                        // Emit a poll event after we have the latest (fast) block number\\n                        this.emit(\\\"poll\\\", pollId, blockNumber);\\n                        // If the block has not changed, meh.\\n                        if (blockNumber === this._lastBlockNumber) {\\n                            this.emit(\\\"didPoll\\\", pollId);\\n                            return [2 /*return*/];\\n                        }\\n                        // First polling cycle, trigger a \\\"block\\\" events\\n                        if (this._emitted.block === -2) {\\n                            this._emitted.block = blockNumber - 1;\\n                        }\\n                        if (Math.abs((this._emitted.block) - blockNumber) > 1000) {\\n                            logger.warn(\\\"network block skew detected; skipping block events (emitted=\\\" + this._emitted.block + \\\" blockNumber\\\" + blockNumber + \\\")\\\");\\n                            this.emit(\\\"error\\\", logger.makeError(\\\"network block skew detected\\\", logger_1.Logger.errors.NETWORK_ERROR, {\\n                                blockNumber: blockNumber,\\n                                event: \\\"blockSkew\\\",\\n                                previousBlockNumber: this._emitted.block\\n                            }));\\n                            this.emit(\\\"block\\\", blockNumber);\\n                        }\\n                        else {\\n                            // Notify all listener for each block that has passed\\n                            for (i = this._emitted.block + 1; i <= blockNumber; i++) {\\n                                this.emit(\\\"block\\\", i);\\n                            }\\n                        }\\n                        // The emitted block was updated, check for obsolete events\\n                        if (this._emitted.block !== blockNumber) {\\n                            this._emitted.block = blockNumber;\\n                            Object.keys(this._emitted).forEach(function (key) {\\n                                // The block event does not expire\\n                                if (key === \\\"block\\\") {\\n                                    return;\\n                                }\\n                                // The block we were at when we emitted this event\\n                                var eventBlockNumber = _this._emitted[key];\\n                                // We cannot garbage collect pending transactions or blocks here\\n                                // They should be garbage collected by the Provider when setting\\n                                // \\\"pending\\\" events\\n                                if (eventBlockNumber === \\\"pending\\\") {\\n                                    return;\\n                                }\\n                                // Evict any transaction hashes or block hashes over 12 blocks\\n                                // old, since they should not return null anyways\\n                                if (blockNumber - eventBlockNumber > 12) {\\n                                    delete _this._emitted[key];\\n                                }\\n                            });\\n                        }\\n                        // First polling cycle\\n                        if (this._lastBlockNumber === -2) {\\n                            this._lastBlockNumber = blockNumber - 1;\\n                        }\\n                        // Find all transaction hashes we are waiting on\\n                        this._events.forEach(function (event) {\\n                            switch (event.type) {\\n                                case \\\"tx\\\": {\\n                                    var hash_2 = event.hash;\\n                                    var runner = _this.getTransactionReceipt(hash_2).then(function (receipt) {\\n                                        if (!receipt || receipt.blockNumber == null) {\\n                                            return null;\\n                                        }\\n                                        _this._emitted[\\\"t:\\\" + hash_2] = receipt.blockNumber;\\n                                        _this.emit(hash_2, receipt);\\n                                        return null;\\n                                    }).catch(function (error) { _this.emit(\\\"error\\\", error); });\\n                                    runners.push(runner);\\n                                    break;\\n                                }\\n                                case \\\"filter\\\": {\\n                                    // We only allow a single getLogs to be in-flight at a time\\n                                    if (!event._inflight) {\\n                                        event._inflight = true;\\n                                        // This is the first filter for this event, so we want to\\n                                        // restrict events to events that happened no earlier than now\\n                                        if (event._lastBlockNumber === -2) {\\n                                            event._lastBlockNumber = blockNumber - 1;\\n                                        }\\n                                        // Filter from the last *known* event; due to load-balancing\\n                                        // and some nodes returning updated block numbers before\\n                                        // indexing events, a logs result with 0 entries cannot be\\n                                        // trusted and we must retry a range which includes it again\\n                                        var filter_1 = event.filter;\\n                                        filter_1.fromBlock = event._lastBlockNumber + 1;\\n                                        filter_1.toBlock = blockNumber;\\n                                        // Prevent fitler ranges from growing too wild, since it is quite\\n                                        // likely there just haven't been any events to move the lastBlockNumber.\\n                                        var minFromBlock = filter_1.toBlock - _this._maxFilterBlockRange;\\n                                        if (minFromBlock > filter_1.fromBlock) {\\n                                            filter_1.fromBlock = minFromBlock;\\n                                        }\\n                                        if (filter_1.fromBlock < 0) {\\n                                            filter_1.fromBlock = 0;\\n                                        }\\n                                        var runner = _this.getLogs(filter_1).then(function (logs) {\\n                                            // Allow the next getLogs\\n                                            event._inflight = false;\\n                                            if (logs.length === 0) {\\n                                                return;\\n                                            }\\n                                            logs.forEach(function (log) {\\n                                                // Only when we get an event for a given block number\\n                                                // can we trust the events are indexed\\n                                                if (log.blockNumber > event._lastBlockNumber) {\\n                                                    event._lastBlockNumber = log.blockNumber;\\n                                                }\\n                                                // Make sure we stall requests to fetch blocks and txs\\n                                                _this._emitted[\\\"b:\\\" + log.blockHash] = log.blockNumber;\\n                                                _this._emitted[\\\"t:\\\" + log.transactionHash] = log.blockNumber;\\n                                                _this.emit(filter_1, log);\\n                                            });\\n                                        }).catch(function (error) {\\n                                            _this.emit(\\\"error\\\", error);\\n                                            // Allow another getLogs (the range was not updated)\\n                                            event._inflight = false;\\n                                        });\\n                                        runners.push(runner);\\n                                    }\\n                                    break;\\n                                }\\n                            }\\n                        });\\n                        this._lastBlockNumber = blockNumber;\\n                        // Once all events for this loop have been processed, emit \\\"didPoll\\\"\\n                        Promise.all(runners).then(function () {\\n                            _this.emit(\\\"didPoll\\\", pollId);\\n                        }).catch(function (error) { _this.emit(\\\"error\\\", error); });\\n                        return [2 /*return*/];\\n                }\\n            });\\n        });\\n    };\\n    // Deprecated; do not use this\\n    BaseProvider.prototype.resetEventsBlock = function (blockNumber) {\\n        this._lastBlockNumber = blockNumber - 1;\\n        if (this.polling) {\\n            this.poll();\\n        }\\n    };\\n    Object.defineProperty(BaseProvider.prototype, \\\"network\\\", {\\n        get: function () {\\n            return this._network;\\n        },\\n        enumerable: false,\\n        configurable: true\\n    });\\n    // This method should query the network if the underlying network\\n    // can change, such as when connected to a JSON-RPC backend\\n    BaseProvider.prototype.detectNetwork = function () {\\n        return __awaiter(this, void 0, void 0, function () {\\n            return __generator(this, function (_a) {\\n                return [2 /*return*/, logger.throwError(\\\"provider does not support network detection\\\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\\n                        operation: \\\"provider.detectNetwork\\\"\\n                    })];\\n            });\\n        });\\n    };\\n    BaseProvider.prototype.getNetwork = function () {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var network, currentNetwork, error;\\n            return __generator(this, function (_a) {\\n                switch (_a.label) {\\n                    case 0: return [4 /*yield*/, this._ready()];\\n                    case 1:\\n                        network = _a.sent();\\n                        return [4 /*yield*/, this.detectNetwork()];\\n                    case 2:\\n                        currentNetwork = _a.sent();\\n                        if (!(network.chainId !== currentNetwork.chainId)) return [3 /*break*/, 5];\\n                        if (!this.anyNetwork) return [3 /*break*/, 4];\\n                        this._network = currentNetwork;\\n                        // Reset all internal block number guards and caches\\n                        this._lastBlockNumber = -2;\\n                        this._fastBlockNumber = null;\\n                        this._fastBlockNumberPromise = null;\\n                        this._fastQueryDate = 0;\\n                        this._emitted.block = -2;\\n                        this._maxInternalBlockNumber = -1024;\\n                        this._internalBlockNumber = null;\\n                        // The \\\"network\\\" event MUST happen before this method resolves\\n                        // so any events have a chance to unregister, so we stall an\\n                        // additional event loop before returning from /this/ call\\n                        this.emit(\\\"network\\\", currentNetwork, network);\\n                        return [4 /*yield*/, stall(0)];\\n                    case 3:\\n                        _a.sent();\\n                        return [2 /*return*/, this._network];\\n                    case 4:\\n                        error = logger.makeError(\\\"underlying network changed\\\", logger_1.Logger.errors.NETWORK_ERROR, {\\n                            event: \\\"changed\\\",\\n                            network: network,\\n                            detectedNetwork: currentNetwork\\n                        });\\n                        this.emit(\\\"error\\\", error);\\n                        throw error;\\n                    case 5: return [2 /*return*/, network];\\n                }\\n            });\\n        });\\n    };\\n    Object.defineProperty(BaseProvider.prototype, \\\"blockNumber\\\", {\\n        get: function () {\\n            var _this = this;\\n            this._getInternalBlockNumber(100 + this.pollingInterval / 2).then(function (blockNumber) {\\n                _this._setFastBlockNumber(blockNumber);\\n            }, function (error) { });\\n            return (this._fastBlockNumber != null) ? this._fastBlockNumber : -1;\\n        },\\n        enumerable: false,\\n        configurable: true\\n    });\\n    Object.defineProperty(BaseProvider.prototype, \\\"polling\\\", {\\n        get: function () {\\n            return (this._poller != null);\\n        },\\n        set: function (value) {\\n            var _this = this;\\n            if (value && !this._poller) {\\n                this._poller = setInterval(function () { _this.poll(); }, this.pollingInterval);\\n                if (!this._bootstrapPoll) {\\n                    this._bootstrapPoll = setTimeout(function () {\\n                        _this.poll();\\n                        // We block additional polls until the polling interval\\n                        // is done, to prevent overwhelming the poll function\\n                        _this._bootstrapPoll = setTimeout(function () {\\n                            // If polling was disabled, something may require a poke\\n                            // since starting the bootstrap poll and it was disabled\\n                            if (!_this._poller) {\\n                                _this.poll();\\n                            }\\n                            // Clear out the bootstrap so we can do another\\n                            _this._bootstrapPoll = null;\\n                        }, _this.pollingInterval);\\n                    }, 0);\\n                }\\n            }\\n            else if (!value && this._poller) {\\n                clearInterval(this._poller);\\n                this._poller = null;\\n            }\\n        },\\n        enumerable: false,\\n        configurable: true\\n    });\\n    Object.defineProperty(BaseProvider.prototype, \\\"pollingInterval\\\", {\\n        get: function () {\\n            return this._pollingInterval;\\n        },\\n        set: function (value) {\\n            var _this = this;\\n            if (typeof (value) !== \\\"number\\\" || value <= 0 || parseInt(String(value)) != value) {\\n                throw new Error(\\\"invalid polling interval\\\");\\n            }\\n            this._pollingInterval = value;\\n            if (this._poller) {\\n                clearInterval(this._poller);\\n                this._poller = setInterval(function () { _this.poll(); }, this._pollingInterval);\\n            }\\n        },\\n        enumerable: false,\\n        configurable: true\\n    });\\n    BaseProvider.prototype._getFastBlockNumber = function () {\\n        var _this = this;\\n        var now = getTime();\\n        // Stale block number, request a newer value\\n        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {\\n            this._fastQueryDate = now;\\n            this._fastBlockNumberPromise = this.getBlockNumber().then(function (blockNumber) {\\n                if (_this._fastBlockNumber == null || blockNumber > _this._fastBlockNumber) {\\n                    _this._fastBlockNumber = blockNumber;\\n                }\\n                return _this._fastBlockNumber;\\n            });\\n        }\\n        return this._fastBlockNumberPromise;\\n    };\\n    BaseProvider.prototype._setFastBlockNumber = function (blockNumber) {\\n        // Older block, maybe a stale request\\n        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) {\\n            return;\\n        }\\n        // Update the time we updated the blocknumber\\n        this._fastQueryDate = getTime();\\n        // Newer block number, use  it\\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\\n            this._fastBlockNumber = blockNumber;\\n            this._fastBlockNumberPromise = Promise.resolve(blockNumber);\\n        }\\n    };\\n    BaseProvider.prototype.waitForTransaction = function (transactionHash, confirmations, timeout) {\\n        return __awaiter(this, void 0, void 0, function () {\\n            return __generator(this, function (_a) {\\n                return [2 /*return*/, this._waitForTransaction(transactionHash, (confirmations == null) ? 1 : confirmations, timeout || 0, null)];\\n            });\\n        });\\n    };\\n    BaseProvider.prototype._waitForTransaction = function (transactionHash, confirmations, timeout, replaceable) {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var receipt;\\n            var _this = this;\\n            return __generator(this, function (_a) {\\n                switch (_a.label) {\\n                    case 0: return [4 /*yield*/, this.getTransactionReceipt(transactionHash)];\\n                    case 1:\\n                        receipt = _a.sent();\\n                        // Receipt is already good\\n                        if ((receipt ? receipt.confirmations : 0) >= confirmations) {\\n                            return [2 /*return*/, receipt];\\n                        }\\n                        // Poll until the receipt is good...\\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\\n                                var cancelFuncs = [];\\n                                var done = false;\\n                                var alreadyDone = function () {\\n                                    if (done) {\\n                                        return true;\\n                                    }\\n                                    done = true;\\n                                    cancelFuncs.forEach(function (func) { func(); });\\n                                    return false;\\n                                };\\n                                var minedHandler = function (receipt) {\\n                                    if (receipt.confirmations < confirmations) {\\n                                        return;\\n                                    }\\n                                    if (alreadyDone()) {\\n                                        return;\\n                                    }\\n                                    resolve(receipt);\\n                                };\\n                                _this.on(transactionHash, minedHandler);\\n                                cancelFuncs.push(function () { _this.removeListener(transactionHash, minedHandler); });\\n                                if (replaceable) {\\n                                    var lastBlockNumber_1 = replaceable.startBlock;\\n                                    var scannedBlock_1 = null;\\n                                    var replaceHandler_1 = function (blockNumber) { return __awaiter(_this, void 0, void 0, function () {\\n                                        var _this = this;\\n                                        return __generator(this, function (_a) {\\n                                            switch (_a.label) {\\n                                                case 0:\\n                                                    if (done) {\\n                                                        return [2 /*return*/];\\n                                                    }\\n                                                    // Wait 1 second; this is only used in the case of a fault, so\\n                                                    // we will trade off a little bit of latency for more consistent\\n                                                    // results and fewer JSON-RPC calls\\n                                                    return [4 /*yield*/, stall(1000)];\\n                                                case 1:\\n                                                    // Wait 1 second; this is only used in the case of a fault, so\\n                                                    // we will trade off a little bit of latency for more consistent\\n                                                    // results and fewer JSON-RPC calls\\n                                                    _a.sent();\\n                                                    this.getTransactionCount(replaceable.from).then(function (nonce) { return __awaiter(_this, void 0, void 0, function () {\\n                                                        var mined, block, ti, tx, receipt_1, reason;\\n                                                        return __generator(this, function (_a) {\\n                                                            switch (_a.label) {\\n                                                                case 0:\\n                                                                    if (done) {\\n                                                                        return [2 /*return*/];\\n                                                                    }\\n                                                                    if (!(nonce <= replaceable.nonce)) return [3 /*break*/, 1];\\n                                                                    lastBlockNumber_1 = blockNumber;\\n                                                                    return [3 /*break*/, 9];\\n                                                                case 1: return [4 /*yield*/, this.getTransaction(transactionHash)];\\n                                                                case 2:\\n                                                                    mined = _a.sent();\\n                                                                    if (mined && mined.blockNumber != null) {\\n                                                                        return [2 /*return*/];\\n                                                                    }\\n                                                                    // First time scanning. We start a little earlier for some\\n                                                                    // wiggle room here to handle the eventually consistent nature\\n                                                                    // of blockchain (e.g. the getTransactionCount was for a\\n                                                                    // different block)\\n                                                                    if (scannedBlock_1 == null) {\\n                                                                        scannedBlock_1 = lastBlockNumber_1 - 3;\\n                                                                        if (scannedBlock_1 < replaceable.startBlock) {\\n                                                                            scannedBlock_1 = replaceable.startBlock;\\n                                                                        }\\n                                                                    }\\n                                                                    _a.label = 3;\\n                                                                case 3:\\n                                                                    if (!(scannedBlock_1 <= blockNumber)) return [3 /*break*/, 9];\\n                                                                    if (done) {\\n                                                                        return [2 /*return*/];\\n                                                                    }\\n                                                                    return [4 /*yield*/, this.getBlockWithTransactions(scannedBlock_1)];\\n                                                                case 4:\\n                                                                    block = _a.sent();\\n                                                                    ti = 0;\\n                                                                    _a.label = 5;\\n                                                                case 5:\\n                                                                    if (!(ti < block.transactions.length)) return [3 /*break*/, 8];\\n                                                                    tx = block.transactions[ti];\\n                                                                    // Successfully mined!\\n                                                                    if (tx.hash === transactionHash) {\\n                                                                        return [2 /*return*/];\\n                                                                    }\\n                                                                    if (!(tx.from === replaceable.from && tx.nonce === replaceable.nonce)) return [3 /*break*/, 7];\\n                                                                    if (done) {\\n                                                                        return [2 /*return*/];\\n                                                                    }\\n                                                                    return [4 /*yield*/, this.waitForTransaction(tx.hash, confirmations)];\\n                                                                case 6:\\n                                                                    receipt_1 = _a.sent();\\n                                                                    // Already resolved or rejected (prolly a timeout)\\n                                                                    if (alreadyDone()) {\\n                                                                        return [2 /*return*/];\\n                                                                    }\\n                                                                    reason = \\\"replaced\\\";\\n                                                                    if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\\n                                                                        reason = \\\"repriced\\\";\\n                                                                    }\\n                                                                    else if (tx.data === \\\"0x\\\" && tx.from === tx.to && tx.value.isZero()) {\\n                                                                        reason = \\\"cancelled\\\";\\n                                                                    }\\n                                                                    // Explain why we were replaced\\n                                                                    reject(logger.makeError(\\\"transaction was replaced\\\", logger_1.Logger.errors.TRANSACTION_REPLACED, {\\n                                                                        cancelled: (reason === \\\"replaced\\\" || reason === \\\"cancelled\\\"),\\n                                                                        reason: reason,\\n                                                                        replacement: this._wrapTransaction(tx),\\n                                                                        hash: transactionHash,\\n                                                                        receipt: receipt_1\\n                                                                    }));\\n                                                                    return [2 /*return*/];\\n                                                                case 7:\\n                                                                    ti++;\\n                                                                    return [3 /*break*/, 5];\\n                                                                case 8:\\n                                                                    scannedBlock_1++;\\n                                                                    return [3 /*break*/, 3];\\n                                                                case 9:\\n                                                                    if (done) {\\n                                                                        return [2 /*return*/];\\n                                                                    }\\n                                                                    this.once(\\\"block\\\", replaceHandler_1);\\n                                                                    return [2 /*return*/];\\n                                                            }\\n                                                        });\\n                                                    }); }, function (error) {\\n                                                        if (done) {\\n                                                            return;\\n                                                        }\\n                                                        _this.once(\\\"block\\\", replaceHandler_1);\\n                                                    });\\n                                                    return [2 /*return*/];\\n                                            }\\n                                        });\\n                                    }); };\\n                                    if (done) {\\n                                        return;\\n                                    }\\n                                    _this.once(\\\"block\\\", replaceHandler_1);\\n                                    cancelFuncs.push(function () {\\n                                        _this.removeListener(\\\"block\\\", replaceHandler_1);\\n                                    });\\n                                }\\n                                if (typeof (timeout) === \\\"number\\\" && timeout > 0) {\\n                                    var timer_1 = setTimeout(function () {\\n                                        if (alreadyDone()) {\\n                                            return;\\n                                        }\\n                                        reject(logger.makeError(\\\"timeout exceeded\\\", logger_1.Logger.errors.TIMEOUT, { timeout: timeout }));\\n                                    }, timeout);\\n                                    if (timer_1.unref) {\\n                                        timer_1.unref();\\n                                    }\\n                                    cancelFuncs.push(function () { clearTimeout(timer_1); });\\n                                }\\n                            })];\\n                }\\n            });\\n        });\\n    };\\n    BaseProvider.prototype.getBlockNumber = function () {\\n        return __awaiter(this, void 0, void 0, function () {\\n            return __generator(this, function (_a) {\\n                return [2 /*return*/, this._getInternalBlockNumber(0)];\\n            });\\n        });\\n    };\\n    BaseProvider.prototype.getGasPrice = function () {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var result;\\n            return __generator(this, function (_a) {\\n                switch (_a.label) {\\n                    case 0: return [4 /*yield*/, this.getNetwork()];\\n                    case 1:\\n                        _a.sent();\\n                        return [4 /*yield*/, this.perform(\\\"getGasPrice\\\", {})];\\n                    case 2:\\n                        result = _a.sent();\\n                        try {\\n                            return [2 /*return*/, bignumber_1.BigNumber.from(result)];\\n                        }\\n                        catch (error) {\\n                            return [2 /*return*/, logger.throwError(\\\"bad result from backend\\\", logger_1.Logger.errors.SERVER_ERROR, {\\n                                    method: \\\"getGasPrice\\\",\\n                                    result: result,\\n                                    error: error\\n                                })];\\n                        }\\n                        return [2 /*return*/];\\n                }\\n            });\\n        });\\n    };\\n    BaseProvider.prototype.getBalance = function (addressOrName, blockTag) {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var params, result;\\n            return __generator(this, function (_a) {\\n                switch (_a.label) {\\n                    case 0: return [4 /*yield*/, this.getNetwork()];\\n                    case 1:\\n                        _a.sent();\\n                        return [4 /*yield*/, (0, properties_1.resolveProperties)({\\n                                address: this._getAddress(addressOrName),\\n                                blockTag: this._getBlockTag(blockTag)\\n                            })];\\n                    case 2:\\n                        params = _a.sent();\\n                        return [4 /*yield*/, this.perform(\\\"getBalance\\\", params)];\\n                    case 3:\\n                        result = _a.sent();\\n                        try {\\n                            return [2 /*return*/, bignumber_1.BigNumber.from(result)];\\n                        }\\n                        catch (error) {\\n                            return [2 /*return*/, logger.throwError(\\\"bad result from backend\\\", logger_1.Logger.errors.SERVER_ERROR, {\\n                                    method: \\\"getBalance\\\",\\n                                    params: params,\\n                                    result: result,\\n                                    error: error\\n                                })];\\n                        }\\n                        return [2 /*return*/];\\n                }\\n            });\\n        });\\n    };\\n    BaseProvider.prototype.getTransactionCount = function (addressOrName, blockTag) {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var params, result;\\n            return __generator(this, function (_a) {\\n                switch (_a.label) {\\n                    case 0: return [4 /*yield*/, this.getNetwork()];\\n                    case 1:\\n                        _a.sent();\\n                        return [4 /*yield*/, (0, properties_1.resolveProperties)({\\n                                address: this._getAddress(addressOrName),\\n                                blockTag: this._getBlockTag(blockTag)\\n                            })];\\n                    case 2:\\n                        params = _a.sent();\\n                        return [4 /*yield*/, this.perform(\\\"getTransactionCount\\\", params)];\\n                    case 3:\\n                        result = _a.sent();\\n                        try {\\n                            return [2 /*return*/, bignumber_1.BigNumber.from(result).toNumber()];\\n                        }\\n                        catch (error) {\\n                            return [2 /*return*/, logger.throwError(\\\"bad result from backend\\\", logger_1.Logger.errors.SERVER_ERROR, {\\n                                    method: \\\"getTransactionCount\\\",\\n                                    params: params,\\n                                    result: result,\\n                                    error: error\\n                                })];\\n                        }\\n                        return [2 /*return*/];\\n                }\\n            });\\n        });\\n    };\\n    BaseProvider.prototype.getCode = function (addressOrName, blockTag) {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var params, result;\\n            return __generator(this, function (_a) {\\n                switch (_a.label) {\\n                    case 0: return [4 /*yield*/, this.getNetwork()];\\n                    case 1:\\n                        _a.sent();\\n                        return [4 /*yield*/, (0, properties_1.resolveProperties)({\\n                                address: this._getAddress(addressOrName),\\n                                blockTag: this._getBlockTag(blockTag)\\n                            })];\\n                    case 2:\\n                        params = _a.sent();\\n                        return [4 /*yield*/, this.perform(\\\"getCode\\\", params)];\\n                    case 3:\\n                        result = _a.sent();\\n                        try {\\n                            return [2 /*return*/, (0, bytes_1.hexlify)(result)];\\n                        }\\n                        catch (error) {\\n                            return [2 /*return*/, logger.throwError(\\\"bad result from backend\\\", logger_1.Logger.errors.SERVER_ERROR, {\\n                                    method: \\\"getCode\\\",\\n                                    params: params,\\n                                    result: result,\\n                                    error: error\\n                                })];\\n                        }\\n                        return [2 /*return*/];\\n                }\\n            });\\n        });\\n    };\\n    BaseProvider.prototype.getStorageAt = function (addressOrName, position, blockTag) {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var params, result;\\n            return __generator(this, function (_a) {\\n                switch (_a.label) {\\n                    case 0: return [4 /*yield*/, this.getNetwork()];\\n                    case 1:\\n                        _a.sent();\\n                        return [4 /*yield*/, (0, properties_1.resolveProperties)({\\n                                address: this._getAddress(addressOrName),\\n                                blockTag: this._getBlockTag(blockTag),\\n                                position: Promise.resolve(position).then(function (p) { return (0, bytes_1.hexValue)(p); })\\n                            })];\\n                    case 2:\\n                        params = _a.sent();\\n                        return [4 /*yield*/, this.perform(\\\"getStorageAt\\\", params)];\\n                    case 3:\\n                        result = _a.sent();\\n                        try {\\n                            return [2 /*return*/, (0, bytes_1.hexlify)(result)];\\n                        }\\n                        catch (error) {\\n                            return [2 /*return*/, logger.throwError(\\\"bad result from backend\\\", logger_1.Logger.errors.SERVER_ERROR, {\\n                                    method: \\\"getStorageAt\\\",\\n                                    params: params,\\n                                    result: result,\\n                                    error: error\\n                                })];\\n                        }\\n                        return [2 /*return*/];\\n                }\\n            });\\n        });\\n    };\\n    // This should be called by any subclass wrapping a TransactionResponse\\n    BaseProvider.prototype._wrapTransaction = function (tx, hash, startBlock) {\\n        var _this = this;\\n        if (hash != null && (0, bytes_1.hexDataLength)(hash) !== 32) {\\n            throw new Error(\\\"invalid response - sendTransaction\\\");\\n        }\\n        var result = tx;\\n        // Check the hash we expect is the same as the hash the server reported\\n        if (hash != null && tx.hash !== hash) {\\n            logger.throwError(\\\"Transaction hash mismatch from Provider.sendTransaction.\\\", logger_1.Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });\\n        }\\n        result.wait = function (confirms, timeout) { return __awaiter(_this, void 0, void 0, function () {\\n            var replacement, receipt;\\n            return __generator(this, function (_a) {\\n                switch (_a.label) {\\n                    case 0:\\n                        if (confirms == null) {\\n                            confirms = 1;\\n                        }\\n                        if (timeout == null) {\\n                            timeout = 0;\\n                        }\\n                        replacement = undefined;\\n                        if (confirms !== 0 && startBlock != null) {\\n                            replacement = {\\n                                data: tx.data,\\n                                from: tx.from,\\n                                nonce: tx.nonce,\\n                                to: tx.to,\\n                                value: tx.value,\\n                                startBlock: startBlock\\n                            };\\n                        }\\n                        return [4 /*yield*/, this._waitForTransaction(tx.hash, confirms, timeout, replacement)];\\n                    case 1:\\n                        receipt = _a.sent();\\n                        if (receipt == null && confirms === 0) {\\n                            return [2 /*return*/, null];\\n                        }\\n                        // No longer pending, allow the polling loop to garbage collect this\\n                        this._emitted[\\\"t:\\\" + tx.hash] = receipt.blockNumber;\\n                        if (receipt.status === 0) {\\n                            logger.throwError(\\\"transaction failed\\\", logger_1.Logger.errors.CALL_EXCEPTION, {\\n                                transactionHash: tx.hash,\\n                                transaction: tx,\\n                                receipt: receipt\\n                            });\\n                        }\\n                        return [2 /*return*/, receipt];\\n                }\\n            });\\n        }); };\\n        return result;\\n    };\\n    BaseProvider.prototype.sendTransaction = function (signedTransaction) {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var hexTx, tx, blockNumber, hash, error_7;\\n            return __generator(this, function (_a) {\\n                switch (_a.label) {\\n                    case 0: return [4 /*yield*/, this.getNetwork()];\\n                    case 1:\\n                        _a.sent();\\n                        return [4 /*yield*/, Promise.resolve(signedTransaction).then(function (t) { return (0, bytes_1.hexlify)(t); })];\\n                    case 2:\\n                        hexTx = _a.sent();\\n                        tx = this.formatter.transaction(signedTransaction);\\n                        if (tx.confirmations == null) {\\n                            tx.confirmations = 0;\\n                        }\\n                        return [4 /*yield*/, this._getInternalBlockNumber(100 + 2 * this.pollingInterval)];\\n                    case 3:\\n                        blockNumber = _a.sent();\\n                        _a.label = 4;\\n                    case 4:\\n                        _a.trys.push([4, 6, , 7]);\\n                        return [4 /*yield*/, this.perform(\\\"sendTransaction\\\", { signedTransaction: hexTx })];\\n                    case 5:\\n                        hash = _a.sent();\\n                        return [2 /*return*/, this._wrapTransaction(tx, hash, blockNumber)];\\n                    case 6:\\n                        error_7 = _a.sent();\\n                        error_7.transaction = tx;\\n                        error_7.transactionHash = tx.hash;\\n                        throw error_7;\\n                    case 7: return [2 /*return*/];\\n                }\\n            });\\n        });\\n    };\\n    BaseProvider.prototype._getTransactionRequest = function (transaction) {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var values, tx, _a, _b;\\n            var _this = this;\\n            return __generator(this, function (_c) {\\n                switch (_c.label) {\\n                    case 0: return [4 /*yield*/, transaction];\\n                    case 1:\\n                        values = _c.sent();\\n                        tx = {};\\n                        [\\\"from\\\", \\\"to\\\"].forEach(function (key) {\\n                            if (values[key] == null) {\\n                                return;\\n                            }\\n                            tx[key] = Promise.resolve(values[key]).then(function (v) { return (v ? _this._getAddress(v) : null); });\\n                        });\\n                        [\\\"gasLimit\\\", \\\"gasPrice\\\", \\\"maxFeePerGas\\\", \\\"maxPriorityFeePerGas\\\", \\\"value\\\"].forEach(function (key) {\\n                            if (values[key] == null) {\\n                                return;\\n                            }\\n                            tx[key] = Promise.resolve(values[key]).then(function (v) { return (v ? bignumber_1.BigNumber.from(v) : null); });\\n                        });\\n                        [\\\"type\\\"].forEach(function (key) {\\n                            if (values[key] == null) {\\n                                return;\\n                            }\\n                            tx[key] = Promise.resolve(values[key]).then(function (v) { return ((v != null) ? v : null); });\\n                        });\\n                        if (values.accessList) {\\n                            tx.accessList = this.formatter.accessList(values.accessList);\\n                        }\\n                        [\\\"data\\\"].forEach(function (key) {\\n                            if (values[key] == null) {\\n                                return;\\n                            }\\n                            tx[key] = Promise.resolve(values[key]).then(function (v) { return (v ? (0, bytes_1.hexlify)(v) : null); });\\n                        });\\n                        _b = (_a = this.formatter).transactionRequest;\\n                        return [4 /*yield*/, (0, properties_1.resolveProperties)(tx)];\\n                    case 2: return [2 /*return*/, _b.apply(_a, [_c.sent()])];\\n                }\\n            });\\n        });\\n    };\\n    BaseProvider.prototype._getFilter = function (filter) {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var result, _a, _b;\\n            var _this = this;\\n            return __generator(this, function (_c) {\\n                switch (_c.label) {\\n                    case 0: return [4 /*yield*/, filter];\\n                    case 1:\\n                        filter = _c.sent();\\n                        result = {};\\n                        if (filter.address != null) {\\n                            result.address = this._getAddress(filter.address);\\n                        }\\n                        [\\\"blockHash\\\", \\\"topics\\\"].forEach(function (key) {\\n                            if (filter[key] == null) {\\n                                return;\\n                            }\\n                            result[key] = filter[key];\\n                        });\\n                        [\\\"fromBlock\\\", \\\"toBlock\\\"].forEach(function (key) {\\n                            if (filter[key] == null) {\\n                                return;\\n                            }\\n                            result[key] = _this._getBlockTag(filter[key]);\\n                        });\\n                        _b = (_a = this.formatter).filter;\\n                        return [4 /*yield*/, (0, properties_1.resolveProperties)(result)];\\n                    case 2: return [2 /*return*/, _b.apply(_a, [_c.sent()])];\\n                }\\n            });\\n        });\\n    };\\n    BaseProvider.prototype._call = function (transaction, blockTag, attempt) {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var txSender, result, data, sender, urls, urlsOffset, urlsLength, urlsData, u, url, calldata, callbackSelector, extraData, ccipResult, tx, error_8;\\n            return __generator(this, function (_a) {\\n                switch (_a.label) {\\n                    case 0:\\n                        if (attempt >= MAX_CCIP_REDIRECTS) {\\n                            logger.throwError(\\\"CCIP read exceeded maximum redirections\\\", logger_1.Logger.errors.SERVER_ERROR, {\\n                                redirects: attempt,\\n                                transaction: transaction\\n                            });\\n                        }\\n                        txSender = transaction.to;\\n                        return [4 /*yield*/, this.perform(\\\"call\\\", { transaction: transaction, blockTag: blockTag })];\\n                    case 1:\\n                        result = _a.sent();\\n                        if (!(attempt >= 0 && blockTag === \\\"latest\\\" && txSender != null && result.substring(0, 10) === \\\"0x556f1830\\\" && ((0, bytes_1.hexDataLength)(result) % 32 === 4))) return [3 /*break*/, 5];\\n                        _a.label = 2;\\n                    case 2:\\n                        _a.trys.push([2, 4, , 5]);\\n                        data = (0, bytes_1.hexDataSlice)(result, 4);\\n                        sender = (0, bytes_1.hexDataSlice)(data, 0, 32);\\n                        if (!bignumber_1.BigNumber.from(sender).eq(txSender)) {\\n                            logger.throwError(\\\"CCIP Read sender did not match\\\", logger_1.Logger.errors.CALL_EXCEPTION, {\\n                                name: \\\"OffchainLookup\\\",\\n                                signature: \\\"OffchainLookup(address,string[],bytes,bytes4,bytes)\\\",\\n                                transaction: transaction,\\n                                data: result\\n                            });\\n                        }\\n                        urls = [];\\n                        urlsOffset = bignumber_1.BigNumber.from((0, bytes_1.hexDataSlice)(data, 32, 64)).toNumber();\\n                        urlsLength = bignumber_1.BigNumber.from((0, bytes_1.hexDataSlice)(data, urlsOffset, urlsOffset + 32)).toNumber();\\n                        urlsData = (0, bytes_1.hexDataSlice)(data, urlsOffset + 32);\\n                        for (u = 0; u < urlsLength; u++) {\\n                            url = _parseString(urlsData, u * 32);\\n                            if (url == null) {\\n                                logger.throwError(\\\"CCIP Read contained corrupt URL string\\\", logger_1.Logger.errors.CALL_EXCEPTION, {\\n                                    name: \\\"OffchainLookup\\\",\\n                                    signature: \\\"OffchainLookup(address,string[],bytes,bytes4,bytes)\\\",\\n                                    transaction: transaction,\\n                                    data: result\\n                                });\\n                            }\\n                            urls.push(url);\\n                        }\\n                        calldata = _parseBytes(data, 64);\\n                        // Get the callbackSelector (bytes4)\\n                        if (!bignumber_1.BigNumber.from((0, bytes_1.hexDataSlice)(data, 100, 128)).isZero()) {\\n                            logger.throwError(\\\"CCIP Read callback selector included junk\\\", logger_1.Logger.errors.CALL_EXCEPTION, {\\n                                name: \\\"OffchainLookup\\\",\\n                                signature: \\\"OffchainLookup(address,string[],bytes,bytes4,bytes)\\\",\\n                                transaction: transaction,\\n                                data: result\\n                            });\\n                        }\\n                        callbackSelector = (0, bytes_1.hexDataSlice)(data, 96, 100);\\n                        extraData = _parseBytes(data, 128);\\n                        return [4 /*yield*/, this.ccipReadFetch(transaction, calldata, urls)];\\n                    case 3:\\n                        ccipResult = _a.sent();\\n                        if (ccipResult == null) {\\n                            logger.throwError(\\\"CCIP Read disabled or provided no URLs\\\", logger_1.Logger.errors.CALL_EXCEPTION, {\\n                                name: \\\"OffchainLookup\\\",\\n                                signature: \\\"OffchainLookup(address,string[],bytes,bytes4,bytes)\\\",\\n                                transaction: transaction,\\n                                data: result\\n                            });\\n                        }\\n                        tx = {\\n                            to: txSender,\\n                            data: (0, bytes_1.hexConcat)([callbackSelector, encodeBytes([ccipResult, extraData])])\\n                        };\\n                        return [2 /*return*/, this._call(tx, blockTag, attempt + 1)];\\n                    case 4:\\n                        error_8 = _a.sent();\\n                        if (error_8.code === logger_1.Logger.errors.SERVER_ERROR) {\\n                            throw error_8;\\n                        }\\n                        return [3 /*break*/, 5];\\n                    case 5:\\n                        try {\\n                            return [2 /*return*/, (0, bytes_1.hexlify)(result)];\\n                        }\\n                        catch (error) {\\n                            return [2 /*return*/, logger.throwError(\\\"bad result from backend\\\", logger_1.Logger.errors.SERVER_ERROR, {\\n                                    method: \\\"call\\\",\\n                                    params: { transaction: transaction, blockTag: blockTag },\\n                                    result: result,\\n                                    error: error\\n                                })];\\n                        }\\n                        return [2 /*return*/];\\n                }\\n            });\\n        });\\n    };\\n    BaseProvider.prototype.call = function (transaction, blockTag) {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var resolved;\\n            return __generator(this, function (_a) {\\n                switch (_a.label) {\\n                    case 0: return [4 /*yield*/, this.getNetwork()];\\n                    case 1:\\n                        _a.sent();\\n                        return [4 /*yield*/, (0, properties_1.resolveProperties)({\\n                                transaction: this._getTransactionRequest(transaction),\\n                                blockTag: this._getBlockTag(blockTag),\\n                                ccipReadEnabled: Promise.resolve(transaction.ccipReadEnabled)\\n                            })];\\n                    case 2:\\n                        resolved = _a.sent();\\n                        return [2 /*return*/, this._call(resolved.transaction, resolved.blockTag, resolved.ccipReadEnabled ? 0 : -1)];\\n                }\\n            });\\n        });\\n    };\\n    BaseProvider.prototype.estimateGas = function (transaction) {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var params, result;\\n            return __generator(this, function (_a) {\\n                switch (_a.label) {\\n                    case 0: return [4 /*yield*/, this.getNetwork()];\\n                    case 1:\\n                        _a.sent();\\n                        return [4 /*yield*/, (0, properties_1.resolveProperties)({\\n                                transaction: this._getTransactionRequest(transaction)\\n                            })];\\n                    case 2:\\n                        params = _a.sent();\\n                        return [4 /*yield*/, this.perform(\\\"estimateGas\\\", params)];\\n                    case 3:\\n                        result = _a.sent();\\n                        try {\\n                            return [2 /*return*/, bignumber_1.BigNumber.from(result)];\\n                        }\\n                        catch (error) {\\n                            return [2 /*return*/, logger.throwError(\\\"bad result from backend\\\", logger_1.Logger.errors.SERVER_ERROR, {\\n                                    method: \\\"estimateGas\\\",\\n                                    params: params,\\n                                    result: result,\\n                                    error: error\\n                                })];\\n                        }\\n                        return [2 /*return*/];\\n                }\\n            });\\n        });\\n    };\\n    BaseProvider.prototype._getAddress = function (addressOrName) {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var address;\\n            return __generator(this, function (_a) {\\n                switch (_a.label) {\\n                    case 0: return [4 /*yield*/, addressOrName];\\n                    case 1:\\n                        addressOrName = _a.sent();\\n                        if (typeof (addressOrName) !== \\\"string\\\") {\\n                            logger.throwArgumentError(\\\"invalid address or ENS name\\\", \\\"name\\\", addressOrName);\\n                        }\\n                        return [4 /*yield*/, this.resolveName(addressOrName)];\\n                    case 2:\\n                        address = _a.sent();\\n                        if (address == null) {\\n                            logger.throwError(\\\"ENS name not configured\\\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\\n                                operation: \\\"resolveName(\\\" + JSON.stringify(addressOrName) + \\\")\\\"\\n                            });\\n                        }\\n                        return [2 /*return*/, address];\\n                }\\n            });\\n        });\\n    };\\n    BaseProvider.prototype._getBlock = function (blockHashOrBlockTag, includeTransactions) {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var blockNumber, params, _a, error_9;\\n            var _this = this;\\n            return __generator(this, function (_b) {\\n                switch (_b.label) {\\n                    case 0: return [4 /*yield*/, this.getNetwork()];\\n                    case 1:\\n                        _b.sent();\\n                        return [4 /*yield*/, blockHashOrBlockTag];\\n                    case 2:\\n                        blockHashOrBlockTag = _b.sent();\\n                        blockNumber = -128;\\n                        params = {\\n                            includeTransactions: !!includeTransactions\\n                        };\\n                        if (!(0, bytes_1.isHexString)(blockHashOrBlockTag, 32)) return [3 /*break*/, 3];\\n                        params.blockHash = blockHashOrBlockTag;\\n                        return [3 /*break*/, 6];\\n                    case 3:\\n                        _b.trys.push([3, 5, , 6]);\\n                        _a = params;\\n                        return [4 /*yield*/, this._getBlockTag(blockHashOrBlockTag)];\\n                    case 4:\\n                        _a.blockTag = _b.sent();\\n                        if ((0, bytes_1.isHexString)(params.blockTag)) {\\n                            blockNumber = parseInt(params.blockTag.substring(2), 16);\\n                        }\\n                        return [3 /*break*/, 6];\\n                    case 5:\\n                        error_9 = _b.sent();\\n                        logger.throwArgumentError(\\\"invalid block hash or block tag\\\", \\\"blockHashOrBlockTag\\\", blockHashOrBlockTag);\\n                        return [3 /*break*/, 6];\\n                    case 6: return [2 /*return*/, (0, web_1.poll)(function () { return __awaiter(_this, void 0, void 0, function () {\\n                            var block, blockNumber_1, i, tx, confirmations, blockWithTxs;\\n                            var _this = this;\\n                            return __generator(this, function (_a) {\\n                                switch (_a.label) {\\n                                    case 0: return [4 /*yield*/, this.perform(\\\"getBlock\\\", params)];\\n                                    case 1:\\n                                        block = _a.sent();\\n                                        // Block was not found\\n                                        if (block == null) {\\n                                            // For blockhashes, if we didn't say it existed, that blockhash may\\n                                            // not exist. If we did see it though, perhaps from a log, we know\\n                                            // it exists, and this node is just not caught up yet.\\n                                            if (params.blockHash != null) {\\n                                                if (this._emitted[\\\"b:\\\" + params.blockHash] == null) {\\n                                                    return [2 /*return*/, null];\\n                                                }\\n                                            }\\n                                            // For block tags, if we are asking for a future block, we return null\\n                                            if (params.blockTag != null) {\\n                                                if (blockNumber > this._emitted.block) {\\n                                                    return [2 /*return*/, null];\\n                                                }\\n                                            }\\n                                            // Retry on the next block\\n                                            return [2 /*return*/, undefined];\\n                                        }\\n                                        if (!includeTransactions) return [3 /*break*/, 8];\\n                                        blockNumber_1 = null;\\n                                        i = 0;\\n                                        _a.label = 2;\\n                                    case 2:\\n                                        if (!(i < block.transactions.length)) return [3 /*break*/, 7];\\n                                        tx = block.transactions[i];\\n                                        if (!(tx.blockNumber == null)) return [3 /*break*/, 3];\\n                                        tx.confirmations = 0;\\n                                        return [3 /*break*/, 6];\\n                                    case 3:\\n                                        if (!(tx.confirmations == null)) return [3 /*break*/, 6];\\n                                        if (!(blockNumber_1 == null)) return [3 /*break*/, 5];\\n                                        return [4 /*yield*/, this._getInternalBlockNumber(100 + 2 * this.pollingInterval)];\\n                                    case 4:\\n                                        blockNumber_1 = _a.sent();\\n                                        _a.label = 5;\\n                                    case 5:\\n                                        confirmations = (blockNumber_1 - tx.blockNumber) + 1;\\n                                        if (confirmations <= 0) {\\n                                            confirmations = 1;\\n                                        }\\n                                        tx.confirmations = confirmations;\\n                                        _a.label = 6;\\n                                    case 6:\\n                                        i++;\\n                                        return [3 /*break*/, 2];\\n                                    case 7:\\n                                        blockWithTxs = this.formatter.blockWithTransactions(block);\\n                                        blockWithTxs.transactions = blockWithTxs.transactions.map(function (tx) { return _this._wrapTransaction(tx); });\\n                                        return [2 /*return*/, blockWithTxs];\\n                                    case 8: return [2 /*return*/, this.formatter.block(block)];\\n                                }\\n                            });\\n                        }); }, { oncePoll: this })];\\n                }\\n            });\\n        });\\n    };\\n    BaseProvider.prototype.getBlock = function (blockHashOrBlockTag) {\\n        return (this._getBlock(blockHashOrBlockTag, false));\\n    };\\n    BaseProvider.prototype.getBlockWithTransactions = function (blockHashOrBlockTag) {\\n        return (this._getBlock(blockHashOrBlockTag, true));\\n    };\\n    BaseProvider.prototype.getTransaction = function (transactionHash) {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var params;\\n            var _this = this;\\n            return __generator(this, function (_a) {\\n                switch (_a.label) {\\n                    case 0: return [4 /*yield*/, this.getNetwork()];\\n                    case 1:\\n                        _a.sent();\\n                        return [4 /*yield*/, transactionHash];\\n                    case 2:\\n                        transactionHash = _a.sent();\\n                        params = { transactionHash: this.formatter.hash(transactionHash, true) };\\n                        return [2 /*return*/, (0, web_1.poll)(function () { return __awaiter(_this, void 0, void 0, function () {\\n                                var result, tx, blockNumber, confirmations;\\n                                return __generator(this, function (_a) {\\n                                    switch (_a.label) {\\n                                        case 0: return [4 /*yield*/, this.perform(\\\"getTransaction\\\", params)];\\n                                        case 1:\\n                                            result = _a.sent();\\n                                            if (result == null) {\\n                                                if (this._emitted[\\\"t:\\\" + transactionHash] == null) {\\n                                                    return [2 /*return*/, null];\\n                                                }\\n                                                return [2 /*return*/, undefined];\\n                                            }\\n                                            tx = this.formatter.transactionResponse(result);\\n                                            if (!(tx.blockNumber == null)) return [3 /*break*/, 2];\\n                                            tx.confirmations = 0;\\n                                            return [3 /*break*/, 4];\\n                                        case 2:\\n                                            if (!(tx.confirmations == null)) return [3 /*break*/, 4];\\n                                            return [4 /*yield*/, this._getInternalBlockNumber(100 + 2 * this.pollingInterval)];\\n                                        case 3:\\n                                            blockNumber = _a.sent();\\n                                            confirmations = (blockNumber - tx.blockNumber) + 1;\\n                                            if (confirmations <= 0) {\\n                                                confirmations = 1;\\n                                            }\\n                                            tx.confirmations = confirmations;\\n                                            _a.label = 4;\\n                                        case 4: return [2 /*return*/, this._wrapTransaction(tx)];\\n                                    }\\n                                });\\n                            }); }, { oncePoll: this })];\\n                }\\n            });\\n        });\\n    };\\n    BaseProvider.prototype.getTransactionReceipt = function (transactionHash) {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var params;\\n            var _this = this;\\n            return __generator(this, function (_a) {\\n                switch (_a.label) {\\n                    case 0: return [4 /*yield*/, this.getNetwork()];\\n                    case 1:\\n                        _a.sent();\\n                        return [4 /*yield*/, transactionHash];\\n                    case 2:\\n                        transactionHash = _a.sent();\\n                        params = { transactionHash: this.formatter.hash(transactionHash, true) };\\n                        return [2 /*return*/, (0, web_1.poll)(function () { return __awaiter(_this, void 0, void 0, function () {\\n                                var result, receipt, blockNumber, confirmations;\\n                                return __generator(this, function (_a) {\\n                                    switch (_a.label) {\\n                                        case 0: return [4 /*yield*/, this.perform(\\\"getTransactionReceipt\\\", params)];\\n                                        case 1:\\n                                            result = _a.sent();\\n                                            if (result == null) {\\n                                                if (this._emitted[\\\"t:\\\" + transactionHash] == null) {\\n                                                    return [2 /*return*/, null];\\n                                                }\\n                                                return [2 /*return*/, undefined];\\n                                            }\\n                                            // \\\"geth-etc\\\" returns receipts before they are ready\\n                                            if (result.blockHash == null) {\\n                                                return [2 /*return*/, undefined];\\n                                            }\\n                                            receipt = this.formatter.receipt(result);\\n                                            if (!(receipt.blockNumber == null)) return [3 /*break*/, 2];\\n                                            receipt.confirmations = 0;\\n                                            return [3 /*break*/, 4];\\n                                        case 2:\\n                                            if (!(receipt.confirmations == null)) return [3 /*break*/, 4];\\n                                            return [4 /*yield*/, this._getInternalBlockNumber(100 + 2 * this.pollingInterval)];\\n                                        case 3:\\n                                            blockNumber = _a.sent();\\n                                            confirmations = (blockNumber - receipt.blockNumber) + 1;\\n                                            if (confirmations <= 0) {\\n                                                confirmations = 1;\\n                                            }\\n                                            receipt.confirmations = confirmations;\\n                                            _a.label = 4;\\n                                        case 4: return [2 /*return*/, receipt];\\n                                    }\\n                                });\\n                            }); }, { oncePoll: this })];\\n                }\\n            });\\n        });\\n    };\\n    BaseProvider.prototype.getLogs = function (filter) {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var params, logs;\\n            return __generator(this, function (_a) {\\n                switch (_a.label) {\\n                    case 0: return [4 /*yield*/, this.getNetwork()];\\n                    case 1:\\n                        _a.sent();\\n                        return [4 /*yield*/, (0, properties_1.resolveProperties)({ filter: this._getFilter(filter) })];\\n                    case 2:\\n                        params = _a.sent();\\n                        return [4 /*yield*/, this.perform(\\\"getLogs\\\", params)];\\n                    case 3:\\n                        logs = _a.sent();\\n                        logs.forEach(function (log) {\\n                            if (log.removed == null) {\\n                                log.removed = false;\\n                            }\\n                        });\\n                        return [2 /*return*/, formatter_1.Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs)];\\n                }\\n            });\\n        });\\n    };\\n    BaseProvider.prototype.getEtherPrice = function () {\\n        return __awaiter(this, void 0, void 0, function () {\\n            return __generator(this, function (_a) {\\n                switch (_a.label) {\\n                    case 0: return [4 /*yield*/, this.getNetwork()];\\n                    case 1:\\n                        _a.sent();\\n                        return [2 /*return*/, this.perform(\\\"getEtherPrice\\\", {})];\\n                }\\n            });\\n        });\\n    };\\n    BaseProvider.prototype._getBlockTag = function (blockTag) {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var blockNumber;\\n            return __generator(this, function (_a) {\\n                switch (_a.label) {\\n                    case 0: return [4 /*yield*/, blockTag];\\n                    case 1:\\n                        blockTag = _a.sent();\\n                        if (!(typeof (blockTag) === \\\"number\\\" && blockTag < 0)) return [3 /*break*/, 3];\\n                        if (blockTag % 1) {\\n                            logger.throwArgumentError(\\\"invalid BlockTag\\\", \\\"blockTag\\\", blockTag);\\n                        }\\n                        return [4 /*yield*/, this._getInternalBlockNumber(100 + 2 * this.pollingInterval)];\\n                    case 2:\\n                        blockNumber = _a.sent();\\n                        blockNumber += blockTag;\\n                        if (blockNumber < 0) {\\n                            blockNumber = 0;\\n                        }\\n                        return [2 /*return*/, this.formatter.blockTag(blockNumber)];\\n                    case 3: return [2 /*return*/, this.formatter.blockTag(blockTag)];\\n                }\\n            });\\n        });\\n    };\\n    BaseProvider.prototype.getResolver = function (name) {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var currentName, addr, resolver, _a;\\n            return __generator(this, function (_b) {\\n                switch (_b.label) {\\n                    case 0:\\n                        currentName = name;\\n                        _b.label = 1;\\n                    case 1:\\n                        if (!true) return [3 /*break*/, 6];\\n                        if (currentName === \\\"\\\" || currentName === \\\".\\\") {\\n                            return [2 /*return*/, null];\\n                        }\\n                        // Optimization since the eth node cannot change and does\\n                        // not have a wildcard resolver\\n                        if (name !== \\\"eth\\\" && currentName === \\\"eth\\\") {\\n                            return [2 /*return*/, null];\\n                        }\\n                        return [4 /*yield*/, this._getResolver(currentName, \\\"getResolver\\\")];\\n                    case 2:\\n                        addr = _b.sent();\\n                        if (!(addr != null)) return [3 /*break*/, 5];\\n                        resolver = new Resolver(this, addr, name);\\n                        _a = currentName !== name;\\n                        if (!_a) return [3 /*break*/, 4];\\n                        return [4 /*yield*/, resolver.supportsWildcard()];\\n                    case 3:\\n                        _a = !(_b.sent());\\n                        _b.label = 4;\\n                    case 4:\\n                        // Legacy resolver found, using EIP-2544 so it isn't safe to use\\n                        if (_a) {\\n                            return [2 /*return*/, null];\\n                        }\\n                        return [2 /*return*/, resolver];\\n                    case 5:\\n                        // Get the parent node\\n                        currentName = currentName.split(\\\".\\\").slice(1).join(\\\".\\\");\\n                        return [3 /*break*/, 1];\\n                    case 6: return [2 /*return*/];\\n                }\\n            });\\n        });\\n    };\\n    BaseProvider.prototype._getResolver = function (name, operation) {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var network, addrData, error_10;\\n            return __generator(this, function (_a) {\\n                switch (_a.label) {\\n                    case 0:\\n                        if (operation == null) {\\n                            operation = \\\"ENS\\\";\\n                        }\\n                        return [4 /*yield*/, this.getNetwork()];\\n                    case 1:\\n                        network = _a.sent();\\n                        // No ENS...\\n                        if (!network.ensAddress) {\\n                            logger.throwError(\\\"network does not support ENS\\\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, { operation: operation, network: network.name });\\n                        }\\n                        _a.label = 2;\\n                    case 2:\\n                        _a.trys.push([2, 4, , 5]);\\n                        return [4 /*yield*/, this.call({\\n                                to: network.ensAddress,\\n                                data: (\\\"0x0178b8bf\\\" + (0, hash_1.namehash)(name).substring(2))\\n                            })];\\n                    case 3:\\n                        addrData = _a.sent();\\n                        return [2 /*return*/, this.formatter.callAddress(addrData)];\\n                    case 4:\\n                        error_10 = _a.sent();\\n                        return [3 /*break*/, 5];\\n                    case 5: return [2 /*return*/, null];\\n                }\\n            });\\n        });\\n    };\\n    BaseProvider.prototype.resolveName = function (name) {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var resolver;\\n            return __generator(this, function (_a) {\\n                switch (_a.label) {\\n                    case 0: return [4 /*yield*/, name];\\n                    case 1:\\n                        name = _a.sent();\\n                        // If it is already an address, nothing to resolve\\n                        try {\\n                            return [2 /*return*/, Promise.resolve(this.formatter.address(name))];\\n                        }\\n                        catch (error) {\\n                            // If is is a hexstring, the address is bad (See #694)\\n                            if ((0, bytes_1.isHexString)(name)) {\\n                                throw error;\\n                            }\\n                        }\\n                        if (typeof (name) !== \\\"string\\\") {\\n                            logger.throwArgumentError(\\\"invalid ENS name\\\", \\\"name\\\", name);\\n                        }\\n                        return [4 /*yield*/, this.getResolver(name)];\\n                    case 2:\\n                        resolver = _a.sent();\\n                        if (!resolver) {\\n                            return [2 /*return*/, null];\\n                        }\\n                        return [4 /*yield*/, resolver.getAddress()];\\n                    case 3: return [2 /*return*/, _a.sent()];\\n                }\\n            });\\n        });\\n    };\\n    BaseProvider.prototype.lookupAddress = function (address) {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var node, resolverAddr, name, _a, addr;\\n            return __generator(this, function (_b) {\\n                switch (_b.label) {\\n                    case 0: return [4 /*yield*/, address];\\n                    case 1:\\n                        address = _b.sent();\\n                        address = this.formatter.address(address);\\n                        node = address.substring(2).toLowerCase() + \\\".addr.reverse\\\";\\n                        return [4 /*yield*/, this._getResolver(node, \\\"lookupAddress\\\")];\\n                    case 2:\\n                        resolverAddr = _b.sent();\\n                        if (resolverAddr == null) {\\n                            return [2 /*return*/, null];\\n                        }\\n                        _a = _parseString;\\n                        return [4 /*yield*/, this.call({\\n                                to: resolverAddr,\\n                                data: (\\\"0x691f3431\\\" + (0, hash_1.namehash)(node).substring(2))\\n                            })];\\n                    case 3:\\n                        name = _a.apply(void 0, [_b.sent(), 0]);\\n                        return [4 /*yield*/, this.resolveName(name)];\\n                    case 4:\\n                        addr = _b.sent();\\n                        if (addr != address) {\\n                            return [2 /*return*/, null];\\n                        }\\n                        return [2 /*return*/, name];\\n                }\\n            });\\n        });\\n    };\\n    BaseProvider.prototype.getAvatar = function (nameOrAddress) {\\n        return __awaiter(this, void 0, void 0, function () {\\n            var resolver, address, node, resolverAddress, avatar_1, error_11, name_1, _a, error_12, avatar;\\n            return __generator(this, function (_b) {\\n                switch (_b.label) {\\n                    case 0:\\n                        resolver = null;\\n                        if (!(0, bytes_1.isHexString)(nameOrAddress)) return [3 /*break*/, 10];\\n                        address = this.formatter.address(nameOrAddress);\\n                        node = address.substring(2).toLowerCase() + \\\".addr.reverse\\\";\\n                        return [4 /*yield*/, this._getResolver(node, \\\"getAvatar\\\")];\\n                    case 1:\\n                        resolverAddress = _b.sent();\\n                        if (!resolverAddress) {\\n                            return [2 /*return*/, null];\\n                        }\\n                        // Try resolving the avatar against the addr.reverse resolver\\n                        resolver = new Resolver(this, resolverAddress, node);\\n                        _b.label = 2;\\n                    case 2:\\n                        _b.trys.push([2, 4, , 5]);\\n                        return [4 /*yield*/, resolver.getAvatar()];\\n                    case 3:\\n                        avatar_1 = _b.sent();\\n                        if (avatar_1) {\\n                            return [2 /*return*/, avatar_1.url];\\n                        }\\n                        return [3 /*break*/, 5];\\n                    case 4:\\n                        error_11 = _b.sent();\\n                        if (error_11.code !== logger_1.Logger.errors.CALL_EXCEPTION) {\\n                            throw error_11;\\n                        }\\n                        return [3 /*break*/, 5];\\n                    case 5:\\n                        _b.trys.push([5, 8, , 9]);\\n                        _a = _parseString;\\n                        return [4 /*yield*/, this.call({\\n                                to: resolverAddress,\\n                                data: (\\\"0x691f3431\\\" + (0, hash_1.namehash)(node).substring(2))\\n                            })];\\n                    case 6:\\n                        name_1 = _a.apply(void 0, [_b.sent(), 0]);\\n                        return [4 /*yield*/, this.getResolver(name_1)];\\n                    case 7:\\n                        resolver = _b.sent();\\n                        return [3 /*break*/, 9];\\n                    case 8:\\n                        error_12 = _b.sent();\\n                        if (error_12.code !== logger_1.Logger.errors.CALL_EXCEPTION) {\\n                            throw error_12;\\n                        }\\n                        return [2 /*return*/, null];\\n                    case 9: return [3 /*break*/, 12];\\n                    case 10: return [4 /*yield*/, this.getResolver(nameOrAddress)];\\n                    case 11:\\n                        // ENS name; forward lookup with wildcard\\n                        resolver = _b.sent();\\n                        if (!resolver) {\\n                            return [2 /*return*/, null];\\n                        }\\n                        _b.label = 12;\\n                    case 12: return [4 /*yield*/, resolver.getAvatar()];\\n                    case 13:\\n                        avatar = _b.sent();\\n                        if (avatar == null) {\\n                            return [2 /*return*/, null];\\n                        }\\n                        return [2 /*return*/, avatar.url];\\n                }\\n            });\\n        });\\n    };\\n    BaseProvider.prototype.perform = function (method, params) {\\n        return logger.throwError(method + \\\" not implemented\\\", logger_1.Logger.errors.NOT_IMPLEMENTED, { operation: method });\\n    };\\n    BaseProvider.prototype._startEvent = function (event) {\\n        this.polling = (this._events.filter(function (e) { return e.pollable(); }).length > 0);\\n    };\\n    BaseProvider.prototype._stopEvent = function (event) {\\n        this.polling = (this._events.filter(function (e) { return e.pollable(); }).length > 0);\\n    };\\n    BaseProvider.prototype._addEventListener = function (eventName, listener, once) {\\n        var event = new Event(getEventTag(eventName), listener, once);\\n        this._events.push(event);\\n        this._startEvent(event);\\n        return this;\\n    };\\n    BaseProvider.prototype.on = function (eventName, listener) {\\n        return this._addEventListener(eventName, listener, false);\\n    };\\n    BaseProvider.prototype.once = function (eventName, listener) {\\n        return this._addEventListener(eventName, listener, true);\\n    };\\n    BaseProvider.prototype.emit = function (eventName) {\\n        var _this = this;\\n        var args = [];\\n        for (var _i = 1; _i < arguments.length; _i++) {\\n            args[_i - 1] = arguments[_i];\\n        }\\n        var result = false;\\n        var stopped = [];\\n        var eventTag = getEventTag(eventName);\\n        this._events = this._events.filter(function (event) {\\n            if (event.tag !== eventTag) {\\n                return true;\\n            }\\n            setTimeout(function () {\\n                event.listener.apply(_this, args);\\n            }, 0);\\n            result = true;\\n            if (event.once) {\\n                stopped.push(event);\\n                return false;\\n            }\\n            return true;\\n        });\\n        stopped.forEach(function (event) { _this._stopEvent(event); });\\n        return result;\\n    };\\n    BaseProvider.prototype.listenerCount = function (eventName) {\\n        if (!eventName) {\\n            return this._events.length;\\n        }\\n        var eventTag = getEventTag(eventName);\\n        return this._events.filter(function (event) {\\n            return (event.tag === eventTag);\\n        }).length;\\n    };\\n    BaseProvider.prototype.listeners = function (eventName) {\\n        if (eventName == null) {\\n            return this._events.map(function (event) { return event.listener; });\\n        }\\n        var eventTag = getEventTag(eventName);\\n        return this._events\\n            .filter(function (event) { return (event.tag === eventTag); })\\n            .map(function (event) { return event.listener; });\\n    };\\n    BaseProvider.prototype.off = function (eventName, listener) {\\n        var _this = this;\\n        if (listener == null) {\\n            return this.removeAllListeners(eventName);\\n        }\\n        var stopped = [];\\n        var found = false;\\n        var eventTag = getEventTag(eventName);\\n        this._events = this._events.filter(function (event) {\\n            if (event.tag !== eventTag || event.listener != listener) {\\n                return true;\\n            }\\n            if (found) {\\n                return true;\\n            }\\n            found = true;\\n            stopped.push(event);\\n            return false;\\n        });\\n        stopped.forEach(function (event) { _this._stopEvent(event); });\\n        return this;\\n    };\\n    BaseProvider.prototype.removeAllListeners = function (eventName) {\\n        var _this = this;\\n        var stopped = [];\\n        if (eventName == null) {\\n            stopped = this._events;\\n            this._events = [];\\n        }\\n        else {\\n            var eventTag_1 = getEventTag(eventName);\\n            this._events = this._events.filter(function (event) {\\n                if (event.tag !== eventTag_1) {\\n                    return true;\\n                }\\n                stopped.push(event);\\n                return false;\\n            });\\n        }\\n        stopped.forEach(function (event) { _this._stopEvent(event); });\\n        return this;\\n    };\\n    return BaseProvider;\\n}(abstract_provider_1.Provider));\\nexports.BaseProvider = BaseProvider;\\n//# sourceMappingURL=base-provider.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"checkTopic\",\"topic\",\"bytes_1\",\"hexDataLength\",\"logger\",\"throwArgumentError\",\"toLowerCase\",\"serializeTopics\",\"topics\",\"slice\",\"length\",\"pop\",\"map\",\"Array\",\"isArray\",\"unique_1\",\"forEach\",\"sorted\",\"Object\",\"keys\",\"sort\",\"join\",\"deserializeTopics\",\"data\",\"split\",\"comps\",\"getEventTag\",\"eventName\",\"indexOf\",\"abstract_provider_1\",\"ForkEvent\",\"isForkEvent\",\"warn\",\"Error\",\"address\",\"getTime\",\"Date\",\"stall\",\"duration\",\"Promise\",\"resolve\",\"setTimeout\",\"bytes32ify\",\"value\",\"hexZeroPad\",\"bignumber_1\",\"BigNumber\",\"from\",\"toHexString\",\"base58Encode\",\"basex_1\",\"Base58\",\"encode\",\"concat\",\"hexDataSlice\",\"sha2_1\",\"sha256\",\"_parseString\",\"result\",\"start\",\"strings_1\",\"toUtf8String\",\"_parseBytes\",\"error\",\"offset\",\"toNumber\",\"getIpfsLink\",\"link\",\"match\",\"substring\",\"numPad\",\"arrayify\",\"padded\",\"Uint8Array\",\"set\",\"encodeBytes\",\"datas\",\"byteCount\",\"i\",\"push\",\"Math\",\"ceil\",\"hexConcat\",\"__extends\",\"extendStatics\",\"d\",\"b\",\"setPrototypeOf\",\"__proto__\",\"p\",\"prototype\",\"hasOwnProperty\",\"call\",\"__\",\"constructor\",\"TypeError\",\"String\",\"create\",\"__awaiter\",\"thisArg\",\"_arguments\",\"P\",\"generator\",\"adopt\",\"reject\",\"fulfilled\",\"step\",\"next\",\"e\",\"rejected\",\"done\",\"then\",\"apply\",\"__generator\",\"body\",\"verb\",\"n\",\"v\",\"op\",\"f\",\"_\",\"y\",\"t\",\"label\",\"ops\",\"trys\",\"sent\",\"g\",\"Symbol\",\"iterator\",\"__importDefault\",\"mod\",\"__esModule\",\"defineProperty\",\"BaseProvider\",\"Resolver\",\"Event\",\"base64_1\",\"constants_1\",\"hash_1\",\"networks_1\",\"properties_1\",\"web_1\",\"bech32_1\",\"logger_1\",\"_version_1\",\"Logger\",\"version\",\"formatter_1\",\"PollableEvents\",\"tag\",\"listener\",\"once\",\"defineReadOnly\",\"_lastBlockNumber\",\"_inflight\",\"get\",\"type\",\"hash\",\"filter\",\"enumerable\",\"configurable\",\"pollable\",\"Event.prototype.pollable\",\"coinInfos\",\"symbol\",\"p2pkh\",\"p2sh\",\"prefix\",\"ilk\",\"matcherIpfs\",\"RegExp\",\"matchers\",\"provider\",\"name\",\"resolvedAddress\",\"formatter\",\"supportsWildcard\",\"Resolver.prototype.supportsWildcard\",\"_this\",\"_supportsEip2544\",\"to\",\"eq\",\"catch\",\"code\",\"errors\",\"CALL_EXCEPTION\",\"_fetch\",\"Resolver.prototype._fetch\",\"selector\",\"parameters\",\"tx\",\"parseBytes\",\"error_1\",\"_a\",\"ccipReadEnabled\",\"namehash\",\"dnsEncode\",\"throwError\",\"transaction\",\"_fetchBytes\",\"Resolver.prototype._fetchBytes\",\"_getAddress\",\"Resolver.prototype._getAddress\",\"coinType\",\"hexBytes\",\"coinInfo\",\"UNSUPPORTED_OPERATION\",\"operation\",\"bytes\",\"length_1\",\"parseInt\",\"length_2\",\"length_3\",\"version_1\",\"words\",\"default\",\"toWords\",\"unshift\",\"getAddress\",\"Resolver.prototype.getAddress\",\"error_2\",\"HashZero\",\"callAddress\",\"getAvatar\",\"Resolver.prototype.getAvatar\",\"linkage\",\"avatar\",\"scheme\",\"owner\",\"_b\",\"addr\",\"tokenId\",\"tokenOwner\",\"_c\",\"_d\",\"balance\",\"_e\",\"_f\",\"metadataUrl\",\"_g\",\"metadata\",\"imageUrl\",\"ipfs\",\"_h\",\"content\",\"getText\",\"url\",\"_resolvedAddress\",\"isZero\",\"toString\",\"replace\",\"fetchJson\",\"JSON\",\"stringify\",\"image\",\"getContentHash\",\"Resolver.prototype.getContentHash\",\"length_4\",\"ipns\",\"length_5\",\"swarm\",\"skynet\",\"urlSafe_1\",\"a\",\"Resolver.prototype.getText\",\"key\",\"keyBytes\",\"toUtf8Bytes\",\"hexlify\",\"defaultFormatter\",\"nextPollId\",\"_super\",\"network\",\"_newTarget\",\"_events\",\"_emitted\",\"block\",\"disableCcipRead\",\"getFormatter\",\"anyNetwork\",\"detectNetwork\",\"_networkPromise\",\"_ready\",\"knownNetwork\",\"getStatic\",\"emit\",\"_maxInternalBlockNumber\",\"_maxFilterBlockRange\",\"_pollingInterval\",\"_fastQueryDate\",\"BaseProvider.prototype._ready\",\"_network\",\"UNKNOWN_ERROR\",\"poll\",\"NETWORK_ERROR\",\"event\",\"BaseProvider.getFormatter\",\"Formatter\",\"getNetwork\",\"BaseProvider.getNetwork\",\"ccipReadFetch\",\"BaseProvider.prototype.ccipReadFetch\",\"calldata\",\"urls\",\"sender\",\"errorMessages\",\"href\",\"json\",\"errorMessage\",\"errorPassThrough\",\"response\",\"status\",\"statusCode\",\"message\",\"SERVER_ERROR\",\"m\",\"_getInternalBlockNumber\",\"BaseProvider.prototype._getInternalBlockNumber\",\"maxAge\",\"internalBlockNumber\",\"reqTime\",\"checkInternalBlockNumber\",\"_internalBlockNumber\",\"respTime\",\"blockNumber\",\"resolveProperties\",\"perform\",\"networkError\",\"_setFastBlockNumber\",\"BaseProvider.prototype.poll\",\"pollId\",\"runners\",\"error_6\",\"pollingInterval\",\"abs\",\"makeError\",\"previousBlockNumber\",\"eventBlockNumber\",\"hash_2\",\"runner\",\"getTransactionReceipt\",\"receipt\",\"filter_1\",\"fromBlock\",\"toBlock\",\"minFromBlock\",\"getLogs\",\"logs\",\"log\",\"blockHash\",\"transactionHash\",\"all\",\"resetEventsBlock\",\"BaseProvider.prototype.resetEventsBlock\",\"polling\",\"BaseProvider.prototype.detectNetwork\",\"BaseProvider.prototype.getNetwork\",\"currentNetwork\",\"chainId\",\"_fastBlockNumberPromise\",\"_fastBlockNumber\",\"detectedNetwork\",\"_poller\",\"setInterval\",\"_bootstrapPoll\",\"clearInterval\",\"_getFastBlockNumber\",\"BaseProvider.prototype._getFastBlockNumber\",\"now\",\"getBlockNumber\",\"BaseProvider.prototype._setFastBlockNumber\",\"waitForTransaction\",\"BaseProvider.prototype.waitForTransaction\",\"confirmations\",\"timeout\",\"_waitForTransaction\",\"BaseProvider.prototype._waitForTransaction\",\"replaceable\",\"cancelFuncs\",\"alreadyDone\",\"func\",\"minedHandler\",\"on\",\"removeListener\",\"lastBlockNumber_1\",\"startBlock\",\"scannedBlock_1\",\"replaceHandler_1\",\"getTransactionCount\",\"nonce\",\"mined\",\"ti\",\"receipt_1\",\"reason\",\"getTransaction\",\"getBlockWithTransactions\",\"transactions\",\"TRANSACTION_REPLACED\",\"cancelled\",\"replacement\",\"_wrapTransaction\",\"timer_1\",\"TIMEOUT\",\"unref\",\"clearTimeout\",\"BaseProvider.prototype.getBlockNumber\",\"getGasPrice\",\"BaseProvider.prototype.getGasPrice\",\"method\",\"getBalance\",\"BaseProvider.prototype.getBalance\",\"addressOrName\",\"blockTag\",\"params\",\"_getBlockTag\",\"BaseProvider.prototype.getTransactionCount\",\"getCode\",\"BaseProvider.prototype.getCode\",\"getStorageAt\",\"BaseProvider.prototype.getStorageAt\",\"position\",\"hexValue\",\"BaseProvider.prototype._wrapTransaction\",\"expectedHash\",\"returnedHash\",\"wait\",\"result.wait\",\"confirms\",\"undefined\",\"sendTransaction\",\"BaseProvider.prototype.sendTransaction\",\"signedTransaction\",\"hexTx\",\"error_7\",\"_getTransactionRequest\",\"BaseProvider.prototype._getTransactionRequest\",\"values\",\"accessList\",\"transactionRequest\",\"_getFilter\",\"BaseProvider.prototype._getFilter\",\"_call\",\"BaseProvider.prototype._call\",\"attempt\",\"txSender\",\"urlsOffset\",\"urlsLength\",\"urlsData\",\"u\",\"callbackSelector\",\"extraData\",\"ccipResult\",\"error_8\",\"MAX_CCIP_REDIRECTS\",\"redirects\",\"signature\",\"BaseProvider.prototype.call\",\"resolved\",\"estimateGas\",\"BaseProvider.prototype.estimateGas\",\"BaseProvider.prototype._getAddress\",\"resolveName\",\"_getBlock\",\"BaseProvider.prototype._getBlock\",\"blockHashOrBlockTag\",\"includeTransactions\",\"isHexString\",\"blockNumber_1\",\"blockWithTxs\",\"blockWithTransactions\",\"oncePoll\",\"getBlock\",\"BaseProvider.prototype.getBlock\",\"BaseProvider.prototype.getBlockWithTransactions\",\"BaseProvider.prototype.getTransaction\",\"transactionResponse\",\"BaseProvider.prototype.getTransactionReceipt\",\"BaseProvider.prototype.getLogs\",\"removed\",\"arrayOf\",\"filterLog\",\"bind\",\"getEtherPrice\",\"BaseProvider.prototype.getEtherPrice\",\"BaseProvider.prototype._getBlockTag\",\"getResolver\",\"BaseProvider.prototype.getResolver\",\"currentName\",\"resolver\",\"_getResolver\",\"BaseProvider.prototype._getResolver\",\"addrData\",\"ensAddress\",\"BaseProvider.prototype.resolveName\",\"lookupAddress\",\"BaseProvider.prototype.lookupAddress\",\"node\",\"resolverAddr\",\"BaseProvider.prototype.getAvatar\",\"nameOrAddress\",\"resolverAddress\",\"avatar_1\",\"error_11\",\"name_1\",\"error_12\",\"BaseProvider.prototype.perform\",\"NOT_IMPLEMENTED\",\"_startEvent\",\"BaseProvider.prototype._startEvent\",\"_stopEvent\",\"BaseProvider.prototype._stopEvent\",\"_addEventListener\",\"BaseProvider.prototype._addEventListener\",\"BaseProvider.prototype.on\",\"BaseProvider.prototype.once\",\"BaseProvider.prototype.emit\",\"args\",\"_i\",\"arguments\",\"stopped\",\"eventTag\",\"listenerCount\",\"BaseProvider.prototype.listenerCount\",\"listeners\",\"BaseProvider.prototype.listeners\",\"off\",\"BaseProvider.prototype.off\",\"removeAllListeners\",\"found\",\"BaseProvider.prototype.removeAllListeners\",\"eventTag_1\",\"Provider\"]\n}\n"]