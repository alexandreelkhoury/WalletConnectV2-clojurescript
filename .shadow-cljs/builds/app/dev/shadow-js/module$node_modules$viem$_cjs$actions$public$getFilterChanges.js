["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/viem/_cjs/actions/public/getFilterChanges.js"],"~:js","shadow$provide.module$node_modules$viem$_cjs$actions$public$getFilterChanges=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.getFilterChanges=void 0;const abi_js_1=require(\"module$node_modules$viem$_cjs$errors$abi\"),decodeEventLog_js_1=require(\"module$node_modules$viem$_cjs$utils$abi$decodeEventLog\"),log_js_1=require(\"module$node_modules$viem$_cjs$utils$formatters$log\");exports.getFilterChanges=async function(_client,{filter}){const strict=\"strict\"in\nfilter&&filter.strict;return(await filter.request({method:\"eth_getFilterChanges\",params:[filter.id]})).map(log=>{if(\"string\"===typeof log)return log;try{const {eventName,args}=\"abi\"in filter&&filter.abi?(0,decodeEventLog_js_1.decodeEventLog)({abi:filter.abi,data:log.data,topics:log.topics,strict}):{eventName:void 0,args:void 0};return(0,log_js_1.formatLog)(log,{args,eventName})}catch(err){let eventName,isUnnamed;if(err instanceof abi_js_1.DecodeLogDataMismatch||err instanceof abi_js_1.DecodeLogTopicsMismatch){if(\"strict\"in\nfilter&&filter.strict)return;eventName=err.abiItem.name;isUnnamed=err.abiItem.inputs?.some(x=>!(\"name\"in x&&x.name))}return(0,log_js_1.formatLog)(log,{args:isUnnamed?[]:{},eventName})}}).filter(Boolean)}}","~:source","shadow$provide[\"module$node_modules$viem$_cjs$actions$public$getFilterChanges\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFilterChanges = void 0;\nconst abi_js_1 = require(\"../../errors/abi.js\");\nconst decodeEventLog_js_1 = require(\"../../utils/abi/decodeEventLog.js\");\nconst log_js_1 = require(\"../../utils/formatters/log.js\");\nasync function getFilterChanges(_client, { filter, }) {\n    const strict = 'strict' in filter && filter.strict;\n    const logs = await filter.request({\n        method: 'eth_getFilterChanges',\n        params: [filter.id],\n    });\n    return logs\n        .map((log) => {\n        if (typeof log === 'string')\n            return log;\n        try {\n            const { eventName, args } = 'abi' in filter && filter.abi\n                ? (0, decodeEventLog_js_1.decodeEventLog)({\n                    abi: filter.abi,\n                    data: log.data,\n                    topics: log.topics,\n                    strict,\n                })\n                : { eventName: undefined, args: undefined };\n            return (0, log_js_1.formatLog)(log, { args, eventName });\n        }\n        catch (err) {\n            let eventName;\n            let isUnnamed;\n            if (err instanceof abi_js_1.DecodeLogDataMismatch ||\n                err instanceof abi_js_1.DecodeLogTopicsMismatch) {\n                if ('strict' in filter && filter.strict)\n                    return;\n                eventName = err.abiItem.name;\n                isUnnamed = err.abiItem.inputs?.some((x) => !('name' in x && x.name));\n            }\n            return (0, log_js_1.formatLog)(log, { args: isUnnamed ? [] : {}, eventName });\n        }\n    })\n        .filter(Boolean);\n}\nexports.getFilterChanges = getFilterChanges;\n//# sourceMappingURL=getFilterChanges.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$viem$_cjs$utils$formatters$log","~$shadow.js","~$module$node_modules$viem$_cjs$errors$abi","~$module$node_modules$viem$_cjs$utils$abi$decodeEventLog"]],"~:properties",["^5",["topics","abi","params","args","method","__esModule","eventName","value","strict","getFilterChanges","data"]],"~:compiled-at",1695111490269,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$viem$_cjs$actions$public$getFilterChanges.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,6DAAA,CAAkF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAE1HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAQI,CAAAA,gBAAR,CAA2B,IAAK,EAChC,OAAMC,SAAWP,OAAA,CAAQ,0CAAR,CAAjB,CACMQ,oBAAsBR,OAAA,CAAQ,wDAAR,CAD5B,CAEMS,SAAWT,OAAA,CAAQ,oDAAR,CAqCjBE,QAAQI,CAAAA,gBAAR,CApCAA,cAA+B,CAACI,OAAD,CAAU,CAAEC,MAAF,CAAV,CAAuB,CAClD,MAAMC,OAAS,QAATA;AAAqBD,MAArBC,EAA+BD,MAAOC,CAAAA,MAK5C,OACKC,CALQC,MAAMH,MAAOI,CAAAA,OAAP,CAAe,CAC9BC,OAAQ,sBADsB,CAE9BC,OAAQ,CAACN,MAAOO,CAAAA,EAAR,CAFsB,CAAf,CAKdL,EAAAA,GADE,CACGM,GAAD,EAAS,CACd,GAAmB,QAAnB,GAAI,MAAOA,IAAX,CACI,MAAOA,IACX,IAAI,CACA,MAAM,CAAEC,SAAF,CAAaC,IAAb,CAAA,CAAsB,KAAA,EAASV,OAAT,EAAmBA,MAAOW,CAAAA,GAA1B,CACtB,GAAId,mBAAoBe,CAAAA,cAAxB,EAAwC,CACtCD,IAAKX,MAAOW,CAAAA,GAD0B,CAEtCE,KAAML,GAAIK,CAAAA,IAF4B,CAGtCC,OAAQN,GAAIM,CAAAA,MAH0B,CAItCb,MAJsC,CAAxC,CADsB,CAOtB,CAAEQ,UAAWM,IAAAA,EAAb,CAAwBL,KAAMK,IAAAA,EAA9B,CACN,OAAO,GAAIjB,QAASkB,CAAAA,SAAb,EAAwBR,GAAxB,CAA6B,CAAEE,IAAF,CAAQD,SAAR,CAA7B,CATP,CAWJ,MAAOQ,GAAP,CAAY,CACR,IAAIR,SAAJ,CACIS,SACJ,IAAID,GAAJ,WAAmBrB,SAASuB,CAAAA,qBAA5B,EACIF,GADJ,WACmBrB,SAASwB,CAAAA,uBAD5B,CACqD,CACjD,GAAI,QAAJ;AAAgBpB,MAAhB,EAA0BA,MAAOC,CAAAA,MAAjC,CACI,MACJQ,UAAA,CAAYQ,GAAII,CAAAA,OAAQC,CAAAA,IACxBJ,UAAA,CAAYD,GAAII,CAAAA,OAAQE,CAAAA,MAAQC,EAAAA,IAApB,CAA0BC,CAAD,EAAO,EAAE,MAAF,EAAYA,EAAZ,EAAiBA,CAAEH,CAAAA,IAAnB,CAAhC,CAJqC,CAMrD,MAAO,GAAIxB,QAASkB,CAAAA,SAAb,EAAwBR,GAAxB,CAA6B,CAAEE,KAAMQ,SAAA,CAAY,EAAZ,CAAiB,EAAzB,CAA6BT,SAA7B,CAA7B,CAVC,CAdE,CADX,CA4BFT,CAAAA,MA5BE,CA4BK0B,OA5BL,CAN2C,CAPoE;\",\n\"sources\":[\"node_modules/viem/_cjs/actions/public/getFilterChanges.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$viem$_cjs$actions$public$getFilterChanges\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.getFilterChanges = void 0;\\nconst abi_js_1 = require(\\\"../../errors/abi.js\\\");\\nconst decodeEventLog_js_1 = require(\\\"../../utils/abi/decodeEventLog.js\\\");\\nconst log_js_1 = require(\\\"../../utils/formatters/log.js\\\");\\nasync function getFilterChanges(_client, { filter, }) {\\n    const strict = 'strict' in filter && filter.strict;\\n    const logs = await filter.request({\\n        method: 'eth_getFilterChanges',\\n        params: [filter.id],\\n    });\\n    return logs\\n        .map((log) => {\\n        if (typeof log === 'string')\\n            return log;\\n        try {\\n            const { eventName, args } = 'abi' in filter && filter.abi\\n                ? (0, decodeEventLog_js_1.decodeEventLog)({\\n                    abi: filter.abi,\\n                    data: log.data,\\n                    topics: log.topics,\\n                    strict,\\n                })\\n                : { eventName: undefined, args: undefined };\\n            return (0, log_js_1.formatLog)(log, { args, eventName });\\n        }\\n        catch (err) {\\n            let eventName;\\n            let isUnnamed;\\n            if (err instanceof abi_js_1.DecodeLogDataMismatch ||\\n                err instanceof abi_js_1.DecodeLogTopicsMismatch) {\\n                if ('strict' in filter && filter.strict)\\n                    return;\\n                eventName = err.abiItem.name;\\n                isUnnamed = err.abiItem.inputs?.some((x) => !('name' in x && x.name));\\n            }\\n            return (0, log_js_1.formatLog)(log, { args: isUnnamed ? [] : {}, eventName });\\n        }\\n    })\\n        .filter(Boolean);\\n}\\nexports.getFilterChanges = getFilterChanges;\\n//# sourceMappingURL=getFilterChanges.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"getFilterChanges\",\"abi_js_1\",\"decodeEventLog_js_1\",\"log_js_1\",\"_client\",\"filter\",\"strict\",\"map\",\"logs\",\"request\",\"method\",\"params\",\"id\",\"log\",\"eventName\",\"args\",\"abi\",\"decodeEventLog\",\"data\",\"topics\",\"undefined\",\"formatLog\",\"err\",\"isUnnamed\",\"DecodeLogDataMismatch\",\"DecodeLogTopicsMismatch\",\"abiItem\",\"name\",\"inputs\",\"some\",\"x\",\"Boolean\"]\n}\n"]