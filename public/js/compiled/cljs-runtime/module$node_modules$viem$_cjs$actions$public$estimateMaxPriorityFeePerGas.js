shadow$provide.module$node_modules$viem$_cjs$actions$public$estimateMaxPriorityFeePerGas=function(global,require,module,exports){async function internal_estimateMaxPriorityFeePerGas(client,args){const {block:block_,chain=client.chain,request}=args||{};if("function"===typeof chain?.fees?.defaultPriorityFee)return args=block_||await (0,getBlock_js_1.getBlock)(client),chain.fees.defaultPriorityFee({block:args,client,request});if(chain?.fees?.defaultPriorityFee)return chain?.fees?.defaultPriorityFee;
try{const maxPriorityFeePerGasHex=await client.request({method:"eth_maxPriorityFeePerGas"});return(0,fromHex_js_1.hexToBigInt)(maxPriorityFeePerGasHex)}catch{const [block,gasPrice]=await Promise.all([block_?Promise.resolve(block_):(0,getBlock_js_1.getBlock)(client),(0,getGasPrice_js_1.getGasPrice)(client)]);if("bigint"!==typeof block.baseFeePerGas)throw new fee_js_1.Eip1559FeesNotSupportedError;client=gasPrice-block.baseFeePerGas;return 0n>client?0n:client}}Object.defineProperty(exports,"__esModule",
{value:!0});exports.internal_estimateMaxPriorityFeePerGas=exports.estimateMaxPriorityFeePerGas=void 0;const fee_js_1=require("module$node_modules$viem$_cjs$errors$fee"),fromHex_js_1=require("module$node_modules$viem$_cjs$utils$encoding$fromHex"),getBlock_js_1=require("module$node_modules$viem$_cjs$actions$public$getBlock"),getGasPrice_js_1=require("module$node_modules$viem$_cjs$actions$public$getGasPrice");exports.estimateMaxPriorityFeePerGas=async function(client,args){return internal_estimateMaxPriorityFeePerGas(client,
args)};exports.internal_estimateMaxPriorityFeePerGas=internal_estimateMaxPriorityFeePerGas}
//# sourceMappingURL=module$node_modules$viem$_cjs$actions$public$estimateMaxPriorityFeePerGas.js.map
