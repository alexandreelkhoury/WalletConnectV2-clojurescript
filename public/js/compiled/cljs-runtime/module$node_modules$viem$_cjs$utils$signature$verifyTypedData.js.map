{
"version":3,
"file":"module$node_modules$viem$_cjs$utils$signature$verifyTypedData.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,6DAAA,CAAkF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAE1HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAQI,CAAAA,eAAR,CAA0B,IAAK,EAC/B,OAAMC,gBAAkBP,OAAA,CAAQ,wDAAR,CAAxB,CACMQ,oBAAsBR,OAAA,CAAQ,4DAAR,CAD5B,CAEMS,6BAA+BT,OAAA,CAAQ,uEAAR,CAUrCE,QAAQI,CAAAA,eAAR;AATAA,cAA8B,CAAC,CAAEI,OAAF,CAAWC,MAAX,CAAmBC,OAAnB,CAA4BC,WAA5B,CAAyCC,SAAzC,CAAoDC,KAApD,CAAD,CAA+D,CACzF,MAAO,GAAIP,mBAAoBQ,CAAAA,cAAxB,EAAwC,GAAIT,eAAgBU,CAAAA,UAApB,EAAgCP,OAAhC,CAAxC,CAAkF,MAAM,GAAID,4BAA6BS,CAAAA,uBAAjC,EAA0D,CACrJP,MADqJ,CAErJC,OAFqJ,CAGrJC,WAHqJ,CAIrJC,SAJqJ,CAKrJC,KALqJ,CAA1D,CAAxF,CADkF,CAP6B;",
"sources":["node_modules/viem/_cjs/utils/signature/verifyTypedData.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$viem$_cjs$utils$signature$verifyTypedData\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.verifyTypedData = void 0;\nconst getAddress_js_1 = require(\"../address/getAddress.js\");\nconst isAddressEqual_js_1 = require(\"../address/isAddressEqual.js\");\nconst recoverTypedDataAddress_js_1 = require(\"./recoverTypedDataAddress.js\");\nasync function verifyTypedData({ address, domain, message, primaryType, signature, types, }) {\n    return (0, isAddressEqual_js_1.isAddressEqual)((0, getAddress_js_1.getAddress)(address), await (0, recoverTypedDataAddress_js_1.recoverTypedDataAddress)({\n        domain,\n        message,\n        primaryType,\n        signature,\n        types,\n    }));\n}\nexports.verifyTypedData = verifyTypedData;\n//# sourceMappingURL=verifyTypedData.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","verifyTypedData","getAddress_js_1","isAddressEqual_js_1","recoverTypedDataAddress_js_1","address","domain","message","primaryType","signature","types","isAddressEqual","getAddress","recoverTypedDataAddress"]
}
