shadow$provide.module$node_modules$$ethersproject$hash$lib$ens_normalize$decoder=function(global,require,module,exports){function flat(array,depth$jscomp$0){null==depth$jscomp$0&&(depth$jscomp$0=1);var result=[],forEach=result.forEach,flatDeep=function(arr,depth){forEach.call(arr,function(val){0<depth&&Array.isArray(val)?flatDeep(val,depth-1):result.push(val)})};flatDeep(array,depth$jscomp$0);return result}function decode_arithmetic(bytes){function u16(){return bytes[pos++]<<8|bytes[pos++]}function read_bit(){0==
read_width&&(read_buffer=read_buffer<<8|bytes[pos++],read_width=8);return read_buffer>>--read_width&1}for(var pos=0,symbol_count=u16(),total=1,acc=[0,1],i=1;i<symbol_count;i++)acc.push(total+=u16());var skip=u16(),pos_payload=pos;pos+=skip;var read_width=0,read_buffer=0,FULL=Math.pow(2,31);skip=FULL>>>1;var QRTR=skip>>1,MASK=FULL-1,register=0;for(i=0;31>i;i++)register=register<<1|read_bit();i=[];for(var low=0;;){for(var value=Math.floor(((register-low+1)*total-1)/FULL),start=0,end=symbol_count;1<
end-start;){var mid=start+end>>>1;value<acc[mid]?end=mid:start=mid}if(0==start)break;i.push(start);value=low+Math.floor(FULL*acc[start]/total);for(FULL=low+Math.floor(FULL*acc[start+1]/total)-1;0==((value^FULL)&skip);)register=register<<1&MASK|read_bit(),value=value<<1&MASK,FULL=FULL<<1&MASK|1;for(;value&~FULL&QRTR;)register=register&skip|register<<1&MASK>>>1|read_bit(),value=value<<1^skip,FULL=(FULL^skip)<<1|skip|1;low=value;FULL=1+FULL-value}var offset=symbol_count-4;return i.map(function(x){switch(x-
offset){case 3:return offset+65792+(bytes[pos_payload++]<<16|bytes[pos_payload++]<<8|bytes[pos_payload++]);case 2:return offset+256+(bytes[pos_payload++]<<8|bytes[pos_payload++]);case 1:return offset+bytes[pos_payload++];default:return x-1}})}function read_payload(v){var pos=0;return function(){return v[pos++]}}function signed(i){return i&1?~i>>1:i>>1}function read_counts(n,next){for(var v=Array(n),i=0;i<n;i++)v[i]=1+next();return v}function read_ascending(n,next){for(var v=Array(n),i=0,x=-1;i<n;i++)v[i]=
x+=1+next();return v}function read_deltas(n,next){for(var v=Array(n),i=0,x=0;i<n;i++)v[i]=x+=signed(next());return v}function read_member_array(next,lookup){var v=read_ascending(next(),next),n=next(),vX=read_ascending(n,next);next=read_counts(n,next);for(var i=0;i<n;i++)for(var j=0;j<next[i];j++)v.push(vX[i]+j);return lookup?v.map(function(x){return lookup[x]}):v}function read_zero_terminated_array(next){for(var v=[];;){var i=next();if(0==i)break;v.push(i)}return v}function read_transposed(n,w,next){for(var m=
Array(n).fill(void 0).map(function(){return[]}),i=0;i<w;i++)read_deltas(n,next).forEach(function(x,j){return m[j].push(x)});return m}function read_linear_table(w,next){var dx=1+next(),dy=next(),vN=read_zero_terminated_array(next);w=read_transposed(vN.length,1+w,next);return flat(w.map(function(v,i){var x=v[0],ys=v.slice(1);return Array(vN[i]).fill(void 0).map(function(_,j){var j_dy=j*dy;return[x+j*dx,ys.map(function(y){return y+j_dy})]})}))}function read_replacement_table(w,next){var n=1+next();return read_transposed(n,
1+w,next).map(function(v){return[v[0],v.slice(1)]})}Object.defineProperty(exports,"__esModule",{value:!0});exports.read_emoji_trie=exports.read_zero_terminated_array=exports.read_mapped_map=exports.read_member_array=exports.signed=exports.read_compressed_payload=exports.read_payload=exports.decode_arithmetic=void 0;exports.decode_arithmetic=decode_arithmetic;exports.read_payload=read_payload;exports.read_compressed_payload=function(bytes){return read_payload(decode_arithmetic(bytes))};exports.signed=
signed;exports.read_member_array=read_member_array;exports.read_mapped_map=function(next){for(var ret=[];;){var w=next();if(0==w)break;ret.push(read_linear_table(w,next))}for(;;){w=next()-1;if(0>w)break;ret.push(read_replacement_table(w,next))}next=flat(ret);ret={};for(w=0;w<next.length;w++){var value=next[w];ret[value[0]]=value[1]}return ret};exports.read_zero_terminated_array=read_zero_terminated_array;exports.read_emoji_trie=function(next){function read(){for(var branches=[];;){var keys=read_member_array(next,
sorted);if(0==keys.length)break;branches.push({set:new Set(keys),node:read()})}branches.sort(function(a,b){return b.set.size-a.set.size});keys=next();var valid=keys%3;keys=keys/3|0;var fe0f=!!(keys&1);keys>>=1;return{branches,valid,fe0f,save:1==keys,check:2==keys}}var sorted=read_member_array(next).sort(function(a,b){return a-b});return read()}}
//# sourceMappingURL=module$node_modules$$ethersproject$hash$lib$ens_normalize$decoder.js.map
