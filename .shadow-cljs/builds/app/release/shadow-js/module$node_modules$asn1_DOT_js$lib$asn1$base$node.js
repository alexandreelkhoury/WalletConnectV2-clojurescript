["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/asn1_DOT_js/lib/asn1/base/node.js"],"~:js","shadow$provide[230]=function(S,A,V,q){function F(n,l,h){const k={};this._baseState=k;k.name=h;k.enc=n;k.parent=l||null;k.children=null;k.tag=null;k.args=null;k.reverseArgs=null;k.choice=null;k.optional=!1;k.any=!1;k.obj=!1;k.use=null;k.useDecoder=null;k.key=null;k[\"default\"]=null;k.explicit=null;k.implicit=null;k.contains=null;k.parent||(k.children=[],this._wrap())}const G=A(228).Reporter,r=A(229).EncoderBuffer,y=A(229).DecoderBuffer,e=A(71);S=\"seq seqof set setof objid bool gentime utctime null_ enum int objDesc bitstr bmpstr charstr genstr graphstr ia5str iso646str numstr octstr printstr t61str unistr utf8str videostr\".split(\" \");\nconst u=\"key obj use optional explicit implicit def choice any contains\".split(\" \").concat(S);V.exports=F;const p=\"enc parent children tag args reverseArgs choice optional any obj use alteredUse key default explicit implicit contains\".split(\" \");F.prototype.clone=function(){const n=this._baseState,l={};p.forEach(function(k){l[k]=n[k]});const h=new this.constructor(l.parent);h._baseState=l;return h};F.prototype._wrap=function(){const n=this._baseState;u.forEach(function(l){this[l]=function(){const h=\nnew this.constructor(this);n.children.push(h);return h[l].apply(h,arguments)}},this)};F.prototype._init=function(n){const l=this._baseState;e(null===l.parent);n.call(this);l.children=l.children.filter(function(h){return h._baseState.parent===this},this);e.equal(l.children.length,1,\"Root node can have only one child\")};F.prototype._useArgs=function(n){const l=this._baseState,h=n.filter(function(k){return k instanceof this.constructor},this);n=n.filter(function(k){return!(k instanceof this.constructor)},\nthis);0!==h.length&&(e(null===l.children),l.children=h,h.forEach(function(k){k._baseState.parent=this},this));0!==n.length&&(e(null===l.args),l.args=n,l.reverseArgs=n.map(function(k){if(\"object\"!==typeof k||k.constructor!==Object)return k;const t={};Object.keys(k).forEach(function(B){B==(B|0)&&(B|=0);t[k[B]]=B});return t}))};\"_peekTag _decodeTag _use _decodeStr _decodeObjid _decodeTime _decodeNull _decodeInt _decodeBool _decodeList _encodeComposite _encodeStr _encodeObjid _encodeTime _encodeNull _encodeInt _encodeBool\".split(\" \").forEach(function(n){F.prototype[n]=\nfunction(){throw Error(n+\" not implemented for encoding: \"+this._baseState.enc);}});S.forEach(function(n){F.prototype[n]=function(){const l=this._baseState,h=Array.prototype.slice.call(arguments);e(null===l.tag);l.tag=n;this._useArgs(h);return this}});F.prototype.use=function(n){e(n);const l=this._baseState;e(null===l.use);l.use=n;return this};F.prototype.optional=function(){this._baseState.optional=!0;return this};F.prototype.def=function(n){const l=this._baseState;e(null===l[\"default\"]);l[\"default\"]=\nn;l.optional=!0;return this};F.prototype.explicit=function(n){const l=this._baseState;e(null===l.explicit&&null===l.implicit);l.explicit=n;return this};F.prototype.implicit=function(n){const l=this._baseState;e(null===l.explicit&&null===l.implicit);l.implicit=n;return this};F.prototype.obj=function(){const n=this._baseState,l=Array.prototype.slice.call(arguments);n.obj=!0;0!==l.length&&this._useArgs(l);return this};F.prototype.key=function(n){const l=this._baseState;e(null===l.key);l.key=n;return this};\nF.prototype.any=function(){this._baseState.any=!0;return this};F.prototype.choice=function(n){const l=this._baseState;e(null===l.choice);l.choice=n;this._useArgs(Object.keys(n).map(function(h){return n[h]}));return this};F.prototype.contains=function(n){const l=this._baseState;e(null===l.use);l.contains=n;return this};F.prototype._decode=function(n,l){const h=this._baseState;if(null===h.parent)return n.wrapResult(h.children[0]._decode(n,l));var k=h[\"default\"];let t=!0,B=null;null!==h.key&&(B=n.enterKey(h.key));\nif(h.optional){var E=null;null!==h.explicit?E=h.explicit:null!==h.implicit?E=h.implicit:null!==h.tag&&(E=h.tag);if(null!==E||h.any){if(t=this._peekTag(n,E,h.any),n.isError(t))return t}else{E=n.save();try{null===h.choice?this._decodeGeneric(h.tag,n,l):this._decodeChoice(n,l),t=!0}catch(D){t=!1}n.restore(E)}}let H;h.obj&&t&&(H=n.enterObject());if(t){if(null!==h.explicit){E=this._decodeTag(n,h.explicit);if(n.isError(E))return E;n=E}E=n.offset;if(null===h.use&&null===h.choice){let D;h.any&&(D=n.save());\nconst C=this._decodeTag(n,null!==h.implicit?h.implicit:h.tag,h.any);if(n.isError(C))return C;h.any?k=n.raw(D):n=C}l&&l.track&&null!==h.tag&&l.track(n.path(),E,n.length,\"tagged\");l&&l.track&&null!==h.tag&&l.track(n.path(),n.offset,n.length,\"content\");h.any||(k=null===h.choice?this._decodeGeneric(h.tag,n,l):this._decodeChoice(n,l));if(n.isError(k))return k;h.any||null!==h.choice||null===h.children||h.children.forEach(function(D){D._decode(n,l)});!h.contains||\"octstr\"!==h.tag&&\"bitstr\"!==h.tag||(k=new y(k),\nk=this._getUse(h.contains,n._reporterState.obj)._decode(k,l))}h.obj&&t&&(k=n.leaveObject(H));null===h.key||null===k&&!0!==t?null!==B&&n.exitKey(B):n.leaveKey(B,h.key,k);return k};F.prototype._decodeGeneric=function(n,l,h){const k=this._baseState;return\"seq\"===n||\"set\"===n?null:\"seqof\"===n||\"setof\"===n?this._decodeList(l,n,k.args[0],h):/str$/.test(n)?this._decodeStr(l,n,h):\"objid\"===n&&k.args?this._decodeObjid(l,k.args[0],k.args[1],h):\"objid\"===n?this._decodeObjid(l,null,null,h):\"gentime\"===n||\"utctime\"===\nn?this._decodeTime(l,n,h):\"null_\"===n?this._decodeNull(l,h):\"bool\"===n?this._decodeBool(l,h):\"objDesc\"===n?this._decodeStr(l,n,h):\"int\"===n||\"enum\"===n?this._decodeInt(l,k.args&&k.args[0],h):null!==k.use?this._getUse(k.use,l._reporterState.obj)._decode(l,h):l.error(\"unknown tag: \"+n)};F.prototype._getUse=function(n,l){const h=this._baseState;h.useDecoder=this._use(n,l);e(null===h.useDecoder._baseState.parent);h.useDecoder=h.useDecoder._baseState.children[0];h.implicit!==h.useDecoder._baseState.implicit&&\n(h.useDecoder=h.useDecoder.clone(),h.useDecoder._baseState.implicit=h.implicit);return h.useDecoder};F.prototype._decodeChoice=function(n,l){const h=this._baseState;let k=null,t=!1;Object.keys(h.choice).some(function(B){const E=n.save(),H=h.choice[B];try{const D=H._decode(n,l);if(n.isError(D))return!1;k={type:B,value:D};t=!0}catch(D){return n.restore(E),!1}return!0},this);return t?k:n.error(\"Choice not matched\")};F.prototype._createEncoderBuffer=function(n){return new r(n,this.reporter)};F.prototype._encode=\nfunction(n,l,h){const k=this._baseState;if(null===k[\"default\"]||k[\"default\"]!==n)if(n=this._encodeValue(n,l,h),void 0!==n&&!this._skipDefault(n,l,h))return n};F.prototype._encodeValue=function(n,l,h){const k=this._baseState;if(null===k.parent)return k.children[0]._encode(n,l||new G);let t=null;this.reporter=l;if(k.optional&&void 0===n)if(null!==k[\"default\"])n=k[\"default\"];else return;var B=null;let E=!1;if(k.any)t=this._createEncoderBuffer(n);else if(k.choice)t=this._encodeChoice(n,l);else if(k.contains)B=\nthis._getUse(k.contains,h)._encode(n,l),E=!0;else if(k.children)B=k.children.map(function(H){if(\"null_\"===H._baseState.tag)return H._encode(null,l,n);if(null===H._baseState.key)return l.error(\"Child should have a key\");const D=l.enterKey(H._baseState.key);if(\"object\"!==typeof n)return l.error(\"Child expected, but input is not object\");H=H._encode(n[H._baseState.key],l,n);l.leaveKey(D);return H},this).filter(function(H){return H}),B=this._createEncoderBuffer(B);else if(\"seqof\"===k.tag||\"setof\"===k.tag){if(!k.args||\n1!==k.args.length)return l.error(\"Too many args for : \"+k.tag);if(!Array.isArray(n))return l.error(\"seqof/setof, but data is not Array\");B=this.clone();B._baseState.implicit=null;B=this._createEncoderBuffer(n.map(function(H){return this._getUse(this._baseState.args[0],n)._encode(H,l)},B))}else null!==k.use?t=this._getUse(k.use,h)._encode(n,l):(B=this._encodePrimitive(k.tag,n),E=!0);if(!k.any&&null===k.choice){h=null!==k.implicit?k.implicit:k.tag;const H=null===k.implicit?\"universal\":\"context\";null===\nh?null===k.use&&l.error(\"Tag could be omitted only for .use()\"):null===k.use&&(t=this._encodeComposite(h,E,H,B))}null!==k.explicit&&(t=this._encodeComposite(k.explicit,!1,\"context\",t));return t};F.prototype._encodeChoice=function(n,l){const h=this._baseState,k=h.choice[n.type];k||e(!1,n.type+\" not found in \"+JSON.stringify(Object.keys(h.choice)));return k._encode(n.value,l)};F.prototype._encodePrimitive=function(n,l){const h=this._baseState;if(/str$/.test(n))return this._encodeStr(l,n);if(\"objid\"===\nn&&h.args)return this._encodeObjid(l,h.reverseArgs[0],h.args[1]);if(\"objid\"===n)return this._encodeObjid(l,null,null);if(\"gentime\"===n||\"utctime\"===n)return this._encodeTime(l,n);if(\"null_\"===n)return this._encodeNull();if(\"int\"===n||\"enum\"===n)return this._encodeInt(l,h.args&&h.reverseArgs[0]);if(\"bool\"===n)return this._encodeBool(l);if(\"objDesc\"===n)return this._encodeStr(l,n);throw Error(\"Unsupported tag: \"+n);};F.prototype._isNumstr=function(n){return/^[0-9 ]*$/.test(n)};F.prototype._isPrintstr=\nfunction(n){return/^[A-Za-z0-9 '()+,-./:=?]*$/.test(n)}}","~:source","shadow$provide[230] = function(global,require,module,exports) {\n'use strict';\n\nconst Reporter = require('../base/reporter').Reporter;\nconst EncoderBuffer = require('../base/buffer').EncoderBuffer;\nconst DecoderBuffer = require('../base/buffer').DecoderBuffer;\nconst assert = require('minimalistic-assert');\n\n// Supported tags\nconst tags = [\n  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',\n  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',\n  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',\n  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'\n];\n\n// Public methods list\nconst methods = [\n  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',\n  'any', 'contains'\n].concat(tags);\n\n// Overrided methods list\nconst overrided = [\n  '_peekTag', '_decodeTag', '_use',\n  '_decodeStr', '_decodeObjid', '_decodeTime',\n  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',\n\n  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',\n  '_encodeNull', '_encodeInt', '_encodeBool'\n];\n\nfunction Node(enc, parent, name) {\n  const state = {};\n  this._baseState = state;\n\n  state.name = name;\n  state.enc = enc;\n\n  state.parent = parent || null;\n  state.children = null;\n\n  // State\n  state.tag = null;\n  state.args = null;\n  state.reverseArgs = null;\n  state.choice = null;\n  state.optional = false;\n  state.any = false;\n  state.obj = false;\n  state.use = null;\n  state.useDecoder = null;\n  state.key = null;\n  state['default'] = null;\n  state.explicit = null;\n  state.implicit = null;\n  state.contains = null;\n\n  // Should create new instance on each method\n  if (!state.parent) {\n    state.children = [];\n    this._wrap();\n  }\n}\nmodule.exports = Node;\n\nconst stateProps = [\n  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',\n  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',\n  'implicit', 'contains'\n];\n\nNode.prototype.clone = function clone() {\n  const state = this._baseState;\n  const cstate = {};\n  stateProps.forEach(function(prop) {\n    cstate[prop] = state[prop];\n  });\n  const res = new this.constructor(cstate.parent);\n  res._baseState = cstate;\n  return res;\n};\n\nNode.prototype._wrap = function wrap() {\n  const state = this._baseState;\n  methods.forEach(function(method) {\n    this[method] = function _wrappedMethod() {\n      const clone = new this.constructor(this);\n      state.children.push(clone);\n      return clone[method].apply(clone, arguments);\n    };\n  }, this);\n};\n\nNode.prototype._init = function init(body) {\n  const state = this._baseState;\n\n  assert(state.parent === null);\n  body.call(this);\n\n  // Filter children\n  state.children = state.children.filter(function(child) {\n    return child._baseState.parent === this;\n  }, this);\n  assert.equal(state.children.length, 1, 'Root node can have only one child');\n};\n\nNode.prototype._useArgs = function useArgs(args) {\n  const state = this._baseState;\n\n  // Filter children and args\n  const children = args.filter(function(arg) {\n    return arg instanceof this.constructor;\n  }, this);\n  args = args.filter(function(arg) {\n    return !(arg instanceof this.constructor);\n  }, this);\n\n  if (children.length !== 0) {\n    assert(state.children === null);\n    state.children = children;\n\n    // Replace parent to maintain backward link\n    children.forEach(function(child) {\n      child._baseState.parent = this;\n    }, this);\n  }\n  if (args.length !== 0) {\n    assert(state.args === null);\n    state.args = args;\n    state.reverseArgs = args.map(function(arg) {\n      if (typeof arg !== 'object' || arg.constructor !== Object)\n        return arg;\n\n      const res = {};\n      Object.keys(arg).forEach(function(key) {\n        if (key == (key | 0))\n          key |= 0;\n        const value = arg[key];\n        res[value] = key;\n      });\n      return res;\n    });\n  }\n};\n\n//\n// Overrided methods\n//\n\noverrided.forEach(function(method) {\n  Node.prototype[method] = function _overrided() {\n    const state = this._baseState;\n    throw new Error(method + ' not implemented for encoding: ' + state.enc);\n  };\n});\n\n//\n// Public methods\n//\n\ntags.forEach(function(tag) {\n  Node.prototype[tag] = function _tagMethod() {\n    const state = this._baseState;\n    const args = Array.prototype.slice.call(arguments);\n\n    assert(state.tag === null);\n    state.tag = tag;\n\n    this._useArgs(args);\n\n    return this;\n  };\n});\n\nNode.prototype.use = function use(item) {\n  assert(item);\n  const state = this._baseState;\n\n  assert(state.use === null);\n  state.use = item;\n\n  return this;\n};\n\nNode.prototype.optional = function optional() {\n  const state = this._baseState;\n\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.def = function def(val) {\n  const state = this._baseState;\n\n  assert(state['default'] === null);\n  state['default'] = val;\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.explicit = function explicit(num) {\n  const state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.explicit = num;\n\n  return this;\n};\n\nNode.prototype.implicit = function implicit(num) {\n  const state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.implicit = num;\n\n  return this;\n};\n\nNode.prototype.obj = function obj() {\n  const state = this._baseState;\n  const args = Array.prototype.slice.call(arguments);\n\n  state.obj = true;\n\n  if (args.length !== 0)\n    this._useArgs(args);\n\n  return this;\n};\n\nNode.prototype.key = function key(newKey) {\n  const state = this._baseState;\n\n  assert(state.key === null);\n  state.key = newKey;\n\n  return this;\n};\n\nNode.prototype.any = function any() {\n  const state = this._baseState;\n\n  state.any = true;\n\n  return this;\n};\n\nNode.prototype.choice = function choice(obj) {\n  const state = this._baseState;\n\n  assert(state.choice === null);\n  state.choice = obj;\n  this._useArgs(Object.keys(obj).map(function(key) {\n    return obj[key];\n  }));\n\n  return this;\n};\n\nNode.prototype.contains = function contains(item) {\n  const state = this._baseState;\n\n  assert(state.use === null);\n  state.contains = item;\n\n  return this;\n};\n\n//\n// Decoding\n//\n\nNode.prototype._decode = function decode(input, options) {\n  const state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return input.wrapResult(state.children[0]._decode(input, options));\n\n  let result = state['default'];\n  let present = true;\n\n  let prevKey = null;\n  if (state.key !== null)\n    prevKey = input.enterKey(state.key);\n\n  // Check if tag is there\n  if (state.optional) {\n    let tag = null;\n    if (state.explicit !== null)\n      tag = state.explicit;\n    else if (state.implicit !== null)\n      tag = state.implicit;\n    else if (state.tag !== null)\n      tag = state.tag;\n\n    if (tag === null && !state.any) {\n      // Trial and Error\n      const save = input.save();\n      try {\n        if (state.choice === null)\n          this._decodeGeneric(state.tag, input, options);\n        else\n          this._decodeChoice(input, options);\n        present = true;\n      } catch (e) {\n        present = false;\n      }\n      input.restore(save);\n    } else {\n      present = this._peekTag(input, tag, state.any);\n\n      if (input.isError(present))\n        return present;\n    }\n  }\n\n  // Push object on stack\n  let prevObj;\n  if (state.obj && present)\n    prevObj = input.enterObject();\n\n  if (present) {\n    // Unwrap explicit values\n    if (state.explicit !== null) {\n      const explicit = this._decodeTag(input, state.explicit);\n      if (input.isError(explicit))\n        return explicit;\n      input = explicit;\n    }\n\n    const start = input.offset;\n\n    // Unwrap implicit and normal values\n    if (state.use === null && state.choice === null) {\n      let save;\n      if (state.any)\n        save = input.save();\n      const body = this._decodeTag(\n        input,\n        state.implicit !== null ? state.implicit : state.tag,\n        state.any\n      );\n      if (input.isError(body))\n        return body;\n\n      if (state.any)\n        result = input.raw(save);\n      else\n        input = body;\n    }\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), start, input.length, 'tagged');\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), input.offset, input.length, 'content');\n\n    // Select proper method for tag\n    if (state.any) {\n      // no-op\n    } else if (state.choice === null) {\n      result = this._decodeGeneric(state.tag, input, options);\n    } else {\n      result = this._decodeChoice(input, options);\n    }\n\n    if (input.isError(result))\n      return result;\n\n    // Decode children\n    if (!state.any && state.choice === null && state.children !== null) {\n      state.children.forEach(function decodeChildren(child) {\n        // NOTE: We are ignoring errors here, to let parser continue with other\n        // parts of encoded data\n        child._decode(input, options);\n      });\n    }\n\n    // Decode contained/encoded by schema, only in bit or octet strings\n    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {\n      const data = new DecoderBuffer(result);\n      result = this._getUse(state.contains, input._reporterState.obj)\n        ._decode(data, options);\n    }\n  }\n\n  // Pop object\n  if (state.obj && present)\n    result = input.leaveObject(prevObj);\n\n  // Set key\n  if (state.key !== null && (result !== null || present === true))\n    input.leaveKey(prevKey, state.key, result);\n  else if (prevKey !== null)\n    input.exitKey(prevKey);\n\n  return result;\n};\n\nNode.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {\n  const state = this._baseState;\n\n  if (tag === 'seq' || tag === 'set')\n    return null;\n  if (tag === 'seqof' || tag === 'setof')\n    return this._decodeList(input, tag, state.args[0], options);\n  else if (/str$/.test(tag))\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'objid' && state.args)\n    return this._decodeObjid(input, state.args[0], state.args[1], options);\n  else if (tag === 'objid')\n    return this._decodeObjid(input, null, null, options);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._decodeTime(input, tag, options);\n  else if (tag === 'null_')\n    return this._decodeNull(input, options);\n  else if (tag === 'bool')\n    return this._decodeBool(input, options);\n  else if (tag === 'objDesc')\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'int' || tag === 'enum')\n    return this._decodeInt(input, state.args && state.args[0], options);\n\n  if (state.use !== null) {\n    return this._getUse(state.use, input._reporterState.obj)\n      ._decode(input, options);\n  } else {\n    return input.error('unknown tag: ' + tag);\n  }\n};\n\nNode.prototype._getUse = function _getUse(entity, obj) {\n\n  const state = this._baseState;\n  // Create altered use decoder if implicit is set\n  state.useDecoder = this._use(entity, obj);\n  assert(state.useDecoder._baseState.parent === null);\n  state.useDecoder = state.useDecoder._baseState.children[0];\n  if (state.implicit !== state.useDecoder._baseState.implicit) {\n    state.useDecoder = state.useDecoder.clone();\n    state.useDecoder._baseState.implicit = state.implicit;\n  }\n  return state.useDecoder;\n};\n\nNode.prototype._decodeChoice = function decodeChoice(input, options) {\n  const state = this._baseState;\n  let result = null;\n  let match = false;\n\n  Object.keys(state.choice).some(function(key) {\n    const save = input.save();\n    const node = state.choice[key];\n    try {\n      const value = node._decode(input, options);\n      if (input.isError(value))\n        return false;\n\n      result = { type: key, value: value };\n      match = true;\n    } catch (e) {\n      input.restore(save);\n      return false;\n    }\n    return true;\n  }, this);\n\n  if (!match)\n    return input.error('Choice not matched');\n\n  return result;\n};\n\n//\n// Encoding\n//\n\nNode.prototype._createEncoderBuffer = function createEncoderBuffer(data) {\n  return new EncoderBuffer(data, this.reporter);\n};\n\nNode.prototype._encode = function encode(data, reporter, parent) {\n  const state = this._baseState;\n  if (state['default'] !== null && state['default'] === data)\n    return;\n\n  const result = this._encodeValue(data, reporter, parent);\n  if (result === undefined)\n    return;\n\n  if (this._skipDefault(result, reporter, parent))\n    return;\n\n  return result;\n};\n\nNode.prototype._encodeValue = function encode(data, reporter, parent) {\n  const state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return state.children[0]._encode(data, reporter || new Reporter());\n\n  let result = null;\n\n  // Set reporter to share it with a child class\n  this.reporter = reporter;\n\n  // Check if data is there\n  if (state.optional && data === undefined) {\n    if (state['default'] !== null)\n      data = state['default'];\n    else\n      return;\n  }\n\n  // Encode children first\n  let content = null;\n  let primitive = false;\n  if (state.any) {\n    // Anything that was given is translated to buffer\n    result = this._createEncoderBuffer(data);\n  } else if (state.choice) {\n    result = this._encodeChoice(data, reporter);\n  } else if (state.contains) {\n    content = this._getUse(state.contains, parent)._encode(data, reporter);\n    primitive = true;\n  } else if (state.children) {\n    content = state.children.map(function(child) {\n      if (child._baseState.tag === 'null_')\n        return child._encode(null, reporter, data);\n\n      if (child._baseState.key === null)\n        return reporter.error('Child should have a key');\n      const prevKey = reporter.enterKey(child._baseState.key);\n\n      if (typeof data !== 'object')\n        return reporter.error('Child expected, but input is not object');\n\n      const res = child._encode(data[child._baseState.key], reporter, data);\n      reporter.leaveKey(prevKey);\n\n      return res;\n    }, this).filter(function(child) {\n      return child;\n    });\n    content = this._createEncoderBuffer(content);\n  } else {\n    if (state.tag === 'seqof' || state.tag === 'setof') {\n      // TODO(indutny): this should be thrown on DSL level\n      if (!(state.args && state.args.length === 1))\n        return reporter.error('Too many args for : ' + state.tag);\n\n      if (!Array.isArray(data))\n        return reporter.error('seqof/setof, but data is not Array');\n\n      const child = this.clone();\n      child._baseState.implicit = null;\n      content = this._createEncoderBuffer(data.map(function(item) {\n        const state = this._baseState;\n\n        return this._getUse(state.args[0], data)._encode(item, reporter);\n      }, child));\n    } else if (state.use !== null) {\n      result = this._getUse(state.use, parent)._encode(data, reporter);\n    } else {\n      content = this._encodePrimitive(state.tag, data);\n      primitive = true;\n    }\n  }\n\n  // Encode data itself\n  if (!state.any && state.choice === null) {\n    const tag = state.implicit !== null ? state.implicit : state.tag;\n    const cls = state.implicit === null ? 'universal' : 'context';\n\n    if (tag === null) {\n      if (state.use === null)\n        reporter.error('Tag could be omitted only for .use()');\n    } else {\n      if (state.use === null)\n        result = this._encodeComposite(tag, primitive, cls, content);\n    }\n  }\n\n  // Wrap in explicit\n  if (state.explicit !== null)\n    result = this._encodeComposite(state.explicit, false, 'context', result);\n\n  return result;\n};\n\nNode.prototype._encodeChoice = function encodeChoice(data, reporter) {\n  const state = this._baseState;\n\n  const node = state.choice[data.type];\n  if (!node) {\n    assert(\n      false,\n      data.type + ' not found in ' +\n            JSON.stringify(Object.keys(state.choice)));\n  }\n  return node._encode(data.value, reporter);\n};\n\nNode.prototype._encodePrimitive = function encodePrimitive(tag, data) {\n  const state = this._baseState;\n\n  if (/str$/.test(tag))\n    return this._encodeStr(data, tag);\n  else if (tag === 'objid' && state.args)\n    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);\n  else if (tag === 'objid')\n    return this._encodeObjid(data, null, null);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._encodeTime(data, tag);\n  else if (tag === 'null_')\n    return this._encodeNull();\n  else if (tag === 'int' || tag === 'enum')\n    return this._encodeInt(data, state.args && state.reverseArgs[0]);\n  else if (tag === 'bool')\n    return this._encodeBool(data);\n  else if (tag === 'objDesc')\n    return this._encodeStr(data, tag);\n  else\n    throw new Error('Unsupported tag: ' + tag);\n};\n\nNode.prototype._isNumstr = function isNumstr(str) {\n  return /^[0-9 ]*$/.test(str);\n};\n\nNode.prototype._isPrintstr = function isPrintstr(str) {\n  return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(str);\n};\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$asn1_DOT_js$lib$asn1$base$reporter","~$module$node_modules$asn1_DOT_js$lib$asn1$base$buffer","~$shadow.js","~$module$node_modules$minimalistic_assert$index"]],"~:properties",["^5",["reporter","_baseState","_decodeChoice","optional","obj","args","_decode","contains","key","parent","children","_decodeGeneric","implicit","_encodeChoice","_createEncoderBuffer","any","name","tag","value","_init","reverseArgs","_getUse","enc","explicit","type","_encodePrimitive","clone","useDecoder","_encode","_useArgs","def","_wrap","_encodeValue","_isPrintstr","use","_isNumstr","choice"]],"~:compiled-at",1695041440858,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$asn1_DOT_js$lib$asn1$base$node.js\",\n\"lineCount\":18,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/asn1_DOT_js/lib/asn1/base/node.js\"],\n\"sourcesContent\":[\"shadow$provide[230] = function(global,require,module,exports) {\\n'use strict';\\n\\nconst Reporter = require('../base/reporter').Reporter;\\nconst EncoderBuffer = require('../base/buffer').EncoderBuffer;\\nconst DecoderBuffer = require('../base/buffer').DecoderBuffer;\\nconst assert = require('minimalistic-assert');\\n\\n// Supported tags\\nconst tags = [\\n  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',\\n  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',\\n  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',\\n  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'\\n];\\n\\n// Public methods list\\nconst methods = [\\n  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',\\n  'any', 'contains'\\n].concat(tags);\\n\\n// Overrided methods list\\nconst overrided = [\\n  '_peekTag', '_decodeTag', '_use',\\n  '_decodeStr', '_decodeObjid', '_decodeTime',\\n  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',\\n\\n  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',\\n  '_encodeNull', '_encodeInt', '_encodeBool'\\n];\\n\\nfunction Node(enc, parent, name) {\\n  const state = {};\\n  this._baseState = state;\\n\\n  state.name = name;\\n  state.enc = enc;\\n\\n  state.parent = parent || null;\\n  state.children = null;\\n\\n  // State\\n  state.tag = null;\\n  state.args = null;\\n  state.reverseArgs = null;\\n  state.choice = null;\\n  state.optional = false;\\n  state.any = false;\\n  state.obj = false;\\n  state.use = null;\\n  state.useDecoder = null;\\n  state.key = null;\\n  state['default'] = null;\\n  state.explicit = null;\\n  state.implicit = null;\\n  state.contains = null;\\n\\n  // Should create new instance on each method\\n  if (!state.parent) {\\n    state.children = [];\\n    this._wrap();\\n  }\\n}\\nmodule.exports = Node;\\n\\nconst stateProps = [\\n  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',\\n  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',\\n  'implicit', 'contains'\\n];\\n\\nNode.prototype.clone = function clone() {\\n  const state = this._baseState;\\n  const cstate = {};\\n  stateProps.forEach(function(prop) {\\n    cstate[prop] = state[prop];\\n  });\\n  const res = new this.constructor(cstate.parent);\\n  res._baseState = cstate;\\n  return res;\\n};\\n\\nNode.prototype._wrap = function wrap() {\\n  const state = this._baseState;\\n  methods.forEach(function(method) {\\n    this[method] = function _wrappedMethod() {\\n      const clone = new this.constructor(this);\\n      state.children.push(clone);\\n      return clone[method].apply(clone, arguments);\\n    };\\n  }, this);\\n};\\n\\nNode.prototype._init = function init(body) {\\n  const state = this._baseState;\\n\\n  assert(state.parent === null);\\n  body.call(this);\\n\\n  // Filter children\\n  state.children = state.children.filter(function(child) {\\n    return child._baseState.parent === this;\\n  }, this);\\n  assert.equal(state.children.length, 1, 'Root node can have only one child');\\n};\\n\\nNode.prototype._useArgs = function useArgs(args) {\\n  const state = this._baseState;\\n\\n  // Filter children and args\\n  const children = args.filter(function(arg) {\\n    return arg instanceof this.constructor;\\n  }, this);\\n  args = args.filter(function(arg) {\\n    return !(arg instanceof this.constructor);\\n  }, this);\\n\\n  if (children.length !== 0) {\\n    assert(state.children === null);\\n    state.children = children;\\n\\n    // Replace parent to maintain backward link\\n    children.forEach(function(child) {\\n      child._baseState.parent = this;\\n    }, this);\\n  }\\n  if (args.length !== 0) {\\n    assert(state.args === null);\\n    state.args = args;\\n    state.reverseArgs = args.map(function(arg) {\\n      if (typeof arg !== 'object' || arg.constructor !== Object)\\n        return arg;\\n\\n      const res = {};\\n      Object.keys(arg).forEach(function(key) {\\n        if (key == (key | 0))\\n          key |= 0;\\n        const value = arg[key];\\n        res[value] = key;\\n      });\\n      return res;\\n    });\\n  }\\n};\\n\\n//\\n// Overrided methods\\n//\\n\\noverrided.forEach(function(method) {\\n  Node.prototype[method] = function _overrided() {\\n    const state = this._baseState;\\n    throw new Error(method + ' not implemented for encoding: ' + state.enc);\\n  };\\n});\\n\\n//\\n// Public methods\\n//\\n\\ntags.forEach(function(tag) {\\n  Node.prototype[tag] = function _tagMethod() {\\n    const state = this._baseState;\\n    const args = Array.prototype.slice.call(arguments);\\n\\n    assert(state.tag === null);\\n    state.tag = tag;\\n\\n    this._useArgs(args);\\n\\n    return this;\\n  };\\n});\\n\\nNode.prototype.use = function use(item) {\\n  assert(item);\\n  const state = this._baseState;\\n\\n  assert(state.use === null);\\n  state.use = item;\\n\\n  return this;\\n};\\n\\nNode.prototype.optional = function optional() {\\n  const state = this._baseState;\\n\\n  state.optional = true;\\n\\n  return this;\\n};\\n\\nNode.prototype.def = function def(val) {\\n  const state = this._baseState;\\n\\n  assert(state['default'] === null);\\n  state['default'] = val;\\n  state.optional = true;\\n\\n  return this;\\n};\\n\\nNode.prototype.explicit = function explicit(num) {\\n  const state = this._baseState;\\n\\n  assert(state.explicit === null && state.implicit === null);\\n  state.explicit = num;\\n\\n  return this;\\n};\\n\\nNode.prototype.implicit = function implicit(num) {\\n  const state = this._baseState;\\n\\n  assert(state.explicit === null && state.implicit === null);\\n  state.implicit = num;\\n\\n  return this;\\n};\\n\\nNode.prototype.obj = function obj() {\\n  const state = this._baseState;\\n  const args = Array.prototype.slice.call(arguments);\\n\\n  state.obj = true;\\n\\n  if (args.length !== 0)\\n    this._useArgs(args);\\n\\n  return this;\\n};\\n\\nNode.prototype.key = function key(newKey) {\\n  const state = this._baseState;\\n\\n  assert(state.key === null);\\n  state.key = newKey;\\n\\n  return this;\\n};\\n\\nNode.prototype.any = function any() {\\n  const state = this._baseState;\\n\\n  state.any = true;\\n\\n  return this;\\n};\\n\\nNode.prototype.choice = function choice(obj) {\\n  const state = this._baseState;\\n\\n  assert(state.choice === null);\\n  state.choice = obj;\\n  this._useArgs(Object.keys(obj).map(function(key) {\\n    return obj[key];\\n  }));\\n\\n  return this;\\n};\\n\\nNode.prototype.contains = function contains(item) {\\n  const state = this._baseState;\\n\\n  assert(state.use === null);\\n  state.contains = item;\\n\\n  return this;\\n};\\n\\n//\\n// Decoding\\n//\\n\\nNode.prototype._decode = function decode(input, options) {\\n  const state = this._baseState;\\n\\n  // Decode root node\\n  if (state.parent === null)\\n    return input.wrapResult(state.children[0]._decode(input, options));\\n\\n  let result = state['default'];\\n  let present = true;\\n\\n  let prevKey = null;\\n  if (state.key !== null)\\n    prevKey = input.enterKey(state.key);\\n\\n  // Check if tag is there\\n  if (state.optional) {\\n    let tag = null;\\n    if (state.explicit !== null)\\n      tag = state.explicit;\\n    else if (state.implicit !== null)\\n      tag = state.implicit;\\n    else if (state.tag !== null)\\n      tag = state.tag;\\n\\n    if (tag === null && !state.any) {\\n      // Trial and Error\\n      const save = input.save();\\n      try {\\n        if (state.choice === null)\\n          this._decodeGeneric(state.tag, input, options);\\n        else\\n          this._decodeChoice(input, options);\\n        present = true;\\n      } catch (e) {\\n        present = false;\\n      }\\n      input.restore(save);\\n    } else {\\n      present = this._peekTag(input, tag, state.any);\\n\\n      if (input.isError(present))\\n        return present;\\n    }\\n  }\\n\\n  // Push object on stack\\n  let prevObj;\\n  if (state.obj && present)\\n    prevObj = input.enterObject();\\n\\n  if (present) {\\n    // Unwrap explicit values\\n    if (state.explicit !== null) {\\n      const explicit = this._decodeTag(input, state.explicit);\\n      if (input.isError(explicit))\\n        return explicit;\\n      input = explicit;\\n    }\\n\\n    const start = input.offset;\\n\\n    // Unwrap implicit and normal values\\n    if (state.use === null && state.choice === null) {\\n      let save;\\n      if (state.any)\\n        save = input.save();\\n      const body = this._decodeTag(\\n        input,\\n        state.implicit !== null ? state.implicit : state.tag,\\n        state.any\\n      );\\n      if (input.isError(body))\\n        return body;\\n\\n      if (state.any)\\n        result = input.raw(save);\\n      else\\n        input = body;\\n    }\\n\\n    if (options && options.track && state.tag !== null)\\n      options.track(input.path(), start, input.length, 'tagged');\\n\\n    if (options && options.track && state.tag !== null)\\n      options.track(input.path(), input.offset, input.length, 'content');\\n\\n    // Select proper method for tag\\n    if (state.any) {\\n      // no-op\\n    } else if (state.choice === null) {\\n      result = this._decodeGeneric(state.tag, input, options);\\n    } else {\\n      result = this._decodeChoice(input, options);\\n    }\\n\\n    if (input.isError(result))\\n      return result;\\n\\n    // Decode children\\n    if (!state.any && state.choice === null && state.children !== null) {\\n      state.children.forEach(function decodeChildren(child) {\\n        // NOTE: We are ignoring errors here, to let parser continue with other\\n        // parts of encoded data\\n        child._decode(input, options);\\n      });\\n    }\\n\\n    // Decode contained/encoded by schema, only in bit or octet strings\\n    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {\\n      const data = new DecoderBuffer(result);\\n      result = this._getUse(state.contains, input._reporterState.obj)\\n        ._decode(data, options);\\n    }\\n  }\\n\\n  // Pop object\\n  if (state.obj && present)\\n    result = input.leaveObject(prevObj);\\n\\n  // Set key\\n  if (state.key !== null && (result !== null || present === true))\\n    input.leaveKey(prevKey, state.key, result);\\n  else if (prevKey !== null)\\n    input.exitKey(prevKey);\\n\\n  return result;\\n};\\n\\nNode.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {\\n  const state = this._baseState;\\n\\n  if (tag === 'seq' || tag === 'set')\\n    return null;\\n  if (tag === 'seqof' || tag === 'setof')\\n    return this._decodeList(input, tag, state.args[0], options);\\n  else if (/str$/.test(tag))\\n    return this._decodeStr(input, tag, options);\\n  else if (tag === 'objid' && state.args)\\n    return this._decodeObjid(input, state.args[0], state.args[1], options);\\n  else if (tag === 'objid')\\n    return this._decodeObjid(input, null, null, options);\\n  else if (tag === 'gentime' || tag === 'utctime')\\n    return this._decodeTime(input, tag, options);\\n  else if (tag === 'null_')\\n    return this._decodeNull(input, options);\\n  else if (tag === 'bool')\\n    return this._decodeBool(input, options);\\n  else if (tag === 'objDesc')\\n    return this._decodeStr(input, tag, options);\\n  else if (tag === 'int' || tag === 'enum')\\n    return this._decodeInt(input, state.args && state.args[0], options);\\n\\n  if (state.use !== null) {\\n    return this._getUse(state.use, input._reporterState.obj)\\n      ._decode(input, options);\\n  } else {\\n    return input.error('unknown tag: ' + tag);\\n  }\\n};\\n\\nNode.prototype._getUse = function _getUse(entity, obj) {\\n\\n  const state = this._baseState;\\n  // Create altered use decoder if implicit is set\\n  state.useDecoder = this._use(entity, obj);\\n  assert(state.useDecoder._baseState.parent === null);\\n  state.useDecoder = state.useDecoder._baseState.children[0];\\n  if (state.implicit !== state.useDecoder._baseState.implicit) {\\n    state.useDecoder = state.useDecoder.clone();\\n    state.useDecoder._baseState.implicit = state.implicit;\\n  }\\n  return state.useDecoder;\\n};\\n\\nNode.prototype._decodeChoice = function decodeChoice(input, options) {\\n  const state = this._baseState;\\n  let result = null;\\n  let match = false;\\n\\n  Object.keys(state.choice).some(function(key) {\\n    const save = input.save();\\n    const node = state.choice[key];\\n    try {\\n      const value = node._decode(input, options);\\n      if (input.isError(value))\\n        return false;\\n\\n      result = { type: key, value: value };\\n      match = true;\\n    } catch (e) {\\n      input.restore(save);\\n      return false;\\n    }\\n    return true;\\n  }, this);\\n\\n  if (!match)\\n    return input.error('Choice not matched');\\n\\n  return result;\\n};\\n\\n//\\n// Encoding\\n//\\n\\nNode.prototype._createEncoderBuffer = function createEncoderBuffer(data) {\\n  return new EncoderBuffer(data, this.reporter);\\n};\\n\\nNode.prototype._encode = function encode(data, reporter, parent) {\\n  const state = this._baseState;\\n  if (state['default'] !== null && state['default'] === data)\\n    return;\\n\\n  const result = this._encodeValue(data, reporter, parent);\\n  if (result === undefined)\\n    return;\\n\\n  if (this._skipDefault(result, reporter, parent))\\n    return;\\n\\n  return result;\\n};\\n\\nNode.prototype._encodeValue = function encode(data, reporter, parent) {\\n  const state = this._baseState;\\n\\n  // Decode root node\\n  if (state.parent === null)\\n    return state.children[0]._encode(data, reporter || new Reporter());\\n\\n  let result = null;\\n\\n  // Set reporter to share it with a child class\\n  this.reporter = reporter;\\n\\n  // Check if data is there\\n  if (state.optional && data === undefined) {\\n    if (state['default'] !== null)\\n      data = state['default'];\\n    else\\n      return;\\n  }\\n\\n  // Encode children first\\n  let content = null;\\n  let primitive = false;\\n  if (state.any) {\\n    // Anything that was given is translated to buffer\\n    result = this._createEncoderBuffer(data);\\n  } else if (state.choice) {\\n    result = this._encodeChoice(data, reporter);\\n  } else if (state.contains) {\\n    content = this._getUse(state.contains, parent)._encode(data, reporter);\\n    primitive = true;\\n  } else if (state.children) {\\n    content = state.children.map(function(child) {\\n      if (child._baseState.tag === 'null_')\\n        return child._encode(null, reporter, data);\\n\\n      if (child._baseState.key === null)\\n        return reporter.error('Child should have a key');\\n      const prevKey = reporter.enterKey(child._baseState.key);\\n\\n      if (typeof data !== 'object')\\n        return reporter.error('Child expected, but input is not object');\\n\\n      const res = child._encode(data[child._baseState.key], reporter, data);\\n      reporter.leaveKey(prevKey);\\n\\n      return res;\\n    }, this).filter(function(child) {\\n      return child;\\n    });\\n    content = this._createEncoderBuffer(content);\\n  } else {\\n    if (state.tag === 'seqof' || state.tag === 'setof') {\\n      // TODO(indutny): this should be thrown on DSL level\\n      if (!(state.args && state.args.length === 1))\\n        return reporter.error('Too many args for : ' + state.tag);\\n\\n      if (!Array.isArray(data))\\n        return reporter.error('seqof/setof, but data is not Array');\\n\\n      const child = this.clone();\\n      child._baseState.implicit = null;\\n      content = this._createEncoderBuffer(data.map(function(item) {\\n        const state = this._baseState;\\n\\n        return this._getUse(state.args[0], data)._encode(item, reporter);\\n      }, child));\\n    } else if (state.use !== null) {\\n      result = this._getUse(state.use, parent)._encode(data, reporter);\\n    } else {\\n      content = this._encodePrimitive(state.tag, data);\\n      primitive = true;\\n    }\\n  }\\n\\n  // Encode data itself\\n  if (!state.any && state.choice === null) {\\n    const tag = state.implicit !== null ? state.implicit : state.tag;\\n    const cls = state.implicit === null ? 'universal' : 'context';\\n\\n    if (tag === null) {\\n      if (state.use === null)\\n        reporter.error('Tag could be omitted only for .use()');\\n    } else {\\n      if (state.use === null)\\n        result = this._encodeComposite(tag, primitive, cls, content);\\n    }\\n  }\\n\\n  // Wrap in explicit\\n  if (state.explicit !== null)\\n    result = this._encodeComposite(state.explicit, false, 'context', result);\\n\\n  return result;\\n};\\n\\nNode.prototype._encodeChoice = function encodeChoice(data, reporter) {\\n  const state = this._baseState;\\n\\n  const node = state.choice[data.type];\\n  if (!node) {\\n    assert(\\n      false,\\n      data.type + ' not found in ' +\\n            JSON.stringify(Object.keys(state.choice)));\\n  }\\n  return node._encode(data.value, reporter);\\n};\\n\\nNode.prototype._encodePrimitive = function encodePrimitive(tag, data) {\\n  const state = this._baseState;\\n\\n  if (/str$/.test(tag))\\n    return this._encodeStr(data, tag);\\n  else if (tag === 'objid' && state.args)\\n    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);\\n  else if (tag === 'objid')\\n    return this._encodeObjid(data, null, null);\\n  else if (tag === 'gentime' || tag === 'utctime')\\n    return this._encodeTime(data, tag);\\n  else if (tag === 'null_')\\n    return this._encodeNull();\\n  else if (tag === 'int' || tag === 'enum')\\n    return this._encodeInt(data, state.args && state.reverseArgs[0]);\\n  else if (tag === 'bool')\\n    return this._encodeBool(data);\\n  else if (tag === 'objDesc')\\n    return this._encodeStr(data, tag);\\n  else\\n    throw new Error('Unsupported tag: ' + tag);\\n};\\n\\nNode.prototype._isNumstr = function isNumstr(str) {\\n  return /^[0-9 ]*$/.test(str);\\n};\\n\\nNode.prototype._isPrintstr = function isPrintstr(str) {\\n  return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(str);\\n};\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Node\",\"enc\",\"parent\",\"name\",\"state\",\"_baseState\",\"children\",\"tag\",\"args\",\"reverseArgs\",\"choice\",\"optional\",\"any\",\"obj\",\"use\",\"useDecoder\",\"key\",\"explicit\",\"implicit\",\"contains\",\"_wrap\",\"Reporter\",\"EncoderBuffer\",\"DecoderBuffer\",\"assert\",\"tags\",\"methods\",\"concat\",\"stateProps\",\"prototype\",\"clone\",\"Node.prototype.clone\",\"cstate\",\"forEach\",\"prop\",\"res\",\"constructor\",\"Node.prototype._wrap\",\"method\",\"push\",\"apply\",\"arguments\",\"_init\",\"Node.prototype._init\",\"body\",\"call\",\"filter\",\"child\",\"equal\",\"length\",\"_useArgs\",\"Node.prototype._useArgs\",\"arg\",\"map\",\"Object\",\"keys\",\"value\",\"overrided\",\"Error\",\"Array\",\"slice\",\"Node.prototype.use\",\"item\",\"Node.prototype.optional\",\"def\",\"Node.prototype.def\",\"val\",\"Node.prototype.explicit\",\"num\",\"Node.prototype.implicit\",\"Node.prototype.obj\",\"Node.prototype.key\",\"newKey\",\"Node.prototype.any\",\"Node.prototype.choice\",\"Node.prototype.contains\",\"_decode\",\"Node.prototype._decode\",\"input\",\"options\",\"wrapResult\",\"result\",\"present\",\"prevKey\",\"enterKey\",\"_peekTag\",\"isError\",\"save\",\"_decodeGeneric\",\"_decodeChoice\",\"e\",\"restore\",\"prevObj\",\"enterObject\",\"_decodeTag\",\"start\",\"offset\",\"raw\",\"track\",\"path\",\"decodeChildren\",\"data\",\"_getUse\",\"_reporterState\",\"leaveObject\",\"exitKey\",\"leaveKey\",\"Node.prototype._decodeGeneric\",\"_decodeList\",\"test\",\"_decodeStr\",\"_decodeObjid\",\"_decodeTime\",\"_decodeNull\",\"_decodeBool\",\"_decodeInt\",\"error\",\"Node.prototype._getUse\",\"entity\",\"_use\",\"Node.prototype._decodeChoice\",\"match\",\"some\",\"node\",\"type\",\"_createEncoderBuffer\",\"Node.prototype._createEncoderBuffer\",\"reporter\",\"_encode\",\"Node.prototype._encode\",\"_encodeValue\",\"undefined\",\"_skipDefault\",\"Node.prototype._encodeValue\",\"content\",\"primitive\",\"_encodeChoice\",\"isArray\",\"_encodePrimitive\",\"cls\",\"_encodeComposite\",\"Node.prototype._encodeChoice\",\"JSON\",\"stringify\",\"Node.prototype._encodePrimitive\",\"_encodeStr\",\"_encodeObjid\",\"_encodeTime\",\"_encodeNull\",\"_encodeInt\",\"_encodeBool\",\"_isNumstr\",\"Node.prototype._isNumstr\",\"str\",\"_isPrintstr\",\"Node.prototype._isPrintstr\"]\n}\n"]