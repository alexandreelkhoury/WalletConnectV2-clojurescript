["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/asn1_DOT_js/lib/asn1/base/buffer.js"],"~:js","shadow$provide[229]=function(S,A,V,q){function F(e,u){r.call(this,u);y.isBuffer(e)?(this.base=e,this.offset=0,this.length=e.length):this.error(\"Input not Buffer\")}function G(e,u){if(Array.isArray(e))this.length=0,this.value=e.map(function(p){G.isEncoderBuffer(p)||(p=new G(p,u));this.length+=p.length;return p},this);else if(\"number\"===typeof e){if(!(0<=e&&255>=e))return u.error(\"non-byte EncoderBuffer value\");this.value=e;this.length=1}else if(\"string\"===typeof e)this.value=e,this.length=y.byteLength(e);\nelse if(y.isBuffer(e))this.value=e,this.length=e.length;else return u.error(\"Unsupported type: \"+typeof e)}S=A(76);const r=A(228).Reporter,y=A(227).Buffer;S(F,r);q.DecoderBuffer=F;F.isDecoderBuffer=function(e){return e instanceof F?!0:\"object\"===typeof e&&y.isBuffer(e.base)&&\"DecoderBuffer\"===e.constructor.name&&\"number\"===typeof e.offset&&\"number\"===typeof e.length&&\"function\"===typeof e.save&&\"function\"===typeof e.restore&&\"function\"===typeof e.isEmpty&&\"function\"===typeof e.readUInt8&&\"function\"===\ntypeof e.skip&&\"function\"===typeof e.raw};F.prototype.save=function(){return{offset:this.offset,reporter:r.prototype.save.call(this)}};F.prototype.restore=function(e){const u=new F(this.base);u.offset=e.offset;u.length=this.offset;this.offset=e.offset;r.prototype.restore.call(this,e.reporter);return u};F.prototype.isEmpty=function(){return this.offset===this.length};F.prototype.readUInt8=function(e){return this.offset+1<=this.length?this.base.readUInt8(this.offset++,!0):this.error(e||\"DecoderBuffer overrun\")};\nF.prototype.skip=function(e,u){if(!(this.offset+e<=this.length))return this.error(u||\"DecoderBuffer overrun\");u=new F(this.base);u._reporterState=this._reporterState;u.offset=this.offset;u.length=this.offset+e;this.offset+=e;return u};F.prototype.raw=function(e){return this.base.slice(e?e.offset:this.offset,this.length)};q.EncoderBuffer=G;G.isEncoderBuffer=function(e){return e instanceof G?!0:\"object\"===typeof e&&\"EncoderBuffer\"===e.constructor.name&&\"number\"===typeof e.length&&\"function\"===typeof e.join};\nG.prototype.join=function(e,u){e||(e=y.alloc(this.length));u||(u=0);if(0===this.length)return e;Array.isArray(this.value)?this.value.forEach(function(p){p.join(e,u);u+=p.length}):(\"number\"===typeof this.value?e[u]=this.value:\"string\"===typeof this.value?e.write(this.value,u):y.isBuffer(this.value)&&this.value.copy(e,u),u+=this.length);return e}}","~:source","shadow$provide[229] = function(global,require,module,exports) {\n'use strict';\n\nconst inherits = require('inherits');\nconst Reporter = require('../base/reporter').Reporter;\nconst Buffer = require('safer-buffer').Buffer;\n\nfunction DecoderBuffer(base, options) {\n  Reporter.call(this, options);\n  if (!Buffer.isBuffer(base)) {\n    this.error('Input not Buffer');\n    return;\n  }\n\n  this.base = base;\n  this.offset = 0;\n  this.length = base.length;\n}\ninherits(DecoderBuffer, Reporter);\nexports.DecoderBuffer = DecoderBuffer;\n\nDecoderBuffer.isDecoderBuffer = function isDecoderBuffer(data) {\n  if (data instanceof DecoderBuffer) {\n    return true;\n  }\n\n  // Or accept compatible API\n  const isCompatible = typeof data === 'object' &&\n    Buffer.isBuffer(data.base) &&\n    data.constructor.name === 'DecoderBuffer' &&\n    typeof data.offset === 'number' &&\n    typeof data.length === 'number' &&\n    typeof data.save === 'function' &&\n    typeof data.restore === 'function' &&\n    typeof data.isEmpty === 'function' &&\n    typeof data.readUInt8 === 'function' &&\n    typeof data.skip === 'function' &&\n    typeof data.raw === 'function';\n\n  return isCompatible;\n};\n\nDecoderBuffer.prototype.save = function save() {\n  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };\n};\n\nDecoderBuffer.prototype.restore = function restore(save) {\n  // Return skipped data\n  const res = new DecoderBuffer(this.base);\n  res.offset = save.offset;\n  res.length = this.offset;\n\n  this.offset = save.offset;\n  Reporter.prototype.restore.call(this, save.reporter);\n\n  return res;\n};\n\nDecoderBuffer.prototype.isEmpty = function isEmpty() {\n  return this.offset === this.length;\n};\n\nDecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {\n  if (this.offset + 1 <= this.length)\n    return this.base.readUInt8(this.offset++, true);\n  else\n    return this.error(fail || 'DecoderBuffer overrun');\n};\n\nDecoderBuffer.prototype.skip = function skip(bytes, fail) {\n  if (!(this.offset + bytes <= this.length))\n    return this.error(fail || 'DecoderBuffer overrun');\n\n  const res = new DecoderBuffer(this.base);\n\n  // Share reporter state\n  res._reporterState = this._reporterState;\n\n  res.offset = this.offset;\n  res.length = this.offset + bytes;\n  this.offset += bytes;\n  return res;\n};\n\nDecoderBuffer.prototype.raw = function raw(save) {\n  return this.base.slice(save ? save.offset : this.offset, this.length);\n};\n\nfunction EncoderBuffer(value, reporter) {\n  if (Array.isArray(value)) {\n    this.length = 0;\n    this.value = value.map(function(item) {\n      if (!EncoderBuffer.isEncoderBuffer(item))\n        item = new EncoderBuffer(item, reporter);\n      this.length += item.length;\n      return item;\n    }, this);\n  } else if (typeof value === 'number') {\n    if (!(0 <= value && value <= 0xff))\n      return reporter.error('non-byte EncoderBuffer value');\n    this.value = value;\n    this.length = 1;\n  } else if (typeof value === 'string') {\n    this.value = value;\n    this.length = Buffer.byteLength(value);\n  } else if (Buffer.isBuffer(value)) {\n    this.value = value;\n    this.length = value.length;\n  } else {\n    return reporter.error('Unsupported type: ' + typeof value);\n  }\n}\nexports.EncoderBuffer = EncoderBuffer;\n\nEncoderBuffer.isEncoderBuffer = function isEncoderBuffer(data) {\n  if (data instanceof EncoderBuffer) {\n    return true;\n  }\n\n  // Or accept compatible API\n  const isCompatible = typeof data === 'object' &&\n    data.constructor.name === 'EncoderBuffer' &&\n    typeof data.length === 'number' &&\n    typeof data.join === 'function';\n\n  return isCompatible;\n};\n\nEncoderBuffer.prototype.join = function join(out, offset) {\n  if (!out)\n    out = Buffer.alloc(this.length);\n  if (!offset)\n    offset = 0;\n\n  if (this.length === 0)\n    return out;\n\n  if (Array.isArray(this.value)) {\n    this.value.forEach(function(item) {\n      item.join(out, offset);\n      offset += item.length;\n    });\n  } else {\n    if (typeof this.value === 'number')\n      out[offset] = this.value;\n    else if (typeof this.value === 'string')\n      out.write(this.value, offset);\n    else if (Buffer.isBuffer(this.value))\n      this.value.copy(out, offset);\n    offset += this.length;\n  }\n\n  return out;\n};\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$asn1_DOT_js$lib$asn1$base$reporter","~$shadow.js","~$module$node_modules$inherits$inherits_browser","~$module$node_modules$safer_buffer$safer"]],"~:properties",["^5",["skip","_reporterState","isEncoderBuffer","save","reporter","offset","readUInt8","base","EncoderBuffer","value","DecoderBuffer","isDecoderBuffer","length","join","isEmpty","restore","raw"]],"~:compiled-at",1695041440857,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$asn1_DOT_js$lib$asn1$base$buffer.js\",\n\"lineCount\":5,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/asn1_DOT_js/lib/asn1/base/buffer.js\"],\n\"sourcesContent\":[\"shadow$provide[229] = function(global,require,module,exports) {\\n'use strict';\\n\\nconst inherits = require('inherits');\\nconst Reporter = require('../base/reporter').Reporter;\\nconst Buffer = require('safer-buffer').Buffer;\\n\\nfunction DecoderBuffer(base, options) {\\n  Reporter.call(this, options);\\n  if (!Buffer.isBuffer(base)) {\\n    this.error('Input not Buffer');\\n    return;\\n  }\\n\\n  this.base = base;\\n  this.offset = 0;\\n  this.length = base.length;\\n}\\ninherits(DecoderBuffer, Reporter);\\nexports.DecoderBuffer = DecoderBuffer;\\n\\nDecoderBuffer.isDecoderBuffer = function isDecoderBuffer(data) {\\n  if (data instanceof DecoderBuffer) {\\n    return true;\\n  }\\n\\n  // Or accept compatible API\\n  const isCompatible = typeof data === 'object' &&\\n    Buffer.isBuffer(data.base) &&\\n    data.constructor.name === 'DecoderBuffer' &&\\n    typeof data.offset === 'number' &&\\n    typeof data.length === 'number' &&\\n    typeof data.save === 'function' &&\\n    typeof data.restore === 'function' &&\\n    typeof data.isEmpty === 'function' &&\\n    typeof data.readUInt8 === 'function' &&\\n    typeof data.skip === 'function' &&\\n    typeof data.raw === 'function';\\n\\n  return isCompatible;\\n};\\n\\nDecoderBuffer.prototype.save = function save() {\\n  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };\\n};\\n\\nDecoderBuffer.prototype.restore = function restore(save) {\\n  // Return skipped data\\n  const res = new DecoderBuffer(this.base);\\n  res.offset = save.offset;\\n  res.length = this.offset;\\n\\n  this.offset = save.offset;\\n  Reporter.prototype.restore.call(this, save.reporter);\\n\\n  return res;\\n};\\n\\nDecoderBuffer.prototype.isEmpty = function isEmpty() {\\n  return this.offset === this.length;\\n};\\n\\nDecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {\\n  if (this.offset + 1 <= this.length)\\n    return this.base.readUInt8(this.offset++, true);\\n  else\\n    return this.error(fail || 'DecoderBuffer overrun');\\n};\\n\\nDecoderBuffer.prototype.skip = function skip(bytes, fail) {\\n  if (!(this.offset + bytes <= this.length))\\n    return this.error(fail || 'DecoderBuffer overrun');\\n\\n  const res = new DecoderBuffer(this.base);\\n\\n  // Share reporter state\\n  res._reporterState = this._reporterState;\\n\\n  res.offset = this.offset;\\n  res.length = this.offset + bytes;\\n  this.offset += bytes;\\n  return res;\\n};\\n\\nDecoderBuffer.prototype.raw = function raw(save) {\\n  return this.base.slice(save ? save.offset : this.offset, this.length);\\n};\\n\\nfunction EncoderBuffer(value, reporter) {\\n  if (Array.isArray(value)) {\\n    this.length = 0;\\n    this.value = value.map(function(item) {\\n      if (!EncoderBuffer.isEncoderBuffer(item))\\n        item = new EncoderBuffer(item, reporter);\\n      this.length += item.length;\\n      return item;\\n    }, this);\\n  } else if (typeof value === 'number') {\\n    if (!(0 <= value && value <= 0xff))\\n      return reporter.error('non-byte EncoderBuffer value');\\n    this.value = value;\\n    this.length = 1;\\n  } else if (typeof value === 'string') {\\n    this.value = value;\\n    this.length = Buffer.byteLength(value);\\n  } else if (Buffer.isBuffer(value)) {\\n    this.value = value;\\n    this.length = value.length;\\n  } else {\\n    return reporter.error('Unsupported type: ' + typeof value);\\n  }\\n}\\nexports.EncoderBuffer = EncoderBuffer;\\n\\nEncoderBuffer.isEncoderBuffer = function isEncoderBuffer(data) {\\n  if (data instanceof EncoderBuffer) {\\n    return true;\\n  }\\n\\n  // Or accept compatible API\\n  const isCompatible = typeof data === 'object' &&\\n    data.constructor.name === 'EncoderBuffer' &&\\n    typeof data.length === 'number' &&\\n    typeof data.join === 'function';\\n\\n  return isCompatible;\\n};\\n\\nEncoderBuffer.prototype.join = function join(out, offset) {\\n  if (!out)\\n    out = Buffer.alloc(this.length);\\n  if (!offset)\\n    offset = 0;\\n\\n  if (this.length === 0)\\n    return out;\\n\\n  if (Array.isArray(this.value)) {\\n    this.value.forEach(function(item) {\\n      item.join(out, offset);\\n      offset += item.length;\\n    });\\n  } else {\\n    if (typeof this.value === 'number')\\n      out[offset] = this.value;\\n    else if (typeof this.value === 'string')\\n      out.write(this.value, offset);\\n    else if (Buffer.isBuffer(this.value))\\n      this.value.copy(out, offset);\\n    offset += this.length;\\n  }\\n\\n  return out;\\n};\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"DecoderBuffer\",\"base\",\"options\",\"Reporter\",\"call\",\"Buffer\",\"isBuffer\",\"offset\",\"length\",\"error\",\"EncoderBuffer\",\"value\",\"reporter\",\"Array\",\"isArray\",\"map\",\"item\",\"isEncoderBuffer\",\"byteLength\",\"inherits\",\"isDecoderBuffer\",\"DecoderBuffer.isDecoderBuffer\",\"data\",\"constructor\",\"name\",\"save\",\"restore\",\"isEmpty\",\"readUInt8\",\"skip\",\"raw\",\"prototype\",\"DecoderBuffer.prototype.save\",\"DecoderBuffer.prototype.restore\",\"res\",\"DecoderBuffer.prototype.isEmpty\",\"DecoderBuffer.prototype.readUInt8\",\"fail\",\"DecoderBuffer.prototype.skip\",\"bytes\",\"_reporterState\",\"DecoderBuffer.prototype.raw\",\"slice\",\"EncoderBuffer.isEncoderBuffer\",\"join\",\"EncoderBuffer.prototype.join\",\"out\",\"alloc\",\"forEach\",\"write\",\"copy\"]\n}\n"]