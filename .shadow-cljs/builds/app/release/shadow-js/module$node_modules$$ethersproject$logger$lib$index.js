["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@ethersproject/logger/lib/index.js"],"~:js","shadow$provide[9]=function(S,A,V,q){Object.defineProperty(q,\"__esModule\",{value:!0});q.Logger=q.ErrorCode=q.LogLevel=void 0;var F=!1,G=!1,r={debug:1,\"default\":2,info:2,warning:3,error:4,off:5},y=r[\"default\"],e=A(8),u=null,p=function(){try{var h=[];[\"NFD\",\"NFC\",\"NFKD\",\"NFKC\"].forEach(function(k){try{if(\"test\"!==\"test\".normalize(k))throw Error(\"bad normalize\");}catch(t){h.push(k)}});if(h.length)throw Error(\"missing \"+h.join(\", \"));if(String.fromCharCode(233).normalize(\"NFD\")!==String.fromCharCode(101,\n769))throw Error(\"broken implementation\");}catch(k){return k.message}return null}(),n;(function(h){h.DEBUG=\"DEBUG\";h.INFO=\"INFO\";h.WARNING=\"WARNING\";h.ERROR=\"ERROR\";h.OFF=\"OFF\"})(n=q.LogLevel||(q.LogLevel={}));var l;(function(h){h.UNKNOWN_ERROR=\"UNKNOWN_ERROR\";h.NOT_IMPLEMENTED=\"NOT_IMPLEMENTED\";h.UNSUPPORTED_OPERATION=\"UNSUPPORTED_OPERATION\";h.NETWORK_ERROR=\"NETWORK_ERROR\";h.SERVER_ERROR=\"SERVER_ERROR\";h.TIMEOUT=\"TIMEOUT\";h.BUFFER_OVERRUN=\"BUFFER_OVERRUN\";h.NUMERIC_FAULT=\"NUMERIC_FAULT\";h.MISSING_NEW=\n\"MISSING_NEW\";h.INVALID_ARGUMENT=\"INVALID_ARGUMENT\";h.MISSING_ARGUMENT=\"MISSING_ARGUMENT\";h.UNEXPECTED_ARGUMENT=\"UNEXPECTED_ARGUMENT\";h.CALL_EXCEPTION=\"CALL_EXCEPTION\";h.INSUFFICIENT_FUNDS=\"INSUFFICIENT_FUNDS\";h.NONCE_EXPIRED=\"NONCE_EXPIRED\";h.REPLACEMENT_UNDERPRICED=\"REPLACEMENT_UNDERPRICED\";h.UNPREDICTABLE_GAS_LIMIT=\"UNPREDICTABLE_GAS_LIMIT\";h.TRANSACTION_REPLACED=\"TRANSACTION_REPLACED\";h.ACTION_REJECTED=\"ACTION_REJECTED\"})(l=q.ErrorCode||(q.ErrorCode={}));S=function(){function h(k){Object.defineProperty(this,\n\"version\",{enumerable:!0,value:k,writable:!1})}h.prototype._log=function(k,t){var B=k.toLowerCase();null==r[B]&&this.throwArgumentError(\"invalid log level name\",\"logLevel\",k);y>r[B]||console.log.apply(console,t)};h.prototype.debug=function(){for(var k=[],t=0;t<arguments.length;t++)k[t]=arguments[t];this._log(h.levels.DEBUG,k)};h.prototype.info=function(){for(var k=[],t=0;t<arguments.length;t++)k[t]=arguments[t];this._log(h.levels.INFO,k)};h.prototype.warn=function(){for(var k=[],t=0;t<arguments.length;t++)k[t]=\narguments[t];this._log(h.levels.WARNING,k)};h.prototype.makeError=function(k,t,B){if(G)return this.makeError(\"censored error\",t,{});t||(t=h.errors.UNKNOWN_ERROR);B||(B={});var E=[];Object.keys(B).forEach(function(M){var P=B[M];try{if(P instanceof Uint8Array){for(var J=\"\",T=0;T<P.length;T++)J+=\"0123456789abcdef\"[P[T]>>4],J+=\"0123456789abcdef\"[P[T]&15];E.push(M+\"\\x3dUint8Array(0x\"+J+\")\")}else E.push(M+\"\\x3d\"+JSON.stringify(P))}catch(N){E.push(M+\"\\x3d\"+JSON.stringify(B[M].toString()))}});E.push(\"code\\x3d\"+\nt);E.push(\"version\\x3d\"+this.version);var H=k,D=\"\";switch(t){case l.NUMERIC_FAULT:D=\"NUMERIC_FAULT\";var C=k;switch(C){case \"overflow\":case \"underflow\":case \"division-by-zero\":D+=\"-\"+C;break;case \"negative-power\":case \"negative-width\":D+=\"-unsupported\";break;case \"unbound-bitwise-result\":D+=\"-unbound-result\"}break;case l.CALL_EXCEPTION:case l.INSUFFICIENT_FUNDS:case l.MISSING_NEW:case l.NONCE_EXPIRED:case l.REPLACEMENT_UNDERPRICED:case l.TRANSACTION_REPLACED:case l.UNPREDICTABLE_GAS_LIMIT:D=t}D&&(k+=\n\" [ See: https://links.ethers.org/v5-errors-\"+D+\" ]\");E.length&&(k+=\" (\"+E.join(\", \")+\")\");var I=Error(k);I.reason=H;I.code=t;Object.keys(B).forEach(function(M){I[M]=B[M]});return I};h.prototype.throwError=function(k,t,B){throw this.makeError(k,t,B);};h.prototype.throwArgumentError=function(k,t,B){return this.throwError(k,h.errors.INVALID_ARGUMENT,{argument:t,value:B})};h.prototype.assert=function(k,t,B,E){k||this.throwError(t,B,E)};h.prototype.assertArgument=function(k,t,B,E){k||this.throwArgumentError(t,\nB,E)};h.prototype.checkNormalize=function(k){p&&this.throwError(\"platform missing String.prototype.normalize\",h.errors.UNSUPPORTED_OPERATION,{operation:\"String.prototype.normalize\",form:p})};h.prototype.checkSafeUint53=function(k,t){\"number\"===typeof k&&(null==t&&(t=\"value not safe\"),(0>k||9007199254740991<=k)&&this.throwError(t,h.errors.NUMERIC_FAULT,{operation:\"checkSafeInteger\",fault:\"out-of-safe-range\",value:k}),k%1&&this.throwError(t,h.errors.NUMERIC_FAULT,{operation:\"checkSafeInteger\",fault:\"non-integer\",\nvalue:k}))};h.prototype.checkArgumentCount=function(k,t,B){B=B?\": \"+B:\"\";k<t&&this.throwError(\"missing argument\"+B,h.errors.MISSING_ARGUMENT,{count:k,expectedCount:t});k>t&&this.throwError(\"too many arguments\"+B,h.errors.UNEXPECTED_ARGUMENT,{count:k,expectedCount:t})};h.prototype.checkNew=function(k,t){k!==Object&&null!=k||this.throwError(\"missing new\",h.errors.MISSING_NEW,{name:t.name})};h.prototype.checkAbstract=function(k,t){k===t?this.throwError(\"cannot instantiate abstract class \"+JSON.stringify(t.name)+\n\" directly; use a sub-class\",h.errors.UNSUPPORTED_OPERATION,{name:k.name,operation:\"new\"}):(k===Object||null==k)&&this.throwError(\"missing new\",h.errors.MISSING_NEW,{name:t.name})};h.globalLogger=function(){u||(u=new h(e.version));return u};h.setCensorship=function(k,t){!k&&t&&this.globalLogger().throwError(\"cannot permanently disable censorship\",h.errors.UNSUPPORTED_OPERATION,{operation:\"setCensorship\"});if(F){if(!k)return;this.globalLogger().throwError(\"error censorship permanent\",h.errors.UNSUPPORTED_OPERATION,\n{operation:\"setCensorship\"})}G=!!k;F=!!t};h.setLogLevel=function(k){var t=r[k.toLowerCase()];null==t?h.globalLogger().warn(\"invalid log level - \"+k):y=t};h.from=function(k){return new h(k)};h.errors=l;h.levels=n;return h}();q.Logger=S}","~:source","shadow$provide[9] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Logger = exports.ErrorCode = exports.LogLevel = void 0;\nvar _permanentCensorErrors = false;\nvar _censorErrors = false;\nvar LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nvar _logLevel = LogLevels[\"default\"];\nvar _version_1 = require(\"./_version\");\nvar _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        var missing_1 = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach(function (form) {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing_1.push(form);\n            }\n        });\n        if (missing_1.length) {\n            throw new Error(\"missing \" + missing_1.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nvar _normalizeError = _checkNormalize();\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\nvar ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n    ///////////////////\n    // Interaction Errors\n    // The user rejected the action, such as signing a message or sending\n    // a transaction\n    ErrorCode[\"ACTION_REJECTED\"] = \"ACTION_REJECTED\";\n})(ErrorCode = exports.ErrorCode || (exports.ErrorCode = {}));\n;\nvar HEX = \"0123456789abcdef\";\nvar Logger = /** @class */ (function () {\n    function Logger(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    Logger.prototype._log = function (logLevel, args) {\n        var level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    };\n    Logger.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this._log(Logger.levels.DEBUG, args);\n    };\n    Logger.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this._log(Logger.levels.INFO, args);\n    };\n    Logger.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this._log(Logger.levels.WARNING, args);\n    };\n    Logger.prototype.makeError = function (message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        var messageDetails = [];\n        Object.keys(params).forEach(function (key) {\n            var value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    var hex = \"\";\n                    for (var i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(\"code=\" + code);\n        messageDetails.push(\"version=\" + this.version);\n        var reason = message;\n        var url = \"\";\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                var fault = message;\n                switch (fault) {\n                    case \"overflow\":\n                    case \"underflow\":\n                    case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\":\n                    case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        var error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    };\n    Logger.prototype.throwError = function (message, code, params) {\n        throw this.makeError(message, code, params);\n    };\n    Logger.prototype.throwArgumentError = function (message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    };\n    Logger.prototype.assert = function (condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    };\n    Logger.prototype.assertArgument = function (condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    };\n    Logger.prototype.checkNormalize = function (message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    };\n    Logger.prototype.checkSafeUint53 = function (value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    };\n    Logger.prototype.checkArgumentCount = function (count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    };\n    Logger.prototype.checkNew = function (target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    };\n    Logger.prototype.checkAbstract = function (target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    };\n    Logger.globalLogger = function () {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(_version_1.version);\n        }\n        return _globalLogger;\n    };\n    Logger.setCensorship = function (censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    };\n    Logger.setLogLevel = function (logLevel) {\n        var level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    };\n    Logger.from = function (version) {\n        return new Logger(version);\n    };\n    Logger.errors = ErrorCode;\n    Logger.levels = LogLevel;\n    return Logger;\n}());\nexports.Logger = Logger;\n//# sourceMappingURL=index.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$ethersproject$logger$lib$_version","~$shadow.js"]],"~:properties",["^5",["assertArgument","checkSafeUint53","setCensorship","throwError","warning","off","LogLevel","form","__esModule","info","warn","error","errors","count","name","checkNormalize","value","enumerable","ErrorCode","operation","expectedCount","writable","debug","checkAbstract","checkNew","levels","globalLogger","version","argument","_log","from","reason","throwArgumentError","setLogLevel","makeError","fault","code","assert","checkArgumentCount","Logger"]],"~:compiled-at",1695041440671,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$ethersproject$logger$lib$index.js\",\n\"lineCount\":11,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@ethersproject/logger/lib/index.js\"],\n\"sourcesContent\":[\"shadow$provide[9] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.Logger = exports.ErrorCode = exports.LogLevel = void 0;\\nvar _permanentCensorErrors = false;\\nvar _censorErrors = false;\\nvar LogLevels = { debug: 1, \\\"default\\\": 2, info: 2, warning: 3, error: 4, off: 5 };\\nvar _logLevel = LogLevels[\\\"default\\\"];\\nvar _version_1 = require(\\\"./_version\\\");\\nvar _globalLogger = null;\\nfunction _checkNormalize() {\\n    try {\\n        var missing_1 = [];\\n        // Make sure all forms of normalization are supported\\n        [\\\"NFD\\\", \\\"NFC\\\", \\\"NFKD\\\", \\\"NFKC\\\"].forEach(function (form) {\\n            try {\\n                if (\\\"test\\\".normalize(form) !== \\\"test\\\") {\\n                    throw new Error(\\\"bad normalize\\\");\\n                }\\n                ;\\n            }\\n            catch (error) {\\n                missing_1.push(form);\\n            }\\n        });\\n        if (missing_1.length) {\\n            throw new Error(\\\"missing \\\" + missing_1.join(\\\", \\\"));\\n        }\\n        if (String.fromCharCode(0xe9).normalize(\\\"NFD\\\") !== String.fromCharCode(0x65, 0x0301)) {\\n            throw new Error(\\\"broken implementation\\\");\\n        }\\n    }\\n    catch (error) {\\n        return error.message;\\n    }\\n    return null;\\n}\\nvar _normalizeError = _checkNormalize();\\nvar LogLevel;\\n(function (LogLevel) {\\n    LogLevel[\\\"DEBUG\\\"] = \\\"DEBUG\\\";\\n    LogLevel[\\\"INFO\\\"] = \\\"INFO\\\";\\n    LogLevel[\\\"WARNING\\\"] = \\\"WARNING\\\";\\n    LogLevel[\\\"ERROR\\\"] = \\\"ERROR\\\";\\n    LogLevel[\\\"OFF\\\"] = \\\"OFF\\\";\\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\\nvar ErrorCode;\\n(function (ErrorCode) {\\n    ///////////////////\\n    // Generic Errors\\n    // Unknown Error\\n    ErrorCode[\\\"UNKNOWN_ERROR\\\"] = \\\"UNKNOWN_ERROR\\\";\\n    // Not Implemented\\n    ErrorCode[\\\"NOT_IMPLEMENTED\\\"] = \\\"NOT_IMPLEMENTED\\\";\\n    // Unsupported Operation\\n    //   - operation\\n    ErrorCode[\\\"UNSUPPORTED_OPERATION\\\"] = \\\"UNSUPPORTED_OPERATION\\\";\\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\\n    //   - event (\\\"noNetwork\\\" is not re-thrown in provider.ready; otherwise thrown)\\n    ErrorCode[\\\"NETWORK_ERROR\\\"] = \\\"NETWORK_ERROR\\\";\\n    // Some sort of bad response from the server\\n    ErrorCode[\\\"SERVER_ERROR\\\"] = \\\"SERVER_ERROR\\\";\\n    // Timeout\\n    ErrorCode[\\\"TIMEOUT\\\"] = \\\"TIMEOUT\\\";\\n    ///////////////////\\n    // Operational  Errors\\n    // Buffer Overrun\\n    ErrorCode[\\\"BUFFER_OVERRUN\\\"] = \\\"BUFFER_OVERRUN\\\";\\n    // Numeric Fault\\n    //   - operation: the operation being executed\\n    //   - fault: the reason this faulted\\n    ErrorCode[\\\"NUMERIC_FAULT\\\"] = \\\"NUMERIC_FAULT\\\";\\n    ///////////////////\\n    // Argument Errors\\n    // Missing new operator to an object\\n    //  - name: The name of the class\\n    ErrorCode[\\\"MISSING_NEW\\\"] = \\\"MISSING_NEW\\\";\\n    // Invalid argument (e.g. value is incompatible with type) to a function:\\n    //   - argument: The argument name that was invalid\\n    //   - value: The value of the argument\\n    ErrorCode[\\\"INVALID_ARGUMENT\\\"] = \\\"INVALID_ARGUMENT\\\";\\n    // Missing argument to a function:\\n    //   - count: The number of arguments received\\n    //   - expectedCount: The number of arguments expected\\n    ErrorCode[\\\"MISSING_ARGUMENT\\\"] = \\\"MISSING_ARGUMENT\\\";\\n    // Too many arguments\\n    //   - count: The number of arguments received\\n    //   - expectedCount: The number of arguments expected\\n    ErrorCode[\\\"UNEXPECTED_ARGUMENT\\\"] = \\\"UNEXPECTED_ARGUMENT\\\";\\n    ///////////////////\\n    // Blockchain Errors\\n    // Call exception\\n    //  - transaction: the transaction\\n    //  - address?: the contract address\\n    //  - args?: The arguments passed into the function\\n    //  - method?: The Solidity method signature\\n    //  - errorSignature?: The EIP848 error signature\\n    //  - errorArgs?: The EIP848 error parameters\\n    //  - reason: The reason (only for EIP848 \\\"Error(string)\\\")\\n    ErrorCode[\\\"CALL_EXCEPTION\\\"] = \\\"CALL_EXCEPTION\\\";\\n    // Insufficient funds (< value + gasLimit * gasPrice)\\n    //   - transaction: the transaction attempted\\n    ErrorCode[\\\"INSUFFICIENT_FUNDS\\\"] = \\\"INSUFFICIENT_FUNDS\\\";\\n    // Nonce has already been used\\n    //   - transaction: the transaction attempted\\n    ErrorCode[\\\"NONCE_EXPIRED\\\"] = \\\"NONCE_EXPIRED\\\";\\n    // The replacement fee for the transaction is too low\\n    //   - transaction: the transaction attempted\\n    ErrorCode[\\\"REPLACEMENT_UNDERPRICED\\\"] = \\\"REPLACEMENT_UNDERPRICED\\\";\\n    // The gas limit could not be estimated\\n    //   - transaction: the transaction passed to estimateGas\\n    ErrorCode[\\\"UNPREDICTABLE_GAS_LIMIT\\\"] = \\\"UNPREDICTABLE_GAS_LIMIT\\\";\\n    // The transaction was replaced by one with a higher gas price\\n    //   - reason: \\\"cancelled\\\", \\\"replaced\\\" or \\\"repriced\\\"\\n    //   - cancelled: true if reason == \\\"cancelled\\\" or reason == \\\"replaced\\\")\\n    //   - hash: original transaction hash\\n    //   - replacement: the full TransactionsResponse for the replacement\\n    //   - receipt: the receipt of the replacement\\n    ErrorCode[\\\"TRANSACTION_REPLACED\\\"] = \\\"TRANSACTION_REPLACED\\\";\\n    ///////////////////\\n    // Interaction Errors\\n    // The user rejected the action, such as signing a message or sending\\n    // a transaction\\n    ErrorCode[\\\"ACTION_REJECTED\\\"] = \\\"ACTION_REJECTED\\\";\\n})(ErrorCode = exports.ErrorCode || (exports.ErrorCode = {}));\\n;\\nvar HEX = \\\"0123456789abcdef\\\";\\nvar Logger = /** @class */ (function () {\\n    function Logger(version) {\\n        Object.defineProperty(this, \\\"version\\\", {\\n            enumerable: true,\\n            value: version,\\n            writable: false\\n        });\\n    }\\n    Logger.prototype._log = function (logLevel, args) {\\n        var level = logLevel.toLowerCase();\\n        if (LogLevels[level] == null) {\\n            this.throwArgumentError(\\\"invalid log level name\\\", \\\"logLevel\\\", logLevel);\\n        }\\n        if (_logLevel > LogLevels[level]) {\\n            return;\\n        }\\n        console.log.apply(console, args);\\n    };\\n    Logger.prototype.debug = function () {\\n        var args = [];\\n        for (var _i = 0; _i < arguments.length; _i++) {\\n            args[_i] = arguments[_i];\\n        }\\n        this._log(Logger.levels.DEBUG, args);\\n    };\\n    Logger.prototype.info = function () {\\n        var args = [];\\n        for (var _i = 0; _i < arguments.length; _i++) {\\n            args[_i] = arguments[_i];\\n        }\\n        this._log(Logger.levels.INFO, args);\\n    };\\n    Logger.prototype.warn = function () {\\n        var args = [];\\n        for (var _i = 0; _i < arguments.length; _i++) {\\n            args[_i] = arguments[_i];\\n        }\\n        this._log(Logger.levels.WARNING, args);\\n    };\\n    Logger.prototype.makeError = function (message, code, params) {\\n        // Errors are being censored\\n        if (_censorErrors) {\\n            return this.makeError(\\\"censored error\\\", code, {});\\n        }\\n        if (!code) {\\n            code = Logger.errors.UNKNOWN_ERROR;\\n        }\\n        if (!params) {\\n            params = {};\\n        }\\n        var messageDetails = [];\\n        Object.keys(params).forEach(function (key) {\\n            var value = params[key];\\n            try {\\n                if (value instanceof Uint8Array) {\\n                    var hex = \\\"\\\";\\n                    for (var i = 0; i < value.length; i++) {\\n                        hex += HEX[value[i] >> 4];\\n                        hex += HEX[value[i] & 0x0f];\\n                    }\\n                    messageDetails.push(key + \\\"=Uint8Array(0x\\\" + hex + \\\")\\\");\\n                }\\n                else {\\n                    messageDetails.push(key + \\\"=\\\" + JSON.stringify(value));\\n                }\\n            }\\n            catch (error) {\\n                messageDetails.push(key + \\\"=\\\" + JSON.stringify(params[key].toString()));\\n            }\\n        });\\n        messageDetails.push(\\\"code=\\\" + code);\\n        messageDetails.push(\\\"version=\\\" + this.version);\\n        var reason = message;\\n        var url = \\\"\\\";\\n        switch (code) {\\n            case ErrorCode.NUMERIC_FAULT: {\\n                url = \\\"NUMERIC_FAULT\\\";\\n                var fault = message;\\n                switch (fault) {\\n                    case \\\"overflow\\\":\\n                    case \\\"underflow\\\":\\n                    case \\\"division-by-zero\\\":\\n                        url += \\\"-\\\" + fault;\\n                        break;\\n                    case \\\"negative-power\\\":\\n                    case \\\"negative-width\\\":\\n                        url += \\\"-unsupported\\\";\\n                        break;\\n                    case \\\"unbound-bitwise-result\\\":\\n                        url += \\\"-unbound-result\\\";\\n                        break;\\n                }\\n                break;\\n            }\\n            case ErrorCode.CALL_EXCEPTION:\\n            case ErrorCode.INSUFFICIENT_FUNDS:\\n            case ErrorCode.MISSING_NEW:\\n            case ErrorCode.NONCE_EXPIRED:\\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\\n            case ErrorCode.TRANSACTION_REPLACED:\\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\\n                url = code;\\n                break;\\n        }\\n        if (url) {\\n            message += \\\" [ See: https:/\\\\/links.ethers.org/v5-errors-\\\" + url + \\\" ]\\\";\\n        }\\n        if (messageDetails.length) {\\n            message += \\\" (\\\" + messageDetails.join(\\\", \\\") + \\\")\\\";\\n        }\\n        // @TODO: Any??\\n        var error = new Error(message);\\n        error.reason = reason;\\n        error.code = code;\\n        Object.keys(params).forEach(function (key) {\\n            error[key] = params[key];\\n        });\\n        return error;\\n    };\\n    Logger.prototype.throwError = function (message, code, params) {\\n        throw this.makeError(message, code, params);\\n    };\\n    Logger.prototype.throwArgumentError = function (message, name, value) {\\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\\n            argument: name,\\n            value: value\\n        });\\n    };\\n    Logger.prototype.assert = function (condition, message, code, params) {\\n        if (!!condition) {\\n            return;\\n        }\\n        this.throwError(message, code, params);\\n    };\\n    Logger.prototype.assertArgument = function (condition, message, name, value) {\\n        if (!!condition) {\\n            return;\\n        }\\n        this.throwArgumentError(message, name, value);\\n    };\\n    Logger.prototype.checkNormalize = function (message) {\\n        if (message == null) {\\n            message = \\\"platform missing String.prototype.normalize\\\";\\n        }\\n        if (_normalizeError) {\\n            this.throwError(\\\"platform missing String.prototype.normalize\\\", Logger.errors.UNSUPPORTED_OPERATION, {\\n                operation: \\\"String.prototype.normalize\\\", form: _normalizeError\\n            });\\n        }\\n    };\\n    Logger.prototype.checkSafeUint53 = function (value, message) {\\n        if (typeof (value) !== \\\"number\\\") {\\n            return;\\n        }\\n        if (message == null) {\\n            message = \\\"value not safe\\\";\\n        }\\n        if (value < 0 || value >= 0x1fffffffffffff) {\\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\\n                operation: \\\"checkSafeInteger\\\",\\n                fault: \\\"out-of-safe-range\\\",\\n                value: value\\n            });\\n        }\\n        if (value % 1) {\\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\\n                operation: \\\"checkSafeInteger\\\",\\n                fault: \\\"non-integer\\\",\\n                value: value\\n            });\\n        }\\n    };\\n    Logger.prototype.checkArgumentCount = function (count, expectedCount, message) {\\n        if (message) {\\n            message = \\\": \\\" + message;\\n        }\\n        else {\\n            message = \\\"\\\";\\n        }\\n        if (count < expectedCount) {\\n            this.throwError(\\\"missing argument\\\" + message, Logger.errors.MISSING_ARGUMENT, {\\n                count: count,\\n                expectedCount: expectedCount\\n            });\\n        }\\n        if (count > expectedCount) {\\n            this.throwError(\\\"too many arguments\\\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\\n                count: count,\\n                expectedCount: expectedCount\\n            });\\n        }\\n    };\\n    Logger.prototype.checkNew = function (target, kind) {\\n        if (target === Object || target == null) {\\n            this.throwError(\\\"missing new\\\", Logger.errors.MISSING_NEW, { name: kind.name });\\n        }\\n    };\\n    Logger.prototype.checkAbstract = function (target, kind) {\\n        if (target === kind) {\\n            this.throwError(\\\"cannot instantiate abstract class \\\" + JSON.stringify(kind.name) + \\\" directly; use a sub-class\\\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \\\"new\\\" });\\n        }\\n        else if (target === Object || target == null) {\\n            this.throwError(\\\"missing new\\\", Logger.errors.MISSING_NEW, { name: kind.name });\\n        }\\n    };\\n    Logger.globalLogger = function () {\\n        if (!_globalLogger) {\\n            _globalLogger = new Logger(_version_1.version);\\n        }\\n        return _globalLogger;\\n    };\\n    Logger.setCensorship = function (censorship, permanent) {\\n        if (!censorship && permanent) {\\n            this.globalLogger().throwError(\\\"cannot permanently disable censorship\\\", Logger.errors.UNSUPPORTED_OPERATION, {\\n                operation: \\\"setCensorship\\\"\\n            });\\n        }\\n        if (_permanentCensorErrors) {\\n            if (!censorship) {\\n                return;\\n            }\\n            this.globalLogger().throwError(\\\"error censorship permanent\\\", Logger.errors.UNSUPPORTED_OPERATION, {\\n                operation: \\\"setCensorship\\\"\\n            });\\n        }\\n        _censorErrors = !!censorship;\\n        _permanentCensorErrors = !!permanent;\\n    };\\n    Logger.setLogLevel = function (logLevel) {\\n        var level = LogLevels[logLevel.toLowerCase()];\\n        if (level == null) {\\n            Logger.globalLogger().warn(\\\"invalid log level - \\\" + logLevel);\\n            return;\\n        }\\n        _logLevel = level;\\n    };\\n    Logger.from = function (version) {\\n        return new Logger(version);\\n    };\\n    Logger.errors = ErrorCode;\\n    Logger.levels = LogLevel;\\n    return Logger;\\n}());\\nexports.Logger = Logger;\\n//# sourceMappingURL=index.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"Logger\",\"ErrorCode\",\"LogLevel\",\"_permanentCensorErrors\",\"_censorErrors\",\"LogLevels\",\"debug\",\"info\",\"warning\",\"error\",\"off\",\"_logLevel\",\"_version_1\",\"_globalLogger\",\"_normalizeError\",\"_checkNormalize\",\"missing_1\",\"forEach\",\"form\",\"normalize\",\"Error\",\"push\",\"length\",\"join\",\"String\",\"fromCharCode\",\"message\",\"version\",\"enumerable\",\"writable\",\"prototype\",\"_log\",\"Logger.prototype._log\",\"logLevel\",\"args\",\"level\",\"toLowerCase\",\"throwArgumentError\",\"console\",\"log\",\"apply\",\"Logger.prototype.debug\",\"_i\",\"arguments\",\"levels\",\"DEBUG\",\"Logger.prototype.info\",\"INFO\",\"warn\",\"Logger.prototype.warn\",\"WARNING\",\"makeError\",\"Logger.prototype.makeError\",\"code\",\"params\",\"errors\",\"UNKNOWN_ERROR\",\"messageDetails\",\"keys\",\"key\",\"Uint8Array\",\"hex\",\"i\",\"HEX\",\"JSON\",\"stringify\",\"toString\",\"reason\",\"url\",\"NUMERIC_FAULT\",\"fault\",\"CALL_EXCEPTION\",\"INSUFFICIENT_FUNDS\",\"MISSING_NEW\",\"NONCE_EXPIRED\",\"REPLACEMENT_UNDERPRICED\",\"TRANSACTION_REPLACED\",\"UNPREDICTABLE_GAS_LIMIT\",\"throwError\",\"Logger.prototype.throwError\",\"Logger.prototype.throwArgumentError\",\"name\",\"INVALID_ARGUMENT\",\"argument\",\"assert\",\"Logger.prototype.assert\",\"condition\",\"assertArgument\",\"Logger.prototype.assertArgument\",\"checkNormalize\",\"Logger.prototype.checkNormalize\",\"UNSUPPORTED_OPERATION\",\"operation\",\"checkSafeUint53\",\"Logger.prototype.checkSafeUint53\",\"checkArgumentCount\",\"Logger.prototype.checkArgumentCount\",\"count\",\"expectedCount\",\"MISSING_ARGUMENT\",\"UNEXPECTED_ARGUMENT\",\"checkNew\",\"Logger.prototype.checkNew\",\"target\",\"kind\",\"checkAbstract\",\"Logger.prototype.checkAbstract\",\"globalLogger\",\"Logger.globalLogger\",\"setCensorship\",\"Logger.setCensorship\",\"censorship\",\"permanent\",\"setLogLevel\",\"Logger.setLogLevel\",\"from\",\"Logger.from\"]\n}\n"]