["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/browserify-aes/decrypter.js"],"~:js","shadow$provide[199]=function(S,A,V,q){function F(k,t,B){n.call(this);this._cache=new G;this._last=void 0;this._cipher=new l.AES(t);this._prev=e.from(B);this._mode=k;this._autopadding=!0}function G(){this.cache=e.allocUnsafe(0)}function r(k,t,B){k=u[k.toLowerCase()];if(!k)throw new TypeError(\"invalid suite type\");\"string\"===typeof B&&(B=e.from(B));if(\"GCM\"!==k.mode&&B.length!==k.iv)throw new TypeError(\"invalid iv length \"+B.length);\"string\"===typeof t&&(t=e.from(t));if(t.length!==k.key/8)throw new TypeError(\"invalid key length \"+\nt.length);return\"stream\"===k.type?new p(k.module,t,B,!0):\"auth\"===k.type?new y(k.module,t,B,!0):new F(k.module,t,B)}var y=A(195),e=A(111).Buffer,u=A(192),p=A(196),n=A(162),l=A(193),h=A(197);A(76)(F,n);F.prototype._update=function(k){this._cache.add(k);var t;for(k=[];t=this._cache.get(this._autopadding);)t=this._mode.decrypt(this,t),k.push(t);return e.concat(k)};F.prototype._final=function(){var k=this._cache.flush();if(this._autopadding){k=this._mode.decrypt(this,k);var t=k[15];if(1>t||16<t)throw Error(\"unable to decrypt data\");\nfor(var B=-1;++B<t;)if(k[B+(16-t)]!==t)throw Error(\"unable to decrypt data\");k=16===t?void 0:k.slice(0,16-t);return k}if(k)throw Error(\"data not multiple of block length\");};F.prototype.setAutoPadding=function(k){this._autopadding=!!k;return this};G.prototype.add=function(k){this.cache=e.concat([this.cache,k])};G.prototype.get=function(k){if(k){if(16<this.cache.length)return k=this.cache.slice(0,16),this.cache=this.cache.slice(16),k}else if(16<=this.cache.length)return k=this.cache.slice(0,16),this.cache=\nthis.cache.slice(16),k;return null};G.prototype.flush=function(){if(this.cache.length)return this.cache};q.createDecipher=function(k,t){var B=u[k.toLowerCase()];if(!B)throw new TypeError(\"invalid suite type\");t=h(t,!1,B.key,B.iv);return r(k,t.key,t.iv)};q.createDecipheriv=r}","~:source","shadow$provide[199] = function(global,require,module,exports) {\nvar AuthCipher = require('./authCipher')\nvar Buffer = require('safe-buffer').Buffer\nvar MODES = require('./modes')\nvar StreamCipher = require('./streamCipher')\nvar Transform = require('cipher-base')\nvar aes = require('./aes')\nvar ebtk = require('evp_bytestokey')\nvar inherits = require('inherits')\n\nfunction Decipher (mode, key, iv) {\n  Transform.call(this)\n\n  this._cache = new Splitter()\n  this._last = void 0\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._mode = mode\n  this._autopadding = true\n}\n\ninherits(Decipher, Transform)\n\nDecipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n  while ((chunk = this._cache.get(this._autopadding))) {\n    thing = this._mode.decrypt(this, chunk)\n    out.push(thing)\n  }\n  return Buffer.concat(out)\n}\n\nDecipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    return unpad(this._mode.decrypt(this, chunk))\n  } else if (chunk) {\n    throw new Error('data not multiple of block length')\n  }\n}\n\nDecipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n  return this\n}\n\nfunction Splitter () {\n  this.cache = Buffer.allocUnsafe(0)\n}\n\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function (autoPadding) {\n  var out\n  if (autoPadding) {\n    if (this.cache.length > 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  } else {\n    if (this.cache.length >= 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  }\n\n  return null\n}\n\nSplitter.prototype.flush = function () {\n  if (this.cache.length) return this.cache\n}\n\nfunction unpad (last) {\n  var padded = last[15]\n  if (padded < 1 || padded > 16) {\n    throw new Error('unable to decrypt data')\n  }\n  var i = -1\n  while (++i < padded) {\n    if (last[(i + (16 - padded))] !== padded) {\n      throw new Error('unable to decrypt data')\n    }\n  }\n  if (padded === 16) return\n\n  return last.slice(0, 16 - padded)\n}\n\nfunction createDecipheriv (suite, password, iv) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  if (typeof iv === 'string') iv = Buffer.from(iv)\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)\n\n  if (typeof password === 'string') password = Buffer.from(password)\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)\n\n  if (config.type === 'stream') {\n    return new StreamCipher(config.module, password, iv, true)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(config.module, password, iv, true)\n  }\n\n  return new Decipher(config.module, password, iv)\n}\n\nfunction createDecipher (suite, password) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nexports.createDecipher = createDecipher\nexports.createDecipheriv = createDecipheriv\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$evp_bytestokey$index","~$module$node_modules$cipher_base$index","~$module$node_modules$browserify_aes$aes","~$shadow.js","~$module$node_modules$inherits$inherits_browser","~$module$node_modules$safe_buffer$index","~$module$node_modules$browserify_aes$authCipher","~$module$node_modules$browserify_aes$streamCipher","~$module$node_modules$browserify_aes$modes$index"]],"~:properties",["^5",["_cipher","setAutoPadding","_last","flush","createDecipher","_prev","_cache","cache","_autopadding","add","_final","_update","get","createDecipheriv","_mode"]],"~:compiled-at",1695041440828,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$browserify_aes$decrypter.js\",\n\"lineCount\":4,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/browserify-aes/decrypter.js\"],\n\"sourcesContent\":[\"shadow$provide[199] = function(global,require,module,exports) {\\nvar AuthCipher = require('./authCipher')\\nvar Buffer = require('safe-buffer').Buffer\\nvar MODES = require('./modes')\\nvar StreamCipher = require('./streamCipher')\\nvar Transform = require('cipher-base')\\nvar aes = require('./aes')\\nvar ebtk = require('evp_bytestokey')\\nvar inherits = require('inherits')\\n\\nfunction Decipher (mode, key, iv) {\\n  Transform.call(this)\\n\\n  this._cache = new Splitter()\\n  this._last = void 0\\n  this._cipher = new aes.AES(key)\\n  this._prev = Buffer.from(iv)\\n  this._mode = mode\\n  this._autopadding = true\\n}\\n\\ninherits(Decipher, Transform)\\n\\nDecipher.prototype._update = function (data) {\\n  this._cache.add(data)\\n  var chunk\\n  var thing\\n  var out = []\\n  while ((chunk = this._cache.get(this._autopadding))) {\\n    thing = this._mode.decrypt(this, chunk)\\n    out.push(thing)\\n  }\\n  return Buffer.concat(out)\\n}\\n\\nDecipher.prototype._final = function () {\\n  var chunk = this._cache.flush()\\n  if (this._autopadding) {\\n    return unpad(this._mode.decrypt(this, chunk))\\n  } else if (chunk) {\\n    throw new Error('data not multiple of block length')\\n  }\\n}\\n\\nDecipher.prototype.setAutoPadding = function (setTo) {\\n  this._autopadding = !!setTo\\n  return this\\n}\\n\\nfunction Splitter () {\\n  this.cache = Buffer.allocUnsafe(0)\\n}\\n\\nSplitter.prototype.add = function (data) {\\n  this.cache = Buffer.concat([this.cache, data])\\n}\\n\\nSplitter.prototype.get = function (autoPadding) {\\n  var out\\n  if (autoPadding) {\\n    if (this.cache.length > 16) {\\n      out = this.cache.slice(0, 16)\\n      this.cache = this.cache.slice(16)\\n      return out\\n    }\\n  } else {\\n    if (this.cache.length >= 16) {\\n      out = this.cache.slice(0, 16)\\n      this.cache = this.cache.slice(16)\\n      return out\\n    }\\n  }\\n\\n  return null\\n}\\n\\nSplitter.prototype.flush = function () {\\n  if (this.cache.length) return this.cache\\n}\\n\\nfunction unpad (last) {\\n  var padded = last[15]\\n  if (padded < 1 || padded > 16) {\\n    throw new Error('unable to decrypt data')\\n  }\\n  var i = -1\\n  while (++i < padded) {\\n    if (last[(i + (16 - padded))] !== padded) {\\n      throw new Error('unable to decrypt data')\\n    }\\n  }\\n  if (padded === 16) return\\n\\n  return last.slice(0, 16 - padded)\\n}\\n\\nfunction createDecipheriv (suite, password, iv) {\\n  var config = MODES[suite.toLowerCase()]\\n  if (!config) throw new TypeError('invalid suite type')\\n\\n  if (typeof iv === 'string') iv = Buffer.from(iv)\\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)\\n\\n  if (typeof password === 'string') password = Buffer.from(password)\\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)\\n\\n  if (config.type === 'stream') {\\n    return new StreamCipher(config.module, password, iv, true)\\n  } else if (config.type === 'auth') {\\n    return new AuthCipher(config.module, password, iv, true)\\n  }\\n\\n  return new Decipher(config.module, password, iv)\\n}\\n\\nfunction createDecipher (suite, password) {\\n  var config = MODES[suite.toLowerCase()]\\n  if (!config) throw new TypeError('invalid suite type')\\n\\n  var keys = ebtk(password, false, config.key, config.iv)\\n  return createDecipheriv(suite, keys.key, keys.iv)\\n}\\n\\nexports.createDecipher = createDecipher\\nexports.createDecipheriv = createDecipheriv\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Decipher\",\"mode\",\"key\",\"iv\",\"Transform\",\"call\",\"_cache\",\"Splitter\",\"_last\",\"_cipher\",\"aes\",\"AES\",\"_prev\",\"Buffer\",\"from\",\"_mode\",\"_autopadding\",\"cache\",\"allocUnsafe\",\"createDecipheriv\",\"suite\",\"password\",\"config\",\"MODES\",\"toLowerCase\",\"TypeError\",\"length\",\"type\",\"StreamCipher\",\"AuthCipher\",\"ebtk\",\"inherits\",\"prototype\",\"_update\",\"Decipher.prototype._update\",\"data\",\"add\",\"chunk\",\"out\",\"get\",\"thing\",\"decrypt\",\"push\",\"concat\",\"_final\",\"Decipher.prototype._final\",\"flush\",\"padded\",\"last\",\"Error\",\"i\",\"slice\",\"setAutoPadding\",\"Decipher.prototype.setAutoPadding\",\"setTo\",\"Splitter.prototype.add\",\"Splitter.prototype.get\",\"autoPadding\",\"Splitter.prototype.flush\",\"createDecipher\",\"keys\"]\n}\n"]