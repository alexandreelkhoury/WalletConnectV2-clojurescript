shadow$provide.module$node_modules$$noble$hashes$sha3=function(global,require,module,exports){function keccakP(s,rounds=24){const B=new Uint32Array(10);for(rounds=24-rounds;24>rounds;rounds++){for(var x=0;10>x;x++)B[x]=s[x]^s[x+10]^s[x+20]^s[x+30]^s[x+40];for(x=0;10>x;x+=2){var idx1=(x+8)%10,idx0=(x+2)%10,B0=B[idx0],B1=B[idx0+1];idx0=rotlH(B0,B1,1)^B[idx1];idx1=rotlL(B0,B1,1)^B[idx1+1];for(B0=0;50>B0;B0+=10)s[x+B0]^=idx0,s[x+B0+1]^=idx1}x=s[2];idx0=s[3];for(idx1=0;24>idx1;idx1++){B1=SHA3_ROTL[idx1];
B0=rotlH(x,idx0,B1);B1=rotlL(x,idx0,B1);const PI=SHA3_PI[idx1];x=s[PI];idx0=s[PI+1];s[PI]=B0;s[PI+1]=B1}for(x=0;50>x;x+=10){for(idx0=0;10>idx0;idx0++)B[idx0]=s[x+idx0];for(idx0=0;10>idx0;idx0++)s[x+idx0]^=~B[(idx0+2)%10]&B[(idx0+4)%10]}s[0]^=SHA3_IOTA_H[rounds];s[1]^=SHA3_IOTA_L[rounds]}B.fill(0)}Object.defineProperty(exports,"__esModule",{value:!0});exports.shake256=exports.shake128=exports.keccak_512=exports.keccak_384=exports.keccak_256=exports.keccak_224=exports.sha3_512=exports.sha3_384=exports.sha3_256=
exports.sha3_224=exports.Keccak=exports.keccakP=void 0;const _assert_js_1=require("module$node_modules$$noble$hashes$_assert"),_u64_js_1=require("module$node_modules$$noble$hashes$_u64"),utils_js_1=require("module$node_modules$$noble$hashes$utils"),[SHA3_PI,SHA3_ROTL,_SHA3_IOTA]=[[],[],[]];global=BigInt(0);require=BigInt(1);module=BigInt(2);const _7n=BigInt(7),_256n=BigInt(256),_0x71n=BigInt(113);for(let round=0,R=require,x=1,y=0;24>round;round++){[x,y]=[y,(2*x+3*y)%5];SHA3_PI.push(2*(5*y+x));SHA3_ROTL.push((round+
1)*(round+2)/2%64);let t=global;for(let j=0;7>j;j++)R=(R<<require^(R>>_7n)*_0x71n)%_256n,R&module&&(t^=require<<(require<<BigInt(j))-require);_SHA3_IOTA.push(t)}const [SHA3_IOTA_H,SHA3_IOTA_L]=(0,_u64_js_1.split)(_SHA3_IOTA,!0),rotlH=(h,l,s)=>32<s?(0,_u64_js_1.rotlBH)(h,l,s):(0,_u64_js_1.rotlSH)(h,l,s),rotlL=(h,l,s)=>32<s?(0,_u64_js_1.rotlBL)(h,l,s):(0,_u64_js_1.rotlSL)(h,l,s);exports.keccakP=keccakP;class Keccak extends utils_js_1.Hash{constructor(blockLen,suffix,outputLen,enableXOF=!1,rounds=24){super();
this.blockLen=blockLen;this.suffix=suffix;this.outputLen=outputLen;this.enableXOF=enableXOF;this.rounds=rounds;this.posOut=this.pos=0;this.destroyed=this.finished=!1;(0,_assert_js_1.number)(outputLen);if(0>=this.blockLen||200<=this.blockLen)throw Error("Sha3 supports only keccak-f1600 function");this.state=new Uint8Array(200);this.state32=(0,utils_js_1.u32)(this.state)}keccak(){keccakP(this.state32,this.rounds);this.pos=this.posOut=0}update(data){(0,_assert_js_1.exists)(this);const {blockLen,state}=
this;data=(0,utils_js_1.toBytes)(data);const len=data.length;for(let pos=0;pos<len;){const take=Math.min(blockLen-this.pos,len-pos);for(let i=0;i<take;i++)state[this.pos++]^=data[pos++];this.pos===blockLen&&this.keccak()}return this}finish(){if(!this.finished){this.finished=!0;var {state,suffix,pos,blockLen}=this;state[pos]^=suffix;0!==(suffix&128)&&pos===blockLen-1&&this.keccak();state[blockLen-1]^=128;this.keccak()}}writeInto(out){(0,_assert_js_1.exists)(this,!1);(0,_assert_js_1.bytes)(out);this.finish();
const bufferOut=this.state,{blockLen}=this;for(let pos=0,len=out.length;pos<len;){this.posOut>=blockLen&&this.keccak();const take=Math.min(blockLen-this.posOut,len-pos);out.set(bufferOut.subarray(this.posOut,this.posOut+take),pos);this.posOut+=take;pos+=take}return out}xofInto(out){if(!this.enableXOF)throw Error("XOF is not possible for this instance");return this.writeInto(out)}xof(bytes){(0,_assert_js_1.number)(bytes);return this.xofInto(new Uint8Array(bytes))}digestInto(out){(0,_assert_js_1.output)(out,
this);if(this.finished)throw Error("digest() was already called");this.writeInto(out);this.destroy();return out}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0;this.state.fill(0)}_cloneInto(to){const {blockLen,suffix,outputLen,rounds,enableXOF}=this;to||(to=new Keccak(blockLen,suffix,outputLen,enableXOF,rounds));to.state32.set(this.state32);to.pos=this.pos;to.posOut=this.posOut;to.finished=this.finished;to.rounds=rounds;to.suffix=suffix;to.outputLen=outputLen;
to.enableXOF=enableXOF;to.destroyed=this.destroyed;return to}}exports.Keccak=Keccak;global=(suffix,blockLen,outputLen)=>(0,utils_js_1.wrapConstructor)(()=>new Keccak(blockLen,suffix,outputLen));exports.sha3_224=global(6,144,28);exports.sha3_256=global(6,136,32);exports.sha3_384=global(6,104,48);exports.sha3_512=global(6,72,64);exports.keccak_224=global(1,144,28);exports.keccak_256=global(1,136,32);exports.keccak_384=global(1,104,48);exports.keccak_512=global(1,72,64);global=(suffix,blockLen,outputLen)=>
(0,utils_js_1.wrapXOFConstructorWithOpts)((opts={})=>new Keccak(blockLen,suffix,void 0===opts.dkLen?outputLen:opts.dkLen,!0));exports.shake128=global(31,168,16);exports.shake256=global(31,136,32)}
//# sourceMappingURL=module$node_modules$$noble$hashes$sha3.js.map
