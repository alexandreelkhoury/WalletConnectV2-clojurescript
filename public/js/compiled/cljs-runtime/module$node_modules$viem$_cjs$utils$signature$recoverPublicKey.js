shadow$provide.module$node_modules$viem$_cjs$utils$signature$recoverPublicKey=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.recoverPublicKey=void 0;const isHex_js_1=require("module$node_modules$viem$_cjs$utils$data$isHex"),fromHex_js_1=require("module$node_modules$viem$_cjs$utils$encoding$fromHex"),toHex_js_1=require("module$node_modules$viem$_cjs$utils$encoding$toHex");exports.recoverPublicKey=async function({hash,signature}){signature=(0,isHex_js_1.isHex)(signature)?
signature:(0,toHex_js_1.toHex)(signature);hash=(0,isHex_js_1.isHex)(hash)?hash:(0,toHex_js_1.toHex)(hash);let v=(0,fromHex_js_1.hexToNumber)(`0x${signature.slice(130)}`);if(0===v||1===v)v+=27;const {secp256k1}=await Promise.resolve().then(()=>require("module$node_modules$$noble$curves$secp256k1"));return`0x${secp256k1.Signature.fromCompact(signature.substring(2,130)).addRecoveryBit(v-27).recoverPublicKey(hash.substring(2)).toHex(!1)}`}}
//# sourceMappingURL=module$node_modules$viem$_cjs$utils$signature$recoverPublicKey.js.map
