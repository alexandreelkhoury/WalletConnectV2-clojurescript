shadow$provide.module$node_modules$viem$_cjs$actions$public$getFilterLogs=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.getFilterLogs=void 0;const abi_js_1=require("module$node_modules$viem$_cjs$errors$abi"),decodeEventLog_js_1=require("module$node_modules$viem$_cjs$utils$abi$decodeEventLog"),log_js_1=require("module$node_modules$viem$_cjs$utils$formatters$log");exports.getFilterLogs=async function(_client,{filter}){const strict=filter.strict??
!1;return(await filter.request({method:"eth_getFilterLogs",params:[filter.id]})).map(log=>{try{const {eventName,args}="abi"in filter&&filter.abi?(0,decodeEventLog_js_1.decodeEventLog)({abi:filter.abi,data:log.data,topics:log.topics,strict}):{eventName:void 0,args:void 0};return(0,log_js_1.formatLog)(log,{args,eventName})}catch(err){let eventName,isUnnamed;if(err instanceof abi_js_1.DecodeLogDataMismatch||err instanceof abi_js_1.DecodeLogTopicsMismatch){if("strict"in filter&&filter.strict)return;eventName=
err.abiItem.name;isUnnamed=err.abiItem.inputs?.some(x=>!("name"in x&&x.name))}return(0,log_js_1.formatLog)(log,{args:isUnnamed?[]:{},eventName})}}).filter(Boolean)}}
//# sourceMappingURL=module$node_modules$viem$_cjs$actions$public$getFilterLogs.js.map
